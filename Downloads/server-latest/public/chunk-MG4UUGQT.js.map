{
  "version": 3,
  "sources": ["src/app/modules/dos-page/dos.component.ts", "src/app/modules/dos-page/dos.component.html", "src/app/modules/dos-page/dos-page.module.ts"],
  "sourcesContent": ["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonService } from '../../services';\r\nimport { SideFilter } from '../../models/side-filter';\r\nimport { HeaderService } from '../../services/header.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { PatientService } from '../../services/patient.service';\r\nimport { DashboardScreen, DosScreen } from '../../models/label';\r\nimport { LabelService, DataService, UserService } from '../../services';\r\nimport { SidefilterService } from '../../services/sidefilter.service';\r\nimport { EnmModule } from '../../shared/constants/enum';\r\nimport { SidemenuService } from '../../services/sidemenu.service';\r\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\r\nimport { AlertMessageComponent } from '../../components/alert-message/alert-message.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { Title } from '@angular/platform-browser';\r\ndeclare const gtag: (...arg) => void;\r\n// declare const gtag: Function;\r\n\r\n@Component({\r\n    selector: 'app-dos',\r\n    templateUrl: './dos.component.html',\r\n    styleUrls: ['./dos.component.css'],\r\n    animations: [\r\n        trigger('detailExpand', [\r\n            state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n            state('expanded', style({ height: '*' })),\r\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n        ]),\r\n    ],\r\n})\r\nexport class DosComponent implements OnInit, AfterViewInit {\r\n\r\n    public dsDashboardScreen = new DashboardScreen();\r\n    allRowsExpanded = false;\r\n    expandedElement: any;\r\n    isAdvSearched = false;\r\n    isNotificationSelected = false;\r\n    recordCount = 0;\r\n    selectedBusinessId = (localStorage.businessGuid != undefined && localStorage.businessGuid != null && localStorage.businessGuid != \"\" ? parseInt(localStorage.businessGuid) : 0);\r\n    filter: SideFilter;\r\n\r\n    columnsToDisplay = ['TestName', 'Class', 'SampleRequirements', 'TubeType', 'TAT', 'Price', ' '];\r\n\r\n    dataSource = new MatTableDataSource<any>();\r\n    originData: any[] = [];\r\n    dsAnalysisSource: any[] = [];\r\n\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    selectedRow: any;\r\n    selectfalserow: any;\r\n    active = true;\r\n    proActive = false;\r\n    public checked = false;\r\n    filterClassData: any[] = [];\r\n    filterMenuData: any[] = [];\r\n    isChecked = false;\r\n    public CheckForm: UntypedFormGroup = new UntypedFormGroup({});\r\n    checkfavastatus: any;\r\n    favstatus: any;\r\n    defaultValue: any;\r\n    selected: any;\r\n    filtereddata: any[];\r\n    public userId: number = localStorage.authDetails !=undefined ?JSON.parse(localStorage.authDetails).Id:undefined;\r\n    dosprice: any;\r\n\r\n    public SearchTestName = 'Search by Test Name';\r\n    public searchValue = '';\r\n    public selectedMenu: string = null;\r\n    public selectedCass: string = null;\r\n    public isFavourite = false;\r\n\r\n    selectedmenufor: any;\r\n    selectedmenudata: any;\r\n    selectedClassdata: any;\r\n\r\n    start = 0;\r\n    limit = 60;\r\n    end: number = this.limit + this.start;\r\n    selectedRowIndex: number = null;\r\n\r\n    public label: DosScreen;\r\n    public isViewDOSPrice: boolean;\r\n\r\n    private authDetails: any;\r\n    public isBackOfficeUser: boolean;\r\n    searchTextChanged = new Subject<string>();\r\n    public helpObj: any;\r\n\r\n    constructor(\r\n        public commonService: CommonService,\r\n        public userService: UserService,\r\n        private fb: UntypedFormBuilder,\r\n        public sidemenuService: SidemenuService,\r\n        public headerService: HeaderService,\r\n        public patientService: PatientService,\r\n        public labelService: LabelService,\r\n        public dataService: DataService,\r\n        private modalService: NgbModal,\r\n        private title: Title,\r\n        public sidefilterService: SidefilterService) {\r\n        this.authDetails = this.dataService.appData.authDetails;\r\n        this.isBackOfficeUser = this.authDetails['BackOfficeFlag'];\r\n        this.isViewDOSPrice = this.authDetails['IsViewDOSPrice'];\r\n        this.sidemenuService.selectedModuleId = EnmModule.dos;\r\n        this.labelService.getDosScreenLabels();\r\n        this.label = this.labelService.dosScreen;\r\n        this.title.setTitle('ZoetisDx | Directory of Services');\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getDosTestData();\r\n        if (localStorage.getItem('alert-popup') == 'true') {\r\n             this.modalService.open(AlertMessageComponent, {\r\n                centered: true,\r\n                backdrop: 'static',\r\n                scrollable: false\r\n            });\r\n        }\r\n\r\n        this.getDosfilter();\r\n        this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == \"Directory-of-Services\");\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const tblContainer = document.getElementById('dos-datatbl');\r\n        tblContainer.style.maxHeight = (window.innerHeight - 200) + 'px';\r\n        this.searchTextChanged.pipe(\r\n            debounceTime(1000),\r\n            distinctUntilChanged()\r\n        ).subscribe(data => {\r\n            this.searchValue = data;\r\n            this.onDataSort();\r\n            this.getDosTestData()\r\n        });\r\n    }\r\n\r\n    onTypeChange() {\r\n        if (this.searchValue != null && this.searchValue[this.searchValue.length - 1] != ' ') {\r\n            this.onDataSort();\r\n            this.getDosTestData();\r\n        }\r\n    }\r\n    getQuerytext(event) {\r\n        //if(event.target.value[event.target.value.length-1]!=' '){\r\n        this.searchTextChanged.next(event.target.value);\r\n        //}\r\n    }\r\n    onTableScroll(e) {\r\n        const tableViewHeight = e.target.offsetHeight /**  viewport */\r\n        const tableScrollHeight = e.target.scrollHeight /**  length of all table */\r\n        const scrollLocation = e.target.scrollTop; /**  how far user scrolled */\r\n\r\n        /**  If the user has scrolled within 200px of the bottom, add more data */\r\n        const buffer = 200;\r\n        const limit = tableScrollHeight - tableViewHeight - buffer;\r\n        if (scrollLocation > limit) {\r\n            if (this.end <= this.originData.length) {\r\n                const data = this.getTableData(this.start, this.end);\r\n                this.dataSource.data = this.dataSource.data.concat(data);\r\n                this.updateIndex();\r\n            } else {\r\n                console.clear();\r\n                const tpl = 'background-color:greenyellow; border:3px solid orange; font-size:15px; font-weight: bold;padding:3px 5px;color:';\r\n                console.log(`%cFOR QA TEAM ==> %cShowing ${this.originData.length} out of %c${this.originData.length} results`, `${tpl} magenta`, `${tpl} Red`, `${tpl} #4274fb`);\r\n            }\r\n\r\n        }\r\n    }\r\n    public getTableData(start, end) {\r\n\r\n        return this.originData.filter((value, index) => index >= start && index < end);\r\n    }\r\n\r\n    public updateIndex() {\r\n        console.clear();\r\n        const showLim = this.end > this.originData.length ? this.originData.length : this.end;\r\n        const tpl = 'background-color:greenyellow; border:3px solid orange; font-size:15px; font-weight: bold;padding:3px 5px;color:';\r\n        console.log(`%cFOR QA TEAM ==> %cShowing ${showLim} out of %c${this.originData.length} results`, `${tpl} magenta`, `${tpl} Red`, `${tpl} #4274fb`);\r\n        this.start = this.end;\r\n        this.end = this.limit + this.start;\r\n\r\n    }\r\n    public onDataSort() {\r\n        const scrollabe = document.getElementById('dos-datatbl');\r\n        scrollabe.scrollTop = 0;\r\n    }\r\n\r\n    public bindDataSource() {\r\n        this.dataSource = new MatTableDataSource<any>(this.originData.filter((value, index) => index >= this.start && index < this.end));\r\n        this.updateIndex();\r\n        this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        this.recordCount = this.dataSource.data.length;\r\n        if (this.recordCount > 0 && this.isNotificationSelected) {\r\n            this.allRowsExpanded = true;\r\n            this.isNotificationSelected = false;\r\n        }\r\n        else {\r\n            this.allRowsExpanded = false;\r\n        }\r\n    }\r\n\r\n    public getDosfilter() {\r\n        this.commonService.GetDOSFilterdetails().subscribe(data => {\r\n            this.filterClassData = data.ResponseData.Class;\r\n            this.filterMenuData = data.ResponseData.Menu;\r\n        })\r\n    }\r\n    public setDefaultFilter() {\r\n        this.selected = 'Filter By Class';\r\n        this.selectedMenu = 'Filter By Menu';\r\n        this.isAdvSearched = false;\r\n    }\r\n\r\n    public toggle() {\r\n        this.allRowsExpanded = !this.allRowsExpanded;\r\n        this.expandedElement = null;\r\n    }\r\n\r\n    public setClickedtrueRow(element) {\r\n        this.selectedRow = element;\r\n        this.dataSource.data.forEach(data => {\r\n            if (data.TestId == element.TestId) {\r\n                data.IsFavourite = !data.IsFavourite;\r\n            }\r\n        })\r\n\r\n        const fav = {\r\n            TestId: element.TestId,\r\n            UserGuid: this.dataService.appData.authDetails['UserGuid'],\r\n            IsFavourite: element.IsFavourite\r\n        }\r\n        this.commonService.postFavourite(fav).subscribe(() => {\r\n            this.expandedElement = null;\r\n        })\r\n\r\n    }\r\n\r\n    public searchDosTestData() {\r\n        const dosfields = {\r\n            SearchText: this.searchValue,\r\n            IsOrder: false,\r\n            UserGuid: this.headerService.loginUserGuid,\r\n        }\r\n        this.commonService.GetDOSTestdata(dosfields).subscribe(data => {\r\n            this.originData = data.ResponseData.TestDetail;\r\n            this.bindDataSource();\r\n        }, err => {\r\n            console.log(JSON.stringify(err));\r\n            this.commonService.showCommonToastrError();\r\n        });\r\n\r\n    }\r\n\r\n    public getDosTestData(forceApiCall = false) {\r\n        const dosfields = {\r\n            IsOrder: false,\r\n            UserGuid: this.authDetails['UserGuid'],\r\n            SearchText: (this.SearchTestName !== 'Search by Test Name' && this.searchValue) || '',\r\n            SearchTestName: (this.SearchTestName === 'Search by Test Name' && this.searchValue) || '',\r\n            Menu: this.selectedMenu,\r\n            ClassName: this.selectedCass,\r\n            IsFavourite: this.isFavourite\r\n        }\r\n        let searchable = false;\r\n        if (dosfields.SearchText || dosfields.Menu || dosfields.ClassName || dosfields.IsFavourite || dosfields.SearchTestName) {\r\n\r\n            searchable = true;\r\n        }\r\n        if (forceApiCall || searchable || this.dataService.appData.dosCnf.dosDoRefresh || !this.dataService.appData.dosCnf.dosData.length) {\r\n            this.commonService.GetDOSTestdata(dosfields).subscribe(data => {\r\n                this.originData = data.ResponseData.TestDetail;\r\n                this.start = 0;\r\n                this.limit = 60;\r\n                this.end = this.limit + this.start;\r\n                this.bindDataSource();\r\n                if (this.originData && this.originData.length && !searchable) {\r\n                    this.dataService.appData.dosCnf.dosData = this.originData;\r\n                    this.dataService.appData.dosCnf.dosDoRefresh = false;\r\n                    //this.dataService.appData.dosCnf.lstDosUpdateDtHr = this.dataService.getDDHHChar(this.originData[0].RecordLastModifiedDate);\r\n                    this.dataService.data.next(this.dataService.appData);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        this.originData = this.dataService.appData.dosCnf.dosData;\r\n        this.start = 0;\r\n        this.limit = 60;\r\n        this.end = this.limit + this.start;\r\n        this.bindDataSource();\r\n\r\n    }\r\n\r\n\r\n    public onFilterChange(selectedField, event) {\r\n        if (selectedField == 'search') {\r\n            this.selectedMenu = null;\r\n            this.selectedCass = null;\r\n            this.isFavourite = false;\r\n        }\r\n        if (selectedField == 'menu') {\r\n            this.selectedMenu = event.value;\r\n        }\r\n        if (selectedField == \"class\") {\r\n            this.selectedCass = event.value;\r\n        }\r\n        if (selectedField == \"favorites\") {\r\n            this.isFavourite = event.checked;\r\n        }\r\n        this.getDosTestData();\r\n    }\r\n\r\n    public clraeAll() {\r\n        this.searchValue = null;\r\n        //this.SearchTestName=null;\r\n        this.selectedMenu = null;\r\n        this.selectedCass = null;\r\n        this.isFavourite = false;\r\n        this.getDosTestData(true);\r\n        this.onDataSort()\r\n    }\r\n\r\n\r\n    public expandCard(ele) {\r\n        this.expandedElement = this.expandedElement === ele ? null : ele\r\n        gtag('event', 'Directory_of_Services', {\r\n            Total_Services_Visited: '',\r\n            Total_Unique_Services_Clicked: '',\r\n            Service_Name: ele.TestName,\r\n            Service_Class: ele.Class,\r\n            Sample_Requirements: ele.SampleRequirements,\r\n            Tube_Type: ele.TubeType,\r\n            TAT: ele['TAT'],\r\n            Price: ele.Price,\r\n            Component: ele.Component,\r\n            Notes: ele.Notes,\r\n            Methodology: ele.Methodologies,\r\n            Lab: ele.LabName,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n", "<div class=\"dos-con\">\r\n  <!-- Page Title -->\r\n  <!-- *ngIf=\"!isBackOfficeUser\" -->\r\n  <section class=\"title-container icon-cont\">\r\n    <h5> <span class=\"page-title\">{{label.DirectoryOfServices}}</span> </h5>\r\n    <!-- <ng-container> -->\r\n    <img class=\"iconquestion\" src=\"../../../assets/img/help-icon.svg\" matTooltip=\"Help\" matTooltipPosition=\"below\"\r\n      matTooltipClass=\"below\" alt=\"help-circle\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n    <!-- </ng-container> -->\r\n  </section>\r\n  <!-- Page Title end -->\r\n\r\n  <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n    <mat-drawer #drawer class=\"example-sidenav sidefilter right-filter\" mode=\"over\" position=\"end\">\r\n    </mat-drawer>\r\n\r\n    <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n      <!-- <div class=\"left-block\"> -->\r\n      <mat-card class=\"p-0\">\r\n        <div class=\"mt-0\">\r\n          <!-- <h5 class=\"bko-page-title\" *ngIf=\"isBackOfficeUser\">\r\n            <p>{{label.DirectoryOfServices}}</p>\r\n          </h5> -->\r\n          <!-- Filter Start -->\r\n          <section class=\"tbl-filter tblpart d-flex  align-items-center\">\r\n            <div class=\"fprt row m-0 w-100 justify-content-start align-items-center\">\r\n              <div class=\"col-12 col-md-9 pl-0 order-md-1 order-2 \">\r\n                <div class=\"row m-0 align-items-end\">\r\n                  <!-- (selectionChange)=\"onTypeChange()\" -->\r\n                  <div class=\"col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-0\">\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"dotpart\">\r\n                      <mat-select [(ngModel)]=\"SearchTestName\">\r\n                        <mat-option [ngClass]=\"{'checkmark':SearchTestName === 'Search by Test Name'}\"\r\n                          value=\"Search by Test Name\">Search by Test Name </mat-option>\r\n                        <mat-option [ngClass]=\"{'checkmark':SearchTestName === 'Search all fields'}\"\r\n                          value=\"Search all fields\">Search all Fields </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0 srchpart\">\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <span matPrefix (click)=\"searchDosTestData()\" style=\"cursor: pointer;\">\r\n                        <img src=\"../../../../assets/img/search-icon.png\" alt=\"search-icon\">\r\n                      </span>\r\n                      <input type=\"text\" matInput maxlength=\"60\" [(ngModel)]=\"searchValue\" placeholder=\"Search\"\r\n                        (keydown.enter)=\"getDosTestData(true)\" />\r\n                      <!-- (keyup)=\"getQuerytext($event)\" -->\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <!-- <div class=\"col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-md-3 pr-0\">\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"dotpart\">\r\n              <span\r\n                [ngClass]=\"{dotdosskyBlue: selectedMenu == 'Blue',dotdosGreen: selectedMenu == 'Green',dotdosorange: selectedMenu == 'Orange',dotdosequine: selectedMenu == 'Equine',dotdosBlue: selectedMenu == 'AvianExotic',dotdosallother: selectedMenu == 'AllOther'}\"></span>\r\n              <mat-select #selectedmenu [(value)]=\"selectedMenu\" [placeholder]=\"label.FilterByMenu\"\r\n                (selectionChange)=\"onFilterChange('menu', $event)\">\r\n                <mat-option *ngFor=\"let filter of filterMenuData\" [value]=\"filter.Color\">\r\n                  <span\r\n                    [ngClass]=\"{dotdosskyBlue: filter.Color == 'Blue',dotdosGreen: filter.Color == 'Green',dotdosorange: filter.Color == 'Orange',dotdosequine: filter.Color == 'Equine',dotdosBlue: filter.Color == 'AvianExotic',dotdosallother: filter.Color == 'AllOther'}\"></span><span>{{\r\n                    filter.Name }}</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n                  <!-- (selectionChange)=\"onFilterChange('class', $event)\" -->\r\n                  <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0\">\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <mat-select #selectedClass [(value)]=\"selectedCass\" [placeholder]=\"label.FilterByClass\">\r\n                        <mat-option *ngFor=\"let filter of filterClassData\" [value]=\"filter.Id\">{{ filter.Name\r\n                          }}</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0 m-fav\">\r\n                    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"isFavourite\" [(value)]=\"checked\"\r\n                      (change)=\"onFilterChange('favorites', $event)\"> {{label.Favorites}}</mat-checkbox>\r\n                    <!---for mobile start-->\r\n                    <a class=\"clrall m-clrall\" (click)=\"clraeAll()\">{{label.ClearAll}}</a>\r\n                    <!---for mobile end-->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-md-3 sprt d-flex justify-content-end order-md-2 order-1 tblpartmain\">\r\n\r\n                <div class=\"mr-4 pt-2 tblpartone\">\r\n                  <a class=\"clrall\" (click)=\"clraeAll()\">{{label.ClearAll}}</a>\r\n                </div>\r\n                <button class=\"w-70 g-btn mr-4 tblpartone\" mat-raised-button (click)=\"getDosTestData(true)\" style=\"order: 2\">\r\n                  Search\r\n                </button>\r\n                <a class=\"w-70 g-btn policy-btn tblpartone\" mat-raised-button (click)=\"commonService.onlineHelp(1044)\"\r\n                  target=\"_blank\" style=\"order: 3;\">\r\n                  ZRL Policies\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <!-- Filter end -->\r\n\r\n          <div class=\"d-flex justify-content-between my-2 pl-3 pr-3 align-items-center toprow\">\r\n            <!-- <span class=\"w-100\">\r\n              <h5 class=\"text-center m-0 head1 w-100\"> {{label.DirectoryOfServices}}</h5>\r\n            </span>\r\n            <span class=\"d-flex1 d-none\">\r\n              <span class=\"ipadfiler\">\r\n                <button type=\"button\" class=\"pr-0\" mat-button (click)=\"drawer.toggle()\">\r\n                  <img src=\"../../../assets/img/filterIcon@2x.png\" />\r\n                </button>\r\n              </span>\r\n            </span> -->\r\n\r\n\r\n\r\n            <span class=\"d-flex align-items-center tube_type_key  mt-3\">\r\n              <span class=\"tooltext\"> {{label.TubeTypeKey}}</span>\r\n              <div class=\"tooltip\">\r\n                \r\n                <img src=\"../../../assets/img/infos.svg\" alt=\"\" />\r\n                <div class=\"tooltiptext\">\r\n                  <div class=\"tool_header\">\r\n                    <!-- {{label.DirectoryOfServicesSampleKey}} -->\r\n                    KEY\r\n                  </div>\r\n                  <div class=\"tool_text p-3\">\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"dot\"></span>\r\n                        <span class=\"abbre\">TAT:</span>\r\n                        <span>Turnaround Time</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\" d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot sst\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">SST:</span>\r\n                        <span>Serum Separator (Gel)</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot rrt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">RTT:</span>\r\n                        <span>Clot Activator (No Gel)</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot ltt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">LTT:</span>\r\n                        <span>K EDTA</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot btt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">BTT:</span>\r\n                        <span>Na Citrate</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot grntt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">GRNTT:</span>\r\n                        <span>Lithium Heparin</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot wtto\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">WTT:</span>\r\n                        <span>No Additive</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot f\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">Feces</span>\r\n                        <!-- <span>Feces</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot u\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">Urine</span>\r\n                        <!-- <span>Urine</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"micro msst\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">M-SST</span>\r\n                        <!-- <span>Micro Serum Separator</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"micro mrtt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">M-RTT</span>\r\n                        <!-- <span>Micro Serum, No Gel</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"micro mltt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">M-LTT </span>\r\n                        <!-- <span>Micro EDTA Whole Blood</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"micro mgrntt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">M-GRNTT</span>\r\n                        <!-- <span>Micro Heparinized Blood (Lithium)</span> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot grytt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">GRYTT:</span>\r\n                        <span>K Oxalate/Na Fluoride</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                      <span class=\"dot rbtt\"></span>\r\n                      <div class=\"d-flex\">\r\n                        <span class=\"abbre\">RBTT:</span>\r\n                        <span>Na EDTA/Na Heparin</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <span class=\"d-flex ipadfiler\">\r\n                <span class=\"ipadfiler\">\r\n                  <button type=\"button\" class=\"pr-0\" mat-button (click)=\"drawer.toggle()\">\r\n                    <img src=\"../../../assets/img/filterIcon@2x.png\" />\r\n                  </button>\r\n                </span>\r\n              </span> -->\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"p-0 pt-3 cust-postion\">\r\n            <div>\r\n              <div class=\"example-container pt-0\">\r\n                <!-- <button class=\"closeall\" mat-raised-button (click)=\"toggle()\"\r\n                [ngClass]=\"{ expandedall: allRowsExpanded }\">\r\n                <img src=\"../../../assets/img/expandall.png \" />\r\n              </button> -->\r\n                <div class=\"usermangemt\" id=\"dos-datatbl\" (scroll)=\"onTableScroll($event)\">\r\n                  <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"dashboard-table pt-4\"\r\n                    summary=\"\" matSort>\r\n                    <ng-container matColumnDef=\"TestName\">\r\n                      <th mat-header-cell *matHeaderCellDef style=\"padding-left: 20px\" mat-sort-header>\r\n                        {{label.Name}}\r\n                      </th>\r\n                      <td mat-cell id=\"first_block\" *matCellDef=\"let element\" class=\"dosskyBlue\">\r\n                        <span class=\"textTtl d-none\">{{label.Name}}</span>\r\n                        <div class=\"d-flex\">\r\n                          <span *ngIf=\"element.IsFavourite === true\"\r\n                            (click)=\"setClickedtrueRow(element); $event.stopPropagation()\"\r\n                            class=\"mr-2 star_wrapper\"><img src=\"../../../assets/img/star.png\" alt=\"star.png\"\r\n                              width=\"18\" /></span>\r\n                          <span *ngIf=\"element.IsFavourite === false\"\r\n                            (click)=\"setClickedtrueRow(element); $event.stopPropagation()\"\r\n                            class=\"mr-2 star_wrapper\"><img src=\"../../../assets/img/unstar.png\" alt=\"unstar.png\"\r\n                              width=\"18\" /></span>\r\n                          <div class=\"d-flex flex-column\">\r\n                            <span>{{ element.TestName }}</span>\r\n                            <div><span class=\"mr-1\">Test Code:</span> {{element.OrderCode}}</div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"Class\">\r\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        {{label.Class}}\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"textTtl d-none\">{{label.Class}}</span>\r\n                        <span class=\"bluetext\">\r\n                          {{ element.Class }}\r\n                        </span>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"SampleRequirements\">\r\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        {{label.SampleRequirements}}\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"textTtl d-none sample-req-txt\">{{label.SampleRequirements}}</span> <span>{{\r\n                          element.SampleRequirements }}</span>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"TubeType\">\r\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        {{label.TubeType}}\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"textTtl d-none\">{{label.TubeType}}</span>\r\n                        <ng-container *ngFor=\"let tube of element.TubeType\">\r\n                          <div class=\"d-flex flex-column\">\r\n\r\n                            <span class=\"d-flex align-items-center mb-1\">\r\n                              <span [ngClass]=\"{\r\n                                        'dot-sst': tube.code === 'SST',\r\n                                        'dot-rtt': tube.code === 'RTT',\r\n                                        'dot-urine': tube.code === 'Urine',\r\n                                        'dot-btt': tube.code === 'BTT',\r\n                                        'dot-feces': tube.code === 'Feces',\r\n                                        'dot-grntt': tube.code === 'GrnTT',\r\n                                        'dot-ltt': tube.code === 'LTT',\r\n                                        'dot-Wtt'  : tube?.code === 'WTT',\r\n                                        'micro-msst': tube?.code === 'M-SST',\r\n                                        'micro-mrtt': tube?.code === 'M-RTT',\r\n                                        'micro-mgrntt': tube?.code === 'M-GRNTT',\r\n                                        'micro-mltt': tube?.code === 'M-LTT',\r\n                                        'dot-grytt': tube?.code?.toUpperCase()=== 'GRYTT',\r\n                                        'dot-RBTT' : tube?.code === 'RBTT'\r\n                                      }\"></span>{{ tube?.code == \"GrnTT\"? 'GRNTT': tube.code }}</span>\r\n                          </div>\r\n                        </ng-container>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"TAT\">\r\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        {{label.Tat}}\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"textTtl d-none\">{{label.Tat}}</span>\r\n                        <span class=\"tat_text\">\r\n                          {{ element.TAT }}</span>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Price\">\r\n                      <th mat-header-cell *matHeaderCellDef>\r\n                        <span *ngIf=\"isViewDOSPrice\"> {{label.Price}} </span>\r\n                      </th>\r\n                      <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"textTtl d-none\">{{label.Price}}</span>\r\n                        <span *ngIf=\"isViewDOSPrice\">\r\n                          {{ element.Price }}\r\n                        </span>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\" \">\r\n                      <th mat-header-cell *matHeaderCellDef><button class=\"closeall\" mat-raised-button\r\n                          (click)=\"toggle()\" [ngClass]=\"{ expandedall: allRowsExpanded }\">\r\n                          <img src=\"../../../assets/img/expandall.png \" alt=\"expandall\" />\r\n                        </button></th>\r\n                      <td mat-cell *matCellDef=\"let element\" id=\"arrow_block\" class=\"down-arrow\">\r\n                        <img src=\"../../../assets/img/down-gray@2x.png\" alt=\"down-gray\" />\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"expandedDetail\">\r\n                      <td id=\"expanded_td\" mat-cell td *matCellDef=\"let element\"\r\n                        [attr.colspan]=\"columnsToDisplay.length\">\r\n                        <div class=\"example-element-detail\" [@detailExpand]=\"element === expandedElement || allRowsExpanded\r\n                                    ? 'expanded'\r\n                                    : 'collapsed'\r\n                                \">\r\n                          <div class=\"row py-0 card-block w-100\">\r\n                            <div class=\"d-flex w-100\">\r\n                              <div class=\"w-100\">\r\n                                <table id=\"inner_table\" [ngClass]=\"{\r\n                                    dosskyBlue: element.Menu === 'Blue',\r\n                                    dosGreen: element.Menu === 'Green',\r\n                                    dosorange: element.Menu === 'Orange',\r\n                                    dosequine: element.Menu === 'Equine',\r\n                                    dosBlue: element.Menu === 'AvianExotic',\r\n                                    dosallother: element.Menu === 'AllOther'\r\n                                  }\" summary=\"\">\r\n                                  <tr style=\"display:none\">\r\n                                    <th></th>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>\r\n                                      <div class=\"d-flex pr-3 flex-column two text-left pl-5 comp\">\r\n                                        <strong> {{label.Component}}:</strong>\r\n                                        <span class=\"textTtl d-none\">{{label.Component}}</span>\r\n                                        <span class=\"comp_text desc_text\">\r\n                                          {{ element.Component }}\r\n                                        </span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div class=\"d-flex pr-3 flex-column three text-left notes_block\">\r\n                                        <strong> {{label.Notes}}:</strong>\r\n                                        <span class=\"textTtl d-none\">{{label.Notes}}</span>\r\n                                        <span class=\"desc_text\">\r\n                                          {{ element.Notes }}\r\n                                        </span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div class=\"d-flex pr-3 flex-column four text-left\">\r\n                                        <strong> {{label.Methodology}}:</strong>\r\n                                        <span class=\"textTtl d-none\">{{label.Methodology}}</span>\r\n                                        <span class=\"desc_textmethodology\"\r\n                                          *ngFor=\"let meth of element.Methodologies\">{{meth.methodology}}</span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td></td>\r\n                                    <td>\r\n                                      <div class=\"d-flex pr-3 flex-column six text-left\">\r\n                                        <strong> {{label.Lab}}:</strong>\r\n                                        <span class=\"textTtl d-none\">{{label.Lab}}</span>\r\n                                        <span class=\"desc_text\">\r\n                                          {{ element.LabName }}\r\n                                        </span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                  </tr>\r\n                                </table>\r\n\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay\"\r\n                      class=\"example-element-row pt-5 pb-4\" [ngClass]=\"{\r\n                    dosskyBlue: element.Menu === 'Blue',\r\n                    dosGreen: element.Menu === 'Green',\r\n                    dosorange: element.Menu === 'Orange',\r\n                    dosequine: element.Menu === 'Equine',\r\n                    dosBlue: element.Menu === 'AvianExotic',\r\n                    dosallother: element.Menu === 'AllOther'\r\n                  }\" [class.example-expanded-row]=\"expandedElement === element\" (click)=\"expandCard(element)\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n                  </table>\r\n                  <div>\r\n                    <tbody class=\"norecord\" *ngIf=\"dataSource === null || dataSource.data.length === 0\">\r\n                      <tr>\r\n                        <td>{{label.Norecordsfound}}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n      <!-- </div> -->\r\n\r\n      <!-- <div class=\"right-filter pl-0\">\r\n      <div class=\"pl-4 pr-4 do_filter_wrapper\">\r\n        <div>\r\n          <div class=\"d-flex justify-content-between mt-4\">\r\n            <span class=\"filter-head\"> {{label.Filters}}</span>\r\n            <a class=\"clrall\" (click)=\"clraeAll()\">{{label.ClearAll}}</a>\r\n          </div>\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <span matPrefix (click)=\"searchDosTestData()\" style=\"cursor: pointer;\"><img\r\n                src=\"../../../../assets/img/search-icon.png\"></span>\r\n            <input type=\"text\" matInput maxlength=\"20\" [(ngModel)]=\"searchValue\" placeholder=\"Search\"\r\n              (keyup.enter)=\"apply(selectedmenu.value,selectedClass.value)\" />\r\n          </mat-form-field>\r\n          <div class=\"mt-2\" id=\"filer_by_menu\">\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n              <span\r\n                [ngClass]=\"{dotdosskyBlue: selectedMenu == 'Blue',dotdosGreen: selectedMenu == 'Green',dotdosorange: selectedMenu == 'Orange',dotdosequine: selectedMenu == 'Equine',dotdosBlue: selectedMenu == 'AvianExotic',dotdosallother: selectedMenu == 'AllOther'}\"></span>\r\n              <mat-select #selectedmenu [(value)]=\"selectedMenu\">\r\n                <mat-option value=\"Filter By Menu\">{{label.FilterByMenu}}</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterMenuData\" [value]=\"filter.Color\">\r\n                  <span\r\n                    [ngClass]=\"{dotdosskyBlue: filter.Color == 'Blue',dotdosGreen: filter.Color == 'Green',dotdosorange: filter.Color == 'Orange',dotdosequine: filter.Color == 'Equine',dotdosBlue: filter.Color == 'AvianExotic',dotdosallother: filter.Color == 'AllOther'}\"></span><span>{{\r\n                    filter.Name }}</span>\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"mt-3\">\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n              <mat-select #selectedClass [(value)]=\"selected\">\r\n                <mat-option value=\"Filter By Class\">{{label.FilterByClass}}</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterClassData\" [value]=\"filter.Id\">{{ filter.Name }}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"mt-3 del_doc del_do\">\r\n            <form [formGroup]=\"CheckForm\">\r\n              <div>\r\n                <mat-checkbox class=\"example-margin\" formControlName=\"checkfavastatus\" value=\"checked\"\r\n                  (click)=\"changeValue(checked)\"> {{label.Favorites}}</mat-checkbox>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-3 mb-3 d-flex justify-content-center\">\r\n          <button class=\"w-25\" mat-raised-button color=\"warn\" (click)=\"apply(selectedmenu.value,selectedClass.value)\">\r\n            {{label.Apply}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    </div>\r\n  </mat-drawer-container>\r\n</div>", "import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatModule } from '../../modules/mat-module/mat.module';\r\nimport { DosComponent } from './dos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DosComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n  exports: [RouterModule],\r\n})\r\nexport class DosPageModule { }"],
  "mappings": "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",
  "names": []
}
