{"version":3,"sources":["node_modules/ng-http-loader/fesm2020/ng-http-loader.mjs","src/app/directive/disable-right-click.directive.ts","src/app/components/floating-consult-report/fcr.component.ts","src/app/components/floating-consult-report/fcr.component.html","src/app/directive/numbers.directive.ts","src/app/directive/scrollable-table.directive.ts","src/app/directive/dnd.directive.ts","src/app/directive/nospaces.directive.ts","src/app/directive/number-only.directive.ts","src/app/directive/directives.module.ts","node_modules/ngx-quill/fesm2020/ngx-quill.mjs","src/app/modules/result-details/result-details-helper.ts","src/app/modules/result-details/template1/template1.component.ts","src/app/modules/result-details/template1/template1.component.html","src/app/modules/result-details/template2/template2.component.ts","src/app/modules/result-details/template2/template2.component.html","src/app/modules/result-details/template3/template3.component.ts","src/app/modules/result-details/template3/template3.component.html","src/app/modules/result-details/template4/template4.component.ts","src/app/modules/result-details/template4/template4.component.html","src/app/modules/result-details/template5/template5.component.ts","src/app/modules/result-details/template5/template5.component.html","src/app/modules/result-details/template6/template6.component.ts","src/app/modules/result-details/template6/template6.component.html","src/app/modules/result-details/template7/template7.component.ts","src/app/modules/result-details/template7/template7.component.html","src/app/modules/result-details/template8/template8.component.ts","src/app/modules/result-details/template8/template8.component.html","src/app/modules/result-details/template9/template9.component.ts","src/app/modules/result-details/template9/template9.component.html","src/app/modules/result-details/template10/template10.component.ts","src/app/modules/result-details/template10/template10.component.html","src/app/modules/result-details/template11/template11.component.ts","src/app/modules/result-details/template11/template11.component.html","src/app/modules/result-details/template12/template12.component.ts","src/app/modules/result-details/template12/template12.component.html","src/app/modules/result-details/template13/template13.component.ts","src/app/modules/result-details/template13/template13.component.html","src/app/modules/result-details/template14/template14.component.ts","src/app/modules/result-details/template14/template14.component.html","src/app/modules/result-details/result-details.component.ts","src/app/modules/result-details/result-details.component.html","src/app/modules/cvet/storage.service.ts","src/app/modules/result-details/test-tabs/test-tabs.component.ts","src/app/modules/result-details/test-tabs/test-tabs.component.html","src/app/modules/result-details/result-details.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, Component, Injectable, NgModule } from '@angular/core';\nimport { ReplaySubject, partition, merge, timer } from 'rxjs';\nimport { finalize, switchMap, debounce, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst _c0 = a0 => ({\n  \"background-color\": a0\n});\nfunction NgHttpLoaderComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_cube_grid_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-cube-grid\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_chasing_dots_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-chasing-dots\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_double_bounce_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-double-bounce\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_rotating_plane_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-rotating-plane\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_spinner_pulse_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-spinner-pulse\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_three_bounce_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-three-bounce\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_wandering_cubes_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-wandering-cubes\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_sk_wave_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sk-wave\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"backgroundColor\", ctx_r0.backgroundColor);\n  }\n}\nfunction NgHttpLoaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NgHttpLoaderComponent_div_0_ng_container_1_Template, 1, 0, \"ng-container\", 2)(2, NgHttpLoaderComponent_div_0_sk_cube_grid_2_Template, 1, 1, \"sk-cube-grid\", 3)(3, NgHttpLoaderComponent_div_0_sk_chasing_dots_3_Template, 1, 1, \"sk-chasing-dots\", 3)(4, NgHttpLoaderComponent_div_0_sk_double_bounce_4_Template, 1, 1, \"sk-double-bounce\", 3)(5, NgHttpLoaderComponent_div_0_sk_rotating_plane_5_Template, 1, 1, \"sk-rotating-plane\", 3)(6, NgHttpLoaderComponent_div_0_sk_spinner_pulse_6_Template, 1, 1, \"sk-spinner-pulse\", 3)(7, NgHttpLoaderComponent_div_0_sk_three_bounce_7_Template, 1, 1, \"sk-three-bounce\", 3)(8, NgHttpLoaderComponent_div_0_sk_wandering_cubes_8_Template, 1, 1, \"sk-wandering-cubes\", 3)(9, NgHttpLoaderComponent_div_0_sk_wave_9_Template, 1, 1, \"sk-wave\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r0.opacity);\n    i0.ɵɵclassProp(\"backdrop\", ctx_r0.backdrop);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(14, _c0, ctx_r0.backdrop ? ctx_r0.backdropBackgroundColor : \"transparent\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngComponentOutlet\", ctx_r0.entryComponent);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skCubeGrid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skChasingDots);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skDoubleBounce);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skRotatingPlane);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skSpinnerPulse);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skThreeBounce);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skWanderingCubes);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.spinner === ctx_r0.spinkit.skWave);\n  }\n}\nclass AbstractLoaderDirective {}\nAbstractLoaderDirective.ɵfac = function AbstractLoaderDirective_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || AbstractLoaderDirective)();\n};\nAbstractLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AbstractLoaderDirective,\n  inputs: {\n    backgroundColor: \"backgroundColor\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractLoaderDirective, [{\n    type: Directive\n  }], null, {\n    backgroundColor: [{\n      type: Input\n    }]\n  });\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkChasingDotsComponent extends AbstractLoaderDirective {}\nSkChasingDotsComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkChasingDotsComponent_BaseFactory;\n  return function SkChasingDotsComponent_Factory(__ngFactoryType__) {\n    return (ɵSkChasingDotsComponent_BaseFactory || (ɵSkChasingDotsComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkChasingDotsComponent)))(__ngFactoryType__ || SkChasingDotsComponent);\n  };\n})();\nSkChasingDotsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkChasingDotsComponent,\n  selectors: [[\"sk-chasing-dots\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"sk-chasing-dots\"], [1, \"sk-child\", \"sk-dot1\"], [1, \"sk-child\", \"sk-dot2\"]],\n  template: function SkChasingDotsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-chasing-dots[_ngcontent-%COMP%]{top:50%;margin:auto;width:40px;height:40px;position:relative;text-align:center;animation:_ngcontent-%COMP%_sk-chasingDotsRotate 2s infinite linear}.sk-chasing-dots[_ngcontent-%COMP%]   .sk-child[_ngcontent-%COMP%]{width:60%;height:60%;display:inline-block;position:absolute;top:0;border-radius:100%;animation:_ngcontent-%COMP%_sk-chasingDotsBounce 2s infinite ease-in-out}.sk-chasing-dots[_ngcontent-%COMP%]   .sk-dot2[_ngcontent-%COMP%]{top:auto;bottom:0;animation-delay:-1s}@keyframes _ngcontent-%COMP%_sk-chasingDotsRotate{to{transform:rotate(360deg)}}@keyframes _ngcontent-%COMP%_sk-chasingDotsBounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkChasingDotsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-chasing-dots',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-chasing-dots\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-child sk-dot1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-child sk-dot2\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-chasing-dots{top:50%;margin:auto;width:40px;height:40px;position:relative;text-align:center;animation:sk-chasingDotsRotate 2s infinite linear}.sk-chasing-dots .sk-child{width:60%;height:60%;display:inline-block;position:absolute;top:0;border-radius:100%;animation:sk-chasingDotsBounce 2s infinite ease-in-out}.sk-chasing-dots .sk-dot2{top:auto;bottom:0;animation-delay:-1s}@keyframes sk-chasingDotsRotate{to{transform:rotate(360deg)}}@keyframes sk-chasingDotsBounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkCubeGridComponent extends AbstractLoaderDirective {}\nSkCubeGridComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkCubeGridComponent_BaseFactory;\n  return function SkCubeGridComponent_Factory(__ngFactoryType__) {\n    return (ɵSkCubeGridComponent_BaseFactory || (ɵSkCubeGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkCubeGridComponent)))(__ngFactoryType__ || SkCubeGridComponent);\n  };\n})();\nSkCubeGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkCubeGridComponent,\n  selectors: [[\"sk-cube-grid\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 20,\n  consts: [[1, \"sk-cube-grid\"], [1, \"sk-cube\", \"sk-cube1\"], [1, \"sk-cube\", \"sk-cube2\"], [1, \"sk-cube\", \"sk-cube3\"], [1, \"sk-cube\", \"sk-cube4\"], [1, \"sk-cube\", \"sk-cube5\"], [1, \"sk-cube\", \"sk-cube6\"], [1, \"sk-cube\", \"sk-cube7\"], [1, \"sk-cube\", \"sk-cube8\"], [1, \"sk-cube\", \"sk-cube9\"]],\n  template: function SkCubeGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-cube-grid[_ngcontent-%COMP%]{position:relative;top:50%;width:40px;height:40px;margin:auto}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube[_ngcontent-%COMP%]{width:33.33%;height:33.33%;float:left;animation:_ngcontent-%COMP%_sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube1[_ngcontent-%COMP%]{animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube2[_ngcontent-%COMP%]{animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube3[_ngcontent-%COMP%]{animation-delay:.4s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube4[_ngcontent-%COMP%]{animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube5[_ngcontent-%COMP%]{animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube6[_ngcontent-%COMP%]{animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube7[_ngcontent-%COMP%]{animation-delay:0s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube8[_ngcontent-%COMP%]{animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube9[_ngcontent-%COMP%]{animation-delay:.2s}@keyframes _ngcontent-%COMP%_sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkCubeGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-cube-grid',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-cube-grid\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-cube sk-cube1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube2\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube3\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube4\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube5\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube6\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube7\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube8\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube9\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-cube-grid{position:relative;top:50%;width:40px;height:40px;margin:auto}.sk-cube-grid .sk-cube{width:33.33%;height:33.33%;float:left;animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid .sk-cube1{animation-delay:.2s}.sk-cube-grid .sk-cube2{animation-delay:.3s}.sk-cube-grid .sk-cube3{animation-delay:.4s}.sk-cube-grid .sk-cube4{animation-delay:.1s}.sk-cube-grid .sk-cube5{animation-delay:.2s}.sk-cube-grid .sk-cube6{animation-delay:.3s}.sk-cube-grid .sk-cube7{animation-delay:0s}.sk-cube-grid .sk-cube8{animation-delay:.1s}.sk-cube-grid .sk-cube9{animation-delay:.2s}@keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkDoubleBounceComponent extends AbstractLoaderDirective {}\nSkDoubleBounceComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkDoubleBounceComponent_BaseFactory;\n  return function SkDoubleBounceComponent_Factory(__ngFactoryType__) {\n    return (ɵSkDoubleBounceComponent_BaseFactory || (ɵSkDoubleBounceComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkDoubleBounceComponent)))(__ngFactoryType__ || SkDoubleBounceComponent);\n  };\n})();\nSkDoubleBounceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkDoubleBounceComponent,\n  selectors: [[\"sk-double-bounce\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"sk-double-bounce\"], [1, \"sk-child\", \"sk-double-bounce1\"], [1, \"sk-child\", \"sk-double-bounce2\"]],\n  template: function SkDoubleBounceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-double-bounce[_ngcontent-%COMP%]{top:50%;width:40px;height:40px;position:relative;margin:auto}.sk-double-bounce[_ngcontent-%COMP%]   .sk-child[_ngcontent-%COMP%]{width:100%;height:100%;border-radius:50%;background-color:#333;opacity:.6;position:absolute;top:0;left:0;animation:_ngcontent-%COMP%_sk-doubleBounce 2s infinite ease-in-out}.sk-double-bounce[_ngcontent-%COMP%]   .sk-double-bounce2[_ngcontent-%COMP%]{animation-delay:-1s}@keyframes _ngcontent-%COMP%_sk-doubleBounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkDoubleBounceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-double-bounce',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-double-bounce\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-child sk-double-bounce1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-child sk-double-bounce2\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-double-bounce{top:50%;width:40px;height:40px;position:relative;margin:auto}.sk-double-bounce .sk-child{width:100%;height:100%;border-radius:50%;background-color:#333;opacity:.6;position:absolute;top:0;left:0;animation:sk-doubleBounce 2s infinite ease-in-out}.sk-double-bounce .sk-double-bounce2{animation-delay:-1s}@keyframes sk-doubleBounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkRotatingPlaneComponent extends AbstractLoaderDirective {}\nSkRotatingPlaneComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkRotatingPlaneComponent_BaseFactory;\n  return function SkRotatingPlaneComponent_Factory(__ngFactoryType__) {\n    return (ɵSkRotatingPlaneComponent_BaseFactory || (ɵSkRotatingPlaneComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkRotatingPlaneComponent)))(__ngFactoryType__ || SkRotatingPlaneComponent);\n  };\n})();\nSkRotatingPlaneComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkRotatingPlaneComponent,\n  selectors: [[\"sk-rotating-plane\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 2,\n  consts: [[1, \"sk-rotating-plane\", \"colored-parent\"]],\n  template: function SkRotatingPlaneComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-rotating-plane[_ngcontent-%COMP%]{position:relative;top:50%;width:40px;height:40px;margin:auto;animation:_ngcontent-%COMP%_sk-rotatePlane 1.2s infinite ease-in-out}@keyframes _ngcontent-%COMP%_sk-rotatePlane{0%{transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}to{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkRotatingPlaneComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-rotating-plane',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-rotating-plane colored-parent\\\" [style.background-color]='backgroundColor'></div>\\n\",\n      styles: [\".sk-rotating-plane{position:relative;top:50%;width:40px;height:40px;margin:auto;animation:sk-rotatePlane 1.2s infinite ease-in-out}@keyframes sk-rotatePlane{0%{transform:perspective(120px) rotateX(0) rotateY(0)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0)}to{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkSpinnerPulseComponent extends AbstractLoaderDirective {}\nSkSpinnerPulseComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkSpinnerPulseComponent_BaseFactory;\n  return function SkSpinnerPulseComponent_Factory(__ngFactoryType__) {\n    return (ɵSkSpinnerPulseComponent_BaseFactory || (ɵSkSpinnerPulseComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkSpinnerPulseComponent)))(__ngFactoryType__ || SkSpinnerPulseComponent);\n  };\n})();\nSkSpinnerPulseComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkSpinnerPulseComponent,\n  selectors: [[\"sk-spinner-pulse\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 2,\n  consts: [[1, \"sk-spinner\", \"sk-spinner-pulse\", \"colored-parent\"]],\n  template: function SkSpinnerPulseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-spinner-pulse[_ngcontent-%COMP%]{position:relative;top:50%;width:40px;height:40px;margin:auto;border-radius:100%;animation:_ngcontent-%COMP%_sk-pulseScaleOut 1s infinite ease-in-out}@keyframes _ngcontent-%COMP%_sk-pulseScaleOut{0%{transform:scale(0)}to{transform:scale(1);opacity:0}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkSpinnerPulseComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-spinner-pulse',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-spinner sk-spinner-pulse colored-parent\\\" [style.background-color]='backgroundColor'></div>\\n\",\n      styles: [\".sk-spinner-pulse{position:relative;top:50%;width:40px;height:40px;margin:auto;border-radius:100%;animation:sk-pulseScaleOut 1s infinite ease-in-out}@keyframes sk-pulseScaleOut{0%{transform:scale(0)}to{transform:scale(1);opacity:0}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkThreeBounceComponent extends AbstractLoaderDirective {}\nSkThreeBounceComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkThreeBounceComponent_BaseFactory;\n  return function SkThreeBounceComponent_Factory(__ngFactoryType__) {\n    return (ɵSkThreeBounceComponent_BaseFactory || (ɵSkThreeBounceComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkThreeBounceComponent)))(__ngFactoryType__ || SkThreeBounceComponent);\n  };\n})();\nSkThreeBounceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkThreeBounceComponent,\n  selectors: [[\"sk-three-bounce\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 8,\n  consts: [[1, \"sk-three-bounce\"], [1, \"sk-child\", \"sk-bounce1\"], [1, \"sk-child\", \"sk-bounce2\"], [1, \"sk-child\", \"sk-bounce3\"]],\n  template: function SkThreeBounceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-three-bounce[_ngcontent-%COMP%]{top:50%;position:relative;margin:auto;width:80px;text-align:center}.sk-three-bounce[_ngcontent-%COMP%]   .sk-child[_ngcontent-%COMP%]{width:20px;height:20px;border-radius:100%;display:inline-block;animation:_ngcontent-%COMP%_sk-three-bounce 1.4s ease-in-out 0s infinite both}.sk-three-bounce[_ngcontent-%COMP%]   .sk-bounce1[_ngcontent-%COMP%]{animation-delay:-.32s}.sk-three-bounce[_ngcontent-%COMP%]   .sk-bounce2[_ngcontent-%COMP%]{animation-delay:-.16s}@keyframes _ngcontent-%COMP%_sk-three-bounce{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkThreeBounceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-three-bounce',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-three-bounce\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-child sk-bounce1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-child sk-bounce2\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-child sk-bounce3\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-three-bounce{top:50%;position:relative;margin:auto;width:80px;text-align:center}.sk-three-bounce .sk-child{width:20px;height:20px;border-radius:100%;display:inline-block;animation:sk-three-bounce 1.4s ease-in-out 0s infinite both}.sk-three-bounce .sk-bounce1{animation-delay:-.32s}.sk-three-bounce .sk-bounce2{animation-delay:-.16s}@keyframes sk-three-bounce{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkWanderingCubesComponent extends AbstractLoaderDirective {}\nSkWanderingCubesComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkWanderingCubesComponent_BaseFactory;\n  return function SkWanderingCubesComponent_Factory(__ngFactoryType__) {\n    return (ɵSkWanderingCubesComponent_BaseFactory || (ɵSkWanderingCubesComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkWanderingCubesComponent)))(__ngFactoryType__ || SkWanderingCubesComponent);\n  };\n})();\nSkWanderingCubesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkWanderingCubesComponent,\n  selectors: [[\"sk-wandering-cubes\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"sk-wandering-cubes\"], [1, \"sk-cube\", \"sk-cube1\"], [1, \"sk-cube\", \"sk-cube2\"]],\n  template: function SkWanderingCubesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-wandering-cubes[_ngcontent-%COMP%]{top:50%;margin:auto;width:40px;height:40px;position:relative}.sk-wandering-cubes[_ngcontent-%COMP%]   .sk-cube[_ngcontent-%COMP%]{width:10px;height:10px;position:absolute;top:0;left:0;animation:_ngcontent-%COMP%_sk-wanderingCube 1.8s ease-in-out -1.8s infinite both}.sk-wandering-cubes[_ngcontent-%COMP%]   .sk-cube2[_ngcontent-%COMP%]{animation-delay:-.9s}@keyframes _ngcontent-%COMP%_sk-wanderingCube{0%{transform:rotate(0)}25%{transform:translate(30px) rotate(-90deg) scale(.5)}50%{transform:translate(30px) translateY(30px) rotate(-179deg)}50.1%{transform:translate(30px) translateY(30px) rotate(-180deg)}75%{transform:translate(0) translateY(30px) rotate(-270deg) scale(.5)}to{transform:rotate(-360deg)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkWanderingCubesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-wandering-cubes',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-wandering-cubes\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-cube sk-cube1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-cube sk-cube2\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-wandering-cubes{top:50%;margin:auto;width:40px;height:40px;position:relative}.sk-wandering-cubes .sk-cube{width:10px;height:10px;position:absolute;top:0;left:0;animation:sk-wanderingCube 1.8s ease-in-out -1.8s infinite both}.sk-wandering-cubes .sk-cube2{animation-delay:-.9s}@keyframes sk-wanderingCube{0%{transform:rotate(0)}25%{transform:translate(30px) rotate(-90deg) scale(.5)}50%{transform:translate(30px) translateY(30px) rotate(-179deg)}50.1%{transform:translate(30px) translateY(30px) rotate(-180deg)}75%{transform:translate(0) translateY(30px) rotate(-270deg) scale(.5)}to{transform:rotate(-360deg)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SkWaveComponent extends AbstractLoaderDirective {}\nSkWaveComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSkWaveComponent_BaseFactory;\n  return function SkWaveComponent_Factory(__ngFactoryType__) {\n    return (ɵSkWaveComponent_BaseFactory || (ɵSkWaveComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SkWaveComponent)))(__ngFactoryType__ || SkWaveComponent);\n  };\n})();\nSkWaveComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SkWaveComponent,\n  selectors: [[\"sk-wave\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 12,\n  consts: [[1, \"sk-wave\"], [1, \"sk-rect\", \"sk-rect1\"], [1, \"sk-rect\", \"sk-rect2\"], [1, \"sk-rect\", \"sk-rect3\"], [1, \"sk-rect\", \"sk-rect4\"], [1, \"sk-rect\", \"sk-rect5\"]],\n  template: function SkWaveComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"colored\", !ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n    }\n  },\n  styles: [\".sk-wave[_ngcontent-%COMP%]{position:relative;top:50%;margin:auto;width:50px;height:40px;text-align:center;font-size:10px}.sk-wave[_ngcontent-%COMP%]   .sk-rect[_ngcontent-%COMP%]{float:left;margin-right:1px;height:100%;width:6px;display:inline-block;animation:_ngcontent-%COMP%_sk-waveStretchDelay 1.2s infinite ease-in-out}.sk-wave[_ngcontent-%COMP%]   .sk-rect1[_ngcontent-%COMP%]{animation-delay:-1.2s}.sk-wave[_ngcontent-%COMP%]   .sk-rect2[_ngcontent-%COMP%]{animation-delay:-1.1s}.sk-wave[_ngcontent-%COMP%]   .sk-rect3[_ngcontent-%COMP%]{animation-delay:-1s}.sk-wave[_ngcontent-%COMP%]   .sk-rect4[_ngcontent-%COMP%]{animation-delay:-.9s}.sk-wave[_ngcontent-%COMP%]   .sk-rect5[_ngcontent-%COMP%]{animation-delay:-.8s}@keyframes _ngcontent-%COMP%_sk-waveStretchDelay{0%,40%,to{transform:scaleY(.4)}20%{transform:scaleY(1)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SkWaveComponent, [{\n    type: Component,\n    args: [{\n      selector: 'sk-wave',\n      template: \"<!--\\nCopyright (c) 2015 Tobias Ahlin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n-->\\n\\n<div class=\\\"sk-wave\\\" [class.colored]=\\\"!backgroundColor\\\">\\n    <div class=\\\"sk-rect sk-rect1\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-rect sk-rect2\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-rect sk-rect3\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-rect sk-rect4\\\" [style.background-color]='backgroundColor'></div>\\n    <div class=\\\"sk-rect sk-rect5\\\" [style.background-color]='backgroundColor'></div>\\n</div>\\n\",\n      styles: [\".sk-wave{position:relative;top:50%;margin:auto;width:50px;height:40px;text-align:center;font-size:10px}.sk-wave .sk-rect{float:left;margin-right:1px;height:100%;width:6px;display:inline-block;animation:sk-waveStretchDelay 1.2s infinite ease-in-out}.sk-wave .sk-rect1{animation-delay:-1.2s}.sk-wave .sk-rect2{animation-delay:-1.1s}.sk-wave .sk-rect3{animation-delay:-1s}.sk-wave .sk-rect4{animation-delay:-.9s}.sk-wave .sk-rect5{animation-delay:-.8s}@keyframes sk-waveStretchDelay{0%,40%,to{transform:scaleY(.4)}20%{transform:scaleY(1)}}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst Spinkit = {\n  skChasingDots: 'sk-chasing-dots',\n  skCubeGrid: 'sk-cube-grid',\n  skDoubleBounce: 'sk-double-bounce',\n  skRotatingPlane: 'sk-rotationg-plane',\n  skSpinnerPulse: 'sk-spinner-pulse',\n  skThreeBounce: 'sk-three-bounce',\n  skWanderingCubes: 'sk-wandering-cubes',\n  skWave: 'sk-wave'\n};\nconst SPINKIT_COMPONENTS = [SkCubeGridComponent, SkChasingDotsComponent, SkDoubleBounceComponent, SkRotatingPlaneComponent, SkSpinnerPulseComponent, SkThreeBounceComponent, SkWanderingCubesComponent, SkWaveComponent];\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass PendingRequestsInterceptor {\n  constructor() {\n    this._pendingRequests = 0;\n    this._pendingRequestsStatus$ = new ReplaySubject(1);\n    this._filteredUrlPatterns = [];\n    this._filteredMethods = [];\n    this._filteredHeaders = [];\n    this._forceByPass = false;\n  }\n  get pendingRequestsStatus$() {\n    return this._pendingRequestsStatus$.asObservable();\n  }\n  get pendingRequests() {\n    return this._pendingRequests;\n  }\n  get filteredUrlPatterns() {\n    return this._filteredUrlPatterns;\n  }\n  set filteredMethods(httpMethods) {\n    this._filteredMethods = httpMethods;\n  }\n  set filteredHeaders(value) {\n    this._filteredHeaders = value;\n  }\n  set forceByPass(value) {\n    this._forceByPass = value;\n  }\n  shouldBypassUrl(url) {\n    return this._filteredUrlPatterns.some(e => {\n      return e.test(url);\n    });\n  }\n  shouldBypassMethod(req) {\n    return this._filteredMethods.some(e => {\n      return e.toUpperCase() === req.method.toUpperCase();\n    });\n  }\n  shouldBypassHeader(req) {\n    return this._filteredHeaders.some(e => {\n      return req.headers.has(e);\n    });\n  }\n  shouldBypass(req) {\n    return this._forceByPass || this.shouldBypassUrl(req.urlWithParams) || this.shouldBypassMethod(req) || this.shouldBypassHeader(req);\n  }\n  intercept(req, next) {\n    const shouldBypass = this.shouldBypass(req);\n    if (!shouldBypass) {\n      this._pendingRequests++;\n      if (1 === this._pendingRequests) {\n        this._pendingRequestsStatus$.next(true);\n      }\n    }\n    return next.handle(req).pipe(finalize(() => {\n      if (!shouldBypass) {\n        this._pendingRequests--;\n        if (0 === this._pendingRequests) {\n          this._pendingRequestsStatus$.next(false);\n        }\n      }\n    }));\n  }\n}\nPendingRequestsInterceptor.ɵfac = function PendingRequestsInterceptor_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || PendingRequestsInterceptor)();\n};\nPendingRequestsInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PendingRequestsInterceptor,\n  factory: PendingRequestsInterceptor.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PendingRequestsInterceptor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst PendingRequestsInterceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useExisting: PendingRequestsInterceptor,\n  multi: true\n}];\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass SpinnerVisibilityService {\n  constructor(pendingRequestsInterceptor) {\n    this.pendingRequestsInterceptor = pendingRequestsInterceptor;\n    this._visibility$ = new ReplaySubject(1);\n  }\n  get visibility$() {\n    return this._visibility$.asObservable();\n  }\n  show() {\n    this.pendingRequestsInterceptor.forceByPass = true;\n    this._visibility$.next(true);\n  }\n  hide() {\n    this._visibility$.next(false);\n    this.pendingRequestsInterceptor.forceByPass = false;\n  }\n}\nSpinnerVisibilityService.ɵfac = function SpinnerVisibilityService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || SpinnerVisibilityService)(i0.ɵɵinject(PendingRequestsInterceptor));\n};\nSpinnerVisibilityService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SpinnerVisibilityService,\n  factory: SpinnerVisibilityService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SpinnerVisibilityService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: PendingRequestsInterceptor\n    }];\n  }, null);\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass NgHttpLoaderComponent {\n  constructor(pendingRequestsInterceptor, spinnerVisibility) {\n    this.pendingRequestsInterceptor = pendingRequestsInterceptor;\n    this.spinnerVisibility = spinnerVisibility;\n    this.spinkit = Spinkit;\n    this.visibleUntil = Date.now();\n    this.backdrop = true;\n    this.debounceDelay = 0;\n    this.entryComponent = null;\n    this.extraDuration = 0;\n    this.filteredHeaders = [];\n    this.filteredMethods = [];\n    this.filteredUrlPatterns = [];\n    this.minDuration = 0;\n    this.opacity = '.7';\n    this.backdropBackgroundColor = '#f1f1f1';\n    this.spinner = Spinkit.skWave;\n  }\n  ngOnInit() {\n    this.initIsvisibleObservable();\n    this.nullifySpinnerIfEntryComponentIsDefined();\n    this.initFilters();\n  }\n  initIsvisibleObservable() {\n    const [showSpinner$, hideSpinner$] = partition(this.pendingRequestsInterceptor.pendingRequestsStatus$, h => h);\n    this.isVisible$ = merge(this.pendingRequestsInterceptor.pendingRequestsStatus$.pipe(switchMap(() => showSpinner$.pipe(debounce(() => timer(this.debounceDelay))))), showSpinner$.pipe(switchMap(() => hideSpinner$.pipe(debounce(() => this.getVisibilityTimer$())))), this.spinnerVisibility.visibility$).pipe(distinctUntilChanged(), tap(h => this.updateExpirationDelay(h)));\n  }\n  nullifySpinnerIfEntryComponentIsDefined() {\n    if (this.entryComponent) {\n      this.spinner = null;\n    }\n  }\n  initFilters() {\n    this.initFilteredUrlPatterns();\n    this.initFilteredMethods();\n    this.initFilteredHeaders();\n  }\n  initFilteredUrlPatterns() {\n    if (!!this.filteredUrlPatterns.length) {\n      this.filteredUrlPatterns.forEach(e => this.pendingRequestsInterceptor.filteredUrlPatterns.push(new RegExp(e)));\n    }\n  }\n  initFilteredMethods() {\n    this.pendingRequestsInterceptor.filteredMethods = this.filteredMethods;\n  }\n  initFilteredHeaders() {\n    this.pendingRequestsInterceptor.filteredHeaders = this.filteredHeaders;\n  }\n  updateExpirationDelay(showSpinner) {\n    if (showSpinner) {\n      this.visibleUntil = Date.now() + this.minDuration;\n    }\n  }\n  getVisibilityTimer$() {\n    return timer(Math.max(this.extraDuration, this.visibleUntil - Date.now()));\n  }\n}\nNgHttpLoaderComponent.ɵfac = function NgHttpLoaderComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgHttpLoaderComponent)(i0.ɵɵdirectiveInject(PendingRequestsInterceptor), i0.ɵɵdirectiveInject(SpinnerVisibilityService));\n};\nNgHttpLoaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgHttpLoaderComponent,\n  selectors: [[\"ng-http-loader\"]],\n  inputs: {\n    backdrop: \"backdrop\",\n    backgroundColor: \"backgroundColor\",\n    debounceDelay: \"debounceDelay\",\n    entryComponent: \"entryComponent\",\n    extraDuration: \"extraDuration\",\n    filteredHeaders: \"filteredHeaders\",\n    filteredMethods: \"filteredMethods\",\n    filteredUrlPatterns: \"filteredUrlPatterns\",\n    minDuration: \"minDuration\",\n    opacity: \"opacity\",\n    backdropBackgroundColor: \"backdropBackgroundColor\",\n    spinner: \"spinner\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[\"id\", \"spinner\", 3, \"backdrop\", \"opacity\", \"ngStyle\", 4, \"ngIf\"], [\"id\", \"spinner\", 3, \"ngStyle\"], [4, \"ngComponentOutlet\"], [3, \"backgroundColor\", 4, \"ngIf\"], [3, \"backgroundColor\"]],\n  template: function NgHttpLoaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgHttpLoaderComponent_div_0_Template, 10, 16, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.isVisible$));\n    }\n  },\n  dependencies: [SkCubeGridComponent, SkChasingDotsComponent, SkDoubleBounceComponent, SkRotatingPlaneComponent, SkSpinnerPulseComponent, SkThreeBounceComponent, SkWanderingCubesComponent, SkWaveComponent, i11.NgIf, i11.NgStyle, i11.NgComponentOutlet, i11.AsyncPipe],\n  styles: [\"#spinner[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;z-index:9999}#spinner.backdrop[_ngcontent-%COMP%]{top:0;left:0;height:100%;width:100%;display:flex;align-items:center;justify-content:center;transform:none}  .colored-parent,   .colored>div{background-color:#333}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgHttpLoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-http-loader',\n      template: \"<div id=\\\"spinner\\\"\\n     *ngIf=\\\"isVisible$ | async\\\"\\n     [class.backdrop]=\\\"backdrop\\\"\\n     [style.opacity]=\\\"opacity\\\"\\n     [ngStyle]=\\\"{'background-color': backdrop ? backdropBackgroundColor : 'transparent'}\\\">\\n\\n    <ng-container *ngComponentOutlet=\\\"entryComponent\\\"></ng-container>\\n\\n    <sk-cube-grid\\n        *ngIf=\\\"spinner === spinkit.skCubeGrid\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-cube-grid>\\n\\n    <sk-chasing-dots\\n        *ngIf=\\\"spinner === spinkit.skChasingDots\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-chasing-dots>\\n\\n    <sk-double-bounce\\n        *ngIf=\\\"spinner === spinkit.skDoubleBounce\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-double-bounce>\\n\\n    <sk-rotating-plane\\n        *ngIf=\\\"spinner === spinkit.skRotatingPlane\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-rotating-plane>\\n\\n    <sk-spinner-pulse\\n        *ngIf=\\\"spinner === spinkit.skSpinnerPulse\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-spinner-pulse>\\n\\n    <sk-three-bounce\\n        *ngIf=\\\"spinner === spinkit.skThreeBounce\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-three-bounce>\\n\\n    <sk-wandering-cubes\\n        *ngIf=\\\"spinner === spinkit.skWanderingCubes\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-wandering-cubes>\\n\\n    <sk-wave\\n        *ngIf=\\\"spinner === spinkit.skWave\\\"\\n        [backgroundColor]=\\\"backgroundColor\\\">\\n    </sk-wave>\\n\\n</div>\\n\\n\",\n      styles: [\"#spinner{top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;z-index:9999}#spinner.backdrop{top:0;left:0;height:100%;width:100%;display:flex;align-items:center;justify-content:center;transform:none}::ng-deep .colored-parent,::ng-deep .colored>div{background-color:#333}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: PendingRequestsInterceptor\n    }, {\n      type: SpinnerVisibilityService\n    }];\n  }, {\n    backdrop: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    debounceDelay: [{\n      type: Input\n    }],\n    entryComponent: [{\n      type: Input\n    }],\n    extraDuration: [{\n      type: Input\n    }],\n    filteredHeaders: [{\n      type: Input\n    }],\n    filteredMethods: [{\n      type: Input\n    }],\n    filteredUrlPatterns: [{\n      type: Input\n    }],\n    minDuration: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    backdropBackgroundColor: [{\n      type: Input\n    }],\n    spinner: [{\n      type: Input\n    }]\n  });\n})();\n\n/*\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nclass NgHttpLoaderModule {\n  static forRoot() {\n    return {\n      ngModule: NgHttpLoaderModule,\n      providers: [PendingRequestsInterceptorProvider]\n    };\n  }\n}\nNgHttpLoaderModule.ɵfac = function NgHttpLoaderModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgHttpLoaderModule)();\n};\nNgHttpLoaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgHttpLoaderModule\n});\nNgHttpLoaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgHttpLoaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgHttpLoaderComponent, ...SPINKIT_COMPONENTS],\n      imports: [CommonModule],\n      exports: [NgHttpLoaderComponent, ...SPINKIT_COMPONENTS]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-http-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractLoaderDirective, NgHttpLoaderComponent, NgHttpLoaderModule, PendingRequestsInterceptor, PendingRequestsInterceptorProvider, SPINKIT_COMPONENTS, SkChasingDotsComponent, SkCubeGridComponent, SkDoubleBounceComponent, SkRotatingPlaneComponent, SkSpinnerPulseComponent, SkThreeBounceComponent, SkWanderingCubesComponent, SkWaveComponent, Spinkit, SpinnerVisibilityService };","import { Directive, HostListener} from '@angular/core';\r\n@Directive({\r\n    selector: '[DisableRightClick]'\r\n})\r\nexport class DisableRightClickDirective {\r\n    // constructor() { }\r\n\r\n    @HostListener('contextmenu', ['$event'])\r\n    onRightClick(event: Event): void {\r\n        event.preventDefault();\r\n    }\r\n}","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, OnDestroy, HostListener, SecurityContext, inject, TemplateRef, ViewEncapsulation, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, UntypedFormBuilder, UntypedFormGroup, Validators,ReactiveFormsModule, AbstractControl } from '@angular/forms';\r\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\r\nimport { AngularEditorConfig } from \"@kolkov/angular-editor\";\r\nimport { CommonService, LabelService, DataService } from \"../../services\";\r\nimport { ConfirmationDialogService } from \"../../components/confirmation-dialog/confirmation-dialog.service\";\r\nimport moment from \"moment\";\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EnmLanguage, EnmCountry } from '../../shared/constants/enum';\r\n\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { DateFormats, CustomDateAdapter } from \"src/app/shared\";\r\nimport { DirectivesModule } from \"src/app/directive/directives.module\";\r\nimport { provideToastr } from 'ngx-toastr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { QuillModule } from \"ngx-quill\";\r\nimport { SpinnerVisibilityService } from 'ng-http-loader';\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n  },\r\n  display: {\r\n    dateInput: \"DD MMMM YYYY\",\r\n    monthYearLabel: \"YYYY\",\r\n    dateA11yLabel: \"LL\",\r\n    monthYearA11yLabel: \"YYYY\",\r\n  },\r\n};\r\n@Component({\r\n  selector: \"app-floating-consult-report\",\r\n  standalone: true,\r\n  templateUrl: \"./fcr.component.html\",\r\n  styleUrls: [\"./fcr.component.css\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n  imports: [\r\n    CommonModule,\r\n    AngularEditorModule,\r\n    FormsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    DirectivesModule,\r\n    ReactiveFormsModule,\r\n    QuillModule\r\n  ],\r\n  providers: [\r\n    CommonService, LabelService, DataService,\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE],\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    { provide: MAT_DATE_FORMATS, useValue: DateFormats },\r\n    { provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n  ],\r\n  // schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n})\r\nexport class FcrComponent implements OnInit, OnChanges, OnDestroy {\r\n  private modalRef: NgbModalRef;\r\n  public fileBase64: string;\r\n  public fileName: string;\r\n  public fileMessage: string;\r\n  quillConfig = {\r\n    toolbar: {\r\n      container: [\r\n        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n        // ['blockquote', 'code-block'],\r\n        [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        // [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        [{ 'list': 'bullet' }],\r\n        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n        // [{ 'font': [] }],\r\n        // remove formatting button\r\n        ['link'],\r\n      ]\r\n    },\r\n    keyboard: {\r\n      bindings: {\r\n        'list autofill': {\r\n          prefix: /^\\s*(\\.|-|\\*|\\[ ?\\]|\\[x\\])$/\r\n        },\r\n      }\r\n    }\r\n  }\r\n  htmltxt = \"<p>sdffs</p>\"\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: \"100px\",\r\n    minHeight: \"48px\",\r\n    maxHeight: \"auto\",\r\n    width: \"auto\",\r\n    minWidth: \"0\",\r\n    translate: \"yes\",\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: \"Enter text here...\",\r\n    defaultParagraphSeparator: \"\",\r\n    defaultFontName: \"\",\r\n    defaultFontSize: \"\",\r\n    toolbarHiddenButtons: [\r\n      [\r\n        \"undo\",\r\n        \"redo\",\r\n        \"strikeThrough\",\r\n        \"subscript\",\r\n        \"superscript\",\r\n        \"justifyLeft\",\r\n        \"justifyCenter\",\r\n        \"justifyRight\",\r\n        \"justifyFull\",\r\n        \"indent\",\r\n        \"outdent\",\r\n        \"insertOrderedList\",\r\n        \"heading\",\r\n        \"fontName\",\r\n      ],\r\n      [\r\n        \"fontSize\",\r\n        \"textColor\",\r\n        \"backgroundColor\",\r\n        \"customClasses\",\r\n        \"unlink\",\r\n        \"insertImage\",\r\n        \"insertVideo\",\r\n        \"insertHorizontalRule\",\r\n        \"toggleEditorMode\",\r\n      ],\r\n    ],\r\n  };\r\n\r\n  dsLanguage: any = [];\r\n\r\n  data: any = {\r\n    LanguageId: null,\r\n    BookedAppointmentId: null,\r\n    Veterinarian: \"\",\r\n    HospitalName: \"\",\r\n    PatientName: \"\",\r\n    ReportDate: new Date(),\r\n    ClinicalHistory:\r\n      \"<p>Clinical Question(s): </p><p>Additional Comments: </p>\",\r\n    ConsultationSummary: \"\",\r\n    CaseInterPratation: \"\",\r\n    CaseConsideration: \"\",\r\n    TreatmentConsideration: \"\",\r\n    ResourcesConsideration: \"\",\r\n    ConsultantName: \"\",\r\n    ConsultantDescription: \"\",\r\n  };\r\n\r\n  @Input() isOpened = false;\r\n  autoSaveInterval = 80000;\r\n  timer: any;\r\n  charLength = 5000;\r\n  AppointmentGuid = this.dataService.appData[\"AppointmentGuid\"];\r\n  // AppointmentGuid = '14ac0e3b-dac2-4bea-aa7e-b716a96df807'\r\n  @Output() valueChange = new EventEmitter();\r\n  patientID:string;\r\n  ResponseForm!: UntypedFormGroup;\r\n  veterinarianFlag: boolean = false;\r\n  patientNameFlag: boolean = false;\r\n  hospitalNameFlag: boolean = false;\r\n  consultantNameFlag: boolean = false;\r\n  consultantDescriptionFlag: boolean = false;\r\n  @ViewChild('fileInput') fileInput!: ElementRef;\r\n   checkCondition =false;\r\n   responceData: any = [];\r\n   ClinicalHistory!: AbstractControl;\r\n   clinicalHistoryStr: any = [];\r\n   isCheck:boolean = false;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public labelService: LabelService,\r\n    private dataService: DataService,\r\n    private sanitizer: DomSanitizer,\r\n    private modalService: NgbModal,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private toastr: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    private spinner: SpinnerVisibilityService\r\n  ) {\r\n    this.feedbackHider()\r\n  }\r\n\r\n  ngOnInit() {\r\n    // debugger\r\n    const redirectionData = localStorage.getItem(\"rediretionDetails\");\r\n    if (redirectionData) {\r\n      this.patientID = (redirectionData.split(\"redirect=\")[1] != undefined ? redirectionData.split(\"redirect=\")[1].split(\"&\")[0] : \"\").replace('#', '').split('/')[3];\r\n    }\r\n    this.commonService.getUserDDLDetails(EnmLanguage.English, EnmCountry.UnitedStates, null, true).subscribe(res => {\r\n      this.dsLanguage = res.ResponseData.LanguageDetails.map((ele) => {\r\n        return { Id: ele.Id, Name: ele.Name };\r\n      });\r\n      console.log('dsLanguage', this.dsLanguage);\r\n      this.data.LanguageId = this.dsLanguage.length != 0 ? this.dsLanguage[0].Id : '';\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n    })\r\n    // this.ClinicalHistory = this.ResponseForm.controls['ClinicalHistory'];\r\n    this.getConsultationReportDetails()\r\n    this.initResponseForm()\r\n    \r\n  }\r\n\r\n  feedbackHider() {\r\n    const timer = setTimeout(() => {\r\n      const fdBkBtn = document.getElementById(\"QSIFeedbackButton-btn\")\r\n      if (fdBkBtn) {\r\n        clearTimeout(timer)\r\n        fdBkBtn.style.visibility = 'hidden'\r\n      } else {\r\n        this.feedbackHider()\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    const isOpened: SimpleChange = changes[\"isOpened\"];\r\n    if (isOpened.currentValue) {\r\n      this.getConsultationReportDetails();\r\n    } else {\r\n      this.createConsultationReportDetails();\r\n    }\r\n  }\r\n\r\n  // @HostListener(\"document:click\", [\"$event\"])\r\n  // clickout(event) {\r\n  //   if (event.target.outerHTML.indexOf('backlink') !== -1) {\r\n  //     this.createConsultationReportDetails();\r\n  //   }\r\n  // }\r\n\r\n  generatePdfForConsultationReport() {\r\n    this.commonService.generatePdfForConsultationReport(this.AppointmentGuid, 1).subscribe((res) => {\r\n      console.log(res)\r\n      const blob = new Blob([res], { type: 'application/pdf' });;\r\n      this.downloadPdf(blob, 'ConsultationReport.pdf');\r\n    }, err => {\r\n      console.log(err);\r\n      if (err.error && err.error.text) {\r\n        const pdfBlob = err.error.text;\r\n        const blob = new Blob([pdfBlob], { type: \"application/pdf\" });\r\n        this.downloadPdf(blob, 'ConsultationReport.pdf');\r\n      } else {\r\n        console.error('Unexpected error:', err);\r\n      }\r\n    })\r\n  }\r\n\r\n  private downloadPdf(blob: Blob, filename: string) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  isHTML(str: any) {\r\n    var a:any = document.createElement('div');\r\n    // deepcode ignore XSS: <Resource coming from only truested api domain>\r\n    a.innerHTML = this.sanitizer.bypassSecurityTrustHtml(str);\r\n    // deepcode ignore XSS: <Resource coming from only truested api domain>\r\n    for (var c = a.childNodes, i = c.length; i--;) {\r\n      if (c[i].nodeType == 1) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getConsultationReportDetails() {\r\n    this.commonService.getConsultationReportDetails(1, this.AppointmentGuid)\r\n      .subscribe((resp) => {\r\n        \r\n          if (resp.ResponseData.ClinicalHistory) {\r\n            this.responceData = resp.ResponseData.ClinicalHistory;\r\n          }\r\n        if(this.isCheck)\r\n           this.startAutoSaveInterval();\r\n        this.checkCondition =true;\r\n        const data = resp.ResponseData;\r\n        data.ReportDate = data.ReportDate || new Date();\r\n        data.ReportDate = moment(data.ReportDate).utcOffset(0, true).format(\"YYYY-MM-DD\");\r\n        data.LanguageId = data.LanguageId || this.dsLanguage[0].Id;\r\n        data.ClinicalHistory = this.htmlDecode(data.ClinicalHistory);\r\n        data.ApptDocAttachment = data.ApptDocAttachment.filter(attachment => attachment.AttachedBy == 'admin' || attachment.AttachedBy == 'consultant')\r\n        this.data = data;\r\n        console.log('getConsultationReportDetails =>', this.data);\r\n        if (resp.ResponseData.ClinicalHistory && this.isHTML(this.responceData)) {\r\n          let remainStr = this.responceData.split(\"</p>\");\r\n          remainStr.shift();\r\n          remainStr.shift();\r\n          var arrNew = this.responceData.split(/<p>|<\\/p>|¤/);\r\n          var firstp = arrNew[1] ? arrNew[1].replace(/\\&lt;/g, \"<\") : '';\r\n          firstp = arrNew[1] ? firstp.replace(/\\&gt;/g, \">\") : '';\r\n          var secondp = arrNew[3] ? arrNew[3].replace(/\\&lt;/g, \"<\") : '';\r\n          secondp = arrNew[3] ? secondp.replace(/\\&gt;/g, \">\") : '';\r\n          if (firstp) {\r\n            resp.ResponseData.ClinicalHistory = \"<p>\" + firstp + \"</p><p>\" + secondp + \"</p>\" + remainStr.join(\"</p>\");\r\n          } else {\r\n            resp.ResponseData.ClinicalHistory = \"<p>\" + this.responceData + \"</p>\"\r\n          }\r\n        } else {\r\n          resp.ResponseData.ClinicalHistory = \"<p>\" + this.responceData + \"</p>\";\r\n        }\r\n\r\n        this.ResponseForm.patchValue(resp.ResponseData);\r\n        \r\n      });\r\n  }\r\n\r\n  initResponseForm() {\r\n    console.clear(); let cq = 'Clinical Questions :';\r\n    let ac = `Case Summary : `;\r\n    // if (this.data.popupData.TopicOfDisscussion.length > 0) {\r\n    //   cq = `Clinical Questions : `;\r\n    //   ac = `Case Summary : `;\r\n    // }\r\n    // let consultantName = this.data.popupData.Consultant_Fname + ' ' + this.data.popupData.Consultant_Lname;\r\n    this.ResponseForm = this.fb.group({\r\n      LanguageId: [1, Validators.required],\r\n      Veterinarian: [this.data.Veterinarian, Validators.required],\r\n      HospitalName: [this.data.HospitalName, Validators.required],\r\n      ReportDate: [this.data.ReportDate, Validators.required],\r\n      ConsultantName: [this.data.ConsultantName, Validators.required],\r\n      ConsultantDescription: [this.data.ConsultantDescription, Validators.required],\r\n      ClinicalHistory: [this.ResponseForm?.value?.ClinicalHistory ? this.ResponseForm.value.ClinicalHistory : '<p>' + ac + '</p><p>' + cq + '</p>'],\r\n      ConsultationSummary: [''],\r\n      CaseInterPratation: [''],\r\n      CaseConsideration: [''],\r\n      TreatmentConsideration: [''],\r\n      ResourcesConsideration: [''],\r\n      // BookedAppointmentId: [this.createConsReportInputInfo.id],\r\n      isConsultantReport: true,\r\n      Appointment_Guid: [this.AppointmentGuid],\r\n      ApptDocAttachment: []\r\n    });\r\n  }\r\n\r\n  async createConsultationReportDetails(isButtonClicked?) {\r\n    if (!this.ResponseForm.valid) {\r\n      this.veterinarianFlag = this.ResponseForm.value.Veterinarian === '' || this.ResponseForm.value.Veterinarian == null ? true : false;\r\n      this.hospitalNameFlag = this.ResponseForm.value.HospitalName === '' || this.ResponseForm.value.HospitalName == null ? true : false;\r\n      this.consultantNameFlag = this.ResponseForm.value.ConsultantName === '' || this.ResponseForm.value.ConsultantName == null ? true : false;\r\n      this.consultantDescriptionFlag = this.ResponseForm.value.ConsultantDescription === '' || this.ResponseForm.value.ConsultantDescription == null ? true : false;\r\n      return;\r\n    } \r\n    if (this.ResponseForm.value.ClinicalHistory != '' && this.ResponseForm.value.ClinicalHistory != null) {\r\n      let str = this.ResponseForm.value.ClinicalHistory;\r\n      this.clinicalHistoryStr = str.replace('/<li class=\"ql-indent-1\">/g', '<li><li class=\\\\\"ql-indent-1\\\\\"&gt;>');\r\n      let remainStr = str.split(\"</p>\");\r\n      remainStr.shift();\r\n      remainStr.shift();\r\n      var arrNew = str.split(/<p>|<\\/p>|¤/);\r\n      var arrNew3 = str.split(/<h1>|<\\/h1>|¤/);\r\n      var arrNew10 = str.split(/<h2>|<\\/h2>|¤/);\r\n\r\n      var firstp = arrNew[1] ? arrNew[1].replace(/\\</g, \"&lt;\") : '';\r\n      firstp = arrNew[1] ? firstp.replace(/\\>/g, \"&gt;\") : '';\r\n      var secondp = arrNew[3] ? arrNew[3].replace(/\\</g, \"&lt;\") : '';\r\n      secondp = arrNew[3] ? secondp.replace(/\\>/g, \"&gt;\") : '';\r\n      var firstp1 = arrNew3[1] ? arrNew3[1].replace(/\\</g, \"&lt;\") : '';\r\n      firstp1 = arrNew3[1] ? firstp1.replace(/\\>/g, \"&gt;\") : '';\r\n      var secondp1 = arrNew3[3] ? arrNew3[3].replace(/\\</g, \"&lt;\") : '';\r\n      secondp1 = arrNew3[3] ? secondp1.replace(/\\>/g, \"&gt;\") : '';\r\n      var firstp10 = arrNew10[1] ? arrNew10[1].replace(/\\</g, \"&lt;\") : '';\r\n      firstp10 = arrNew10[1] ? firstp10.replace(/\\>/g, \"&gt;\") : '';\r\n      var secondp10 = arrNew10[3] ? arrNew10[3].replace(/\\</g, \"&lt;\") : '';\r\n      secondp10 = arrNew10[3] ? secondp10.replace(/\\>/g, \"&gt;\") : '';\r\n      var firstp = arrNew[1] ? arrNew[1].replace(/\\</g, \"&lt;\") : '';\r\n      firstp = arrNew[1] ? firstp.replace(/\\>/g, \"&gt;\") : '';\r\n      var secondp = arrNew[3] ? arrNew[3].replace(/\\</g, \"&lt;\") : '';\r\n      secondp = arrNew[3] ? secondp.replace(/\\>/g, \"&gt;\") : '';\r\n      this.ResponseForm.value.ClinicalHistory = \"<p>\" + firstp + \"</p><p>\" + secondp + \"</p>\" + remainStr.join(\"</p>\");\r\n\r\n      var clinicalHistoryStr = this.ResponseForm.value.ClinicalHistory;\r\n      this.ResponseForm.value.ClinicalHistory = \"<p>\" + firstp + \"</p><p>\" + secondp + \"</p>\" + remainStr.join(\"</p>\")\r\n      var clinicalHistoryStr: any = this.ResponseForm.value.ClinicalHistory + \"<h1>\" + firstp1 + \"</h1><h1>\" + secondp1 + \"</h1><h2>\" + firstp10 + \"</h2><h2>\" + secondp10 + \"</h2>\";\r\n      this.ResponseForm.value.ClinicalHistory = this.clinicalHistoryStr\r\n      var clinicalHistoryStr: any = this.ResponseForm.value.ClinicalHistory\r\n\r\n      if (!this.isHTML(clinicalHistoryStr)) {\r\n        this.ResponseForm.value.ClinicalHistory = \"<p>\" + clinicalHistoryStr + \"</p>\";\r\n        this.data.ClinicalHistory =  this.ResponseForm.value.ClinicalHistory\r\n      }\r\n    }\r\n    this.commonService.isConsultReportRequestPending = true\r\n    const req = { ...this.data };\r\n    req.Appointment_Guid = this.AppointmentGuid;\r\n    req.isConsultantReport = true;\r\n    req.ReportDate = moment(req.ReportDate).utcOffset(0, true).format(\"YYYY-MM-DD\");\r\n    delete req.BookedAppointmentId;\r\n    this.commonService.createConsultationReportDetails(req).subscribe({\r\n      next: () => {\r\n        this.commonService.isConsultReportRequestPending = false;\r\n        if (isButtonClicked) {\r\n          this.closeModel();\r\n          const msg = 'Consultation Report Created Successfully.';\r\n          this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsPatientInfoScreen.Ok, \"\", \"sm\", true, false)\r\n            .then((confirmed) => {\r\n              if (confirmed) {\r\n              }\r\n            });\r\n        }\r\n      }\r\n    });\r\n    // =============old code end=================\r\n  }\r\n  txtChange(field: string) {\r\n    if (field === 'vn') {\r\n      this.veterinarianFlag = this.ResponseForm.value.Veterinarian === '' || this.ResponseForm.value.Veterinarian == null ? true : false;\r\n    } else if (field === 'hn') {\r\n      this.hospitalNameFlag = this.ResponseForm.value.HospitalName === '' || this.ResponseForm.value.HospitalName == null ? true : false;\r\n    } else if (field === 'cn') {\r\n      this.consultantNameFlag = this.ResponseForm.value.ConsultantName === '' || this.ResponseForm.value.ConsultantName == null ? true : false;\r\n    } else if (field === 'qt') {\r\n      this.consultantDescriptionFlag = this.ResponseForm.value.ConsultantDescription === '' || this.ResponseForm.value.ConsultantDescription == null ? true : false;\r\n    }\r\n  }\r\n\r\n  startAutoSaveInterval() {\r\n    \r\n    this.timer = setInterval(() => {\r\n      if(this.isCheck){\r\n        this.spinner.show();\r\n        this.createConsultationReportDetails();\r\n        this.spinner.hide();\r\n      }\r\n    }, this.autoSaveInterval);\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.createConsultationReportDetails();\r\n    const fdBkBtn = document.getElementById(\"QSIFeedbackButton-btn\")\r\n    if (fdBkBtn) {\r\n      fdBkBtn.style.visibility = 'visible'\r\n    }\r\n    clearInterval(this.timer);\r\n    try {\r\n      this.closeModel();\r\n    } catch (error) {}\r\n  }\r\n\r\n  htmlDecode(input) {\r\n    const t = document.createElement('textarea');\r\n    t.innerHTML = this.sanitizer.sanitize(SecurityContext.HTML, input);\r\n    const v = t.value;\r\n    t.remove();\r\n    return v;\r\n  }\r\n\r\n  openConsultationReportModel(content: TemplateRef<any>) {\r\n    this.getConsultationReportDetails();\r\n    this.modalRef = this.modalService.open(content, { size: 'lg', windowClass: 'report-modal' });\r\n    document.getElementById('cunsultation-report-btn').style.display = 'none';\r\n  }\r\n\r\n  public closeModel() {\r\n    this.modalRef.close();\r\n    this.isCheck =false;\r\n    document.getElementById('cunsultation-report-btn').style.display = 'block';\r\n    document.querySelector('.resizepage').classList.remove(\"minimize-pinfotbl\");\r\n    document.body.classList.remove(\"minimize-window\");\r\n    document.getElementById('cunsultation-report-btn').classList.remove(\"pinfo-consult-btn\");\r\n  }\r\n\r\n  // Helper method to convert files to Base64\r\n  private convertFilesToBase64(files: File[]): Promise<any[]> {\r\n    return Promise.all(\r\n      files.map(file => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.onload = () => {\r\n            resolve({\r\n              AttachedBy: JSON.parse(localStorage.authDetails).UserTypeId == 42 ? 'consultant' : 'admin', // \"admin\",\r\n              AttachedFileURL: null,\r\n              AttachmentDescription: null,\r\n              AttachmentFileName: file.name,\r\n              AttachmentMethodType: null,\r\n              BookedAppointmentID: null,\r\n              FileType: file.type,\r\n              Id: Math.floor(10000 + Math.random() * 90000), // 5 digit random number\r\n              ImageBase64: reader.result?.toString(), // Set Base64 data\r\n            });\r\n          };\r\n          reader.onerror = () => reject(`Error reading file: ${file.name}`);\r\n          reader.readAsDataURL(file); // Read file as Base64\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public calculateBase64FileSize(base64String) {\r\n    // Remove the prefix if present\r\n    const base64WithoutPrefix = base64String.split(',')[1] || base64String;\r\n    // Calculate Base64 length\r\n    const base64Length = base64WithoutPrefix.length;\r\n    // Convert to file size in bytes\r\n    return (base64Length * 3) / 4 - (base64WithoutPrefix.endsWith('==') ? 2 : base64WithoutPrefix.endsWith('=') ? 1 : 0);\r\n  }\r\n\r\n  public calculateTotalSize(array) {\r\n    return array.reduce((total, obj) => {\r\n      if (obj.ImageBase64) {\r\n        total += this.calculateBase64FileSize(obj.ImageBase64);\r\n      }\r\n      return total;\r\n    }, 0); // Start with 0 as the initial total\r\n  }\r\n  async readFile(files) {\r\n    try {\r\n      this.fileMessage = null;\r\n      const maxSize = 25 * 1024 * 1024; // 25 MB in bytes\r\n      const maxFiles = 5;\r\n      const singleFileSize = 5 * 1024 * 1024; //5MB in bytes\r\n      const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf', 'image/jpg']; // Allowed MIME types\r\n      // Validate file types\r\n      const validFiles:any = Array.from(files).filter(file => {\r\n        if (!allowedFileTypes.includes(file['type'])) {\r\n          this.toastr.error(`File type not supported.`);\r\n          return false;\r\n        }\r\n        if (files.length == 1 && file['size'] > singleFileSize) {\r\n          this.toastr.error(\"File size is more than 5MB upload limit.\");\r\n          return false;\r\n        }else if(files.length && files.length != 1 &&  file['size'] > singleFileSize){\r\n          this.toastr.error(\"One of the file sizes more than 5 MB upload limit.\");\r\n          return false;\r\n        }else if(files.length  && (this.data.ApptDocAttachment.length + files.length > maxFiles)){\r\n           this.toastr.error(\"Upload file count limit exceeds more than 5 files.\");\r\n           return false;\r\n       }\r\n        return true;\r\n      });\r\n\r\n      if (validFiles.length === 0) {\r\n        return; // Stop if no valid files\r\n      }\r\n\r\n     console.log(validFiles)\r\n\r\n      const fileDataArray = await this.convertFilesToBase64(Array.from(validFiles));\r\n      this.data['ApptDocAttachment'] = this.data.ApptDocAttachment\r\n        ? this.data.ApptDocAttachment.concat(fileDataArray) : fileDataArray;\r\n      // No of files check\r\n      // if (this.data.ApptDocAttachment.length > maxFiles) {\r\n      //   this.data.ApptDocAttachment = this.data.ApptDocAttachment.slice(0, maxFiles);\r\n      //  return  this.fileMessage = 'Maximum 5 files allowed.';\r\n      // }\r\n\r\n      // Calculate total size\r\n      let totalSize = 0;\r\n      // totalSize = this.calculateTotalSize(this.data.ApptDocAttachment);\r\n      this.data.ApptDocAttachment = this.data.ApptDocAttachment.filter((file) => {\r\n        if (file.ImageBase64) {\r\n          const fileSize = this.calculateBase64FileSize(file.ImageBase64);\r\n          if (totalSize + fileSize > maxSize) {\r\n            // this.fileMessage = 'The total file size exceeds the 25 MB limit.';\r\n            this.toastr.error('The total file size exceeds the 25 MB limit.');\r\n            return false; // Exclude file if it exceeds the size limit\r\n          }\r\n          totalSize += fileSize;\r\n        }\r\n        return true; // Include file if within size limits\r\n      });\r\n\r\n    } catch (error) {\r\n      this.fileMessage = error.message;\r\n    }\r\n  }\r\n//new code for File upload\r\n  uploadFiles(file){\r\n    let files: FileList = file?.target?.files ? file?.target?.files : file;\r\n    const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png'];\r\n    const singleFileSize = 5 * 1024 * 1024; //5MB in bytes\r\n    const maxSize = 25 * 1024 * 1024; // 25 MB in bytes\r\n    let isSizeError: boolean = false;\r\n    let fileCountError:boolean =false;\r\n    let isSingleFileSizeError:boolean =false;\r\n    let isSupportFileTypeError:boolean =false;\r\n    const maxFiles = 5;\r\n    var size = 0;\r\n    Array.from(files).forEach((file: any) => {\r\n      size = size + file.size;\r\n      if (file.size >= singleFileSize) {\r\n        isSingleFileSizeError = true;\r\n        // return;\r\n      }\r\n      if(!allowedTypes.includes(file.type)){\r\n        isSupportFileTypeError =true;\r\n      }\r\n    });\r\n    this.data['ApptDocAttachment']?.forEach(element => {\r\n      size = size + element.size;\r\n      if (size >= maxSize) {\r\n        isSizeError = true\r\n      }\r\n    });\r\n    if((files.length+this.data['ApptDocAttachment']?.length)>maxFiles){\r\n      fileCountError =true\r\n    }\r\n    if ((!isSizeError)&&(!fileCountError)&&(!isSingleFileSizeError)&&(!isSupportFileTypeError)) {\r\n      Array.from(files).forEach((file: any) => {\r\n        if(file){\r\n            let reader = new FileReader();\r\n            reader.onload = (e: any) =>\r\n              this.data['ApptDocAttachment'].push({\r\n                ImageBase64: e.target.result,\r\n                AttachmentFileName: file.name,\r\n                FileType: file.type,\r\n                size: file.size,\r\n                AttachedBy:  JSON.parse(localStorage.authDetails).UserTypeId == 42 ? 'consultant' : 'admin',\r\n              });\r\n            // this.consultantAttachemntFlag = this.consultantAttachemntFlag ? this.consultantAttachemntFlag = false : this.consultantAttachemntFlag;\r\n            reader.readAsDataURL(file);\r\n        }else{\r\n          console.log('Not a file')\r\n        }\r\n      });\r\n     }\r\n\r\n\r\n    if(files.length ==1){\r\n      if(fileCountError){\r\n        this.toastr.error(\"Upload file count limit exceeds more than 5 files\");\r\n      }\r\n      if (isSingleFileSizeError) {\r\n        this.toastr.error(\"File size is more than 5MB upload limit\");\r\n      }\r\n      if (isSupportFileTypeError) {\r\n        this.toastr.error(`File type not supported`);\r\n      }\r\n      if (isSizeError) {\r\n        this.toastr.error(\"Total All Files < 25 MB\");\r\n      }\r\n    }else{\r\n\r\n      if(fileCountError){\r\n        this.toastr.error(\"Upload file count limit exceeds more than 5 files\");\r\n      }\r\n      if (isSingleFileSizeError) {\r\n        this.toastr.error(\"One of the file sizes more than 5 MB upload limit\");\r\n      }\r\n      if (isSupportFileTypeError) {\r\n        this.toastr.error(`One of the file types is not supported`);\r\n      }\r\n      if (isSizeError) {\r\n        this.toastr.error(\"Total All Files < 25 MB\");\r\n      }\r\n    }\r\n  }\r\n  resetFileInput() {\r\n    if (this.fileInput) {\r\n      this.fileInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public removeAttachment(index) {\r\n    this.fileMessage = null;\r\n    this.data.ApptDocAttachment.splice(index, 1);\r\n  }\r\n\r\n  expanCollapse = false;\r\n  public expandCollpaseModal() {\r\n    this.expanCollapse = !this.expanCollapse;\r\n    if (this.expanCollapse) {\r\n      document.querySelector('.resizepage').classList.add(\"minimize-pinfotbl\");\r\n      document.getElementById('cunsultation-report-btn').classList.add(\"pinfo-consult-btn\");\r\n      document.body.classList.add(\"minimize-window\");\r\n\r\n    } else {\r\n      document.querySelector('.resizepage').classList.remove(\"minimize-pinfotbl\");\r\n      document.getElementById('cunsultation-report-btn').classList.remove(\"pinfo-consult-btn\");\r\n      document.body.classList.remove(\"minimize-window\");\r\n    }\r\n  }\r\n\r\n  /**  keeping future client require purpose\r\n   * sliceTo5000(elem: string, event: any) {\r\n    // const parser = new DOMParser();\r\n    // const html = parser.parseFromString(this.data[elem], \"text/html\");\r\n    // const trimedText = html.body.textContent;\r\n    // //console.log(trimedText, trimedText.length, event.keyCode)\r\n    // if (\r\n    //   trimedText &&\r\n    //   trimedText.length >= this.charLength &&\r\n    //   (event.keyCode > 31 || event.keyCode == 13)\r\n    // ) {\r\n    //   event.preventDefault();\r\n    // }\r\n  // }\r\n  */\r\n\r\n\r\n}\r\n","<!-- <div id=\"custom-content\" class=\"pt-0 faq-content pb-4\">\r\n\t<div class=\"cr-header mb-2\">\r\n\t\t<span>Consultation Report</span>\r\n\t\t<button class=\"btn btn-default cr-save-btn\" (click)=\"createConsultationReportDetails()\">Save</button>\r\n\t</div>\r\n\t<div class=\"container\">\r\n\t\t<div class=\"QuestionBody\" style=\"display: flex;\">\r\n\t\t\t<div class=\"lang container-cr\">\r\n\t\t\t\t<div class=\"r-head\"> Report Language </div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100\">\r\n\t\t\t\t\t<mat-select autocomplete=\"off\" [(ngModel)]=\"data.LanguageId\" id=\"ddlLang\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let language of dsLanguage\" [value]=\"language.Id\">\r\n\t\t\t\t\t\t\t{{ language.Name }}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"datepick container-cr\" style=\"margin-left: auto; order: 2;\">\r\n\t\t\t\t<div class=\"r-head\"> Date </div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 170px;\">\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"pickerFrom\" (focus)=\"pickerFrom.open()\"\r\n\t\t\t\t\t\t[(ngModel)]=\"data.ReportDate\" readonly>\r\n\t\t\t\t\t<mat-datepicker-toggle matPrefix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #pickerFrom></mat-datepicker>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<hr style=\"margin: 0;\">\r\n\t\t<div class=\" Inner BorderColor ESTB mt-2\">\r\n\t\t\t<label for=\"QR~QID9\" class=\"QuestionText BorderColor\">Clinical\r\n\t\t\t\tHistory</label>\r\n\t\t\t<angular-editor id=\"ClinicalHistory\" [placeholder]=\"'Clinical History'\" [(ngModel)]=\"data.ClinicalHistory\"\r\n\t\t\t\t[config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t\t<div class=\"Inner BorderColor ESTB mt-2\">\r\n\t\t\t<label for=\"QR~QID9\" class=\"QuestionText BorderColor\">Summary of Consultation</label>\r\n\t\t\t<angular-editor id=\"ConsultationSummary\" [placeholder]=\"'General Summary'\"\r\n\t\t\t\t[(ngModel)]=\"data.ConsultationSummary\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t\t<div class=\"Inner BorderColor ESTB mt-3\">\r\n\t\t\t<angular-editor id=\"CaseInterPratation\" [placeholder]=\"'Case Interpretation'\"\r\n\t\t\t\t[(ngModel)]=\"data.CaseInterPratation\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t\t<div class=\"Inner BorderColor ESTB mt-3\">\r\n\t\t\t<angular-editor id=\"CaseConsideration\" [placeholder]=\"'Considerations for Further Testing'\"\r\n\t\t\t\t[(ngModel)]=\"data.CaseConsideration\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t\t<div class=\"Inner BorderColor ESTB mt-3\">\r\n\t\t\t<angular-editor id=\"TreatmentConsideration\" [placeholder]=\"'Treatment Consideration'\"\r\n\t\t\t\t[(ngModel)]=\"data.TreatmentConsideration\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t\t<div class=\"Inner BorderColor ESTB mt-3\">\r\n\t\t\t<angular-editor id=\"ResourcesConsideration\" [placeholder]=\"'Further resources'\"\r\n\t\t\t\t[(ngModel)]=\"data.ResourcesConsideration\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n\r\n<!-- Large modal -->\r\n<button\r\n  id=\"cunsultation-report-btn\"\r\n  class=\"btn mb-2 me-2 clickBtn\"\r\n  (click)=\"openConsultationReportModel(longContent);isCheck = true;\"\r\n>\r\n  Consultation Report\r\n</button>\r\n<ng-template #longContent let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      Zoetis Clinical Consultation Service Report by {{ data?.Speciality }}\r\n    </h4>\r\n    <i\r\n      class=\"fa fa-download\"\r\n      aria-hidden=\"true\"\r\n      (click)=\"generatePdfForConsultationReport()\"\r\n    ></i>\r\n    <i\r\n      class=\"fa fa-expand\"\r\n      aria-hidden=\"true\"\r\n      (click)=\"expandCollpaseModal()\"\r\n    ></i>\r\n    <i\r\n      class=\"fa fa-compress\"\r\n      aria-hidden=\"true\"\r\n      (click)=\"expandCollpaseModal()\"\r\n    ></i>\r\n    <a\r\n      href=\"javascript:void(0)\"\r\n      class=\"btn-close cr-cros-icon\"\r\n      aria-label=\"Close\"\r\n    >\r\n      <i\r\n        class=\"fa fa-times\"\r\n        aria-hidden=\"true\"\r\n        (click)=\"closeModel(); createConsultationReportDetails(true)\"\r\n      ></i>\r\n    </a>\r\n  </div>\r\n  <div class=\"modal-body mx-3\">\r\n    <form\r\n      [formGroup]=\"ResponseForm\"\r\n     \r\n      autocomplete=\"off\"\r\n      class=\"form_space\"\r\n    >\r\n      <div id=\"custom-content\" class=\"pt-0 faq-content pb-4\">\r\n        <div class=\"QuestionBody\">\r\n          <div class=\"lang container-cr\">\r\n            <div class=\"r-head\">Report Language:</div>\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              floatLabel=\"always\"\r\n              class=\"w-100\"\r\n            >\r\n              <mat-select\r\n                autocomplete=\"off\"\r\n                formControlName=\"LanguageId\"\r\n                [(ngModel)]=\"data.LanguageId\"\r\n                [ngModelOptions]=\"{ standalone: true }\"\r\n                id=\"ddlLang\"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"let language of dsLanguage\"\r\n                  [value]=\"language.Id\"\r\n                >\r\n                  {{ language.Name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"datepick container-cr\">\r\n            <div class=\"r-head\">Date:</div>\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              floatLabel=\"always\"\r\n              style=\"width: 100%\"\r\n            >\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"pickerFrom\"\r\n                (focus)=\"pickerFrom.open()\"\r\n                formControlName=\"ReportDate\"\r\n                [(ngModel)]=\"data.ReportDate\"\r\n                [ngModelOptions]=\"{ standalone: true }\"\r\n                readonly\r\n              />\r\n              <mat-datepicker-toggle\r\n                matPrefix\r\n                [for]=\"pickerFrom\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #pickerFrom></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"container-cr d-flex flex-column\">\r\n            <span class=\"r-head\"> Hospital Name: </span>\r\n            <p\r\n              class=\"form-control mb-0\"\r\n              [ngClass]=\"{\r\n                'invalid-comment': hospitalNameFlag\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"input_bg_clr\"\r\n                type=\"text\"\r\n                formControlName=\"HospitalName\"\r\n                [(ngModel)]=\"data.HospitalName\"\r\n                (keyup)=\"txtChange('hn')\"\r\n              />\r\n            </p>\r\n            <!-- <span class=\"min-part\">{{ data.HospitalName }} </span> -->\r\n          </div>\r\n          <div class=\"container-cr d-flex flex-column\">\r\n            <span class=\"r-head\">Veterinarian:</span>\r\n            <p\r\n              class=\"form-control mb-0\"\r\n              [ngClass]=\"{\r\n                'invalid-comment': veterinarianFlag\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"input_bg_clr\"\r\n                type=\"text\"\r\n                [(ngModel)]=\"data.Veterinarian\"\r\n                formControlName=\"Veterinarian\"\r\n                (keyup)=\"txtChange('vn')\"\r\n              />\r\n            </p>\r\n            <!-- <span class=\"min-part\"> {{ data.Veterinarian }} </span> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-start\">\r\n          <div class=\"w-50\">\r\n            <strong class=\"r-head\"> Patient: </strong>\r\n            <span>\r\n              {{ data.PatientName ? data?.PatientName : \"NA\" }} -\r\n              {{ data?.PatientId }}\r\n            </span>\r\n          </div>\r\n          <div class=\"w-50\">\r\n            <strong class=\"r-head\"> Owner: </strong>\r\n            <span> {{ data.OwnerName }} </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"patient-name\">\r\n          <span> {{ data.Species }}, </span>\r\n          <span> {{ data.BreedName }}, </span>\r\n          <span> {{ data.PatientSex }}, </span>\r\n          <span> {{ data.PatientAge }},</span>\r\n          <span> {{ data.PatientWeight }} {{ data.WeightUnit }} </span>\r\n        </div>\r\n\r\n        <div class=\"scroll-modal mt-3\">\r\n          <div class=\"Inner BorderColor ESTB mt-2\">\r\n            <label for=\"QR~QID9\" class=\"QuestionText BorderColor r-head\"\r\n              >Clinical History:</label\r\n            >\r\n            <quill-editor\r\n              id=\"ClinicalHistory\"\r\n              [placeholder]=\"'Clinical History'\"\r\n              [(ngModel)]=\"data.ClinicalHistory\"\r\n              formControlName=\"ClinicalHistory\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n          <div class=\"Inner BorderColor ESTB mt-2\">\r\n            <label for=\"QR~QID9\" class=\"QuestionText BorderColor r-head\"\r\n              >Summary of Consultation:</label\r\n            >\r\n            <quill-editor\r\n              id=\"ConsultationSummary\"\r\n              [placeholder]=\"'General Summary'\"\r\n              [(ngModel)]=\"data.ConsultationSummary\"\r\n              formControlName=\"ConsultationSummary\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n          <div class=\"Inner BorderColor ESTB mt-3\">\r\n            <quill-editor\r\n              id=\"CaseInterPratation\"\r\n              [placeholder]=\"'Case Interpretation'\"\r\n              [(ngModel)]=\"data.CaseInterPratation\"\r\n              formControlName=\"CaseInterPratation\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n          <div class=\"Inner BorderColor ESTB mt-3\">\r\n            <quill-editor\r\n              id=\"CaseConsideration\"\r\n              [placeholder]=\"'Considerations for Further Testing'\"\r\n              [(ngModel)]=\"data.CaseConsideration\"\r\n              formControlName=\"CaseInterPratation\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n          <div class=\"Inner BorderColor ESTB mt-3\">\r\n            <quill-editor\r\n              id=\"TreatmentConsideration\"\r\n              [placeholder]=\"'Treatment Consideration'\"\r\n              [(ngModel)]=\"data.TreatmentConsideration\"\r\n              formControlName=\"TreatmentConsideration\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n          <div class=\"Inner BorderColor ESTB mt-3\">\r\n            <quill-editor\r\n              id=\"ResourcesConsideration\"\r\n              [placeholder]=\"'Further resources'\"\r\n              [(ngModel)]=\"data.ResourcesConsideration\"\r\n              formControlName=\"ResourcesConsideration\"\r\n              [modules]=\"quillConfig\"\r\n            ></quill-editor>\r\n          </div>\r\n\r\n          <div>\r\n            <p class=\"r-head mb-2 mt-3\">\r\n              Attach Consultation Document\r\n              <span class=\"mr-2 text-danger\" style=\"float: right\">\r\n                {{ fileMessage }}\r\n              </span>\r\n            </p>\r\n            <div class=\"attach-part\" appDnd (fileDropped)=\"uploadFiles($event)\">\r\n              <div>\r\n                <div\r\n                  class=\"preview-container\"\r\n                  *ngIf=\"data.ApptDocAttachment?.length > 0\"\r\n                >\r\n                  <div\r\n                    *ngFor=\"\r\n                      let atachment of data.ApptDocAttachment;\r\n                      let i = index\r\n                    \"\r\n                    style=\"position: relative\"\r\n                  >\r\n                    <a\r\n                      href=\"javascript:void(0)\"\r\n                      class=\"attachment-remove-icon removeIcon\"\r\n                      (click)=\"removeAttachment(i)\"\r\n                      >x</a\r\n                    >\r\n                    <div\r\n                      *ngIf=\"\r\n                        atachment.FileType == 'image/png' ||\r\n                          atachment.FileType == 'image/jpeg';\r\n                        else doctype\r\n                      \"\r\n                    >\r\n                      <img\r\n                        width=\"90px\"\r\n                        src=\"{{ atachment.ImageBase64 }}\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <ng-template #doctype>\r\n                      <p>\r\n                        <img\r\n                          width=\"70px\"\r\n                          src=\"../../../../assets/img/pdf1.png\"\r\n                          alt=\"\"\r\n                        />\r\n                      </p>\r\n                    </ng-template>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"row text-center\"\r\n                  *ngIf=\"data.ApptDocAttachment?.length == 0\"\r\n                >\r\n                  <div class=\"col-12\">\r\n                    <img\r\n                      src=\"../../../../assets/img/upload-img-icon.svg\"\r\n                      alt=\"file\" class=\"img-fluid\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <label for=\"inputFile\" class=\"btn btn-primary upload-btn uploadBtn\">\r\n                    Upload File\r\n                  </label>\r\n                  <input\r\n                    multiple\r\n                    type=\"file\"\r\n                    id=\"inputFile\"\r\n                    class=\"d-none\"\r\n                    (change)=\"uploadFiles($event.target.files)\"\r\n                    (click)=\"resetFileInput()\"\r\n                    #fileInput\r\n                  />\r\n                  <p class=\"text-muted text-center imgtext\">\r\n                    <span>Upload File JPG, PNG, PDF</span> <br />\r\n                    <span>Total All Files < 25MB</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"d-flex justify-content-between align-items-start flex-wrap modal-foot\"\r\n          >\r\n            <div class=\"d-flex flex-column newPrt\">\r\n              \r\n            \r\n            <strong class=\"r-head\">Consultant Name:</strong>\r\n            <p\r\n              class=\"form-control\"\r\n              [ngClass]=\"{\r\n                'invalid-comment': consultantNameFlag\r\n              }\"\r\n            >\r\n            \r\n              <input\r\n                class=\"input_bg_clr\"\r\n                type=\"text\"\r\n                [(ngModel)]=\"data.ConsultantName\"\r\n                formControlName=\"ConsultantName\"\r\n                (keyup)=\"txtChange('cn')\"\r\n              />\r\n              <!-- <span class=\"min-part\"> {{ data.ConsultantName }} </span> -->\r\n            </p>\r\n          </div>\r\n            <p class=\"d-flex flex-column newPrt\">\r\n              <strong class=\"r-head\">Qualification and Title:</strong>\r\n              <span\r\n                class=\"form-control\"\r\n                [ngClass]=\"{ 'invalid-comment': consultantDescriptionFlag }\"\r\n              >\r\n                <input\r\n                  class=\"input_bg_clr\"\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"data.ConsultantDescription\"\r\n                  formControlName=\"ConsultantDescription\"\r\n                  (keyup)=\"txtChange('qt')\"\r\n                />\r\n              </span>\r\n            </p>\r\n            <!-- <span class=\"min-part\"> {{data.ConsultantDescription}} </span> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"text-center mb-3 footerprt\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-warning saveandclose\"\r\n            (click)=\"createConsultationReportDetails(true)\"\r\n          >\r\n            Save and Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</ng-template>\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'input[numbers]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('keyup', ['$event'])\r\n  onKeyUp(e: KeyboardEvent) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^[0-9-+ ]{1,15}]*/g, '');\r\n    if (initalValue !== this._el.nativeElement.value) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { OnInit, AfterViewInit, Directive, Input, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[scrollableTable]'\r\n})\r\nexport class ScrollableTableDirective implements OnInit, AfterViewInit {\r\n\r\n  @Input() originData: any;\r\n  @Input() dataSource: any;\r\n  @Input() start: number;\r\n  @Input() limit: number;\r\n  @Input() end: number;\r\n\r\n  constructor(private el: ElementRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.end = this.limit + this.start;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.updateIndex();\r\n  }\r\n\r\n  @HostListener('scroll')\r\n  onScroll() {\r\n    const tableViewHeight = this.el.nativeElement.offsetHeight; // viewport\r\n    const tableScrollHeight = this.el.nativeElement.scrollHeight; // length of all table\r\n    const scrollLocation = this.el.nativeElement.scrollTop; // how far user scrolled\r\n\r\n    // If the user has scrolled within 200px of the bottom, add more data\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (scrollLocation > limit) {\r\n      const data = this.getTableData(this.start, this.end);\r\n      this.dataSource.data = this.dataSource.data.concat(data);\r\n      this.updateIndex();\r\n    }\r\n  }\r\n\r\n  public getTableData(start, end) {\r\n    return this.originData.filter((value, index) => index >= start && index < end);\r\n  }\r\n\r\n  public updateIndex() {\r\n    this.start = this.end;\r\n    this.end = this.limit + this.start;\r\n  }\r\n\r\n}\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDnd]'\r\n})\r\nexport class DndDirective {\r\n\r\n  // constructor() { }\r\n  @HostBinding('class.fileover') fileOver: boolean;\r\n  @Output() fileDropped = new EventEmitter<any>();\r\n\r\n  // Dragover listener\r\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = true;\r\n  }\r\n\r\n  // Dragleave listener\r\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n  }\r\n\r\n  // Drop listener\r\n  @HostListener('drop', ['$event']) public ondrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n    const files = evt.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.fileDropped.emit(files);\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[nospaces]'\r\n})\r\nexport class NospacesDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/\\s/g, '');\r\n    if (initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appNumberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if (initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberDirective } from \"./numbers.directive\"\r\nimport { ScrollableTableDirective } from './scrollable-table.directive';\r\nimport { ZoomDirective } from './zoom.directive';\r\nimport { DisableRightClickDirective } from './disable-right-click.directive';\r\nimport { DndDirective } from './dnd.directive';\r\nimport { NospacesDirective } from './nospaces.directive';\r\nimport { NumberOnlyDirective } from './number-only.directive';\r\n\r\nconst mat_imports = [\r\n  NumberDirective,\r\n  ScrollableTableDirective,\r\n  ZoomDirective,\r\n  DisableRightClickDirective,\r\n  DndDirective,\r\n  NospacesDirective,\r\n  NumberOnlyDirective\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...mat_imports\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [...mat_imports]\r\n})\r\nexport class DirectivesModule { }\r\n","import * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    header: 1\n  }, {\n    header: 2\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    script: 'sub'\n  }, {\n    script: 'super'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], [{\n    direction: 'rtl'\n  }], [{\n    size: ['small', false, 'large', 'huge']\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    font: []\n  }], [{\n    align: []\n  }], ['clean'], ['link', 'image', 'video'] // link and image, video\n  ]\n};\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n  providedIn: 'root',\n  factory: () => ({\n    modules: defaultModules\n  })\n});\nclass QuillService {\n  constructor(injector, config) {\n    this.config = config;\n    this.count = 0;\n    this.document = injector.get(DOCUMENT);\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n  getQuill() {\n    this.count++;\n    if (!this.Quill && this.count === 1) {\n      this.$importPromise = new Promise(async resolve => {\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = this.document.addEventListener;\n        // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n        const quillImport = await import('quill');\n        this.document.addEventListener = maybePatchedAddEventListener;\n        this.Quill = quillImport.default ? quillImport.default : quillImport;\n        // Only register custom options and modules once\n        this.config.customOptions?.forEach(customOption => {\n          const newCustomOption = this.Quill.import(customOption.import);\n          newCustomOption.whitelist = customOption.whitelist;\n          this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n        });\n        this.config.customModules?.forEach(({\n          implementation,\n          path\n        }) => {\n          this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n        });\n        resolve(this.Quill);\n      });\n    }\n    return this.$importPromise;\n  }\n}\nQuillService.ɵfac = function QuillService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\nQuillService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: QuillService,\n  factory: QuillService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.sanitize = false;\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n    this.subscription = null;\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n      return modelValue;\n    };\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'html') {\n        if (this.sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n      return value;\n    };\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n      // only emit changes when there's any listener\n      if (!this.onBlur.observers.length && !this.onFocus.observers.length && !this.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {\n        return;\n      }\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n        this.cd.markForCheck();\n      });\n    };\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n      // only emit changes when there's any listener\n      if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n        return;\n      }\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    };\n    // eslint-disable-next-line max-len\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observers.length) {\n        return;\n      }\n      // only emit changes emitted by user interactions\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n    this.document = injector.get(DOCUMENT);\n  }\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n      return prev;\n    }, []);\n  }\n  async ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const Quill = await this.service.getQuill();\n    this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n    this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n    const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n    const modules = Object.assign({}, this.modules || this.service.config.modules);\n    if (toolbarElem) {\n      modules.toolbar = toolbarElem;\n    } else if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar;\n    }\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...';\n    }\n    if (this.styles) {\n      Object.keys(this.styles).forEach(key => {\n        this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n      });\n    }\n    if (this.classes) {\n      this.addClasses(this.classes);\n    }\n    this.customOptions.forEach(customOption => {\n      const newCustomOption = Quill.import(customOption.import);\n      newCustomOption.whitelist = customOption.whitelist;\n      Quill.register(newCustomOption, true);\n    });\n    this.customModules.forEach(({\n      implementation,\n      path\n    }) => {\n      Quill.register(path, implementation);\n    });\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n    if (!bounds) {\n      bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n    }\n    let debug = this.debug;\n    if (!debug && debug !== false && this.service.config.debug) {\n      debug = this.service.config.debug;\n    }\n    let readOnly = this.readOnly;\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n    }\n    let defaultEmptyValue = this.defaultEmptyValue;\n    if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n      defaultEmptyValue = this.service.config.defaultEmptyValue;\n    }\n    let scrollingContainer = this.scrollingContainer;\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n    }\n    let formats = this.formats;\n    if (!formats && formats === undefined) {\n      formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n    }\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        bounds,\n        debug: debug,\n        formats: formats,\n        modules,\n        placeholder,\n        readOnly,\n        defaultEmptyValue,\n        scrollingContainer: scrollingContainer,\n        strict: this.strict,\n        theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n      });\n      // Set optional link placeholder, Quill has no native API for it so using workaround\n      if (this.linkPlaceholder) {\n        const tooltip = this.quillEditor?.theme?.tooltip;\n        const input = tooltip?.root?.querySelector('input[data-link]');\n        if (input?.dataset) {\n          input.dataset.link = this.linkPlaceholder;\n        }\n      }\n    });\n    if (this.content) {\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'text') {\n        this.quillEditor.setText(this.content, 'silent');\n      } else {\n        const newValue = this.valueSetter(this.quillEditor, this.content);\n        this.quillEditor.setContents(newValue, 'silent');\n      }\n      this.quillEditor.getModule('history').clear();\n    }\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState();\n    this.addQuillEventListeners();\n    // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n    // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n    if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n      return;\n    }\n    // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n    // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n    // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n    requestAnimationFrame(() => {\n      if (this.onValidatorChanged) {\n        this.onValidatorChanged();\n      }\n      this.onEditorCreated.emit(this.quillEditor);\n    });\n  }\n  ngOnDestroy() {\n    this.dispose();\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    }\n    // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n  }\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n    this.content = currentValue;\n    if (!this.quillEditor) {\n      return;\n    }\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n      return;\n    }\n    this.quillEditor.setText('');\n  }\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText();\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n    return valid ? null : err;\n  }\n  addQuillEventListeners() {\n    this.dispose();\n    // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add(\n      // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      }));\n      // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n      this.subscription.add(\n      // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add(\n      // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillEditorBase)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillEditorComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\":host{display:inline-block}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n      styles: [`\n    :host {\n      display: inline-block;\n    }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.sanitize = false;\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillViewHTMLComponent)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillViewHTMLComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [i2.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.sanitize = false;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          if (this.sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n        quillEditor.setContents(content);\n      }\n    };\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n  async ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const Quill = await this.service.getQuill();\n    const modules = Object.assign({}, this.modules || this.service.config.modules);\n    modules.toolbar = false;\n    this.customOptions.forEach(customOption => {\n      const newCustomOption = Quill.import(customOption.import);\n      newCustomOption.whitelist = customOption.whitelist;\n      Quill.register(newCustomOption, true);\n    });\n    this.customModules.forEach(({\n      implementation,\n      path\n    }) => {\n      Quill.register(path, implementation);\n    });\n    let debug = this.debug;\n    if (!debug && debug !== false && this.service.config.debug) {\n      debug = this.service.config.debug;\n    }\n    let formats = this.formats;\n    if (!formats && formats === undefined) {\n      formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n    }\n    const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n    this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n    this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n    this.zone.runOutsideAngular(() => {\n      this.quillEditor = new Quill(this.editorElem, {\n        debug: debug,\n        formats: formats,\n        modules,\n        readOnly: true,\n        strict: this.strict,\n        theme\n      });\n    });\n    this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n    if (this.content) {\n      this.valueSetter(this.quillEditor, this.content);\n    }\n    // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n    // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n    if (!this.onEditorCreated.observers.length) {\n      return;\n    }\n    // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n    // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n    // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n    requestAnimationFrame(() => {\n      this.onEditorCreated.emit(this.quillEditor);\n    });\n  }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nQuillViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function QuillViewComponent_Template(rf, ctx) {},\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n      template: `\n`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n}\nQuillModule.ɵfac = function QuillModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || QuillModule)();\n};\nQuillModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };","import { Input, Directive } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { EnmTestType } from '../../shared/constants/enum';\r\nimport { ImageSliderComponent } from '../../shared/image-slider/image-slider.component';\r\nimport { groupList, staticTests, crystalSortSequence } from '../../shared';\r\ndeclare let $: any;\r\n\r\n@Directive()\r\nexport class ResultDetailsHelper {\r\n\r\n    @Input() selectedDate: string;\r\n    public selectedBackDate: string;\r\n    @Input() selectedAnalysisType: string;\r\n    @Input() labResults: any[] = [];\r\n    public labReports: any[] = [];\r\n    @Input() labReportFilterByAnalysisType: any[] = [];\r\n    public labReportDistinct: any[] = [];\r\n    public labReportFiltered: any[] = [];\r\n    public resultImages: any[] = [];\r\n    public backDates: any[] = [];\r\n    public selectedBackDateIndex = 0;\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    public dataSourceUA = new MatTableDataSource<any>();\r\n    public dataSourceTop: any[] = [];\r\n    public dataSourceVS2: any[] = [];\r\n    public dsImagyst: any[] = [];\r\n    public templateId = 0;\r\n\r\n    // public trendMappingList: any[] = [];\r\n    public isArroNavigation = false;\r\n    public isEimeria = false;\r\n    public isHideTblBackDates = false;\r\n\r\n    // For Template 7\r\n    public groupList = groupList;\r\n    public staticTests = staticTests;\r\n\r\n    // For Template 11\r\n    public crystalSortSequence = crystalSortSequence;\r\n    public groupedData = [\r\n        {\r\n            groupName: 'Blood Cells',\r\n            data: [{ groupName: 'Blood Cells', isGroupBy: false }]\r\n        },\r\n        {\r\n            groupName: 'Bacteria',\r\n            data: [{ groupName: 'Bacteria', isGroupBy: false }]\r\n        },\r\n        {\r\n            groupName: 'Casts',\r\n            data: [{ groupName: 'Casts', isGroupBy: false }]\r\n        },\r\n        {\r\n            groupName: 'Crystals',\r\n            data: [{ groupName: 'Crystals', isGroupBy: false }]\r\n        },\r\n        {\r\n            groupName: 'Epithelial Cells',\r\n            data: [{ groupName: 'Epithelial Cells', isGroupBy: false }]\r\n        },\r\n        {\r\n            groupName: 'Other',\r\n            data: [{ groupName: 'Other', isGroupBy: false }]\r\n        }\r\n    ]\r\n    @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n    noOfDtColToShow: number = 4;\r\n    constructor(\r\n        public patientService,\r\n        public labelService,\r\n        public dataService,\r\n        public modalService) {\r\n\r\n\r\n    }\r\n\r\n    public onSelectDate(date) {\r\n        //if (this.isCVET) return;\r\n        this.patientService.markAs(date, 'READ');\r\n        this.isArroNavigation = false;\r\n        this.selectedDate = date.DateReceived;\r\n        this.selectedBackDate = date.DateReceived;\r\n\r\n        this.dataService.appData.tblTopPatientDetails = date;\r\n        this.dataService.data.next(this.dataService.appData);\r\n\r\n        this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n\r\n        this.selectedDate = this.labReportDistinct[this.selectedBackDateIndex].DateReceived;\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n        // this.dataSource.data.forEach((ele) => {\r\n        //     for (let i = 0; i < 4; i++) {\r\n        //         ele['backDate' + i] = null;\r\n        //         ele['backDate' + i + '_Result'] = null;\r\n        //     }\r\n        // });\r\n        this.filterAndUpdateReport();\r\n    }\r\n\r\n    public prevResult() {\r\n\r\n        this.isArroNavigation = true;\r\n        if (this.labReportDistinct.length <= this.noOfDtColToShow || this.selectedBackDateIndex == 0) return;\r\n        this.selectedBackDateIndex--;\r\n        this.selectedBackDate = this.selectedBackDateIndex == (this.labReportDistinct.length - 1) ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex].DateReceived;\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n        this.filterAndUpdateReport();\r\n    }\r\n\r\n    public nextResult() {\r\n        this.isArroNavigation = true;\r\n        if ((this.backDates.length - this.noOfDtColToShow) <= 0) return;\r\n        this.selectedBackDateIndex++;\r\n        this.selectedBackDate = this.selectedBackDateIndex == 0 ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex].DateReceived;\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n        this.filterAndUpdateReport();\r\n    }\r\n\r\n    public filterAndUpdateReport() {\r\n\r\n        const tblData = this.labReportFilterByAnalysisType.filter(x => (x.Parameter != null && x.Parameter != '') && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n        const labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()];\r\n        this.labReportDistinct = labReportDistinct;\r\n\r\n        const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n\r\n        if (!this.isArroNavigation) {\r\n            if (this.isCVET && this.selectedBackDateIndex != 0) {\r\n                this.selectedBackDateIndex = this.selectedBackDateIndex > 0 ? this.selectedBackDateIndex - 1 : this.selectedBackDateIndex + 1;\r\n                if (this.labReportDistinct.length == this.selectedBackDateIndex) {\r\n                    this.selectedBackDateIndex = 0;\r\n                }\r\n                this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n            } else {\r\n                if (this.labReportDistinct.length <= this.noOfDtColToShow) {\r\n                    this.backDates = this.labReportDistinct;\r\n                } else if ((this.labReportDistinct.length - (this.noOfDtColToShow - 1)) <= this.selectedBackDateIndex) {\r\n                    this.selectedBackDateIndex = this.labReportDistinct.length - this.noOfDtColToShow;\r\n                    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n                } else {\r\n                    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n                }\r\n            }\r\n            console.log(this.backDates, this.selectedBackDateIndex, 'pp', this.labReportDistinct)\r\n        }\r\n\r\n        this.dataSource.data.forEach((ele) => {\r\n            for (let i = 0; i < this.noOfDtColToShow; i++) {\r\n                ele['backDate' + i] = null;\r\n                ele['backDate' + i + '_Result'] = null;\r\n            }\r\n        });\r\n\r\n        this.dataService.appData['backDates'] = this.backDates;\r\n        this.dataService.data.next(this.dataService.appData);\r\n        console.log('backDates ==>', this.backDates);\r\n\r\n        this.backDates = this.backDates.map(ele => {\r\n            ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n            return ele;\r\n        });\r\n\r\n        const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n        this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n\r\n        this.templateId = this.labReportFilterByAnalysisType[0].TemplateId;\r\n        const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n\r\n        this.dataSourceTop = this.labReportFilterByAnalysisType.filter(x => {\r\n            if (x.Parameter && x.DateReceived == this.selectedDate && x.TestTypeId == EnmTestType.Top) {\r\n                x.Result = x.Result ? x.Result.replaceAll('\\n', '<br/>') : '';\r\n                return x;\r\n            }\r\n        });\r\n\r\n        console.log('dataSourceTop =>', this.dataSourceTop, this.backDates);\r\n        // let labReportFilterByAnalysisType = JSON.parse(JSON.stringify(this.labReportFilterByAnalysisType));\r\n        this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n        //if (this.selectedAnalysisType == 'AI Fecal Equine' || this.selectedAnalysisType == 'AI Equine Fecal Egg Count') {\r\n        if (this.templateId != 7) {\r\n            this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n                ele[\"AnalyteDesc\"] = ele[\"AnalyteDesc\"].split(' - ')[0];\r\n                return ele;\r\n            })\r\n        }\r\n\r\n        // =============For Template 7 ================\r\n        if (this.templateId == 7) {\r\n            this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n                ele.Parameter = ele.Parameter.split('_')[0];\r\n                return ele;\r\n            })\r\n        }\r\n        let bandNeutrophil = this.labReportFiltered.find(ele => ele.Parameter == 'BNEU%');\r\n        let segNeutrophil = this.labReportFiltered.find(ele => ele.Parameter == 'SNEU%');\r\n        if (this.templateId == 7 && (bandNeutrophil || segNeutrophil)) {\r\n            this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n                if (ele.Parameter == \"NEU%\") {\r\n                    ele.Result = null;\r\n                    ele.Units = null;\r\n                }\r\n                return ele;\r\n            })\r\n        }\r\n        // =============For Template 7 ================\r\n\r\n        this.labReportFiltered.forEach((element, indx) => {\r\n            this.backDates.forEach((subEle, subIndx) => {\r\n                const nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.Parameter == element.Parameter);\r\n                if (nextDateData != undefined) {\r\n                    element['backDate' + subIndx] = nextDateData;\r\n                    element['backDate' + subIndx + '_Indicator'] = nextDateData[\"Indicator\"];\r\n                    if (this.templateId == 7 && (bandNeutrophil || segNeutrophil) && nextDateData['Parameter'] == \"NEU%\") {\r\n                        element['backDate' + subIndx + '_Result'] = null;\r\n                    } else {\r\n                        element['backDate' + subIndx + '_Result'] = (nextDateData[\"Result\"] && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"--\";\r\n                    }\r\n                    element['backDate' + subIndx + '_RefRange'] = refRengeLabel + \": \" + (nextDateData[\"MinRange\"] != null ? nextDateData[\"MinRange\"] : \"\") + \"-\" + (nextDateData[\"MaxRange\"] != null ? nextDateData[\"MaxRange\"] : \"\");\r\n                    element['backDate' + subIndx + '_TestNote'] = nextDateData[\"TestNote\"];\r\n                    element['backDate' + subIndx + '_Parameter'] = nextDateData[\"Parameter\"];\r\n                    element['backDate' + subIndx + '_ResultDetection'] = nextDateData[\"Result\"] ? nextDateData[\"Result\"] : false;\r\n                    element['backDate' + subIndx + '_ToolTipStr'] = `${this.selectedAnalysisType} \r\n                                                                <br/>${nextDateData[\"DateReceived\"]} \r\n                                                                <br/>Result: ${nextDateData[\"Result\"]}\r\n                                                                ${this.templateId != 7 ? '<br/>Ref Range:' + nextDateData[\"MinRange\"] + '-' + nextDateData[\"MaxRange\"] : ''} \r\n                                                                <br/>Units: ${nextDateData[\"Units\"]}`;\r\n\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        let labReportFiltered: any[];\r\n        switch (this.templateId) {\r\n            case 4:\r\n                this.dataSource = new MatTableDataSource<any>(this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.SATest));\r\n                this.dataSourceUA = new MatTableDataSource<any>(this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.UATest));\r\n                this.dataSourceVS2 = null;\r\n                break;\r\n            case 5:\r\n                this.labReportFiltered = this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.OvaOocysts);\r\n                labReportFiltered = this.labReportFiltered.map(item => {\r\n                    item.AnalyteDesc = item.AnalyteDesc ? item.AnalyteDesc.split('-')[0] : null;\r\n                    return item;\r\n                })\r\n\r\n                if (this.selectedAnalysisType == 'AI Equine Fecal Egg Count') {\r\n                    labReportFiltered = labReportFiltered.filter(x => x.Parameter.toString().toLowerCase().indexOf('_dt') !== -1)\r\n                } else {\r\n                    labReportFiltered = this.labReportFiltered.filter(ele => /_DT/.test(ele.Parameter));\r\n                }\r\n\r\n                this.labReportFiltered = labReportFiltered.map(item => {\r\n                    item.DateReceived = this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc).DateReceived;\r\n\r\n                    const detection = this.labReportFiltered.find(e => this.getFirstWord(e.AnalyteDesc) == this.getFirstWord(item.AnalyteDesc) && e.Parameter && /_DT/.test(e.Parameter))\r\n                    item.ResultDetection = detection ? detection.Result : 'false'\r\n\r\n                    const rCount = this.labReportFiltered.find(e => this.getFirstWord(e.AnalyteDesc) == this.getFirstWord(item.AnalyteDesc) && e.Parameter && /_CT/.test(e.Parameter))\r\n                    item.ResultCount = rCount ? rCount.Result : '0';\r\n\r\n                    const epg = this.labReportFiltered.find(e => this.getFirstWord(e.AnalyteDesc) == this.getFirstWord(item.AnalyteDesc) && e.Parameter && /_EPG/.test(e.Parameter))\r\n                    item.ResultEPG = epg ? epg.Result : '0';\r\n\r\n                    return item;\r\n                })\r\n\r\n                // Removing duplicates\r\n                this.labReportFiltered = [...new Map(this.labReportFiltered.map((item) => [item[\"AnalyteDesc\"], item])).values()];\r\n\r\n                this.checkEimeria();\r\n                this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n                break;\r\n            case 7:\r\n                // this.labReportFiltered = this.labReportFiltered.filter(x => !/_DT/.test(x.Parameter));\r\n                this.labReportFiltered = this.labReportFiltered.filter(x => !/detected/.test(x[\"AnalyteDesc\"]));\r\n                this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n                    if (/- count/.test(ele[\"AnalyteDesc\"])) {\r\n                        ele[\"AnalyteDesc\"] = ele[\"AnalyteDesc\"].split(' - count')[0];\r\n                    }\r\n                    if (/count/.test(ele[\"AnalyteDesc\"])) {\r\n                        ele[\"AnalyteDesc\"] = ele[\"AnalyteDesc\"].split(' count')[0];\r\n                    }\r\n                    return ele;\r\n                })\r\n\r\n                this.labReportFiltered = this.labReportFiltered.filter(x => !/detected/.test(x[\"AnalyteDesc\"]));\r\n                this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n                    if (ele.Parameter == 'NEU_CT') {\r\n                        ele.Parameter = 'NEU'\r\n                    }\r\n                    if (ele.Parameter == 'NEU%_CT') {\r\n                        ele.Parameter = 'NEU%'\r\n                    }\r\n                    return ele;\r\n                })\r\n                this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n\r\n                    if (ele.AnalyteDesc == 'WBC Count (CBC)' || ele.AnalyteDesc == 'Platelets') {\r\n                        ele.isHeader = true\r\n                    }\r\n                    if (!isNaN(ele.Result) && !(ele.Result === 'ture' || ele.Result === 'false' || ele.Result === 'Yes' || ele.Result === 'No' || /%/.test(ele.Parameter))) {\r\n                        ele.isGraphView = true;\r\n                    } else {\r\n                        ele.isGraphView = false;\r\n                    }\r\n                    if ((ele.TestGroupName == 'NEU' || ele.TestGroupName == 'NEU%') && ele.TestGroupName != ele.Parameter) {\r\n                        ele.isChildTest = true;\r\n                    }\r\n                    // else if (ele.Parameter == 'BNEU%' || ele.Parameter == 'SNEU%') {\r\n                    //     ele.isChildTest = true;\r\n                    // }\r\n                    // else {\r\n                    //     ele.isChildTest = false;\r\n                    // }\r\n                    return ele;\r\n                })\r\n\r\n                let WBCPIndex, RBCIndex;\r\n                this.labReportFiltered.forEach((ele, index) => {\r\n                    if (!WBCPIndex && this.groupList.WBCPercent.includes(ele.AnalyteDesc)) {\r\n                        WBCPIndex = index;\r\n                    }\r\n                    if (!RBCIndex && this.groupList.RBC.includes(ele.AnalyteDesc)) {\r\n                        RBCIndex = index;\r\n                    }\r\n                })\r\n\r\n                // WBCPIndex = this.labReportFiltered.findIndex(ele => ele?.Parameter == 'NEU%');\r\n                // RBCIndex = this.labReportFiltered.findIndex(ele => ele?.Parameter == 'RBC');\r\n                if (WBCPIndex) {\r\n                    this.labReportFiltered.splice(WBCPIndex, 0, this.staticTests[0]);\r\n                }\r\n                if (RBCIndex) {\r\n                    this.labReportFiltered.splice((RBCIndex + 1), 0, this.staticTests[1]);\r\n                }\r\n\r\n                this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n                break;\r\n            case 11: {\r\n                this.labReportFiltered = this.labReportFiltered.filter(x => !/_CT/.test(x.Parameter));\r\n                const groupedData = JSON.parse(JSON.stringify(this.groupedData));\r\n                let filteredData = []\r\n                groupedData.forEach((ele) => {\r\n                    const tempData = [];\r\n                    this.labReportFiltered.forEach(subEle => {\r\n                        const analyteDesc = subEle.AnalyteDesc ? subEle.AnalyteDesc.replace('semi quantitative', '') : null;\r\n                        if (analyteDesc) {\r\n                            if (ele.groupName == subEle.TestGroupName) {\r\n                                ele.data[0].isGroupBy = true;\r\n                                tempData.push({\r\n                                    ...subEle, ...{\r\n                                        AnalyteDesc: analyteDesc,\r\n                                        DateReceived: this.labReportFiltered.find(e => e.AnalyteDesc == subEle.AnalyteDesc).DateReceived,\r\n                                        ResultCount: (this.labReportFiltered.find(e => e.AnalyteDesc == subEle.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_ct') >= 0)) != undefined ? this.labReportFiltered.find(e => e.AnalyteDesc == subEle.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_ct') >= 0)).Result : 'false'),\r\n                                        semiQuantitative: (this.labReportFiltered.find(e => e.AnalyteDesc == subEle.AnalyteDesc && e.Paramete && (e.Parameter.indexOf('SQ') >= 0)) ? this.labReportFiltered.find(e => e.AnalyteDesc == subEle.AnalyteDesc && e.Parameter && (e.Parameter.indexOf('SQ') >= 0)).Result : 'false'),\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                    if (tempData[0]?.TestGroupName == 'Blood Cells') {\r\n                        tempData.sort((a, b) => a.AnalyteDesc.localeCompare(b.AnalyteDesc));\r\n                    }\r\n                    let staticList = this.crystalSortSequence;\r\n                    if (tempData[0]?.TestGroupName == 'Crystals') {\r\n                        // tempData.sort((a, b) => b.AnalyteDesc.localeCompare(a.AnalyteDesc)); // old\r\n                        tempData.sort((a, b) => {\r\n                            let aDesc = a.AnalyteDesc?.trim().toLowerCase();\r\n                            let bDesc = b.AnalyteDesc?.trim().toLowerCase();\r\n\r\n                            let aIndex = staticList.findIndex(item => item.toLowerCase() === aDesc);\r\n                            let bIndex = staticList.findIndex(item => item.toLowerCase() === bDesc);\r\n\r\n                            if (aIndex === -1) aIndex = staticList.length;\r\n                            if (bIndex === -1) bIndex = staticList.length;\r\n\r\n                            return aIndex - bIndex;\r\n                        });\r\n                    }\r\n                    tempData.forEach(item => {\r\n                        ele.data.push(item);\r\n                    })\r\n                    filteredData = [...filteredData, ...ele.data];\r\n                })\r\n                filteredData = filteredData.map(ele => {\r\n                    if (ele.AnalyteDesc) {\r\n                        // ele.AnalyteDesc = ele.AnalyteDesc.replace('-', '');\r\n                        if (ele.AnalyteDesc?.trim() == 'RBC Rollup') {\r\n                            ele.AnalyteDesc = 'RBC';\r\n                        }\r\n                        if (ele.AnalyteDesc?.trim() == 'WBC Rollup') {\r\n                            ele.AnalyteDesc = 'WBC';\r\n                        }\r\n                    }\r\n                    return ele;\r\n                })\r\n                // debugger\r\n                this.labReportFiltered = filteredData.filter(ele => {\r\n                    if (ele.groupName && ele.isGroupBy) {\r\n                        return ele;\r\n                    } else if (!ele.groupName) {\r\n                        return ele;\r\n                    }\r\n                });\r\n                this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n                console.log('===> groupedData <===>', groupedData);\r\n                console.log('this.labReportFiltered ==>', this.labReportFiltered);\r\n\r\n                break;\r\n            }\r\n            default:\r\n                if (this.templateId == 1) {\r\n                    this.dataSourceVS2 = this.labReportFilterByAnalysisType.filter(x => x.TestTypeId == EnmTestType.VS2Test);\r\n                }\r\n                else {\r\n                    this.dataSourceVS2 = null;\r\n                }\r\n                this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n        }\r\n        console.log('labReportDistinct ==>', this.labReportDistinct);\r\n        console.log('labReportFiltered ==>', this.labReportFiltered);\r\n\r\n        this.getImageData();\r\n    }\r\n\r\n    public getImageData() {\r\n        const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n        this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.AnalysisTypeId == analysisTypeId && x.Parameter != null && x.Parameter.indexOf('_IMG') != -1);\r\n        // console.log( 'dsImagyst ==>', this.dsImagyst);\r\n        const filterDataImage = JSON.parse(JSON.stringify(this.dsImagyst));\r\n        this.patientService.imgData = [];\r\n\r\n        if (this.dsImagyst.length) {\r\n            this.patientService.imgData = Array.from(new Set(filterDataImage.map(x => x.Parameter.split(\"_\")[0]))).map((key: any) => {\r\n\r\n                let groupName = filterDataImage.find(e => e.AnalyteDesc && new RegExp(key, 'i').test(e.Parameter));\r\n                groupName = groupName ? groupName?.['AnalyteDesc'].split('Image')[0].trim() : key;\r\n                if (new RegExp('image', 'i').test(groupName)) {\r\n                    groupName = groupName.split('image')[0].trim();\r\n                }\r\n\r\n                return {\r\n                    'GroupName': groupName, // (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc) != undefined ? (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc)['AnalyteDesc']).toLowerCase().split('image')[0].trim() : key),\r\n                    'Images': filterDataImage.map(ele => {\r\n                        const isIsImageTwice = /image image/.test(ele.AnalyteDesc.toLowerCase());\r\n                        if (isIsImageTwice) {\r\n                            ele.AnalyteDesc = ele.AnalyteDesc.replace('image', '');\r\n                        }\r\n                        return ele;\r\n                    }).filter(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc && e.Result),\r\n                };\r\n            });\r\n            // }\r\n        }\r\n        console.log('patientService.imgData =>', this.patientService.imgData);\r\n    }\r\n\r\n    public viewImageSlider(imageList, imgIndex) {\r\n        const modalRef = this.modalService.open(ImageSliderComponent, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            scrollable: false\r\n        });\r\n        modalRef.componentInstance.imageList = imageList;\r\n        modalRef.componentInstance.currentIndex = imgIndex;\r\n        modalRef.componentInstance.patientDetails = this.patientService.patientDetails;\r\n    }\r\n\r\n    public showToolTip(event, rowIndex, colIndex) {\r\n        $('#bkotooltip' + rowIndex + colIndex).show()\r\n    }\r\n\r\n    public hideTooltip(rowIndex, colIndex) {\r\n        $('#bkotooltip' + rowIndex + colIndex).hide()\r\n    }\r\n\r\n    public getDatasourceTopValue(AnalyteDescValue) {\r\n        let value = this.dataSourceTop.filter(ele => {\r\n            if (ele.AnalyteDesc == AnalyteDescValue) {\r\n                return ele;\r\n            }\r\n        })\r\n        value = value.length > 0 ? value[0].Result : '';\r\n        return value;\r\n    }\r\n\r\n    public openTestDefinition(element) {\r\n        this.patientService.showDescription(this.labelService.dsAnaysisResultsScreen.TestDefinition, element, this.labelService.dsAnaysisResultsScreen.Close);\r\n    }\r\n\r\n    // === used for template-5 ===\r\n    public checkEimeria() {\r\n        const eimeria: any[] = this.labReportFiltered.filter(ele => ele.DateReceived == this.selectedDate && ele.DisclaimerText && ele.AnalyteDesc == 'Eimeria' && ele.ResultCount > 0);\r\n        this.isEimeria = (eimeria && eimeria.length > 0) ? true : false;\r\n    }\r\n\r\n    public getFirstWord(str) {\r\n        const spaceIndex = str.indexOf(' ');\r\n        return spaceIndex === -1 ? str : str.substring(0, spaceIndex);\r\n    }\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, TemplateRef, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService, CommonService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\nimport { TestUnitConversion } from '../../../models';\r\nimport {\r\n  // RefLab_HM5_iStat_Trendables,\r\n  RefLab_HM5_iStat_TrendingTestList,\r\n  HM5HMPLUS_ToConvert,\r\n  notTrendatble,\r\n  testToshowTrendingHelpLink,\r\n  ImageSliderComponent\r\n  // trendable, \r\n  // iStatTrends,\r\n  // vs2trends\r\n} from '../../../shared';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\ndeclare let $: any;\r\ndeclare let CanvasJS;\r\n\r\n@Component({\r\n  selector: 'app-template1',\r\n  templateUrl: './template1.component.html',\r\n  styleUrls: ['./template1.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class Template1Component extends ResultDetailsHelper implements OnInit, OnChanges {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public isTestNoteVisible: boolean;\r\n  public isCytologyComplex: boolean;\r\n  public testNoteList: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['Test', 'selectedDate', 'Ref_Range', 'Graph', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  public VS2Test: any[] = [];\r\n\r\n  public dataSourceGraphPoint1: any[] = [];\r\n  public dataSourceGraphPoint2: any[] = [];\r\n  public sliderMax = 0;\r\n  public graphAxisYTitle = \"\";\r\n\r\n  public expandedElement: any;\r\n  public allRowsExpanded = false;\r\n  public source: string;\r\n\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n\r\n  public isSeemore = true;\r\n\r\n  public trendingTests: any = [];\r\n  // public trendable: any; // For RefLab, HM5, iStat\r\n  public reportTrendableAll: string[] = []; // cross trending\r\n  public notTrendatble: any[] = [];\r\n  public testTrendMapping: any[] = [];\r\n  public isChartVisible = true;\r\n  public chartOpenedTestList: string[] = [];\r\n  public openedChatForPdfList: any[] = [];\r\n  public testToshowTrendingHelpLink: any[];\r\n\r\n  public isArroNavigation = false;\r\n  public dateDropdown: any[] = [];\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  @Output() changedDate = new EventEmitter;\r\n  public testUnitConversionList: TestUnitConversion[];\r\n\r\n  // public originalBackDates: any[] = [];\r\n  // public prevBackDatesLenght = 0;\r\n  @ViewChild('testWarningPop', { static: true }) testWarningPop: TemplateRef<HTMLElement>;\r\n  public selectedLangCode: string;\r\n  zdxsHelpBaseUrl: string;\r\n  noOfDtColToShow: number = 4;\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal,\r\n    public commonService: CommonService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    private dialog: MatDialog) {\r\n    super(patientService, labelService, dataService, modalService);\r\n    this.zdxsHelpBaseUrl = environment.zdxsHelpBaseUrl;\r\n    this.testTrendMapping = this.dataService.appData.testTrendMapping;\r\n    this.trendingTests = RefLab_HM5_iStat_TrendingTestList;\r\n    this.testToshowTrendingHelpLink = testToshowTrendingHelpLink;\r\n    // this.trendable = this.dataService.appData.reportTrendMapping; // RefLab_HM5_iStat_Trendables;\r\n    this.reportTrendableAll = this.dataService.appData.reportTrendableAll;\r\n    this.notTrendatble = notTrendatble;\r\n\r\n    this.testUnitConversionList = this.dataService.appData['testUnitConversionList'];\r\n    console.log('testUnitConversionList ==>', this.testUnitConversionList);\r\n    const langDetails = this.dataService.appData?.userDropDownList?.LanguageDetails;\r\n    let langCode = localStorage?.langCode ? localStorage?.langCode : \"US-EN\";  // 'en-us';\r\n    this.selectedLangCode = langDetails?.find((ele) => {\r\n      return ele.GigyaLanguageCode.find(x => x.GigyaLangCode == langCode)\r\n    })?.HelpLangCode || langCode\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n    if (changes.selectedDate && changes.selectedDate.currentValue != changes.selectedDate.previousValue) {\r\n      this.openedChatForPdfList = [];\r\n      this.chartOpenedTestList = [];\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.isArroNavigation = false;\r\n\r\n    //===| Removing duplicates |===\r\n    // const parameters = this.labReportFilterByAnalysisType.map(({ Parameter }) => Parameter);\r\n\r\n    // this.labReportFilterByAnalysisType = this.labReportFilterByAnalysisType.filter(({ Parameter }, index) => !parameters.includes(Parameter, index + 1));\r\n\r\n    //===| Removing without Result |===\r\n    this.labReportFilterByAnalysisType = this.labReportFilterByAnalysisType.filter(ele => ele.Result);\r\n\r\n    // ===temp 9 and 10 end\r\n    this.testNoteList = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    // const selectedNote = this.testNoteList.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    // let tblData = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    const tblData = this.labReportFilterByAnalysisType.filter(x => !(x.Parameter && /IMG/.test(x.Parameter)) && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n    // if (this.dataService.appData.isTrendable || this.dataService.appData.VS2Tred) {\r\n    //   this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceivedAnalysisType\"], item])).values()];\r\n    // } else {\r\n    //   this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    // }\r\n\r\n    if (this.dataService.appData.isTrendable || this.dataService.appData.VS2Tred) {\r\n      this.labReportDistinct = Object.values(\r\n        tblData.reduce((acc, item) => {\r\n          if (!acc[item.DateReceived]) {\r\n            acc[item.DateReceivedAnalysisType] = item; // Store first occurrence\r\n          }\r\n          return acc;\r\n        }, {})\r\n      );\r\n    } else {\r\n      this.labReportDistinct = Object.values(\r\n        tblData.reduce((acc, item) => {\r\n          if (!acc[item.DateReceived]) {\r\n            acc[item.DateReceived] = item; // Store first occurrence\r\n          }\r\n          return acc;\r\n        }, {})\r\n      );\r\n    }\r\n\r\n    console.log('labReportDistinct ==>', this.labReportDistinct);\r\n\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // write something code\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    // debugger\r\n    // Warning message...\r\n    let warningTopList = this.labResults['TestWarning'].filter(ele => {\r\n      return ele.DateReceived == this.selectedDate;\r\n    })\r\n    this.dataService.appData.warningTopList = warningTopList;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    // Warning message...\r\n\r\n    const labReportFilterByAnalysisType = JSON.parse(JSON.stringify(this.labReportFilterByAnalysisType));\r\n    this.labReportFiltered = labReportFilterByAnalysisType.filter(x => x.Parameter && x.DateReceived == this.selectedDate && !(x.Parameter && /IMG/.test(x.Parameter)) && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    if (this.dataService.appData.tblTopPatientDetails) {\r\n      const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n      // Sprint 6 fix pdf fix\r\n      this.labReportDistinct = this.labReportDistinct.map(ele => {\r\n        ele.selected = (ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId) ? true : false;\r\n        return ele;\r\n      });\r\n      const distinctSelectedObj = this.labReportDistinct.find(ele => ele.selected);\r\n      // console.log(distinctSelectedObj)\r\n      const distinctSelectedDateInded = this.labReportDistinct.findIndex(ele => ele.selected);\r\n\r\n      this.VS2Test = this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.VS2Test);\r\n      if (this.VS2Test.length > 4) {\r\n        this.VS2Test = this.VS2Test.slice(0, 3);\r\n      }\r\n      if (this.VS2Test) {\r\n        this.dataService.appData['VS2Test'] = this.VS2Test;\r\n        this.dataService.data.next(this.dataService.appData);\r\n\r\n        this.labReportFiltered = this.labReportFiltered.filter(x => x.TestTypeId != EnmTestType.VS2Test && x.AnalysisTypeId == analysisTypeId);\r\n      }\r\n\r\n      // if (!this.isArroNavigation) {\r\n      //   this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n      //   if (this.labReportDistinct.length <= 4) {\r\n      //     this.backDates = this.labReportDistinct;\r\n      //   } else if ((this.labReportDistinct.length - 3) <= this.selectedBackDateIndex) {\r\n      //     this.selectedBackDateIndex = this.labReportDistinct.length - 4;\r\n      //     this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      //   } else {\r\n      //     this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      //   }\r\n      // }\r\n      // this.originalBackDates = JSON.parse(JSON.stringify(this.backDates));\r\n      // console.log('labreportDistinct', this.labReportDistinct)\r\n      // console.log('originalBackDates', this.originalBackDates);\r\n      // this.dataService.appData['backDates'] = !this.isTestNoteVisible ? this.backDates : [];\r\n      // this.dataService.data.next(this.dataService.appData);\r\n      // this.backDates = this.backDates.map(ele => {\r\n      //   ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n      //   return ele;\r\n      // });\r\n\r\n      // Sprint 6 fix pdf fix end\r\n\r\n      // let resultLabel = this.labelService.dsAnaysisResultsScreen.Results;\r\n      // let refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n      // let refUnitsLabel = this.labelService.dsAnaysisResultsScreen.Units;\r\n\r\n      const analyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'].toString().toLowerCase().replace(' ', '');\r\n\r\n      this.labReportFiltered.forEach((element) => {\r\n\r\n        this.labReportDistinct.forEach((subEle, subIndx) => {\r\n          const nextDateData: any = this.getNextdate(element, subEle);\r\n          if (nextDateData != undefined) {\r\n            element['distinctDate' + subIndx] = true;\r\n          } else {\r\n            element['distinctDate' + subIndx] = false;\r\n          }\r\n        });\r\n\r\n        // Handling trend View icon and chart view\r\n        const isResulValNumber = (!isNaN(parseFloat(element.Result)) && !isNaN(parseFloat(element.MinRange)) && !isNaN(parseFloat(element.MaxRange)));\r\n        const notTrendatble = this.notTrendatble.find(ele => new RegExp(ele).test(element.Parameter));\r\n        if (this.labReportDistinct.length > 1 && (isResulValNumber || /[<>]\\d/.test(element.Result) && element.MaxRange && element.MinRange) && !(/%/.test(element.Parameter) || notTrendatble || this.isCPLAnalysisTypeName(element.AnalysisTypeName))) {\r\n          element.isChartVisible = true;\r\n        } else {\r\n          element.isChartVisible = false;\r\n        }\r\n        // Handling trend View icon and chart view end\r\n        const params: any = null;\r\n        // ===use for pdf print old===\r\n        this.dataService.appData['backDateToPrint'].forEach((subEle, subIndx) => {\r\n          const nextDateData: any = this.getNextdate(element, subEle);\r\n          if (nextDateData != undefined) {\r\n            let resultVal = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"\";\r\n            if (this.dataService.appData.isTrendable && isNaN(resultVal) == false) {\r\n              if (analyzer == 'reflab' && nextDateData['AnalyzerName'] == 'HM5' && params) {\r\n                if (params.unitCal) {\r\n                  resultVal = resultVal * params.unitCal;\r\n                }\r\n              } else if (analyzer == 'hm5' && params && nextDateData['PanelTestId'] == params.reflab) {\r\n                if (params.unitCal) {\r\n                  resultVal = resultVal / params.unitCal;\r\n                }\r\n              }\r\n              if (analyzer == 'hmplus' && nextDateData['AnalyzerName'] == 'HM5' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n                resultVal = resultVal * 1000;\r\n              }\r\n              if (analyzer == 'hm5' && nextDateData['AnalyzerName'] == 'HMPLUS' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n                resultVal = resultVal / 1000;\r\n              }\r\n            }\r\n            element['isToPrintColumn' + subIndx] = true;\r\n          } else {\r\n            element['isToPrintColumn' + subIndx] = false;\r\n          }\r\n        })\r\n        // ===use for pdf print end old===\r\n\r\n        // =========use for display on web=========\r\n        this.backDates.forEach((subEle, subIndx) => {\r\n          const nextDateData: any = this.getNextdate(element, subEle);\r\n          if (nextDateData != undefined) {\r\n            element['backDate' + subIndx] = true;\r\n          } else {\r\n            element['backDate' + subIndx] = false;\r\n          }\r\n        });\r\n        return element;\r\n      });\r\n\r\n      // handling duplicate tests name\r\n      const uniqLabReportFiltered = [];\r\n      const map = new Map();\r\n      for (const item of this.labReportFiltered) {\r\n        if (!map.has(item.Parameter)) {\r\n          map.set(item.Parameter, true);\r\n          uniqLabReportFiltered.push(item);\r\n        }\r\n      }\r\n      this.labReportFiltered = uniqLabReportFiltered;\r\n      // handling duplicate tests name end\r\n\r\n      // Handling blank row in table if TestNote is blanck\r\n      this.labReportFiltered = this.labReportFiltered.filter(ele => {\r\n        if ((ele.Result == 'SEE DETAILS' || ele.Result == 'See Note')) {\r\n          if (ele.TestNote) {\r\n            return ele;\r\n          }\r\n          // else if (ele.PanelTestName) {\r\n          //   ele.TestNote = ele.PanelTestName;\r\n          //   return ele;\r\n          // }\r\n        } else {\r\n          return ele;\r\n        }\r\n      })\r\n      // Handling blank row in table if TestNote is blanck end\r\n\r\n      // Handling GGT && > && < test\r\n      this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n        if (ele.MinRange == null && ele.MaxRange != null) {\r\n          // ele.MinRange = '<';\r\n          ele.MinRangeToDisplay = '<'\r\n        }\r\n        if (ele.MinRange != null && ele.MaxRange == null) {\r\n          // ele.MaxRange = '>';\r\n          ele.MaxRangeToDisplay = '>'\r\n        }\r\n        if (ele.Parameter === 'GGT' && ele.TestResultFlag === 'CH') {\r\n          ele.Indicator = 'High'; //MOOSE-5365\r\n        }\r\n        else if (ele.AnalyzerName == 'Ref Lab' && ele.Parameter == 'GGT' && (ele.MaxRange == null || ele.MinRange == null)) {\r\n          ele.Indicator = '__'; // changing its value for hide it \r\n        }\r\n        return ele;\r\n      })\r\n      // Handling  GGT && > && < test end\r\n      console.log(' labReportDistinct ==>', this.labReportDistinct);\r\n      this.labReportDistinct = this.reCreateBackDates('distinctDate', this.labReportDistinct);\r\n\r\n      console.log(' reCreated labReportDistinct ==>', this.labReportDistinct);\r\n\r\n      if (!this.isArroNavigation) {\r\n        this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n        // if (this.isCVET) {\r\n        //   this.backDates = this.generateCVETBackdates()\r\n        // } else {\r\n\r\n        if (this.isCVET && this.selectedBackDateIndex != 0) {\r\n          this.selectedBackDateIndex = this.selectedBackDateIndex > 0 ? this.selectedBackDateIndex - 1 : this.selectedBackDateIndex + 1;\r\n          if (this.labReportDistinct.length == this.selectedBackDateIndex) {\r\n            this.selectedBackDateIndex = 0;\r\n          }\r\n          this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n        } else {\r\n          if (this.labReportDistinct.length <= this.noOfDtColToShow) {\r\n            this.backDates = this.labReportDistinct;\r\n          } else if ((this.labReportDistinct.length - (this.noOfDtColToShow - 1)) <= this.selectedBackDateIndex) {\r\n            this.selectedBackDateIndex = this.labReportDistinct.length - this.noOfDtColToShow;\r\n            this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n          } else {\r\n            this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n          }\r\n        }\r\n        console.log(this.backDates, this.selectedBackDateIndex, 'pp', this.labReportDistinct)\r\n\r\n\r\n        //}\r\n      }\r\n\r\n      if (this.isArroNavigation) {\r\n        this.openedChatForPdfList = [];\r\n      }\r\n\r\n      this.dataService.appData['backDates'] = !this.isTestNoteVisible ? this.backDates : [];\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.backDates = this.backDates.map(ele => {\r\n        ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n        return ele;\r\n      });\r\n\r\n      // Recalled    \r\n      // this.backDates = this.reCreateBackDates('backDates', this.backDates);\r\n      // console.log('ReCreated backDates =>', this.backDates);      \r\n      // if (this.backDates.length < 4 && this.labReportDistinct.length > this.backDates.length) {\r\n      //   this.prevResult();\r\n      // }\r\n\r\n      // if ((this.backDates.length < 4 && this.backDates.length < this.originalBackDates.length) && this.originalBackDates.length > 0) {\r\n      //   this.prevResult();\r\n      //   // this.backDatesAavilable = JSON.parse(JSON.stringify(this.backDates));\r\n      // }\r\n\r\n      this.isHideTblBackDates = this.backDates.length <= 1 ? true : false;\r\n      if (this.isHideTblBackDates && !this.isCVET) {\r\n        this.displayedColumns = ['Test', 'selectedDate', 'Ref_Range', 'Graph'];\r\n      }\r\n      else if (this.isCVET) {\r\n        this.displayedColumns = ['Test', 'selectedDate', 'Ref_Range', 'Graph', 'prevDate1'];\r\n      }\r\n      else {\r\n        this.displayedColumns = ['Test', 'selectedDate', 'Ref_Range', 'Graph', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n      }\r\n\r\n      // this.dataService.appData['backDateToPrint'] = this.reCreateBackDates('backDateToPrint', this.dataService.appData['backDateToPrint']);\r\n\r\n      const firstFourBackDates = this.backDates.slice(0, 4);\r\n      // console.log(firstFourBackDates)\r\n      const selectedDateIdxForPdf = firstFourBackDates.findIndex(v => v.DateReceivedAnalysisType == distinctSelectedObj?.DateReceivedAnalysisType);\r\n      let backDateToPrint;\r\n      if (firstFourBackDates.filter(x => x.selected).length) {\r\n        backDateToPrint = firstFourBackDates;\r\n      } else {\r\n        backDateToPrint = distinctSelectedDateInded > 2 ? this.labReportDistinct.slice(distinctSelectedDateInded - 3, distinctSelectedDateInded + 1) : this.labReportDistinct.slice(0, distinctSelectedDateInded + 1);\r\n      }\r\n      backDateToPrint.splice(selectedDateIdxForPdf, 1)\r\n      backDateToPrint.unshift({})\r\n      this.dataService.appData.backDateToPrint = backDateToPrint;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      // console.log('backDateToPrint =>', backDateToPrint);\r\n\r\n      this.getTableData();\r\n      // Recalled End\r\n\r\n      // const WBCPercentList = ['BAS%', 'EOS%', 'NEU%', 'MON%', 'LYM%', 'BAS'];\r\n      this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n        // if (WBCPercentList.includes(ele.Parameter)) {\r\n        if (ele.MinRange == 0 && ele.MaxRange == 0) {\r\n          ele.MinRange = ele.MinRange == 0 ? null : ele.MinRange;\r\n          ele.MaxRange = ele.MaxRange == 0 ? null : ele.MaxRange;\r\n        }\r\n        if (ele.MinRange == null && ele.MaxRange == null) {\r\n          ele.GraphResult = null;\r\n        }\r\n        return ele;\r\n      })\r\n\r\n      this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n\r\n      this.dataService.appData['labReportFiltered'] = this.labReportFiltered;\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      this.getImageData();\r\n    } else {\r\n      this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n    }\r\n    console.log('labReportFiltered ==>', this.labReportFiltered);\r\n  }\r\n\r\n  public generateCVETBackdates() {\r\n    const current = this.labReportDistinct[this.selectedBackDateIndex];\r\n    return typeof this.labReportDistinct[this.selectedBackDateIndex - 1] == 'undefined' ?\r\n      (typeof this.labReportDistinct[this.selectedBackDateIndex + 1] == 'undefined' ?\r\n        [] :\r\n        [this.labReportDistinct[this.selectedBackDateIndex + 1]]) :\r\n      ([this.labReportDistinct[this.selectedBackDateIndex - 1]]);\r\n  }\r\n\r\n  public getNextdate(element, subEle) {\r\n    // debugger\r\n    let params: any = null;\r\n    let nextDateData: any = null;\r\n    const analyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'].toString().toLowerCase().replace(' ', '');\r\n    if (subEle) {\r\n      if (this.dataService.appData.isTrendable) {\r\n        this.testTrendMapping = this.dataService.appData.testTrendMapping;\r\n        // console.log('testTrendMapping list=>', this.testTrendMapping);\r\n\r\n        params = this.getParams(analyzer, element);\r\n        // params = null;        \r\n        // if (analyzer == 'reflab') {\r\n        //   params = this.trendingTests.find(x => x.reflab == element.PanelTestId);\r\n        // } else if (analyzer == 'hm5') {\r\n        //   params = this.trendingTests.find(x => x.hm5 == element.Parameter);\r\n        // } else if (analyzer == 'hmplus') {\r\n        //   params = this.trendingTests.find(x => x.hmplus == element.Parameter);\r\n        // } else if (analyzer == 'vetscan-opticell') {\r\n        //   params = this.trendingTests.find(x => x['vetscan-opticell'] == element.Parameter);\r\n        // } else if (analyzer == 'i-stat') {\r\n        //   params = this.trendingTests.find(x => x.istat == element.Parameter);\r\n        // } else if (analyzer == 'vetscanvs2') {\r\n        //   params = this.trendingTests.find(x => x.vetscanvs2 == element.Parameter);\r\n        // }\r\n        if (params) {\r\n          nextDateData = this.labReportFilterByAnalysisType.find(x => {\r\n            if (x.DateReceived == subEle.DateReceived && x.AnalysisTypeId == subEle.AnalysisTypeId\r\n              && (x.Parameter == params.hm5 || x.Parameter == params.hmplus || x.Parameter == params['vetscan-opticell'] || x.Parameter == params.istat || x.PanelTestId == params.reflab || x.Parameter == params.vetscanvs2)) {\r\n              return x;\r\n            }\r\n          });\r\n          // nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.AnalysisTypeId == subEle.AnalysisTypeId && prm.TrendingAnalyzerList.includes(subEle.AnalysisTypeName));\r\n        } else {\r\n          nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.AnalysisTypeId == subEle.AnalysisTypeId && x.Parameter == element.Parameter);\r\n        }\r\n      } else if (this.dataService.appData.VS2Tred) {\r\n        nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceivedAnalysisType == subEle.DateReceivedAnalysisType && x.Parameter == element.Parameter);\r\n      }\r\n      else {\r\n        nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.Parameter == element.Parameter);\r\n      }\r\n      // handling blank colum for See Note and SEE DETAILS data\r\n      if (nextDateData) {\r\n        if (!(nextDateData[\"Result\"] == 'See Note' || nextDateData[\"Result\"] == 'SEE DETAILS')) {\r\n          return nextDateData;\r\n        } else if ((nextDateData[\"Result\"] == 'See Note' || nextDateData[\"Result\"] == 'SEE DETAILS') && (nextDateData.TestNote != '')) {\r\n          return nextDateData;\r\n        }\r\n      }\r\n      // return nextDateData;\r\n    }\r\n\r\n  }\r\n\r\n  public reCreateBackDates(type, bkdt) {\r\n    const backDates = bkdt.filter((ele, i) => {\r\n      let isBackDateFound: any[] = [...new Set(this.labReportFiltered.map(item => item['distinctDate' + i]))];\r\n      // let isBackDateFound = [];\r\n      // if (type == 'distinctDate') {\r\n      //   isBackDateFound = [...new Set(this.labReportFiltered.map(item => item['distinctDate' + i]))];\r\n      // }\r\n      // if (type == 'backDates') {\r\n      //   isBackDateFound = [...new Set(this.labReportFiltered.map(item => item['backDate' + i]))];\r\n      // }\r\n      // if (type == 'backDateToPrint') {\r\n      //   isBackDateFound = [...new Set(this.labReportFiltered.map(item => item['isToPrintColumn' + i]))];\r\n      // }\r\n      return isBackDateFound.includes(true);\r\n    })\r\n    return backDates;\r\n  }\r\n\r\n  public getTableData() {\r\n    // debugger\r\n    const resultLabel = this.labelService.dsAnaysisResultsScreen.Results;\r\n    const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n    const refUnitsLabel = this.labelService.dsAnaysisResultsScreen.Units;\r\n\r\n    const analyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'].toString().toLowerCase().replace(' ', '');\r\n    let params: any = null;\r\n\r\n    this.labReportFiltered.forEach((element) => {\r\n      if (element.Units) {\r\n        element.Units = element.Units.replaceAll(\"\", \"\")\r\n      }\r\n\r\n      params = this.getParams(analyzer, element);\r\n      // if (analyzer == 'reflab') {\r\n      //   params = this.trendingTests.find(x => x.reflab == element.PanelTestId);\r\n      // } else if (analyzer == 'hm5') {\r\n      //   params = this.trendingTests.find(x => x.hm5 == element.Parameter);\r\n      // } else if (analyzer == 'hmplus') {\r\n      //   params = this.trendingTests.find(x => x.hmplus == element.Parameter);\r\n      // } else if (analyzer == 'vetscan-opticell') {\r\n      //   params = this.trendingTests.find(x => x['vetscan-opticell'] == element.Parameter);\r\n      // } else if (analyzer == 'i-stat') {\r\n      //   params = this.trendingTests.find(x => x.istat == element.Parameter);\r\n      // } else if (analyzer == 'vetscanvs2') {\r\n      //   params = this.trendingTests.find(x => x.vetscanvs2 == element.Parameter);\r\n      // }\r\n\r\n      // Handling trend View icon and chart view\r\n      const isResulValNumber = (!isNaN(parseFloat(element.Result)) && !isNaN(parseFloat(element.MinRange)) && !isNaN(parseFloat(element.MaxRange)));\r\n      const notTrendatble = this.notTrendatble.find(ele => new RegExp(ele).test(element.Parameter));\r\n      if (this.labReportDistinct.length > 1 && (isResulValNumber || /[<>]\\d/.test(element.Result) && element.MaxRange && element.MinRange) && !(/%/.test(element.Parameter) || notTrendatble || this.isCPLAnalysisTypeName(element.AnalysisTypeName))) {\r\n        element.isChartVisible = true;\r\n      } else {\r\n        element.isChartVisible = false;\r\n      }\r\n      // Handling trend View icon and chart view end\r\n      this.dataService.appData['backDateToPrint'].forEach((subEle, subIndx) => {\r\n        const nextDateData: any = this.getNextdate(element, subEle);\r\n        let showUnitWarning = false;\r\n        if (nextDateData != undefined) {\r\n          let resultVal = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"\";\r\n          if (this.dataService.appData.isTrendable && (/[<>]/.test(resultVal) || !isNaN(resultVal))) { //  isNaN(resultVal) == false\r\n            if (analyzer == 'reflab' && nextDateData['AnalyzerName'] == 'HM5' && params) {\r\n              if (params.unitCal) {\r\n                resultVal = resultVal * params.unitCal;\r\n              }\r\n            } else if (analyzer == 'hm5' && params && nextDateData['PanelTestId'] == params.reflab) {\r\n              if (params.unitCal) {\r\n                resultVal = resultVal / params.unitCal;\r\n              }\r\n            }\r\n            if (analyzer == 'hmplus' && nextDateData['AnalyzerName'] == 'HM5' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n              resultVal = resultVal * 1000;\r\n            }\r\n            if (analyzer == 'hm5' && nextDateData['AnalyzerName'] == 'HMPLUS' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n              resultVal = resultVal / 1000;\r\n            }\r\n\r\n            let unitIrregular = this.isUnitIrregular(element, subEle, nextDateData, resultVal);\r\n            showUnitWarning = unitIrregular?.isUnitIrregular;\r\n            resultVal = unitIrregular?.resultVal ? unitIrregular.resultVal : resultVal;\r\n\r\n            // if (!subEle.selected && nextDateData.Units && element.Units != nextDateData.Units) {\r\n            //   const currentUnit = element.Units.toLowerCase();\r\n            //   const nextUnit = nextDateData.Units.toLowerCase();\r\n            //   let findMatchingForNext = this.testUnitConversionList.find(x => (x.TrendTestUnit.toLowerCase() == currentUnit) && (x.Analyte && element.Parameter == x.Analyte) && (x.TestUnit.toLowerCase() == nextUnit));\r\n\r\n            //   if (!findMatchingForNext) {\r\n            //     findMatchingForNext = this.testUnitConversionList.find(x => (x.TrendTestUnit.toLowerCase() == currentUnit) && (x.TestUnit.toLowerCase() == nextUnit));\r\n            //   }\r\n\r\n            //   if (findMatchingForNext) {\r\n            //     const number = findMatchingForNext.ConversionFormula.slice(1)\r\n            //     const operator = findMatchingForNext.ConversionFormula.substring(0, 1)\r\n            //     // deepcode ignore ImproperCodeSanitization: <Values used here are sanitized>\r\n            //     resultVal = eval(resultVal + operator + number).toFixed(2)\r\n            //   } else if (this.testUnitConversionList.find(x => x.TrendTestUnit.toLowerCase() == nextUnit)) {\r\n            //     showUnitWarning = true;\r\n            //   }\r\n            // }\r\n          }\r\n          element['isToPrintColumn' + subIndx] = true;\r\n          element['backDateToPrint' + subIndx] = {\r\n            AnalyteDesc: nextDateData.AnalyteDesc,\r\n            AnalyzerDisplayName: nextDateData.AnalyzerDisplayName,\r\n            AnalyzerName: nextDateData.AnalyzerName,\r\n            CatId: nextDateData.CatId,\r\n            DateReceived: nextDateData.DateReceived,\r\n            GraphResult: nextDateData.GraphResult,\r\n            Indicator: nextDateData.Indicator,\r\n            MaxRange: nextDateData.MaxRange,\r\n            MinRange: nextDateData.MinRange,\r\n            PanelNote: nextDateData.PanelNote,\r\n            PanelTestId: nextDateData.PanelTestId,\r\n            Parameter: nextDateData.Parameter,\r\n            PrelimText: nextDateData.PrelimText,\r\n            Result: resultVal,\r\n            Section: nextDateData.Section,\r\n            SelectedDate: null,\r\n            TestNote: nextDateData.TestNote,\r\n            TestTypeName: nextDateData.TestTypeName,\r\n            TestTypeId: nextDateData.TestTypeId,\r\n            Units: nextDateData.Units,\r\n            showUnitWarning: showUnitWarning,\r\n          };\r\n        } else {\r\n          element['isToPrintColumn' + subIndx] = false;\r\n        }\r\n      })\r\n\r\n      // ===use for pdf print end old===\r\n\r\n      // =========use for display on web=========\r\n\r\n      this.backDates.forEach((subEle, subIndx) => {\r\n        const nextDateData: any = this.getNextdate(element, subEle);\r\n        // if(element.Parameter == 'Hemoglobin (HGB)' && subIndx === 1){\r\n        //   nextDateData.Units = 'ug/dL1'\r\n        // }\r\n        let _showUnitWarning = false;\r\n        if (nextDateData != undefined) {\r\n          let resultVal = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"\";\r\n          const toolTipResultVal = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"\";\r\n          let MinRange: any = nextDateData[\"MinRange\"] ? `${nextDateData[\"MinRange\"]}` : 0;\r\n          let MaxRange: any = nextDateData[\"MaxRange\"] ? `${nextDateData[\"MaxRange\"]}` : 0;\r\n\r\n          if (this.dataService.appData.isTrendable && (/[<>]/.test(resultVal) || !isNaN(resultVal))) { // isNaN(resultVal) == false) {\r\n            if (analyzer == 'reflab' && nextDateData['AnalyzerName'] == 'HM5' && params) {\r\n              if (params.unitCal) {\r\n                resultVal = resultVal * params.unitCal;\r\n                MinRange = MinRange * params.unitCal;\r\n                MaxRange = MaxRange * params.unitCal;\r\n              }\r\n            } else if (analyzer == 'hm5' && params && nextDateData['PanelTestId'] == params.reflab) {\r\n              if (params.unitCal) {\r\n                resultVal = resultVal / params.unitCal;\r\n                MinRange = MinRange / params.unitCal;\r\n                MaxRange = MaxRange / params.unitCal;\r\n              }\r\n            }\r\n\r\n            if (analyzer == 'hmplus' && nextDateData['AnalyzerName'] == 'HM5' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n              resultVal = resultVal * 1000;\r\n              // MinRange = MinRange * 1000;\r\n              // MaxRange = MaxRange * 1000;\r\n            }\r\n            if (analyzer == 'hm5' && nextDateData['AnalyzerName'] == 'HMPLUS' && HM5HMPLUS_ToConvert.includes(nextDateData['Parameter'])) {\r\n              resultVal = resultVal / 1000;\r\n              // MinRange = MinRange / 1000;\r\n              // MaxRange = MaxRange / 1000;\r\n            }\r\n\r\n            let unitIrregular = this.isUnitIrregular(element, subEle, nextDateData, resultVal);\r\n            _showUnitWarning = unitIrregular?.isUnitIrregular;\r\n            resultVal = unitIrregular?.resultVal ? unitIrregular.resultVal : resultVal;\r\n\r\n            // if (!subEle.selected && nextDateData.Units && element.Units != nextDateData.Units) {\r\n            //   const currentUnit = element.Units.toLowerCase();\r\n            //   const nextUnit = nextDateData.Units.toLowerCase();\r\n            //   let findMatchingForNext = this.testUnitConversionList.find(x => (x.TrendTestUnit.toLowerCase() == currentUnit) && (x.Analyte && element.Parameter == x.Analyte) && (x.TestUnit.toLowerCase() == nextUnit));\r\n\r\n            //   if (!findMatchingForNext) {\r\n            //     findMatchingForNext = this.testUnitConversionList.find(x => (x.TrendTestUnit.toLowerCase() == currentUnit) && (x.TestUnit.toLowerCase() == nextUnit));\r\n            //   }\r\n\r\n            //   if (findMatchingForNext) {\r\n            //     const number = findMatchingForNext.ConversionFormula.slice(1)\r\n            //     const operator = findMatchingForNext.ConversionFormula.substring(0, 1)\r\n            //     // deepcode ignore ImproperCodeSanitization: <Values used here are sanitized>\r\n            //     resultVal = eval(resultVal + operator + number).toFixed(2)\r\n            //   } else if (this.testUnitConversionList.find(x => x.TrendTestUnit.toLowerCase() == nextUnit)) {\r\n            //     _showUnitWarning = true;\r\n            //   }\r\n            // }\r\n          }\r\n\r\n          let isNoteIcon = false;\r\n          if (!(nextDateData[\"Result\"] == 'SEE DETAILS' || nextDateData[\"Result\"] == 'See Note' || /[A-Z]/i.test(nextDateData[\"Result\"]))\r\n            || /[$&+,:;=\\\\\\\\?@#|/'<>.^*()%!-]/.test(nextDateData[\"Result\"])) {\r\n            isNoteIcon = false;\r\n          } else {\r\n            isNoteIcon = true;\r\n          }\r\n\r\n          //if(!subEle.selected && nextDateData.Units){\r\n\r\n          element['backDate' + subIndx] = true;\r\n          nextDateData['CalculatedResult'] = resultVal;\r\n          element['backDate' + subIndx + '_data'] = nextDateData;\r\n          element['backDate' + subIndx + '_AnalyzerName'] = nextDateData[\"AnalyzerName\"]; // temporary use\r\n          element['backDate' + subIndx + '_AnalysisTypeName'] = nextDateData[\"AnalysisTypeName\"]; // temporary use\r\n          element['backDate' + subIndx + '_isNoteIcon'] = isNoteIcon;\r\n          element['backDate' + subIndx + '_Indicator'] = nextDateData[\"Indicator\"];\r\n          element['backDate' + subIndx + '_RengeLabe'] = refRengeLabel + \": \" + (nextDateData[\"MinRange\"] != null ? nextDateData[\"MinRange\"] : \"\") + \"-\" + (nextDateData[\"MaxRange\"] != null ? nextDateData[\"MaxRange\"] : \"\");\r\n          element['backDate' + subIndx + '_Result'] = (nextDateData[\"Result\"] == 'SEE DETAILS' || nextDateData[\"Result\"] == 'See Note') ?\r\n            `${nextDateData[\"TestNote\"]}` : resultVal;\r\n\r\n          element['backDate' + subIndx + '_TestNote'] = nextDateData[\"TestNote\"];\r\n          element['backDate' + subIndx + '_Parameter'] = nextDateData[\"Parameter\"];\r\n          element['backDate' + subIndx + '_ToolTipStr'] = `${nextDateData['AnalyzerName'].toLowerCase() == 'hm5' ? nextDateData['AnalyzerDisplayName'] : nextDateData['AnalysisTypeName']} <br/>\r\n                                                          ${nextDateData[\"DateReceived\"]} <br/>\r\n                                                          ${(nextDateData[\"Result\"] == 'SEE DETAILS' || nextDateData[\"Result\"] == 'See Note') ? nextDateData[\"TestNote\"]\r\n              : resultLabel + ':' + toolTipResultVal\r\n              + ((nextDateData[\"MinRange\"] || nextDateData[\"MaxRange\"]) ? '<br/>' + element['backDate' + subIndx + '_RengeLabe'] : '')\r\n              + '<br/> ' + refUnitsLabel + ':' + nextDateData[\"Units\"]}`;\r\n\r\n          element['backDate' + subIndx + '_DateReceived'] = nextDateData[\"DateReceived\"];\r\n          element['backDate' + subIndx + '_DateReceivedAnalysisType'] = nextDateData[\"DateReceivedAnalysisType\"];\r\n          element['backDate' + subIndx + '_showUnitWarning'] = _showUnitWarning;\r\n\r\n        } else {\r\n          element['backDate' + subIndx] = false;\r\n        }\r\n      });\r\n      return element;\r\n    });\r\n  }\r\n\r\n  public getParams(analyzer, element) {\r\n    let params = null;\r\n    if (analyzer == 'reflab') {\r\n      params = this.trendingTests.find(x => x.reflab == element.PanelTestId);\r\n    } else if (analyzer == 'hm5') {\r\n      params = this.trendingTests.find(x => x.hm5 == element.Parameter);\r\n    } else if (analyzer == 'hmplus') {\r\n      params = this.trendingTests.find(x => x.hmplus == element.Parameter);\r\n    } else if (analyzer == 'vetscan-opticell') {\r\n      params = this.trendingTests.find(x => x['vetscan-opticell'] == element.Parameter);\r\n    } else if (analyzer == 'i-stat') {\r\n      params = this.trendingTests.find(x => x.istat == element.Parameter);\r\n    } else if (analyzer == 'vetscanvs2') {\r\n      params = this.trendingTests.find(x => x.vetscanvs2 == element.Parameter);\r\n    }\r\n    return params\r\n  }\r\n\r\n  // CHANGED TICKET MOOSE-6655 / ORIGINAL TICKET MOOSE-5760\r\n  // public isUnitIrregular(element, subEle, nextDateData, resultVal) {\r\n\r\n  //   const currentUnit = element.Units.toLowerCase();\r\n  //   const nextUnit = nextDateData.Units.toLowerCase();\r\n  //   let minRange = nextDateData['MinRange'];\r\n  //   let maxRange = nextDateData['MaxRange'];\r\n  //   debugger\r\n  //   if (!subEle.selected && nextDateData.Units && currentUnit !== nextUnit) {\r\n  //     let findMatchingForNext = this.testUnitConversionList.find(x =>\r\n  //       x.TrendTestUnit.toLowerCase() === currentUnit &&\r\n  //       x.Analyte === element.Parameter &&\r\n  //       x.TestUnit.toLowerCase() === nextUnit\r\n  //     );\r\n\r\n  //     if (!findMatchingForNext) {\r\n  //       findMatchingForNext = this.testUnitConversionList.find(x =>\r\n  //         x.TrendTestUnit.toLowerCase() === currentUnit &&\r\n  //         x.TestUnit.toLowerCase() === nextUnit\r\n  //       );\r\n  //     }\r\n\r\n  //     if (findMatchingForNext) {\r\n  //       const number = parseFloat(findMatchingForNext.ConversionFormula.slice(1));\r\n  //       const operator = findMatchingForNext.ConversionFormula[0];\r\n\r\n  //       resultVal = operator === '*' ? (parseFloat(resultVal) * number).toFixed(2) :\r\n  //         operator === '/' ? (parseFloat(resultVal) / number).toFixed(2) : resultVal;\r\n\r\n  //       minRange = operator === '*' ? (parseFloat(minRange) * number).toFixed(2) :\r\n  //         operator === '/' ? (parseFloat(minRange) / number).toFixed(2) : minRange;\r\n\r\n  //       maxRange = operator === '*' ? (parseFloat(maxRange) * number).toFixed(2) :\r\n  //         operator === '/' ? (parseFloat(maxRange) / number).toFixed(2) : maxRange;\r\n\r\n  //     } else if (this.testUnitConversionList.some(x => x.TrendTestUnit.toLowerCase() === nextUnit)) {\r\n  //       return {\r\n  //         isUnitIrregular: true,\r\n  //         resultVal: resultVal,\r\n  //         minRange,\r\n  //         maxRange\r\n  //       };\r\n  //     } else {\r\n  //       return {\r\n  //         isUnitIrregular: false,\r\n  //         resultVal: resultVal,\r\n  //         minRange,\r\n  //         maxRange\r\n  //       };\r\n  //     }\r\n  //   }\r\n\r\n  //   return {\r\n  //     isUnitIrregular: false,\r\n  //     resultVal: resultVal,\r\n  //     minRange,\r\n  //     maxRange\r\n  //   };\r\n  // }\r\n\r\n  public isUnitIrregular(\r\n    element: any,\r\n    subEle: any,\r\n    nextDateData: any,\r\n    resultVal: any\r\n  ): { isUnitIrregular: boolean; resultVal: any; minRange: any; maxRange: any } {\r\n\r\n    // Function to check if a string contains any digit\r\n    const containsDigit = (value: any): boolean => /\\d/.test(resultVal);\r\n\r\n    // If resultVal has no digits, return immediately\r\n    if (!containsDigit(resultVal)) {\r\n      return { isUnitIrregular: false, resultVal, minRange: nextDateData['MinRange'], maxRange: nextDateData['MaxRange'] };\r\n    }\r\n\r\n    const currentUnit: string = element.Units.toLowerCase();\r\n    const nextUnit: string = nextDateData.Units.toLowerCase();\r\n    let minRange: number | string = nextDateData['MinRange'];\r\n    let maxRange: number | string = nextDateData['MaxRange'];\r\n\r\n    // Function to extract numeric value while preserving special characters\r\n    const extractNumericValue = (value: any): { specialChar: string; numericVal: number } => {\r\n      if (typeof value === 'string') {\r\n        const specialChar = value.match(/^[^0-9.]*/)?.[0] || ''; // Extract special character (e.g., \">\", \"<\")\r\n        const numericPart = value.replace(/[^0-9.]/g, ''); // Remove non-numeric characters\r\n        return { specialChar, numericVal: numericPart ? parseFloat(numericPart) : NaN };\r\n      }\r\n      return { specialChar: '', numericVal: parseFloat(value) };\r\n    };\r\n\r\n    if (!subEle.selected && nextDateData.Units && currentUnit !== nextUnit) {\r\n      let findMatchingForNext = this.testUnitConversionList.find(x =>\r\n        x.TrendTestUnit.toLowerCase() === currentUnit &&\r\n        x.Analyte === element.Parameter &&\r\n        x.TestUnit.toLowerCase() === nextUnit\r\n      );\r\n\r\n      if (!findMatchingForNext) {\r\n        findMatchingForNext = this.testUnitConversionList.find(x =>\r\n          x.TrendTestUnit.toLowerCase() === currentUnit &&\r\n          x.TestUnit.toLowerCase() === nextUnit\r\n        );\r\n      }\r\n\r\n      if (findMatchingForNext) {\r\n        const number: number = parseFloat(findMatchingForNext.ConversionFormula.slice(1));\r\n        const operator: string = findMatchingForNext.ConversionFormula[0];\r\n\r\n        // Extract numeric value and special character\r\n        const { specialChar: resultChar, numericVal: parsedResultVal } = extractNumericValue(resultVal);\r\n        const { specialChar: minChar, numericVal: parsedMinRange } = extractNumericValue(minRange);\r\n        const { specialChar: maxChar, numericVal: parsedMaxRange } = extractNumericValue(maxRange);\r\n\r\n        if (!isNaN(parsedResultVal)) {\r\n          resultVal = `${resultChar}${(operator === '*' ? parsedResultVal * number :\r\n            operator === '/' ? parsedResultVal / number : parsedResultVal).toFixed(2)}`;\r\n        }\r\n\r\n        if (!isNaN(parsedMinRange)) {\r\n          minRange = `${minChar}${(operator === '*' ? parsedMinRange * number :\r\n            operator === '/' ? parsedMinRange / number : parsedMinRange).toFixed(2)}`;\r\n        }\r\n\r\n        if (!isNaN(parsedMaxRange)) {\r\n          maxRange = `${maxChar}${(operator === '*' ? parsedMaxRange * number :\r\n            operator === '/' ? parsedMaxRange / number : parsedMaxRange).toFixed(2)}`;\r\n        }\r\n      } else if (this.testUnitConversionList.some(x => x.TrendTestUnit.toLowerCase() === nextUnit)) {\r\n        return { isUnitIrregular: true, resultVal, minRange, maxRange };\r\n      } else {\r\n        return { isUnitIrregular: false, resultVal, minRange, maxRange };\r\n      }\r\n    }\r\n\r\n    return { isUnitIrregular: false, resultVal, minRange, maxRange };\r\n  }\r\n\r\n  public getImageData() {\r\n    const selectedAnalyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'];\r\n    // Image label not to show if image is not available for only HMPLUS\r\n    if (selectedAnalyzer == 'HMPLUS') {\r\n      this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.TestTypeName == 'ImageList' && x.Result && /data:image/.test(x.Result));\r\n    } else {\r\n      this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter && /IMG/.test(x.Parameter));\r\n    }\r\n    // images not to show for 'cPL Rapid Test'\r\n    // this.dsImagyst = this.dsImagyst.filter(ele => !(ele?.AnalysisTypeName.toLowerCase() == 'cpl rapid test'));\r\n    this.dsImagyst = this.dsImagyst.filter(ele => !this.isCPLAnalysisTypeName(ele.AnalysisTypeName));\r\n\r\n    this.dataService.appData['dsImagyst'] = this.dsImagyst;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    const filterDataImage = JSON.parse(JSON.stringify(this.dsImagyst));\r\n\r\n    this.patientService.imgData = [];\r\n    if (this.dsImagyst.length) {\r\n      this.dataService.appData.tblTopPatientDetails['AnalyzerName'].toString().toLowerCase().replace(' ', '');\r\n      this.patientService.imgData = Array.from(new Set(filterDataImage.map(x => x.Parameter.split(\"_\")[0]))).map(key => {\r\n        return {\r\n          // 'GroupName': (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null) != undefined ? (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null)['AnalyteDesc']).split('image')[0].trim() : key),\r\n          'GroupName': key,\r\n          'Images': filterDataImage.filter(e => e.AnalyteDesc && e.Result && e.Parameter.indexOf(key) == 0),\r\n        };\r\n      });\r\n    }\r\n\r\n    // console.log('filterDataImage =>', filterDataImage);\r\n    console.log('patientService.imgData =>', this.patientService.imgData);\r\n\r\n  }\r\n\r\n  isCPLAnalysisTypeName(analysisTypeName: string | undefined | null): boolean {\r\n    return !!analysisTypeName?.match(/^cpl( rapid test)?$/i);\r\n  }\r\n\r\n  public onSelectDate(date) {\r\n    //if (this.isCVET) return;\r\n    this.patientService.markAs(date, 'READ');\r\n    this.isArroNavigation = false;\r\n    this.dataService.pageState['chartOpenedTestList'] = '';\r\n    this.selectedDate = date.DateReceived; // date;\r\n    this.changedDate.emit(this.selectedDate);\r\n    this.selectedBackDate = date.DateReceived; // date;\r\n    // let tableTopPatientDetails = this.labReportFilterByAnalysisType.filter(ele => ele.DateReceived == date.DateReceived && ele.AnalysisTypeName == date.AnalysisTypeName);\r\n    // this.dataService.appData.tblTopPatientDetails = tableTopPatientDetails.length > 0 ? tableTopPatientDetails[0] : null;\r\n    this.dataService.appData.tblTopPatientDetails = date;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.selectedDate = this.labReportDistinct[this.selectedBackDateIndex].DateReceived;\r\n    // if (this.isCVET && this.selectedBackDateIndex != 0) {\r\n    //   this.selectedBackDateIndex = this.selectedBackDateIndex > 0 ? this.selectedBackDateIndex - 1 : this.selectedBackDateIndex + 1;\r\n    //   if (this.labReportDistinct.length == this.selectedBackDateIndex) {\r\n    //     this.selectedBackDateIndex = 0;\r\n    //   }\r\n    // }\r\n\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.dataSource.data.forEach((ele) => {\r\n      ele.backDate0_Result = null;\r\n      ele.backDate1_Result = null;\r\n      ele.backDate2_Result = null;\r\n    });\r\n    // console.log('backDates ************', this.backDates);\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  public prevResult() {\r\n    this.isArroNavigation = true;\r\n    if (this.selectedBackDateIndex == 0) {\r\n      console.log('END');\r\n      return;\r\n    }\r\n\r\n    this.selectedBackDateIndex--; //= this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    this.selectedBackDate = this.selectedBackDateIndex == (this.labReportDistinct.length - 1) ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex + 1].DateReceived;\r\n    //this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n\r\n    // this.prevBackDatesLenght = this.backDates.length;\r\n\r\n    // if (this.isCVET && this.selectedBackDateIndex != 0) {\r\n    //   this.selectedBackDateIndex = this.selectedBackDateIndex > 0 ? this.selectedBackDateIndex - 1 : this.selectedBackDateIndex + 1;\r\n    //   if (this.labReportDistinct.length == this.selectedBackDateIndex) {\r\n    //     this.selectedBackDateIndex = 0;\r\n    //   }\r\n    // }\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    console.log(this.backDates, this.selectedBackDateIndex, 'pp', this.labReportDistinct)\r\n\r\n    this.dataSource.data.forEach((ele) => {\r\n      ele.backDate0_Result = null;\r\n      ele.backDate1_Result = null;\r\n      ele.backDate2_Result = null;\r\n      ele.backDate3_Result = null;\r\n    });\r\n    // console.log('backDates ************', this.backDates);\r\n    this.filterAndUpdateReport();\r\n    // while (this.selectedBackDateIndex != 0 && this.prevBackDatesLenght >= 4 && this.prevBackDatesLenght == this.backDates.length) {\r\n    //   this.prevResult();\r\n    // }\r\n\r\n  }\r\n\r\n  public nextResult() {\r\n    this.isArroNavigation = true;\r\n    if ((this.backDates.length - this.noOfDtColToShow) <= 0) return;\r\n\r\n    this.selectedBackDateIndex++; // = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    this.selectedBackDate = this.selectedBackDateIndex == 0 ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex - 1].DateReceived;\r\n    //this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n\r\n    // this.prevBackDatesLenght = this.backDates.length;\r\n    // if (this.isCVET && this.selectedBackDateIndex != 0) {\r\n    //   this.selectedBackDateIndex = this.selectedBackDateIndex > 1 ? this.selectedBackDateIndex - 1 : this.selectedBackDateIndex + 1;\r\n    //   if (this.labReportDistinct.length == this.selectedBackDateIndex) {\r\n    //     this.selectedBackDateIndex = 0;\r\n    //   }\r\n    // }\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    console.log(this.backDates, this.selectedBackDateIndex, 'pp', this.labReportDistinct)\r\n    this.dataSource.data.forEach((ele) => {\r\n      ele.backDate0_Result = null;\r\n      ele.backDate1_Result = null;\r\n      ele.backDate2_Result = null;\r\n      ele.backDate3_Result = null;\r\n    });\r\n    // console.log('backDates ************', this.backDates);\r\n    this.filterAndUpdateReport();\r\n    // while (this.prevBackDatesLenght >= 4 && this.prevBackDatesLenght == this.backDates.length) {\r\n    //   this.nextResult();\r\n    // }\r\n  }\r\n\r\n  public selectedRow(rowIndex, row) {\r\n    // debugger\r\n    if (row.isChartVisible) {\r\n      let openedChatForPdf = { TestType: null, TestHelpFlag: false };\r\n      let testToShowInfo = this.testToshowTrendingHelpLink.find(ele => row.PanelTestId == ele.PanelCode || ele.PanelName == row.Parameter);\r\n\r\n      this.labReports.some(ele => {\r\n        this.reportTrendableAll = this.dataService.appData.reportTrendableAll;\r\n\r\n        if (ele.TemplateId == 1) {\r\n          if (testToShowInfo && testToShowInfo.PanelCode == ele.PanelTestId) {\r\n            if (this.dataService.appData.isTrendable && !(this.reportTrendableAll.includes(ele.AnalysisTypeName?.toLowerCase()) || this.reportTrendableAll.includes(ele.AnalysisTypeId?.toLowerCase()))) {\r\n              row.showZdxHelpInfo = true;\r\n              openedChatForPdf.TestType = row.Parameter;\r\n              openedChatForPdf.TestHelpFlag = true;\r\n            }\r\n            if (!this.dataService.appData.isTrendable && !(this.reportTrendableAll.includes(ele.AnalysisTypeName?.toLowerCase()) || this.reportTrendableAll.includes(ele.AnalysisTypeId?.toLowerCase()))) {\r\n              row.showZdxHelpInfo = true;\r\n              openedChatForPdf.TestType = row.Parameter;\r\n              openedChatForPdf.TestHelpFlag = true;\r\n            }\r\n            return true;\r\n          } else {\r\n            row.showZdxHelpInfo = false;\r\n            openedChatForPdf.TestType = row.Parameter;\r\n            openedChatForPdf.TestHelpFlag = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      let isTestChartOpen = this.openedChatForPdfList.find(ele => ele.TestType == row.Parameter);\r\n      if (isTestChartOpen) {\r\n        this.openedChatForPdfList = this.openedChatForPdfList.filter(ele => ele.TestType != row.Parameter);\r\n      } else {\r\n        this.openedChatForPdfList.push(openedChatForPdf);\r\n      }\r\n      this.dataService.pageState['testTypeGraph'] = this.openedChatForPdfList;\r\n      // Code for show responsible trending info in chart end\r\n\r\n      if (this.chartOpenedTestList.includes(row.Parameter)) {\r\n        this.chartOpenedTestList = this.chartOpenedTestList.filter((item) => {\r\n          return item !== row.Parameter;\r\n        })\r\n      } else {\r\n        this.chartOpenedTestList.push(row.Parameter);\r\n      }\r\n      const chartOpenedTestList = this.chartOpenedTestList.join(',');\r\n      this.dataService.pageState['chartOpenedTestList'] = chartOpenedTestList;\r\n      this.dataService.page.next(this.dataService.appData);\r\n\r\n\r\n      const tblRow = document.getElementById('row' + rowIndex);\r\n      if (row.isChartVisible && (tblRow.style.display == '' || tblRow.style.display === \"none\")) {\r\n        tblRow.style.display = \"block\";\r\n        this.bindGraphDataPoints(this.labReportFilterByAnalysisType, row);\r\n      } else {\r\n        tblRow.style.display = \"none\";\r\n      }\r\n\r\n      if (this.expandedElement === row) {\r\n        this.expandedElement = null;\r\n        this.patientService.selectedTestName = \"\";\r\n      }\r\n      else {\r\n        this.expandedElement = row;\r\n      }\r\n    }\r\n  }\r\n\r\n  public bindGraphDataPoints(filterData, row) {\r\n    // debugger\r\n    this.dataSourceGraphPoint1 = [];\r\n    this.dataSourceGraphPoint2 = [];\r\n    const selectedReport = this.dataService.appData.tblTopPatientDetails;\r\n\r\n    if (filterData.length > 0) {\r\n      let isRefRangeSame = true;\r\n      const resultLabel = this.labelService.dsAnaysisResultsScreen.Results;\r\n      const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n      const refUnitsLabel = this.labelService.dsAnaysisResultsScreen.Units;\r\n      // const minValue = filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == row.Parameter).MinRange;\r\n      // const maxValue = filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == row.Parameter).MaxRange;\r\n      this.graphAxisYTitle = filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == row.Parameter).Units;\r\n\r\n      // const indx = this.labReportDistinct.findIndex(x => x.DateReceived == this.selectedDate);\r\n      const indx = this.labReportDistinct.findIndex(x => x.DateReceivedAnalysisType == selectedReport['DateReceivedAnalysisType']);\r\n      this.sliderMax = indx;\r\n\r\n      for (let i = 0; i < this.labReportDistinct.length; i++) {\r\n        let obj = [];\r\n        let params = null;\r\n        if (this.labReportDistinct[i] != undefined) {\r\n          const analyzer = row.AnalyzerName.toString().toLowerCase().replace(' ', '');\r\n\r\n          this.reportTrendableAll = this.dataService.appData.reportTrendableAll;\r\n\r\n          if (analyzer == 'reflab') {\r\n            this.dataService.appData.isTrendable = this.reportTrendableAll.includes(row.AnalysisTypeId);\r\n          } else {\r\n            this.dataService.appData.isTrendable = this.reportTrendableAll.includes(row.AnalysisTypeName?.toLowerCase());\r\n          }\r\n\r\n          if (this.dataService.appData.isTrendable) {\r\n            params = this.getParams(analyzer, row);\r\n            // if (analyzer == 'reflab') {\r\n            //   params = this.trendingTests.find(x => x.reflab == row.PanelTestId);\r\n            // } else if (analyzer == 'hm5') {\r\n            //   params = this.trendingTests.find(x => x.hm5 == row.Parameter);\r\n            // } else if (analyzer == 'hmplus') {\r\n            //   params = this.trendingTests.find(x => x.hmplus == row.Parameter);\r\n            // } else if (analyzer == 'vetscan-opticell') {\r\n            //   params = this.trendingTests.find(x => x['vetscan-opticell'] == row.Parameter);\r\n            // } else if (analyzer == 'i-stat') {\r\n            //   params = this.trendingTests.find(x => x.istat == row.Parameter);\r\n            // } else if (analyzer == 'vetscanvs2') {\r\n            //   params = this.trendingTests.find(x => x.vetscanvs2 == row.Parameter);\r\n            // }\r\n            if (params) {\r\n              obj = filterData.find(x => x.DateReceivedRaw == this.labReportDistinct[i].DateReceivedRaw && x.AnalysisTypeId == this.labReportDistinct[i].AnalysisTypeId\r\n                && (x.Parameter == params.hm5 || x.Parameter == params.hmplus || x.Parameter == params['vetscan-opticell'] || x.Parameter == params.istat || x.PanelTestId == params.reflab || x.Parameter == params.vetscanvs2));\r\n            } else {\r\n              obj = filterData.find(x => x.DateReceivedRaw == this.labReportDistinct[i].DateReceivedRaw && x.AnalysisTypeId == this.labReportDistinct[i].AnalysisTypeId && x.Parameter == row.Parameter);\r\n            }\r\n          } else {\r\n            obj = filterData.find(x => x.DateReceivedRaw == this.labReportDistinct[i].DateReceivedRaw && x.AnalysisTypeId == this.labReportDistinct[i].AnalysisTypeId && x.Parameter == row.Parameter);\r\n          }\r\n\r\n          let resultVal = (obj && obj[\"Result\"] != undefined && obj[\"Result\"] != null && obj[\"Result\"].trim() != \"\") ? obj[\"Result\"] : \"--\";\r\n          // if (obj != undefined && obj != null && (/[<>]/.test(resultVal) || !isNaN(parseFloat(resultVal)))) {\r\n          if (obj != null && (/[<>].*\\d|\\d.*[<>]/.test(resultVal) || !isNaN(parseFloat(resultVal)))) {\r\n            // debugger\r\n            let unitIrregular: any;\r\n            if (/[<>]/.test(resultVal) || !isNaN(parseFloat(resultVal))) {\r\n              // if (/^[^0-9]*[<>][^0-9]*$/.test(resultVal)) {\r\n              unitIrregular = this.isUnitIrregular(row, this.labReportDistinct[i], obj, resultVal);\r\n              if (unitIrregular?.isUnitIrregular) {\r\n                continue;\r\n              }\r\n              resultVal = unitIrregular?.resultVal ? unitIrregular.resultVal : resultVal;\r\n            }\r\n\r\n            const toolTipResultVal = (obj && obj[\"Result\"] != undefined && obj[\"Result\"] != null && obj[\"Result\"].trim() != \"\") ? obj[\"Result\"] : \"--\";\r\n            // let MinRange: any = obj[\"MinRange\"];\r\n            // let MaxRange: any = obj[\"MaxRange\"];\r\n\r\n            let MinRange: any = unitIrregular?.minRange ? unitIrregular.minRange : obj[\"MinRange\"];\r\n            let MaxRange: any = unitIrregular?.maxRange ? unitIrregular.maxRange : obj[\"MaxRange\"];\r\n            if (!(MinRange && MaxRange)) {\r\n              continue;\r\n            }\r\n\r\n            let Units: any = obj && obj[\"Units\"] ? obj[\"Units\"] : '';\r\n            // debugger\r\n            if (this.dataService.appData.isTrendable && isNaN(resultVal) == false) {\r\n              if (analyzer == 'reflab' && obj['AnalyzerName'] == 'HM5' && params) {\r\n                if (params.unitCal) {\r\n                  resultVal = resultVal * params.unitCal;\r\n                  MinRange = MinRange * params.unitCal;\r\n                  MaxRange = MaxRange * params.unitCal;\r\n                  Units = this.graphAxisYTitle;\r\n                }\r\n              } else if (analyzer == 'hm5' && params && obj['PanelTestId'] == params.reflab) {\r\n                if (params.unitCal) {\r\n                  resultVal = resultVal / params.unitCal;\r\n                  MinRange = MinRange / params.unitCal;\r\n                  MaxRange = MaxRange / params.unitCal;\r\n                  Units = this.graphAxisYTitle;\r\n                }\r\n              }\r\n              if (analyzer == 'hmplus' && obj['AnalyzerName'] == 'HM5' && HM5HMPLUS_ToConvert.includes(obj['Parameter'])) {\r\n                resultVal = resultVal * 1000;\r\n                MinRange = MinRange * 1000;\r\n                MaxRange = MaxRange * 1000;\r\n              }\r\n              if (analyzer == 'hm5' && obj['AnalyzerName'] == 'HMPLUS' && HM5HMPLUS_ToConvert.includes(obj['Parameter'])) {\r\n                resultVal = resultVal / 1000;\r\n                MinRange = MinRange / 1000;\r\n                MaxRange = MaxRange / 1000;\r\n              }\r\n            }\r\n\r\n            const ele = {};\r\n            const tooltipContent = '<b>'\r\n              + `${this.labReportDistinct[i].AnalyzerName.toLowerCase() == 'hm5' ? this.labReportDistinct[i].AnalyzerDisplayName : this.labReportDistinct[i].AnalysisTypeName}`\r\n              + '</b>'\r\n              + \" <br>\" + this.labReportDistinct[i].DateReceived\r\n              + \" <br>\" + resultLabel + \": \" + toolTipResultVal\r\n              + \" <br>\" + refRengeLabel + \": \" + obj[\"MinRange\"] + \"-\" + obj[\"MaxRange\"]\r\n              + \" <br>\" + refUnitsLabel + \": \" + obj[\"Units\"];\r\n\r\n            const minMaxvalu = [];\r\n            // minMaxvalu.push(MinRange);\r\n            // minMaxvalu.push(MaxRange);\r\n            minMaxvalu.push(Number(MinRange));\r\n            minMaxvalu.push(Number(MaxRange));\r\n\r\n            ele['label'] = obj[\"Parameter\"];\r\n            ele['y'] = minMaxvalu;\r\n            if (i == indx && this.labReportDistinct[i].selected) {\r\n              ele['whiskerColor'] = \"darkblue\";\r\n              ele['stemColor'] = \"darkblue\";\r\n              ele['whiskerThickness'] = 3;\r\n              ele['stemThickness'] = 3;\r\n            }\r\n            else {\r\n              ele['whiskerColor'] = this.labReportDistinct[i].AnalyzerName == 'Ref Lab' ? '#ed6c24' : '#0072ce';\r\n              ele['stemColor'] = this.labReportDistinct[i].AnalyzerName == 'Ref Lab' ? '#ed6c24' : '#0072ce';\r\n            }\r\n            ele['tooltipContent'] = tooltipContent;\r\n            ele['DateReceived'] = obj[\"DateReceived\"];\r\n            ele['DateReceivedAnalysisType'] = obj[\"DateReceivedAnalysisType\"];\r\n\r\n            this.dataSourceGraphPoint1.push(ele);\r\n\r\n            const ele2 = {};\r\n            ele2['label'] = this.labReportDistinct[i].DateReceived;\r\n\r\n            if (/[>]/.test(resultVal)) {\r\n              resultVal = resultVal.replace('>', '').trim();\r\n              ele2['y'] = parseFloat(resultVal);\r\n              // ele2['indexLabel'] = parseFloat(resultVal).toFixed(2) + '^';\r\n              ele2['indexLabel'] = \">\" + parseFloat(resultVal).toFixed(2);\r\n              // ele2['indexLabelFontSize'] = 20; // if require\r\n            }\r\n            if (/[<]/.test(resultVal)) {\r\n\r\n              resultVal = resultVal.replace('<', '').trim();\r\n              ele2['y'] = parseFloat(resultVal);\r\n              // ele2['indexLabel'] = parseFloat(resultVal).toFixed(2) + 'v';\r\n              ele2['indexLabel'] = \"<\" + parseFloat(resultVal);\r\n            } else {\r\n              ele2['y'] = parseFloat(resultVal);\r\n            }\r\n            ele2['markerColor'] = obj[\"Indicator\"] == \"In Range\" ? \"green\" : \"red\";\r\n            ele2['tooltipContent'] = tooltipContent;\r\n            ele2['DateReceived'] = obj[\"DateReceived\"];\r\n            ele2['DateReceivedAnalysisType'] = obj[\"DateReceivedAnalysisType\"];\r\n            // To break the datetime in tow line\r\n            ele2['label'] = ele2['label'].replace(' ', '  ');\r\n\r\n            this.dataSourceGraphPoint2.push(ele2);\r\n          }\r\n          else {\r\n            isRefRangeSame = false;\r\n          }\r\n        }\r\n\r\n      }\r\n      this.bindChart(row.Parameter);\r\n    }\r\n    else {\r\n      $(\"#chartContainer_\" + row.Parameter).hide();\r\n    }\r\n\r\n  }\r\n\r\n  // public bindChart(testName) {\r\n\r\n  //   testName = this.replaceSpecialChar(testName);\r\n  //   if (this.dataSourceGraphPoint2.length) {\r\n  //     $(\"#chartContainer_\" + testName).show();\r\n\r\n  //     const stockChart = new CanvasJS.StockChart(\"chartContainer_\" + testName, {\r\n  //       animationEnabled: true,\r\n  //       title: {\r\n  //         text: \"\"\r\n  //       },\r\n  //       charts: [{\r\n  //         axisY: {\r\n  //           title: this.graphAxisYTitle,\r\n  //           gridThickness: 1,\r\n  //           gridColor: \"#dfe2e5\",\r\n  //           lineColor: \"#dfe2e5\",\r\n  //           showInLegend: false,\r\n  //           includeZero: true,\r\n  //           labelFontFamily: \"gothambook\",\r\n  //           labelFontColor: \"#3e3e3e\",\r\n  //           tickLength: 10,\r\n  //           tickThickness: 0,\r\n  //           labelFontSize: 12,\r\n\r\n  //         },\r\n  //         axisX: {\r\n  //           title: \" \",\r\n  //           tickLength: 10,\r\n  //           tickThickness: 0,\r\n  //           labelFontFamily: \"gothambook\",\r\n  //           labelFontColor: \"#3e3e3e\",\r\n  //           labelFontSize: 12,\r\n  //           gridColor: \"#dfe2e5\",\r\n  //           lineColor: \"#dfe2e5\",\r\n  //           labelWrap: true,\r\n  //           labelMaxWidth: 90,\r\n\r\n  //         },\r\n  //         toolTip: {\r\n  //           content: \"{tooltipContent}\",\r\n  //         },\r\n  //         data: [\r\n  //           {\r\n  //             type: \"error\",\r\n  //             stemThickness: 2,\r\n  //             toolTipContent: null,\r\n  //             whiskerThickness: 2,\r\n  //             highlightEnabled: false,\r\n  //             dataPoints: this.dataSourceGraphPoint1\r\n  //           },\r\n  //           {\r\n  //             type: \"line\",\r\n  //             markerType: \"circle\",  //\"circle\", \"square\", \"cross\", \"none\"\r\n  //             markerSize: 10,\r\n  //             indexLabel: \"{y}\",\r\n  //             indexLabelBackgroundColor: \"#fff\",\r\n  //             indexLabelFontColor: \"#ff6400\",\r\n  //             indexLabelFontSize: 12,\r\n  //             lineDashType: \"dash\",\r\n  //             lineThickness: 1,\r\n  //             lineColor: \"#4372c4\",\r\n  //             dataPoints: this.dataSourceGraphPoint2\r\n  //           },\r\n  //         ]\r\n  //       }],\r\n  //       navigator: {\r\n  //         height: '25px',\r\n  //         backgroundColor: \"white\",\r\n  //         data: [{\r\n  //           type: \"line\",\r\n  //           lineColor: \"white\",\r\n  //           dataPoints: this.dataSourceGraphPoint2\r\n\r\n  //         }],\r\n  //         axisX: {\r\n  //           labelFontColor: \"white\",\r\n  //         },\r\n  //         slider: {\r\n  //           maskInverted: false,\r\n  //           // minimum: this.sliderMax - 4.5, //-5.5  //2.5\r\n  //         },\r\n  //       },\r\n  //       rangeSelector: {\r\n  //         enabled: false,\r\n  //       }\r\n  //     });\r\n\r\n  //     if (this.dataSourceGraphPoint1.length == 1) {\r\n  //       stockChart.options.charts[0].axisX.viewportMinimum = -0.5;\r\n  //       stockChart.options.charts[0].axisX.viewportMaximum = -2.5;\r\n  //     }\r\n\r\n  //     stockChart.render();\r\n  //     // debugger\r\n  //     const selectedReport = this.dataService.appData.tblTopPatientDetails;\r\n  //     this.sliderMax = this.dataSourceGraphPoint1.findIndex(x => x.DateReceivedAnalysisType == selectedReport['DateReceivedAnalysisType']);\r\n  //     let diff = this.dataSourceGraphPoint1.length - this.sliderMax;\r\n\r\n  //     if (this.dataSourceGraphPoint1.length > 4) {\r\n  //       stockChart.navigator.slider.set(\"minimum\", (this.sliderMax - (5.5 - diff)));\r\n  //       if (diff >= 5) {\r\n  //         stockChart.navigator.slider.set(\"minimum\", (this.dataSourceGraphPoint1.length - (diff + 0.5)));\r\n  //         stockChart.navigator.slider.set(\"maximum\", (this.dataSourceGraphPoint1.length - (diff - 6)));\r\n  //         // stockChart.navigator.slider.set(\"maximum\", (this.dataSourceGraphPoint1.length - (this.sliderMax - 4.5)));\r\n  //       }\r\n  //     }\r\n\r\n  //   }\r\n  //   else {\r\n  //     $(\"#chartContainer_\" + testName).hide();\r\n  //   }\r\n  // }\r\n\r\n  public bindChart(testName) {\r\n    testName = this.replaceSpecialChar(testName);\r\n\r\n    if (!this.dataSourceGraphPoint2.length) {\r\n      $(\"#chartContainer_\" + testName).hide();\r\n      return;\r\n    }\r\n\r\n    $(\"#chartContainer_\" + testName).show();\r\n\r\n    // Create a clean navigator dataset without indexLabels\r\n    let navigatorDataPoints = this.dataSourceGraphPoint2.map(dp => ({\r\n      x: dp.x,\r\n      y: dp.y // Remove unnecessary properties\r\n    }));\r\n\r\n    const stockChart = new CanvasJS.StockChart(\"chartContainer_\" + testName, {\r\n      animationEnabled: true,\r\n      title: { text: \"\" },\r\n      charts: [{\r\n        axisY: {\r\n          title: this.graphAxisYTitle,\r\n          gridThickness: 1,\r\n          gridColor: \"#dfe2e5\",\r\n          lineColor: \"#dfe2e5\",\r\n          includeZero: true,\r\n          labelFontFamily: \"gothambook\",\r\n          labelFontColor: \"#3e3e3e\",\r\n          tickLength: 10,\r\n          labelFontSize: 12\r\n        },\r\n        axisX: {\r\n          title: \" \",\r\n          tickLength: 10,\r\n          labelFontFamily: \"gothambook\",\r\n          labelFontColor: \"#3e3e3e\",\r\n          labelFontSize: 12,\r\n          gridColor: \"#dfe2e5\",\r\n          lineColor: \"#dfe2e5\",\r\n          labelWrap: true,\r\n          labelMaxWidth: 90\r\n        },\r\n        toolTip: { content: \"{tooltipContent}\" },\r\n        data: [\r\n          {\r\n            type: \"error\",\r\n            stemThickness: 2,\r\n            whiskerThickness: 2,\r\n            highlightEnabled: false,\r\n            dataPoints: this.dataSourceGraphPoint1\r\n          },\r\n          {\r\n            type: \"line\",\r\n            markerType: \"circle\",\r\n            markerSize: 10,\r\n            indexLabel: \"{y}\",\r\n            indexLabelBackgroundColor: \"#fff\",\r\n            indexLabelFontColor: \"#ff6400\",\r\n            indexLabelFontSize: 12,\r\n            lineDashType: \"dash\",\r\n            lineThickness: 1,\r\n            lineColor: \"#4372c4\",\r\n            dataPoints: this.dataSourceGraphPoint2\r\n          }\r\n        ]\r\n      }],\r\n      navigator: {\r\n        height: '25px',\r\n        backgroundColor: \"white\",\r\n        data: [{\r\n          type: \"line\",\r\n          lineColor: \"white\",\r\n          dataPoints: navigatorDataPoints\r\n        }],\r\n        axisX: { labelFontColor: \"white\" },\r\n        slider: { maskInverted: false }\r\n      },\r\n      rangeSelector: { enabled: false }\r\n    });\r\n\r\n    // Adjust viewport if there's only one data point\r\n    if (this.dataSourceGraphPoint1.length === 1) {\r\n      stockChart.options.charts[0].axisX.viewportMinimum = -0.5;\r\n      stockChart.options.charts[0].axisX.viewportMaximum = -2.5;\r\n    }\r\n\r\n    stockChart.render();\r\n\r\n    // Configure slider positioning\r\n    const selectedReport = this.dataService.appData.tblTopPatientDetails;\r\n    this.sliderMax = this.dataSourceGraphPoint1.findIndex(x => x.DateReceivedAnalysisType === selectedReport['DateReceivedAnalysisType']);\r\n    let diff = this.dataSourceGraphPoint1.length - this.sliderMax;\r\n\r\n    if (this.dataSourceGraphPoint1.length > 4) {\r\n      let minSlider = this.sliderMax - (5.5 - diff);\r\n      stockChart.navigator.slider.set(\"minimum\", minSlider);\r\n\r\n      if (diff >= 5) {\r\n        let adjustedMin = this.dataSourceGraphPoint1.length - (diff + 0.5);\r\n        let adjustedMax = this.dataSourceGraphPoint1.length - (diff - 6);\r\n        stockChart.navigator.slider.set(\"minimum\", adjustedMin);\r\n        stockChart.navigator.slider.set(\"maximum\", adjustedMax);\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectNote(event) {\r\n    this.selectedDate = event.value;\r\n    const selectedDateIndex = this.testNoteList.findIndex(i => i.DateReceived === this.selectedDate);\r\n    const datsToMoove = this.testNoteList.splice(selectedDateIndex, 1);\r\n    this.testNoteList = datsToMoove.concat(this.testNoteList);\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.appData['backDates'] = [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n  public openNote(noteTitle, noteStr) {\r\n    const formatedNote = '<div class=\"text-left\">' + this.commonService.getResultText(null, noteStr) + '</div>'; // added in sprint 8\r\n    // let formatedNote = '<div class=\"text-left\">' + this.getResultText(null, noteStr) + '</div>'; // added in sprint 8\r\n    this.confirmationDialogService.confirm(noteTitle, formatedNote, this.labelService.dsDashboardScreen.Ok, '', \"lg\", true, false)\r\n  }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n\r\n    return rtnValue;\r\n  }\r\n\r\n  public isNumber(val) {\r\n    return typeof (val);\r\n  }\r\n\r\n  showTrendingIcon(element) {\r\n    if (element.Indicator != null && element.Indicator != '' && element.GraphResult != null && element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1) {\r\n      if (element.Parameter && element.Parameter.trim() === 'GGT') {\r\n        if (element.MinRange !== null && element.MaxRange !== null) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  rangeCheck(elm) {\r\n\r\n    if (elm.MinRange || elm.MaxRange) return true;\r\n    if (elm.MinRange === 0 || elm.MaxRange === 0) return true;\r\n    return false;\r\n\r\n  }\r\n\r\n  public openTestWarning(e) {\r\n\r\n    if (e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    //const msg = `Unit irregularities detected in test result. Trending analysis may be impacted. <br> For details or assistance review <a class=\"text-decoration\" target=\"_blank\" href=\"${path}\"><i>ZoetisDx Responsible Trending information</i></a>.`\r\n    this.dialog.open(this.testWarningPop, {\r\n      width: '560px'\r\n    });\r\n  }\r\n\r\n  public dismiss() {\r\n    this.dialog.closeAll()\r\n  }\r\n\r\n  // public viewImageSlider(imageList, imgIndex) {debugger\r\n  //   const modalRef = this.modalService.open(ImageSliderComponent, {\r\n  //     centered: true,\r\n  //     backdrop: 'static',\r\n  //     scrollable: false\r\n  //   });\r\n  //   modalRef.componentInstance.imageList = imageList;\r\n  //   modalRef.componentInstance.currentIndex = imgIndex;\r\n  //   modalRef.componentInstance.patientDetails = this.patientService.patientDetails;\r\n  // }\r\n\r\n}\r\n\r\n/*\r\n===> Template-1 Reports <=== \r\nNames & Pids:-\r\nAvian/Reptilian Profile Plus\r\nCanine Wellness Profile\r\nComprehensive Diagnostic | George - 14315\r\nCritical Care Plus\r\nEquine Profile Plus\r\nKidney Profile Plus\r\nLarge Animal Profile\r\nMammalian Liver Profile\r\nPrep Profile II      |  Bean - 1434\r\nThyroxine(T4)/Cholesterol Test\r\nElectrolyte Plus\r\nPreventive Care Profile Plus\r\nPhenobarbital Profile\r\nHematology          | PAT11204\r\nPT/aPTT Combination Test  |  Bean - 1434\r\nEquine Fibrinogen Test   | Blue - 1431\r\ncPL Rapid Test\r\nPT/aPTT Combination\r\nCanine Fibrinogen\r\nEquine Fibrinogen\r\nCrea | 8XfznaQ1 - pat10609\r\nE3+\r\nChem8+ | S007 - 5987\r\nCG8+\r\nCG4+\r\nGLU | 8XfznaQ1 - pat10609\r\n6+\r\nEC8+\r\nCBC + Retics | PAT11204\r\n\r\n\r\n*/\r\n","<section\r\n  *ngIf=\"dataService.appData.tblTopPatientDetails && dataService.appData.tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && (isTestNoteVisible || isCytologyComplex) && !isCVET\">\r\n  <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n    {{labelService.dsAnaysisResultsScreen. AvailableResults}}\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n    <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n      <mat-option *ngFor=\"let report of dateDropdown\" [value]=\"report.DateReceived\">\r\n        {{report.DateReceived}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</section>\r\n\r\n<div *ngIf=\"!isTestNoteVisible && dataSource.data.length>0\">\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"\" summary=\"\" multiTemplateDataRows>\r\n    <ng-container matColumnDef=\"Test\">\r\n      <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n        {{labelService.dsAnaysisResultsScreen.Test}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = dataIndex\">\r\n        <div>\r\n          <p style=\"width: 165px;\">\r\n            <img *ngIf=\"element.isChartVisible && (backDates.length > 1)\" alt=\"aicon\"\r\n              src=\"../../../../assets/img/aicon.svg\" class=\"test_tbl_icon\"\r\n              title=\"{{labelService.dsAnaysisResultsScreen.Trends}}\" height=\"19\">\r\n\r\n            <img [ngStyle]=\"{'visibility':element.MadcapPageId?'initial':'hidden'}\" alt=\"info-icon\"\r\n              src=\"../../../../assets/img/info-icon.svg\"\r\n              [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"\r\n              class=\"test_info_icon pl-1\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n            <span *ngIf=\"((element.Result==='SEE DETAILS' || element.Result==='See Note') && element.TestNote) \r\n              || (element.Result && !(element.Result === 'SEE DETAILS' || element.Result === 'See Note'))\">\r\n              {{isCPLAnalysisTypeName(element.AnalysisTypeName)? element.AnalyteDesc: element.Parameter}}\r\n            </span>\r\n          </p>\r\n          <p class=\"elipsis\"\r\n            *ngIf=\"!(element.Result === 'SEE DETAILS' || element.Result === 'See Note') && element.TestNote\">\r\n            {{element.TestNote}}\r\n            <br>\r\n            <a href=\"javascript:void(0)\" style=\"float: right;\" *ngIf=\"element.TestNote\"\r\n              (click)=\"openNote(element.Parameter, element.TestNote); $event.stopPropagation()\">\r\n              {{labelService.dsAnaysisResultsScreen.SeeMore}}\r\n              <!-- See More -->\r\n            </a>\r\n          </p>\r\n\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"selectedDate\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <span class=\"date_block\">{{selectedDate}}</span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"unicode-fix\">\r\n        <ng-container *ngIf=\"!(element.Result==='SEE DETAILS' || element.Result==='See Note')\">\r\n          <span style=\"font-weight: bolder;padding-right: 1%;\">{{element.Result}}</span>\r\n          <!-- <span class=\"text-lighter\">{{(element.Units||'')}}</span> -->\r\n          <span [innerHTML]=\"(element.Units||'')\"></span>\r\n        </ng-container>\r\n        <!-- <span *ngIf=\"(element.Result==='SEE DETAILS' || element.Result==='See Note')\">\r\n          {{element.TestNote}}\r\n        </span> -->\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Ref_Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"dref\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"dref text-lighter\">\r\n        <div *ngIf=\"element.AnalyzerName !== 'Ref Lab';else refLabRange\">\r\n          <!-- <span\r\n            *ngIf=\"element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null);else generalContent\">\r\n            <span *ngIf=\"element.MinRange === null\">\r\n              {{ element.MaxRange }} </span>\r\n                <span *ngIf=\"element.MaxRange === null\">\r\n                  {{ element. MinRange }}\r\n                </span>\r\n            </span>\r\n            <ng-template #generalContent> -->\r\n          <!-- <span *ngIf=\"element.MinRange || element.MaxRange\"> -->\r\n          <span>{{element.MinRangeToDisplay ? element.MinRangeToDisplay : element.MinRange}}</span>\r\n          {{(element?.MinRange !=null && element?.MinRange >=0) && (element?.MaxRange !=null && element?.MaxRange >=0)\r\n          ?'-':''}}\r\n          <span>{{element.MaxRangeToDisplay ? element.MaxRangeToDisplay : element.MaxRange}}</span>\r\n          <!-- </span> -->\r\n          <!-- </ng-template> -->\r\n        </div>\r\n        <ng-template #refLabRange>\r\n          {{element.TestResultRanges}}\r\n        </ng-template>\r\n      </td>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Graph\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n          <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf=\"!element.GraphResult && element.Result && element.Result.includes('!'); else blankAndDatablock\">\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [value]=\"100\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [value]=\"100\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"\" [value]=\"100\"></mat-slider>\r\n          </span>\r\n          <ng-template #blankAndDatablock>\r\n            <ng-container *ngIf=\"(element.GraphResult || element.AnalyzerName !== 'Ref Lab')\">\r\n              <!-- blank block -->\r\n              <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n                *ngIf=\"(element.Result && (element.Result.includes('>') || element.Result.includes('<') || element.Parameter.includes('GGT')) && !isCPLAnalysisTypeName(element.AnalysisTypeName));else dataBlock\">\r\n                <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n                <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n                <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n              </span>\r\n            </ng-container>\r\n            <ng-template #dataBlock>\r\n              <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n                *ngIf=\"element.GraphResult !== null\">\r\n                <mat-slider mode=\"determinate\"\r\n                  [ngClass]=\"{'nothumb': !(element.Section === 'A' || (element.Section === 'A' && element.Indicator === 'Out'))}\"\r\n                  [max]=\"element.Section !== 'A' ? 100 : 115\"\r\n                  [value]=\"element.Section === 'A' || (element.Section === 'A' && element.Indicator === 'Out')  ? element.GraphResult : (element.Indicator !== '' ? '100' : '0')\">\r\n                </mat-slider>\r\n                <mat-slider mode=\"determinate\"\r\n                  [ngClass]=\"{'nothumb': element.Section !== 'B' || (element.Section === 'A' && element.Indicator === 'Out')}\"\r\n                  [max]=\"element.Section !== 'B' ? 100 : 115\"\r\n                  [value]=\"element.Section === 'B' ? element.GraphResult : (element.Indicator === 'High' || (element.Section === 'C' && element.Indicator === 'Out') ? '100' : '0') \">\r\n                </mat-slider>\r\n                <mat-slider mode=\"determinate\"\r\n                  [ngClass]=\"{'nothumb': (element.Section !== 'C' &&  element.Indicator !== 'Out')  || (element.Section === 'A' && element.Indicator === 'Out') }\"\r\n                  [max]=\"element.Section !== 'C' &&  element.Indicator !== 'Out' ? 100 : 115\"\r\n                  [value]=\"element.Section === 'C' || element.Indicator === 'Out' ? element.GraphResult : '0'\">\r\n                </mat-slider>\r\n              </span>\r\n            </ng-template>\r\n          </ng-template>\r\n\r\n          <ng-container *ngIf=\"!isCPLAnalysisTypeName(element.AnalysisTypeName)\">\r\n            <span class=\"clsRed indicator ml-1\"\r\n              *ngIf=\"element.GraphResult && (element.Indicator && element.Indicator !== '') && (element.Indicator === 'High' || element.Indicator === 'Low' || element.Indicator === 'Out')\">\r\n              {{getTranslation(element.Indicator)}}\r\n            </span>\r\n\r\n            <span class=\"clsRed indicator ml-1 no-underline\" *ngIf=\"element.AnalyzerName !== 'Ref Lab'            \r\n              && (element.Result.includes('>') || element.Result.includes('<'))\">\r\n              {{getTranslation('Out')}}\r\n            </span>\r\n\r\n            <!-- <span class=\"clsRed indicator ml-1 no-underline\"\r\n            *ngIf=\"(element.GraphResult || element.AnalyzerName !== 'Ref Lab') && element.Result \r\n            && (element.AnalyzerName !== 'Ref Lab'|| (element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null))) \r\n            && (element.AnalyzerName !== 'Ref Lab' && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 ))\">\r\n            {{getTranslation('Out')}}\r\n          </span> -->\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"isCPLAnalysisTypeName(element.AnalysisTypeName)\">\r\n            <span class=\"clsRed indicator ml-1\"\r\n              [ngClass]=\"{'text-green':element.Indicator=='Normal','text-orange': element.Indicator=='Suspect','text-red' : element.Indicator=='High'}\"\r\n              *ngIf=\"element.GraphResult && (element.Indicator && element.Indicator !== '') \r\n              && (element.Indicator === 'High' || element.Indicator === 'Normal' || element.Indicator === 'Suspect')\">\r\n              {{getTranslation(element.Indicator)}}\r\n            </span>\r\n          </ng-container>\r\n\r\n          <span *ngIf=\"element.Indicator !== 'High' && element.Indicator !== 'Low' && element.Indicator !== 'Out'\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span>\r\n\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator === null || element.Indicator === \"\" '>\r\n            {{ element.Indicator }}\r\n          </span>\r\n        </div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"prevDate1\">\r\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n        <span class=\"material-symbols-outlined date-navitation-icon\"\r\n          [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n          (click)=\"prevResult()\" title=\"Previous\">\r\n          arrow_back </span>\r\n\r\n        <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n          *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n          {{backDates[0].DateReceived}}\r\n        </span>\r\n\r\n        <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n          [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n          (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element; let i = dataIndex\" class=\"unicode-fix\"\r\n        [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n        <div style=\"position: relative; z-index: 9;\" [ngClass]=\"backDates[0].selected?'col-bg':''\"\r\n          *ngIf=\"backDates[0] && backDates[0].Result\">\r\n          <p class=\"mb-0\">\r\n            <span (mouseover)='showToolTip($event, i, 0)' (mouseout)='hideTooltip(i, 0)' class=\"note elipsis\">\r\n              {{element.backDate0_Result}}\r\n              <img *ngIf=\"element.backDate0_showUnitWarning\" (click)=\"openTestWarning($event);\" class=\"warning-result\"\r\n                src=\"../../../../assets/img/warning-result.png\" alt=\"\">\r\n            </span>\r\n            <span id=\"bkotooltip{{i}}0\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate0_ToolTipStr\"> </span>\r\n          </p>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"prevDate2\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n          *ngIf=\"backDates[1] && backDates[1].Result\" (click)=\"onSelectDate(backDates[1])\">\r\n          {{backDates[1].DateReceived}}\r\n        </span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element; let i = dataIndex\" class=\"unicode-fix\">\r\n        <div style=\"position: relative; z-index: 9;\" [ngClass]=\"backDates[1].selected?'col-bg':''\"\r\n          class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n          <p class=\"mb-0\">\r\n            <span (mouseover)='showToolTip($event, i, 1)' (mouseout)='hideTooltip(i, 1)' class=\"note elipsis\">\r\n              {{element.backDate1_Result}}\r\n              <img *ngIf=\"element.backDate1_showUnitWarning\" (click)=\"openTestWarning($event);\" class=\"warning-result\"\r\n                src=\"../../../../assets/img/warning-result.png\" alt=\"\">\r\n            </span>\r\n            <span id=\"bkotooltip{{i}}1\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate1_ToolTipStr\"> </span>\r\n          </p>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"prevDate3\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n          *ngIf=\"backDates[2] && backDates[2].Result\" (click)=\"onSelectDate(backDates[2])\">\r\n          {{backDates[2].DateReceived}}\r\n        </span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element; let i = dataIndex\" class=\"unicode-fix\">\r\n        <div style=\"position: relative; z-index: 9;\" [ngClass]=\"backDates[2].selected?'col-bg':''\"\r\n          *ngIf=\"backDates[2] && backDates[2].Result\">\r\n          <p class=\"mb-0\">\r\n            <span (mouseover)='showToolTip($event, i, 2)' (mouseout)='hideTooltip(i, 2)' class=\"note elipsis\">\r\n              {{element.backDate2_Result}}\r\n              <img *ngIf=\"element.backDate2_showUnitWarning\" (click)=\"openTestWarning($event);\" class=\"warning-result\"\r\n                src=\"../../../../assets/img/warning-result.png\" alt=\"\">\r\n            </span>\r\n\r\n            <span id=\"bkotooltip{{i}}2\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate2_ToolTipStr\"> </span>\r\n          </p>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"prevDate4\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n          *ngIf=\"backDates[3] && backDates[3].Result\" (click)=\"onSelectDate(backDates[3])\">\r\n          {{backDates[3].DateReceived}}\r\n        </span>\r\n        <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n          [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\" (click)=\"nextResult()\"\r\n          title=\"Next\"> arrow_forward </span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element; let i = dataIndex\" class=\"unicode-fix\">\r\n        <div style=\"position: relative; z-index: 9;\" [ngClass]=\"backDates[3].selected?'col-bg':''\"\r\n          *ngIf=\"backDates[3] && backDates[3].Result\">\r\n          <p class=\"mb-0\">\r\n            <span (mouseover)='showToolTip($event, i, 3)' (mouseout)='hideTooltip(i, 3)' class=\"note elipsis\">\r\n              {{element.backDate3_Result}}\r\n              <img *ngIf=\"element.backDate3_showUnitWarning\" (click)=\"openTestWarning($event);\" class=\"warning-result\"\r\n                src=\"../../../../assets/img/warning-result.png\" alt=\"\">\r\n            </span>\r\n            <span id=\"bkotooltip{{i}}3\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate3_ToolTipStr\"> </span>\r\n          </p>\r\n\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- ========================Template for details row======================= -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n      <td mat-cell *matCellDef=\"let element; let i = dataIndex\" [attr.colspan]=\"displayedColumns.length\">\r\n        <div id=\"row{{i}}\" class=\"chartContainer\">\r\n          <div *ngIf=\"element.isChartVisible && dataSourceGraphPoint2.length === 0\" class=\"no-graph\">\r\n            {{labelService.dsAnaysisResultsScreen.NoGraphPlottedSelectAnother}}\r\n          </div>\r\n          <h3 *ngIf=\"element.isChartVisible && dataSourceGraphPoint2.length > 0\" class=\"chart-head\">\r\n            <img src=\"../../../../assets/img/group-copy-3@2x.png\" alt=\"\">\r\n          </h3>\r\n          <p class=\"graph-info\" *ngIf=\"element?.showZdxHelpInfo\">\r\n            <span> Some information cannot be graphed </span>\r\n            <a href=\"{{zdxsHelpBaseUrl}}/{{selectedLangCode}}/Default.htm#cshid=1139\" target=\"_blank\">\r\n              <img src=\"../../../assets/img/infos.svg\" alt=\"\">\r\n            </a>\r\n          </p>\r\n          <div *ngIf=\"element.isChartVisible\" id=\"{{'chartContainer_' + replaceSpecialChar(element.Parameter)}}\"\r\n            style=\"height: 370px; width: 100%;\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row student-element-detail\"\r\n          [@detailExpand]=\"(element === expandedElement || dataSource.data.length === 1 ) ? 'expanded' : 'collapsed'\">\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns;let i = dataIndex;\" (click)=\"selectedRow(i, element)\"\r\n      class=\"student-element-row\" [class.student-expanded-row]=\"element === expandedElement\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail'];\" class=\"student-detail-row\">\r\n    </tr>\r\n  </table>\r\n</div>\r\n<section\r\n  *ngIf=\"dataService.appData.tblTopPatientDetails && dataService.appData.tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && (isTestNoteVisible || isCytologyComplex)\">\r\n  <h1 *ngIf=\"isTestNoteVisible\" class=\"note-title\"> {{selectedAnalysisType}} </h1>\r\n  <section class=\"temp1\" *ngIf=\"testNoteList.length>0\">\r\n    <div *ngFor=\"let data of testNoteList; let i = index\">\r\n      <p class=\"review_head\">\r\n        {{data.DateReceived}}\r\n      </p>\r\n      <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n    </div>\r\n  </section>\r\n</section>\r\n\r\n<!-- images -->\r\n<div class=\"col-sm-12\" style=\"margin-top: 14px;\">\r\n  <ng-container *ngIf=\"patientService.imgData !==null && patientService.imgData.length>0\">\r\n    <h5 class=\"analyte-desc\" *ngIf=\"dataService.appData.tblTopPatientDetails['AnalyzerName'] === 'HMPLUS'\">\r\n      Graphs\r\n    </h5>\r\n    <div class=\"Headcontent\" *ngFor=\"let data of patientService.imgData\">\r\n      <div class=\"row\">\r\n        <span class=\"col-sm-3 text-center imgpart\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n          <p class=\"analyte-img-title\">\r\n            {{dataService.appData.tblTopPatientDetails['AnalyzerName'] === 'HM5' ||\r\n            dataService.appData.tblTopPatientDetails['AnalyzerName'] === 'HMPLUS' ? ele.AnalyteDesc : ele.Parameter}}\r\n          </p>\r\n          <img class=\"imgages\" [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center lstrow\"\r\n  *ngIf=\"VS2Test && VS2Test.length > 0 && (dataService.appData.tblTopPatientDetails && dataService.appData.tblTopPatientDetails['AnalyzerName'].toLocaleLowerCase() === 'vetscan vs2')\">\r\n  <span *ngFor=\"let element of VS2Test\">{{ element.Parameter }} - {{ element.Result }}</span>\r\n  <!-- <span>HEM - 1+</span>\r\n      <span>LIP - 0 </span>\r\n      <span>ICT - 1+ </span> -->\r\n</div>\r\n\r\n<ng-template #testWarningPop>\r\n  <div class=\"modal-content\">\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n    <div class=\"modal-body d-flex align-items-start mt-3\" style=\"min-height: 1px; padding: 0;\">\r\n      <span class=\"pull-left\" style=\"display: inline-block;\"><img class=\"warning-result-2x\"\r\n          src=\"../../../../assets/img/warning-result.png\" alt=\"\"></span>\r\n      <span class=\"ml-2\" style=\"display: inline-block; font-size: 14px; text-wrap: balance;\">{{\r\n        labelService.dsAnaysisResultsScreen.UnitIrregularities }} <a class=\"text-decoration\" target=\"_blank\"\r\n          href=\"{{ commonService.onlineHelpLinkGen('results/result-details.htm') }}\"><i>{{\r\n            labelService.dsAnaysisResultsScreen.TrendingInformation }}</i></a>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ImageSliderComponent } from '../../../shared';\r\n\r\n@Component({\r\n  selector: 'app-template2',\r\n  templateUrl: './template2.component.html',\r\n  styleUrls: ['./template2.component.css']\r\n})\r\nexport class Template2Component implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['AnalyteDesc', 'Presence'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  public dataSourceTop: any[] = [];\r\n  public dsImagyst: any[] = [];\r\n  public isPresence = true;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportFilterByAnalysisType.forEach(ele => {\r\n      if (this.labReportDistinct == null) {\r\n        this.labReportDistinct.push(ele);\r\n      } else {\r\n        const ab = this.labReportDistinct.find(x => x.DateReceived == ele.DateReceived);\r\n        if (ab == null) {\r\n          this.labReportDistinct.push(ele);\r\n        }\r\n      }\r\n    })\r\n    // To make latest date on top\r\n    this.labReportDistinct = this.labReportDistinct.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    console.log('labReportDistinct =>', this.labReportDistinct);\r\n\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //write something code\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n\r\n    this.dataSourceTop = this.labReportFilterByAnalysisType.filter(x => {\r\n      if (x.Parameter && x.DateReceived == this.selectedDate && x.TestTypeId == EnmTestType.Top) {\r\n        return x;\r\n      }\r\n    });\r\n    console.log('dataSourceTop =>', this.dataSourceTop);\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.map(item => {\r\n      item.AnalyteDesc = item.AnalyteDesc ? item.AnalyteDesc.split('-')[0] : null;\r\n      if (/LE_/.test(item.Parameter) || /RE_/.test(item.Parameter)) {\r\n        if (/LE_/.test(item.Parameter)) {\r\n          item.ParameterCustom = item.Parameter.replace('LE_', '');\r\n        }\r\n        if (/RE_/.test(item.Parameter)) {\r\n          item.ParameterCustom = item.Parameter.replace('RE_', '');\r\n        }\r\n        if (/right ear/i.test(item.AnalyteDesc)) {\r\n          item.AnalyteDesc = item.AnalyteDesc.toLowerCase().replace('right ear', '').trim();\r\n        }\r\n        if (/left ear/i.test(item.AnalyteDesc)) {\r\n          item.AnalyteDesc = item.AnalyteDesc.toLowerCase().replace('left ear', '').trim();\r\n        }\r\n      }\r\n      return item;\r\n    })\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    this.labReportFiltered = this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.OvaOocysts);\r\n    console.log('this.labReportFiltered ==>', this.labReportFiltered);\r\n   \r\n    let labReportFiltered = this.labReportFiltered.map(item => {\r\n      if (/LE_/.test(item.Parameter) || /RE_/.test(item.Parameter)) {\r\n        this.isPresence = false;\r\n      } else {\r\n        this.isPresence = true;\r\n      }\r\n      return item;\r\n    })\r\n\r\n    if (this.isPresence) {\r\n      this.displayedColumns = ['AnalyteDesc', 'Presence'];\r\n      labReportFiltered = [...new Map(this.labReportFiltered.map((item) => [item[\"AnalyteDesc\"], item])).values()];\r\n    } else {\r\n      this.displayedColumns = ['AnalyteDesc', 'Left_Ear', 'Right_Ear'];\r\n      labReportFiltered = [...new Map(this.labReportFiltered.map((item) => [item[\"ParameterCustom\"], item])).values()];\r\n    }\r\n    console.log('labReportFiltered ==>', labReportFiltered);\r\n\r\n    const bloodpresence: any = [];\r\n    const group1: any = [{ TestGroupName: 'Bacteria & Yeast', isGroupBy: false }];\r\n    const group2: any = [{ TestGroupName: 'Inflammatory WBC', isGroupBy: false }];\r\n\r\n    labReportFiltered.forEach(item => {\r\n      const analyteDesc = item.AnalyteDesc ? item.AnalyteDesc.split('-')[0] : null;\r\n\r\n      if (analyteDesc) {\r\n        if (item.TestGroupName == 'AI BLOOD PRESENCE') {\r\n          bloodpresence.push({\r\n            ...item, ...{\r\n              AnalyteDesc: analyteDesc,\r\n              DateReceived: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc).DateReceived,\r\n              ResultDetection: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)) != undefined ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)).Result : 'false'),\r\n              Presence: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Paramete && (e.Parameter.indexOf('DERM_') >= 0)) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter && (e.Parameter.indexOf('DERM_') >= 0)).Result : 'false'),\r\n              Left_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))).Result : null,\r\n              Right_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))).Result : null\r\n            }\r\n          })\r\n        }\r\n        if (item.TestGroupName == 'Bacteria & Yeast') {\r\n          group1[0].isGroupBy = true;\r\n          group1.push({\r\n            ...item, ...{\r\n              AnalyteDesc: analyteDesc,\r\n              DateReceived: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc).DateReceived,\r\n              ResultDetection: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)) != undefined ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)).Result : 'false'),\r\n              Presence: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Paramete && (e.Parameter.indexOf('DERM_') >= 0)) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter && (e.Parameter.indexOf('DERM_') >= 0)).Result : 'false'),\r\n              Left_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))).Result : null,\r\n              Right_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))).Result : null\r\n            }\r\n          })\r\n        }\r\n        if (item.TestGroupName == 'Inflammatory WBC') {\r\n          group2[0].isGroupBy = true;\r\n          group2.push({\r\n            ...item, ...{\r\n              AnalyteDesc: analyteDesc,\r\n              DateReceived: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc).DateReceived,\r\n              ResultDetection: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)) != undefined ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)).Result : 'false'),\r\n              Presence: (this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Paramete && (e.Parameter.indexOf('DERM_') >= 0)) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && e.Parameter && (e.Parameter.indexOf('DERM_') >= 0)).Result : 'false'),\r\n              Left_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /LE_/.test(e.Parameter))).Result : null,\r\n              Right_Ear: this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))) ? this.labReportFiltered.find(e => e.AnalyteDesc == item.AnalyteDesc && (e.Parameter && /RE_/.test(e.Parameter))).Result : null\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n    this.labReportFiltered = bloodpresence.concat(group1).concat(group2);\r\n    console.log('this.labReportFiltered ==>', this.labReportFiltered);\r\n    this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n    this.getImageData();\r\n  }\r\n\r\n  public getImageData() {\r\n\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.AnalysisTypeId == analysisTypeId && x.Parameter != null && x.Parameter.indexOf('_IMG') != -1);\r\n    console.log('dsImagyst ==>', this.dsImagyst);\r\n\r\n    const filterDataImage = [];\r\n    // === image data mappiing with table data ===\r\n    this.labReportFiltered.forEach(ele => {\r\n      if (ele.AnalyteDesc) {\r\n        JSON.parse(JSON.stringify(this.dsImagyst)).forEach(subEle => {\r\n          if (ele.AnalyteDesc.toLowerCase().trim() == subEle.AnalyteDesc.toLowerCase().split('image')[0].trim()) {\r\n            filterDataImage.push(subEle)\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    if (filterDataImage.length) {\r\n      filterDataImage.map(ele => ele.modifiedAnalyteDesc = ele.AnalyteDesc?.toLowerCase()?.split('image')[0]);\r\n    }\r\n\r\n    this.patientService.imgData = [];\r\n\r\n    const imgData = Array.from(new Set(filterDataImage.map(x => x.AnalyteDesc?.toLowerCase()?.split(new RegExp('image', \"i\"))[0]))).map(key => {\r\n      return {\r\n        'GroupName': key,\r\n        // 'Images': filterDataImage.filter(e => e.AnalyteDesc && e.Result && e.AnalyteDesc.indexOf(key) == 0)\r\n        'Images': filterDataImage.filter(e => e.AnalyteDesc && e.Result && e.modifiedAnalyteDesc == key)\r\n      };\r\n    });\r\n    console.log('imgData', imgData)\r\n\r\n    // <!-- Presence Image List -->\r\n    if (this.isPresence) {\r\n      this.patientService.imgData = imgData;\r\n    } else {\r\n      // <!-- Left | Right Image List -->      \r\n      const imagesToDisplay = [\r\n        { 'mainGroupName': 'Left Ear', 'isVisible': false, data: [] },\r\n        { 'mainGroupName': 'Right Ear', 'isVisible': false, data: [] },\r\n        { 'mainGroupName': null, 'isVisible': false, data: [] }\r\n      ];\r\n      imagesToDisplay.forEach(ele => {\r\n\r\n        imgData.forEach(subEle => {\r\n          if (ele.mainGroupName == 'Left Ear') {\r\n            const images = subEle.Images.filter(imgObj => /LE_/.test(imgObj.Parameter));\r\n            if (!ele.isVisible && (images && images.length > 0)) {\r\n              ele.isVisible = true;\r\n            }\r\n            const subGroupedImages = {\r\n              'GroupName': subEle.GroupName,\r\n              'Images': images\r\n            }\r\n            ele.data.push(subGroupedImages);\r\n          } else if (ele.mainGroupName == 'Right Ear') {\r\n            const images = subEle.Images.filter(imgObj => /RE_/.test(imgObj.Parameter));\r\n            if (!ele.isVisible && (images && images.length > 0)) {\r\n              ele.isVisible = true;\r\n            }\r\n            const subGroupedImages = {\r\n              'GroupName': subEle.GroupName,\r\n              'Images': images\r\n            }\r\n            ele.data.push(subGroupedImages);\r\n          } else {\r\n            const subGroupedImages = {\r\n              'GroupName': subEle.GroupName,\r\n              'Images': subEle.Images.filter(imgObj => !(/LE_/.test(imgObj.Parameter) || /RE_/.test(imgObj.Parameter)))\r\n            }\r\n            ele.data.push(subGroupedImages);\r\n          }\r\n        })\r\n      })\r\n      console.log('patientService.imgData', imagesToDisplay);\r\n      this.patientService.imgData = imagesToDisplay;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public onDateChange(event) {\r\n    this.selectedDate = event.value;\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  public isGroup(index, item): boolean {\r\n    return item.isGroupBy;\r\n  }\r\n\r\n  public getDatasourceTopValue(AnalyteDescValue) {\r\n    let value = this.dataSourceTop.filter(ele => {\r\n      if (ele.AnalyteDesc == AnalyteDescValue) {\r\n        return ele;\r\n      }\r\n    })\r\n    value = value.length > 0 ? value[0].Result : null;\r\n    return value;\r\n  }\r\n\r\n  public formateText(txt) {\r\n    if (txt != undefined && txt != null) {\r\n      const val = txt.toString().trim().toLowerCase();\r\n      if (val == \"true\" || val == \"yes\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.Yes; // 'Yes';\r\n      } else if (val == \"false\" || val == \"no\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.No; // 'No';\r\n      }\r\n    }\r\n    return txt;\r\n  }\r\n\r\n  public viewImageSlider(imageList, imgIndex) {\r\n    const modalRef = this.modalService.open(ImageSliderComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      scrollable: false\r\n    });\r\n    modalRef.componentInstance.imageList = imageList;\r\n    modalRef.componentInstance.currentIndex = imgIndex;\r\n    modalRef.componentInstance.patientDetails = this.patientService.patientDetails;\r\n  }\r\n\r\n  firstLetterCapital(str) {\r\n    if (str) {\r\n      str = str.split('').map((e, i) => i == 0 ? e.toUpperCase() : e).join(',').replaceAll(',', '');\r\n      return str;\r\n    } else {\r\n      return str;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\n===> Template-2 Reports <=== \r\nNames & Pids:-\r\nAI Dermatology | patid1129\r\n*/","<div style=\"margin: 0px 0px 14px 0px;\">\r\n    <div class=\"row\" *ngIf=\"dataSourceTop.length>0\">\r\n        <div class=\"col-sm-12 col-md-4\" *ngIf=\"getDatasourceTopValue('Site location')\">\r\n            <strong class=\"head1\">\r\n                <!-- Site location: -->\r\n                {{labelService.dsAnaysisResultsScreen.SiteLocation}}:\r\n            </strong>\r\n            <span> {{getDatasourceTopValue('Site location')}} </span>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-4\" *ngIf=\"getDatasourceTopValue('Blood presence')\">\r\n            <strong class=\"head1\">\r\n                Blood presence:\r\n            </strong>\r\n            <span> {{getDatasourceTopValue('Blood presence')==='true'? 'Yes':'No'}} </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"!isCVET\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n            {{labelService.dsAnaysisResultsScreen.AvailableResults}}\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"onDateChange($event)\">\r\n                <mat-option *ngFor=\"let report of labReportDistinct\" [value]=\"report.DateReceived\">\r\n                    {{report.DateReceived}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n</div>\r\n<div class=\"temp-2\">\r\n    <table class=\"sticky_table\" mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"AnalyteDesc\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{selectedAnalysisType}}-{{selectedDate}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <img *ngIf=\"element.Definition\" class=\"test_info_icon\" src=\"assets/img/info-icon.svg\" alt=\"info-icon\"\r\n                    (click)=\"patientService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n                <span class=\"capitalize\"> {{ firstLetterCapital(element.AnalyteDesc) }} </span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Presence\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.presence}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{formateText(element.Result)}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Left_Ear\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                Left Ear\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{formateText(element.Left_Ear)}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Right_Ear\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                Right Ear\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{formateText(element.Right_Ear)}}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" class=\"mat-cont\"></tr>\r\n\r\n        <ng-container matColumnDef=\"groupHeader\">\r\n            <td mat-cell *matCellDef=\"let groupBy\" [attr.colspan]=\"displayedColumns.length\">\r\n                <h4 style=\"font-weight: bold;\"> {{groupBy.TestGroupName}} </h4>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['groupHeader']; when: isGroup\" class=\"student-detail-row\"></tr>\r\n\r\n    </table>\r\n</div>\r\n\r\n<div class=\"col-sm-12 m-comment px-0\" *ngIf=\"getDatasourceTopValue('Comments')\">\r\n    <h3 class=\"mt-3 head1\">\r\n        {{labelService.dsAnaysisResultsScreen.COMMENTS}}:\r\n    </h3>\r\n    <P> {{getDatasourceTopValue('Comments')}} </P>\r\n</div>\r\n\r\n<!-- Presence Image List -->\r\n<div class=\"col-sm-12 px-0\" style=\"margin-top: 14px;\">\r\n    <ng-container *ngIf=\"isPresence && patientService.imgData !==null && patientService.imgData.length>0\">\r\n        <div *ngFor=\"let data of patientService.imgData\" class=\"img-text text-one\">\r\n            <h3 *ngIf=\"data.Images.length>0\"> {{data.GroupName}} </h3>\r\n            <div class=\"d-flex justify-content-start align-items-center flex-wrap\">\r\n                <span class=\"imgpart mr-4\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                    <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\" class=\"mb-3\">\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Left | Right Image List -->\r\n    <ng-container *ngIf=\"!isPresence && patientService.imgData !==null && patientService.imgData.length>0\">\r\n        <div *ngFor=\"let imgData of patientService.imgData\" class=\"img-text\">\r\n            <h3 *ngIf=\"imgData.isVisible\"> {{imgData.mainGroupName}} </h3>\r\n            <div *ngFor=\"let data of imgData.data\">\r\n                <h3 class=\"capitalize\" *ngIf=\"data.Images.length>0\"> {{data.GroupName}} </h3>\r\n                <div class=\"d-flex justify-content-start align-items-center flex-wrap\">\r\n                    <span class=\"imgpart mr-4\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                        <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\" class=\"mb-3\">\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-template3',\r\n  templateUrl: './template3.component.html',\r\n  styleUrls: ['./template3.component.css']\r\n})\r\nexport class Template3Component implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent));\r\n  public isHideTblBackDates = false;\r\n\r\n  public rapidTestResults = [\"positive\", \"pos\", \"negative\", \"neg\"];\r\n  public isArroNavigation = false;\r\n  noOfDtColToShow: number = 4;\r\n  constructor(public patientService: PatientService, public labelService: LabelService, public dataService: DataService,) {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //write something code\r\n  }\r\n\r\n  public getColorCode(parameter) {\r\n    const colorList = [\r\n      { RapidTest: 'Anaplasma', ColorCode: '#ED701B' },\r\n      { RapidTest: 'cPL', ColorCode: '#035AF4' },\r\n      { RapidTest: 'Ehrlichia', ColorCode: '#712779' },\r\n      { RapidTest: 'FIV', ColorCode: '#C385A6' },\r\n      { RapidTest: 'FeLV', ColorCode: '#C385A6' },\r\n      { RapidTest: 'Heartworm', ColorCode: '#CE1D62' },\r\n      { RapidTest: 'Lyme', ColorCode: '#74B742' },\r\n      { RapidTest: 'Giardia', ColorCode: '#0097CD' },\r\n      { RapidTest: 'Parvo', ColorCode: '#00A399' },\r\n    ]\r\n    const reg = new RegExp(parameter ? parameter.toLowerCase() : null);\r\n    const color = colorList.filter(ele => reg.test(ele.RapidTest.toLowerCase()));\r\n    const colorCode = color.length > 0 ? color[0].ColorCode : '#ED701B';\r\n    return colorCode;\r\n  }\r\n\r\n  public getBackDates() {\r\n    const tblData = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n\r\n    if (!this.isArroNavigation) {\r\n      this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n      if (this.labReportDistinct.length <= 4) {\r\n        this.backDates = this.labReportDistinct;\r\n      } else if ((this.labReportDistinct.length - 3) <= this.selectedBackDateIndex) {\r\n        this.selectedBackDateIndex = this.labReportDistinct.length - 4;\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      } else {\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      }\r\n    }\r\n    this.backDates = this.backDates.map(ele => {\r\n      ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n      return ele;\r\n    });\r\n\r\n    this.dataService.appData['backDates'] = this.backDates;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    console.log('backDates ==>', this.backDates);\r\n\r\n    const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n    this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    // debugger\r\n    this.getBackDates();\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    if (this.isHideTblBackDates && !this.isCVET) {\r\n      this.displayedColumns = ['Test', 'selectedDate'];\r\n    } else if(this.isCVET) {\r\n      this.displayedColumns = ['Test', 'selectedDate', 'prevDate1'];\r\n    }else {\r\n      this.displayedColumns = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n\r\n    const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n    this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && (x.AnalyteName || x.AnalyteDesc) && !(x.Parameter && /IMG/.test(x.Parameter)) && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    // this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => (x.AnalyteName || x.AnalyteDesc) && !(x.Parameter && /IMG/.test(x.Parameter)) && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    this.labReportFiltered = this.labReportFiltered.map(ele => {\r\n      if (!this.rapidTestResults.includes(ele?.Result.toLowerCase())) {\r\n        ele.Result = 'ERROR';\r\n      }\r\n      if (ele.AnalyteName) {\r\n        ele.testToDisplay = ele.AnalyteName;\r\n      } else {\r\n        ele.testToDisplay = ele.AnalyteDesc;\r\n      }\r\n      return ele;\r\n    })\r\n\r\n    const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n    this.labReportFiltered.forEach((element, indx) => {\r\n      this.backDates.forEach((subEle, subIndx) => {\r\n        const nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.Parameter == element.Parameter);\r\n        if (nextDateData != undefined) {\r\n          if (!this.rapidTestResults.includes(nextDateData?.[\"Result\"].toLowerCase())) {\r\n            nextDateData[\"Result\"] = 'ERROR';\r\n          }\r\n          element['backDate' + subIndx] = nextDateData;\r\n          element['backDate' + subIndx + '_Indicator'] = nextDateData[\"Indicator\"];\r\n          element['backDate' + subIndx + '_RefRange'] = refRengeLabel + \": \" + (nextDateData[\"MinRange\"] != null ? nextDateData[\"MinRange\"] : \"\") + \"-\" + (nextDateData[\"MaxRange\"] != null ? nextDateData[\"MaxRange\"] : \"\");\r\n          element['backDate' + subIndx + '_Result'] = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"--\";\r\n          element['backDate' + subIndx + '_TestNote'] = nextDateData[\"Indicator\"];\r\n          element['backDate' + subIndx + '_Parameter'] = nextDateData[\"Indicator\"];\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n    console.log('**********labReportFiltered ************', this.labReportFiltered);\r\n  }\r\n\r\n  public onSelectDate(date) {\r\n    //if (this.isCVET) return;\r\n    this.patientService.markAs(date, 'READ');\r\n\r\n    date.AnalyzerDisplayName = date.DAPAnalyzerType == 'vetscan-ltf' && !(date.AnalyzerDisplayName.includes('+')) ? date.AnalyzerDisplayName + '+' : date.AnalyzerDisplayName;\r\n    this.dataService.appData.tblTopPatientDetails = date;\r\n\r\n    this.isArroNavigation = false;\r\n    this.selectedDate = date.DateReceived;\r\n    this.selectedBackDate = date.DateReceived;\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.selectedDate = this.labReportDistinct[this.selectedBackDateIndex].DateReceived;\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  public prevResult() {\r\n    this.isArroNavigation = true;\r\n    if (this.labReportDistinct.length <= 4 || this.selectedBackDateIndex == 0) return;\r\n    this.selectedBackDateIndex--;\r\n    this.selectedBackDate = this.selectedBackDateIndex == 0 ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex - 1].DateReceived;\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  public nextResult() {\r\n    this.isArroNavigation = true;\r\n    if ((this.backDates.length - 4) <= 0) return;\r\n    this.selectedBackDateIndex++;\r\n    this.selectedBackDate = this.selectedBackDateIndex == (this.labReportDistinct.length - 1) ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex + 1].DateReceived;\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n}\r\n\r\n/*\r\n===> Template-3 Reports <=== \r\nNames & Pids:-\r\n\r\nEhrlichia Rapid Test | 6598 L\r\nParvo Rapid Test | 6598 L\r\nAnaplasma Rapid Test | 6598 L\r\nGiardia Rapid Test | 6598 L\r\nLyme Rapid Test | 6598 L\r\nHeartworm Rapid Test | 6598 L\r\nFeLV_Fiv Rapid Test | 6598 L\r\nFlex4 Rapid Test | 6598 L\r\nCanine Blood Typing | 6598 L\r\nFeline Blood Typing | 6598 L\r\n\r\n*/","<div class=\"temp1\" *ngIf=\"dataSource?.data.length\">\r\n    <table mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"Test\">\r\n            <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Test}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div>\r\n                    <p style=\"width: 165px;\">\r\n                        <img src=\"../../../../assets/img/info-icon.svg\"\r\n                            [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\"\r\n                            [matTooltipPosition]=\"'above'\" class=\"test_info_icon pl-1\" alt=\"info-icon\"\r\n                            *ngIf=\"element.Definition\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                        <span class=\"circle-char\" [ngStyle]=\"{'background': getColorCode(element.testToDisplay)}\"\r\n                            *ngIf=\"element.testToDisplay\">\r\n                            {{element.testToDisplay.charAt(0)}}\r\n                        </span>\r\n                        <span *ngIf=\"element.testToDisplay\"> {{element.testToDisplay}} </span>\r\n                    </p>\r\n                    <p class=\"elipsis\" *ngIf=\"dataSource.data.length !== 1\">\r\n                        {{element.TestNote}}\r\n                    </p>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"selectedDate\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"date_block\">{{selectedDate}}</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\"> <span style=\"font-weight: bolder;color: #000000;\">{{element.Result}}\r\n                </span></td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p [ngClass]=\"backDates[0].DateReceived===selectedDate?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    <span>\r\n                        {{element.backDate0_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].DateReceived===selectedDate}\"\r\n                    class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[1] && backDates[1].Result\"\r\n                    (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"backDates[1].DateReceived===selectedDate?'col-bg':'text-lighter'\"\r\n                    class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    <span>\r\n                        {{element.backDate1_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].DateReceived===selectedDate}\"\r\n                    class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[2] && backDates[2].Result\"\r\n                    (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"backDates[2].DateReceived===selectedDate?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    <span>\r\n                        {{element.backDate2_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].DateReceived===selectedDate}\"\r\n                    class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[3] && backDates[3].Result\"\r\n                    (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"backDates[3].DateReceived===selectedDate?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[3] && backDates[3].Result\">\r\n                    <span>\r\n                        {{element.backDate3_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\">\r\n        </tr>\r\n\r\n    </table>\r\n\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n\r\n@Component({\r\n  selector: 'app-template4',\r\n  templateUrl: './template4.component.html',\r\n  styleUrls: ['./template4.component.css']\r\n})\r\nexport class Template4Component extends ResultDetailsHelper implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n  public dsImagyst: any[] = [];\r\n\r\n  public dataSource: MatTableDataSource<any>;\r\n  public dataSourceUA: MatTableDataSource<any>;\r\n\r\n  public displayedColumnsSA = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public displayedColumnsUA = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    const labReportWithoutImage = this.labReportFilterByAnalysisType.filter(ele => !(/_IMG/.test(ele.Parameter)))\r\n    this.labReportDistinct = [...new Map(labReportWithoutImage.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport()\r\n\r\n    this.getImageData();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    if (this.isHideTblBackDates && !this.isCVET) {\r\n      this.displayedColumnsSA = ['Test', 'selectedDate'];\r\n      this.displayedColumnsUA = ['Test', 'selectedDate'];\r\n    } else if(this.isCVET) {\r\n      this.displayedColumnsSA = ['Test', 'selectedDate', 'prevDate1'];\r\n      this.displayedColumnsUA = ['Test', 'selectedDate', 'prevDate1'];\r\n    }else {\r\n      this.displayedColumnsSA = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n      this.displayedColumnsUA = ['Test', 'selectedDate', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-4 Reports <=== \r\nNames & Pids:-\r\nUrine Sediment and UA10 | 000034\r\nUrine Sediment\r\nUrine Sediment and UA14 \r\nUA10 | Fiji barber - 00025\r\nUA14\r\n\r\n*/","<div class=\"\" style=\"margin: 0px 0px 14px 0px;\">\r\n    <div class=\"row\">\r\n        <ng-container *ngFor=\"let top of dataSourceTop\">\r\n            <div class=\"col-sm-12 col-md-4\" *ngIf=\"top.Result\">\r\n                <strong class=\"head1\"> {{top.AnalyteDesc}}: </strong>\r\n                <span> {{top.Result}} </span>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"temp1\">\r\n    <table *ngIf=\"dataSource && dataSource.data.length>0\" mat-table [dataSource]=\"dataSource\" summary=\"\"\r\n        multiTemplateDataRows>\r\n        <ng-container matColumnDef=\"Test\">\r\n            <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div>\r\n                    <p style=\"width: 150px;\">\r\n                        <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"\"\r\n                            *ngIf=\"element.Definition\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                        <span> {{element.Parameter}} </span>\r\n                    </p>\r\n                    <p class=\"elipsis\" *ngIf=\"dataSource.data.length !== 1\">\r\n                        {{element.TestNote}}\r\n                    </p>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"selectedDate\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"date_block\">{{selectedDate}}</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <!-- {{element.Result+' '+element.Units}}  -->\r\n                <span style=\"font-weight: bold;padding-right: 1%;\">{{element.Result}}</span>\r\n                <span class=\"text-lighter\">{{(element.Units||'')}}</span>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p [ngClass]=\"{'col-bg':backDates[0].selected}\" *ngIf=\"backDates[0] && backDates[0].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate0_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\" (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate1_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[2] && backDates[2].Result\" (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[2].selected}\" *ngIf=\"backDates[2] && backDates[2].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate2_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[3] && backDates[3].Result\" (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[3].selected}\" *ngIf=\"backDates[3] && backDates[3].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate3_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSA; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumnsSA;let i = dataIndex;\"\r\n            (click)=\"selectedRow(i, element)\" class=\"student-element-row\"\r\n            [class.student-expanded-row]=\"element === expandedElement\"></tr>\r\n\r\n    </table>\r\n\r\n    <!-- dataSourceUA -->\r\n    <table *ngIf=\"dataSourceUA && dataSourceUA.data.length>0\" mat-table [dataSource]=\"dataSourceUA\" summary=\"\" class=\"\"\r\n        multiTemplateDataRows>\r\n        <ng-container matColumnDef=\"Test\">\r\n            <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef> Test </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div>\r\n                    <p style=\"width: 150px;\">\r\n                        <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"info-icon\"\r\n                            *ngIf=\"element.Definition\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                        <span> {{element.Parameter}} </span>\r\n                    </p>\r\n                    <p class=\"elipsis\" *ngIf=\"dataSource.data.length !== 1\">\r\n                        {{element.TestNote}}\r\n                    </p>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"selectedDate\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"date_block\">{{selectedDate}}</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: left;\">\r\n                 <!-- {{element.Result+' '+element.Units}}  -->\r\n                 <span style=\"font-weight: bolder;padding-right: 1%;\">{{element.Result}}</span>\r\n                 <span class=\"text-lighter\">{{(element.Units||'')}}</span>\r\n                </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p [ngClass]=\"{'col-bg':backDates[0].selected}\" *ngIf=\"backDates[0] && backDates[0].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate0_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\" (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate1_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[2] && backDates[2].Result\" (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[2].selected}\" *ngIf=\"backDates[2] && backDates[2].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate2_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[3] && backDates[3].Result\" (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"{'col-bg':backDates[3].selected}\" *ngIf=\"backDates[3] && backDates[3].Result\">\r\n\r\n                    <span>\r\n                        {{element.backDate3_Result}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsUA; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumnsUA;let i = dataIndex;\"\r\n            (click)=\"selectedRow(i, element)\" class=\"student-element-row\"\r\n            [class.student-expanded-row]=\"element === expandedElement\"></tr>\r\n\r\n    </table>\r\n\r\n    <!-- images -->\r\n    <div class=\"col-sm-12\" style=\"margin-top: 14px;\">\r\n        <ng-container *ngIf=\"patientService.imgData !==null && patientService.imgData.length>0\">\r\n            <div class=\"Headcontent\" *ngFor=\"let data of patientService.imgData\">\r\n                <div class=\"row\">\r\n                    <span class=\"col-sm-3 text-center imgpart\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                        <p class=\"analyte-img-title\">\r\n                            {{ele.Parameter}}\r\n                        </p>\r\n                        <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\">\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n\r\n@Component({\r\n  selector: 'app-template5',\r\n  templateUrl: './template5.component.html',\r\n  styleUrls: ['./template5.component.css']\r\n})\r\nexport class Template5Component extends ResultDetailsHelper implements OnInit, OnChanges {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['AnalyteDesc', 'ResultDetection', 'ResultCount', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    if (this.selectedAnalysisType == 'AI Fecal Equine' || this.selectedAnalysisType == 'AI Equine Fecal Egg Count') {\r\n      this.displayedColumns = ['AnalyteDesc', 'ResultDetection', 'ResultCount', 'EPG', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    if (this.isHideTblBackDates && !this.isCVET) {\r\n      this.displayedColumns = ['AnalyteDesc', 'ResultDetection', 'ResultCount'];\r\n    } else if(this.isCVET) {\r\n      this.displayedColumns = ['AnalyteDesc', 'ResultDetection', 'ResultCount', 'prevDate1'];\r\n    }else {\r\n      this.displayedColumns = ['AnalyteDesc', 'ResultDetection', 'ResultCount', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n  }\r\n\r\n  public getDatasourceTopValue(AnalyteDescValue) {\r\n    let value = this.dataSourceTop.filter(ele => {\r\n      if (ele.AnalyteDesc == AnalyteDescValue) {\r\n        return ele;\r\n      }\r\n    })\r\n    value = value.length > 0 ? value[0].Result : null;\r\n    return value;\r\n  }\r\n\r\n  public formateText(elem, field) {\r\n    let txt = this.selectedAnalysisType == 'AI Equine Fecal Egg Count' ? elem[field.replace('Detection', '')] : elem[field];\r\n    if (txt != undefined && txt != null) {\r\n      const val = txt.toString().trim().toLowerCase();\r\n      if (val == \"true\" || val == \"yes\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.Yes;\r\n      } else if (val == \"false\" || val == \"no\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.No;\r\n      }\r\n    }\r\n    return txt;\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-5 Reports <=== \r\nNames & Pids:-\r\nFecal Giardia | patfg0926 - patfg0926\r\nFecal Ova/Oocysts\r\nAI Fecal Equine | SPataifecaleq - 150623001\r\nAI Equine Fecal Egg Count | pataifecal0815 - pataifecal0815\r\n\r\n*/","<div class=\"\" style=\"margin: 0px 0px 14px 0px; word-wrap: break-word;\">\r\n    <div class=\"row\" *ngIf=\"dataSourceTop.length>0\">\r\n        <div class=\"col-sm-12 col-md-6 col-lg-4\" *ngIf=\"getDatasourceTopValue('Color')\">\r\n            <strong class=\"head1\">\r\n                Color:\r\n            </strong>\r\n            <span [innerHTML]=\"getDatasourceTopValue('Color')\"> </span>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-6 col-lg-4\" *ngIf=\"getDatasourceTopValue('Consistency')\">\r\n            <strong class=\"head1\">\r\n                Consistency:\r\n            </strong>\r\n            <span [innerHTML]=\"getDatasourceTopValue('Consistency')\"> </span>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-6 col-lg-4\" *ngIf=\"getDatasourceTopValue('Comments')\">\r\n            <strong class=\"head1\">\r\n                Comments:\r\n            </strong>\r\n            <span [innerHTML]=\"getDatasourceTopValue('Comments')\"></span>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-6 col-lg-4\" *ngIf=\"getDatasourceTopValue('Solution')\">\r\n            <strong class=\"head1\">\r\n                Solution:\r\n            </strong>\r\n            <span [innerHTML]=\"getDatasourceTopValue('Solution')\"></span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"temp5\">\r\n    <table class=\"sticky_table\" mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"AnalyteDesc\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{selectedAnalysisType}}-{{selectedDate}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <img *ngIf=\"element.Definition\" class=\"test_info_icon\" src=\"assets/img/info-icon.svg\" alt=\"info-icon\"\r\n                    (click)=\"patientService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n                {{ element.AnalyteDesc }}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ResultDetection\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Detected}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span style=\"font-weight: bolder;color: #000000;\">{{formateText(element, 'ResultDetection')}}</span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ResultCount\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Count}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.ResultCount }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"EPG\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span>EPG</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.ResultEPG }}\r\n            </td>\r\n        </ng-container>\r\n\r\n        <!-- Back Dates -->\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" style=\"border-left: 3px solid #ece7e7;\"\r\n                class=\"arrow-bg\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p style=\"position: relative;\" [ngClass]=\"backDates[0].selected?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[0] && backDates[0].DateReceived\">\r\n                    <span *ngIf=\"element.backDate0 && element.backDate0_ResultDetection\"\r\n                        (mouseover)='showToolTip($event, i, 0)' (mouseout)='hideTooltip(i, 0)'>\r\n                        {{formateText(element, 'backDate0_ResultDetection')}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}0\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate0_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[1]\" (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"arrow-bg-date\">\r\n                <p style=\"position: relative;\" [ngClass]=\"backDates[1].selected?'col-bg':'text-lighter'\"\r\n                    class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\" *ngIf=\"backDates[1] && backDates[1].DateReceived\">\r\n                    <span *ngIf=\"element.backDate1 && element.backDate1_ResultDetection\"\r\n                        (mouseover)='showToolTip($event, i, 1)' (mouseout)='hideTooltip(i, 1)'>\r\n                        {{formateText(element, 'backDate1_ResultDetection')}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}1\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate1_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[2]\" (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"arrow-bg-date\">\r\n                <p style=\"position: relative;\" [ngClass]=\"backDates[2].selected?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[2] && backDates[2].DateReceived\">\r\n                    <span *ngIf=\"element.backDate2 && element.backDate2_ResultDetection\"\r\n                        (mouseover)='showToolTip($event, i, 2)' (mouseout)='hideTooltip(i, 2)'>\r\n                        {{formateText(element, 'backDate2_ResultDetection')}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}2\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate2_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\" class=\"arrow-bg-date\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[3]\" (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative;\" [ngClass]=\"backDates[3].selected?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[3] && backDates[3].DateReceived\">\r\n                    <span *ngIf=\"element.backDate3 && element.backDate3_ResultDetection\"\r\n                        (mouseover)='showToolTip($event, i, 3)' (mouseout)='hideTooltip(i, 3)'>\r\n                        {{formateText(element, 'backDate3_ResultDetection')}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}3\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate3_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Back Dates End -->\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n    <p style=\"margin: 25px 7px;\" *ngIf=\"isEimeria\">\r\n        {{labReportFiltered[0].DisclaimerText}}\r\n    </p>\r\n</div>\r\n\r\n<!-- images -->\r\n<div class=\"col\" style=\"margin-top: 14px;\">\r\n    <ng-container *ngIf=\"patientService.imgData && patientService.imgData.length>0\">\r\n        <div class=\"Headcontent\" *ngFor=\"let data of patientService.imgData\">\r\n            <h5 *ngIf=\"data.Images.length>0\" class=\"analyte-desc\" style=\"font-weight: bold;margin: 5px;\">\r\n                {{data.GroupName}}\r\n            </h5>\r\n            <div class=\"row\" *ngIf=\"data.Images && data.Images.length>0\">\r\n                <div class=\"imgpart col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                    <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, CommonService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-template6',\r\n  templateUrl: './template6.component.html',\r\n  styleUrls: ['./template6.component.css']\r\n})\r\nexport class Template6Component extends ResultDetailsHelper implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  @Output() viewImages: EventEmitter<any> = new EventEmitter();\r\n\r\n  public clinicalHistory: any;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public commonService: CommonService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n\r\n    this.labReportDistinct = this.labReportDistinct.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //do something\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    this.dataService.appData['backDates'] = this.backDates;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    this.backDates = this.backDates.map(ele => {\r\n      ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n      return ele;\r\n    });\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(ele => {\r\n      if (ele.DateReceived == this.selectedDate) {\r\n        return ele;\r\n      }\r\n    })\r\n\r\n    const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n    this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n    this.patientService.cytoTestData = [];\r\n    this.patientService.cytoTestSingnature = [];\r\n    this.patientService.cytoTestDisclaimerText = \"\";\r\n\r\n    if (this.labReportFiltered.length) {\r\n      this.patientService.cytoTestSingnature = this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.CytoTest && x.Parameter != null && x.Parameter.toLowerCase().indexOf('s_') == 0);     // parameter value should be start with s_\r\n      this.patientService.cytoTestDisclaimerText = this.labResults['DisclaimerText'];\r\n\r\n      this.clinicalHistory = this.labReportFiltered.filter(x => {\r\n        if (x.AnalyteDesc == 'Clinical History') {\r\n          x.Result = x.Result.replaceAll(\"\\n\\n\", \"<br/><br/>\");\r\n          return x\r\n        }\r\n      })[0];\r\n      console.log(' clinicalHistory => ', this.clinicalHistory);\r\n\r\n      this.labReportFiltered = this.labReportFiltered.filter(x => (x.AnalyteDesc != 'Clinical History'));\r\n\r\n      this.labReportFiltered = this.labReportFiltered.filter(x => (x.TestTypeId == EnmTestType.CytoTest || (/data:image/.test(x.Result) || /IMG64/.test(x.Parameter))) && x.Parameter && x.Parameter.toLowerCase().indexOf('s_') != 0);\r\n      const siteCount = []\r\n      this.patientService.cytoTestData = Array.from(new Set(this.labReportFiltered.map(x => x.Parameter.split(\"_\")[0])))\r\n        .map((key, index) => {\r\n          // const siteCount = this.labReportFiltered.filter(ele => new RegExp('SITE_NAME', \"gmi\").test(ele.Parameter));\r\n          if (!siteCount.includes(key)) {\r\n            siteCount.push(key);\r\n          }\r\n          return {\r\n            'siteName': (siteCount.length > 1 ? 'Sites ' : 'Site ') + (index + 1) + '/' + siteCount.length,\r\n            'GroupName': (this.labReportFiltered.find(e => e.TestTypeId == EnmTestType.CytoTest && e.Parameter && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc && e.AnalyteDesc.toLowerCase() == 'site name') != undefined ? (this.labReportFiltered.find(e => e.Parameter && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc && e.AnalyteDesc.toLowerCase() == 'site name').Result) : \"\"),\r\n            'CytoTestImages': this.labReportFiltered.filter(e => {\r\n              if ((/IMG64/.test(e.Parameter) && e.Result) && e.Parameter && e.Parameter.indexOf(key) == 0) {\r\n                return e;\r\n              }\r\n            }),\r\n            'CytoTests': this.labReportFiltered.filter(e => e.TestTypeId == EnmTestType.CytoTest && e.Parameter != null && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc && e.AnalyteDesc.toLowerCase() != 'site name'),\r\n            // 'DisclaimerText': this.labReportFiltered.find(e => e.DisclaimerText && e.Parameter && /SITE_NAME/.test(e.Parameter)) ? this.labReportFiltered.find(e => e.DisclaimerText && e.Parameter && /SITE_NAME/.test(e.Parameter)).DisclaimerText : null\r\n            'DisclaimerText': this.labReportFiltered.find(e => e.DisclaimerText && e.Parameter && new RegExp(key, \"gmi\").test(e.Parameter)) ? this.labReportFiltered.find(e => e.DisclaimerText && e.Parameter && new RegExp(key, \"gmi\").test(e.Parameter)).DisclaimerText : null\r\n          };\r\n        });\r\n      console.log('this.patientService.cytoTestData =>', this.patientService.cytoTestData);\r\n    }\r\n  }\r\n\r\n  public onDateChange(event) {\r\n    this.selectedDate = event.value;\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-6 Reports <=== \r\nNames & Pids:-\r\nDigital Cytology | patdc104 - patid104\r\nAdd-On Expert Review | AIDerm - 24523\r\n\r\n*/","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <ng-container *ngIf=\"!isCVET\">\r\n            <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n                {{labelService.dsAnaysisResultsScreen. AvailableResults}}:\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"onDateChange($event)\">\r\n                    <mat-option *ngFor=\"let report of labReportDistinct\" [value]=\"report.DateReceived\">\r\n                        {{report.DateReceived}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </ng-container>\r\n        <h1 class=\"note-title\" *ngIf=\"selectedAnalysisType\"> {{selectedAnalysisType}} - {{selectedDate}} </h1>\r\n    </div>\r\n    <div class=\"col-sm-12\">\r\n        <div *ngIf=\"clinicalHistory\">\r\n            <span style=\"font-weight: bold;\"> {{clinicalHistory.AnalyteDesc}}: </span><br>\r\n            <span [innerHTML]=\"clinicalHistory.Result\"> </span>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"patientService.cytoTestData !==null && patientService.cytoTestData.length>0\">\r\n            <div class=\"Headcontent\" *ngFor=\"let data of patientService.cytoTestData\">\r\n                <br />\r\n                <h5 class=\"font-weight-bold\"> {{data.siteName}} </h5>\r\n                <p class=\"font-weight-bold\"> {{data.GroupName}} </p>\r\n                <div class=\"row\" *ngIf=\"data.CytoTestImages.length>0\">\r\n                    <span class=\"col-sm-3 text-center imgpart\"\r\n                        *ngFor=\"let imgData of data.CytoTestImages; let imgIndex=index;\">\r\n                        <img [src]=\"imgData.Result\" (click)=\"viewImageSlider(data.CytoTestImages, imgIndex);\" alt=\"\">\r\n                    </span>\r\n                </div>\r\n                <div class=\"row contP\">\r\n                    <span class=\"col-sm-12 contentpart\" *ngFor=\"let testData of data.CytoTests\">\r\n                        <p class=\"analyte-desc\" style=\"font-weight: bold;\">\r\n                            {{testData.AnalyteDesc.toLowerCase() === 'notes'?'Comments':testData.AnalyteDesc}}:\r\n                        </p>\r\n                        <p class=\"analyte-img-title\" style=\"font-weight: 100;\"> {{testData.Result}} </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"patientService.cytoTestSingnature !==null && patientService.cytoTestSingnature.length>0\">\r\n            <div class=\"row SignP\">\r\n                <span class=\"col-sm-12 sigpart\" *ngFor=\"let signData of patientService.cytoTestSingnature\">\r\n                    <p class=\"analyte-desc\"> {{signData.AnalyteDesc}} </p>\r\n                    <p class=\"analyte-img-title\"> {{signData.Result}} </p>\r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container\r\n            *ngIf=\"patientService.cytoTestData && patientService.cytoTestData[0] && patientService.cytoTestData[0].DisclaimerText\">\r\n            <div class=\"disclaimer\">\r\n                <p class=\"analyte-desc\">\r\n                    <strong>{{labelService.dsAnaysisResultsScreen.Disclaimer}}:</strong>\r\n                    <br>\r\n                    <span> {{patientService.cytoTestData[0].DisclaimerText}} </span>\r\n                </p>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n\r\n@Component({\r\n  selector: 'app-template7',\r\n  templateUrl: './template7.component.html',\r\n  styleUrls: ['./template7.component.css']\r\n})\r\nexport class Template7Component extends ResultDetailsHelper implements OnChanges, OnInit, OnDestroy {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public dsImagyst: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['Test', 'selectedDate', 'Graph', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  public tblTopPatientDetails: any;\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n\r\n    this.tblTopPatientDetails = this.dataService.appData.tblTopPatientDetails;\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    const labReportDistinct = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    this.labReportDistinct = [...new Map(labReportDistinct.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    if (this.isHideTblBackDates && !this.isCVET) {\r\n      this.displayedColumns = ['Test', 'selectedDate', 'Graph'];\r\n    } else if(this.isCVET) {\r\n        this.displayedColumns = ['Test', 'selectedDate', 'Graph', 'prevDate1'];\r\n      }else {\r\n      this.displayedColumns = ['Test', 'selectedDate', 'Graph', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataService.appData['backDates'] = [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n    return rtnValue;\r\n  }\r\n\r\n  public isBoolean(val): boolean { return val == 'true' || val == 'false'; }\r\n\r\n  public formateText(txt) {\r\n    if (txt != undefined && txt != null) {\r\n      const val = txt.toString().trim().toLowerCase();\r\n      if (val == \"yes\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.Yes;\r\n      } else if (val == \"no\") {\r\n        txt = this.labelService.dsAnaysisResultsScreen.No;\r\n      }\r\n    }\r\n    return txt;\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-7 Reports <=== \r\nNames & Pids:-\r\nAI Blood Smear | hubbs\r\n\r\n*/","<div class=\"temp1\">\r\n    <table style=\"width: 100%;\" class=\"sticky_table\" mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n\r\n        <ng-container matColumnDef=\"Test\">\r\n            <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p [ngClass]=\"element?.isChildTest ? 'indent-test' : ''\">\r\n                    <img src=\"../../../../assets/img/info-icon.svg\"\r\n                        [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"\r\n                        class=\"test_info_icon pl-1\" *ngIf=\"element.Definition\" alt=\"info-icon\"\r\n                        (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                    <span [ngStyle]=\"{'font-weight': element?.isHeader ? 'bold' : '' }\"> {{element.AnalyteDesc}} </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"selectedDate\">\r\n            <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}} </span></th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span *ngIf=\"!isBoolean(element.Result)\" style=\"font-weight: 600; padding-right: 1%;color: #000000;\">\r\n                    {{element.Result}}\r\n                </span>\r\n                <span *ngIf=\"!isBoolean(element.Result)\" class=\"text-lighter\">\r\n                    {{element.Units}}\r\n                </span>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Graph\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Graph}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div class=\"d-flex  align-items-center justify-content-between resultBlock tempt7\" id=\"result-block\">\r\n                    <span class=\"w-100 d-flex  align-items-center graph-wrapper resultBlocks\">\r\n                        <mat-slider *ngIf=\" element.isGraphView\" mode=\"determinate\" min=\"-12\" max=\"104\"\r\n                            value=\"{{element.GraphResult ? element.GraphResult.toFixed(2) : 0}}\">\r\n                        </mat-slider>\r\n                        <span *ngIf=\"isBoolean(element.Result)\">\r\n                            {{element.Result=== 'true' ? 'Present':'Not Found'}}\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p style=\"position: relative; margin-top: 20px; {{ isCVET ? 'width: 100%;' : '' }}\"\r\n                    [ngClass]=\"backDates[0].selected?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    <span (mouseover)='showToolTip($event, i, 0)' (mouseout)='hideTooltip(i, 0)'>\r\n                        {{element.backDate0_Result}} </span>\r\n                    <span id=\"bkotooltip{{i}}0\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate0_ToolTipStr\">\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\" (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; margin-top: 20px; {{ isCVET ? 'width: 100%;' : '' }}\"\r\n                    [ngClass]=\"backDates[1].selected?'col-bg':'text-lighter'\" class=\"back-date \"\r\n                    *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    <span (mouseover)='showToolTip($event, i, 1)' (mouseout)='hideTooltip(i, 1)'>\r\n                        {{element.backDate1_Result}} </span>\r\n                    <span id=\"bkotooltip{{i}}1\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate1_ToolTipStr\">\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[2] && backDates[2].Result\" (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; margin-top: 20px; {{ isCVET ? 'width: 100%;' : '' }}\"\r\n                    [ngClass]=\"backDates[2].selected?'col-bg':'text-lighter'\"\r\n                    *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    <span (mouseover)='showToolTip($event, i, 2)' (mouseout)='hideTooltip(i, 2)'>\r\n                        {{element.backDate2_Result}} </span>\r\n                    <span id=\"bkotooltip{{i}}2\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate2_ToolTipStr\">\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[3] && backDates[3].Result\" (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; margin-top: 20px; {{ isCVET ? 'width: 100%;' : '' }}\"\r\n                    [ngClass]=\"backDates[3].selected?'col-bg':'text-lighter'\" *ngIf=\"backDates[3]?.Result\">\r\n                    <span (mouseover)='showToolTip($event, i, 3)' (mouseout)='hideTooltip(i, 3)'>\r\n                        {{element.backDate3_Result}} </span>\r\n                    <span id=\"bkotooltip{{i}}3\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate3_ToolTipStr\">\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\">\r\n        </tr>\r\n\r\n    </table>\r\n</div>\r\n\r\n<!-- images -->\r\n<div class=\"col-sm-12\">\r\n    <ng-container *ngIf=\"dataSourceTop && dataSourceTop.length>0\">\r\n        <div class=\"row contP\">\r\n            <span class=\"col-sm-12 sigpart\" *ngFor=\"let topSource of dataSourceTop\">\r\n                <ng-container *ngIf=\"topSource.AnalyteDesc && topSource.Result\">\r\n                    <p class=\"analyte-desc mb-0\"> {{topSource.AnalyteDesc}}: </p>\r\n                    <p class=\"analyte-result mb-3\" [innerHTML]=\"topSource.Result\"> </p>\r\n                </ng-container>\r\n            </span>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"patientService.imgData?.length>0\">\r\n        <div class=\"Headcontent\" *ngFor=\"let data of patientService.imgData\">\r\n            <ng-container *ngIf=\"data?.Images?.length>0\">\r\n                <h5 class=\"analyte-desc\"> {{data.GroupName | titlecase}} </h5>\r\n                <div class=\"row\">\r\n                    <span class=\"imgpart\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                        <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\">\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"tblTopPatientDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\" *ngIf=\"tblTopPatientDetails.RefRangeDisclaimerText\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body card-bg card-part\">\r\n                        <p class=\"analyte-desc mb-0\">\r\n                            {{labelService.dsAnaysisResultsScreen.ReferenceRanges}}:\r\n                        </p>\r\n                        <p class=\"analyte-result mb-0\">\r\n                            {{tblTopPatientDetails.RefRangeDisclaimerText}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 mt-4\" *ngIf=\"tblTopPatientDetails.DisclaimerText\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body card-bg\">\r\n                        <p class=\"analyte-desc mb-0\">\r\n                            {{labelService.dsAnaysisResultsScreen.Disclaimer}}:\r\n                        </p>\r\n                        <p class=\"analyte-result mb-0\">\r\n                            {{tblTopPatientDetails.DisclaimerText}}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-template8',\r\n  templateUrl: './template8.component.html',\r\n  styleUrls: ['./template8.component.css']\r\n})\r\nexport class Template8Component extends ResultDetailsHelper implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['Date', 'Result', 'Units', 'Activity'];\r\n  public dataSource: MatTableDataSource<any>;\r\n\r\n  public dataSourceGraphPoint1: any[] = [];\r\n  public dataSourceGraphPoint2: any[] = [];\r\n  public graphAxisYTitle = \"\";\r\n  public sliderMax = 0;\r\n\r\n  public displayImg: string;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    this.labReportDistinct = this.labReportDistinct.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    if (this.labReportDistinct.length == 1) {\r\n      this.selectedDate = this.labReportDistinct[0].DateReceived;\r\n    }\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  public onSelectDate(event) {\r\n    this.selectedDate = event.value;\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //do something\r\n  }\r\n\r\n  public filterAndUpdateReport(): void {\r\n    this.backDates = this.labReportDistinct.map(ele => {\r\n      ele.selected = ele.DateReceived == this.selectedDate ? true : false;\r\n      return ele;\r\n    });\r\n    const d = this.labReportDistinct.filter(x => x.DateReceived == this.selectedDate)\r\n    this.dataService.appData.tblTopPatientDetails = d[0];\r\n    this.dataService.appData['backDates'] = d;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.dataService.appData['backDateToPrint'] = d;\r\n\r\n    this.dataSourceTop = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.TestTypeId == EnmTestType.Top);\r\n    this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.Parameter.indexOf('_IMG') != -1);\r\n    this.displayImg = this.dsImagyst.length > 0 ? this.dsImagyst[0].Result : '';\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n    const customLabReport = [];\r\n    let counter = 0;\r\n    let tempObj = {};\r\n\r\n    this.labReportFiltered.forEach((ele, index) => {\r\n      switch (ele.Parameter) {\r\n        case 'Glu_Date':\r\n          tempObj['Date'] = ele.Result;\r\n          break;\r\n        case 'Glu':\r\n          tempObj['Result'] = ele.Result;\r\n          tempObj['Units'] = ele.Units;\r\n          break;\r\n        case 'Glu_Aft_Insu':\r\n          tempObj['displayInsulinIcon'] = ele.Result;\r\n          break;\r\n        case 'Glu_Aft_Meal':\r\n          tempObj['displayMealIcon'] = ele.Result;\r\n          break;\r\n      }\r\n\r\n      if (index + 1 < this.labReportFiltered.length) {\r\n        // if (++counter >= 3) {\r\n        const nextEle = this.labReportFiltered[(index + 1)];\r\n        const optional = (nextEle.Parameter == 'Glu' || nextEle.Parameter == 'Comments' || /Glu_Img/.test(nextEle.Parameter));\r\n        const required = (Object.keys(tempObj).includes('Date') && Object.keys(tempObj).includes('Result') && Object.keys(tempObj).includes('Unites'))\r\n        if (tempObj['Date'] && (required || optional)) {\r\n          customLabReport.push({ ...tempObj });\r\n          tempObj = {};\r\n          counter = 0;\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log('labReportFiltered ', customLabReport);\r\n    this.dataSource = new MatTableDataSource<any>(customLabReport);\r\n\r\n  }\r\n\r\n  public formateDate(dateStr: string) {\r\n    const selectedDateFormate = localStorage?.DateTimeFormat;\r\n    // const dateFormatList = this.dataService.appData?.userDropDownList?.['DateFormatList'];\r\n    if (dateStr) {\r\n      if (selectedDateFormate == \"DD. MM. YYYY\" || selectedDateFormate == \"YYYY. MM. DD.\" || selectedDateFormate == \"DD. MM. YYYY.\") {\r\n        let strArray = dateStr.split(' ');\r\n        let time = strArray.splice(3, 2);\r\n        strArray = time.concat(strArray);\r\n        return strArray.join(' ');\r\n      } else {\r\n        const strArray = dateStr.split(' ');\r\n        dateStr = strArray[1] + ' ' + (strArray[2] ? strArray[2] : '') + ' ' + strArray[0];\r\n        return dateStr;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-8 Reports <=== \r\nNames & Pids:-\r\nGlucose | Glucose - 20123\r\n\r\n*/","<section>\r\n    <div *ngIf=\"!isCVET\" class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n        {{labelService.dsAnaysisResultsScreen.AvailableResults}}\r\n    </div>\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\" *ngIf=\"!isCVET\">\r\n        <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"onSelectDate($event)\">\r\n            <mat-option *ngFor=\"let report of labReportDistinct\" [value]=\"report.DateReceived\">\r\n                {{report.DateReceived}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <div class=\"mb-4\" *ngIf=\"displayImg\">\r\n        <p class=\"temp-title\"> {{labelService.dsAnaysisResultsScreen.GlucoseCurve}} </p>\r\n        <div class=\"text-center temp-img\">\r\n            <img style=\"width: 100%;\" src=\"{{displayImg}}\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <table mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n            <ng-container matColumnDef=\"Date\">\r\n                <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n                    {{labelService.dsAnaysisResultsScreen.Date}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element;let i = dataIndex\">\r\n                    <p> {{formateDate(element.Date)}} </p>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"Result\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <span class=\"date_block\">\r\n                        {{labelService.dsAnaysisResultsScreen.Result}}\r\n                    </span>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Result}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"Units\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"dref\">\r\n                    {{labelService.dsAnaysisResultsScreen.Units}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"dref\"> {{element.Units}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Activity\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"dref\">\r\n                    {{labelService.dsAnaysisResultsScreen.Activity}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"dref\">\r\n                    <img *ngIf=\"element.displayMealIcon === 'true' \"\r\n                        title=\"{{labelService.dsAnaysisResultsScreen.AfterMeal}}\" alt=\"\" class=\"activity-icon\"\r\n                        src=\"../../../../assets/img/AfterMeal.svg\" (click)=\"$event.stopPropagation()\" />\r\n                    <img *ngIf=\"element.displayInsulinIcon === 'true' \"\r\n                        title=\"{{labelService.dsAnaysisResultsScreen.AfterInsulin}}\" class=\"activity-icon\"\r\n                        src=\"../../../../assets/img/AfterInsulin.svg\" alt=\"\" (click)=\"$event.stopPropagation()\" />\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let element; columns: displayedColumns;let i = dataIndex;\"></tr>\r\n\r\n        </table>\r\n\r\n    </div>\r\n    <div>\r\n        <h5 class=\"mt-3\">\r\n            {{labelService.dsAnaysisResultsScreen.COMMENTS}}\r\n        </h5>\r\n        <P> {{getDatasourceTopValue('Comments')}} </P>\r\n    </div>\r\n</section>","import { Component, Input, OnChanges, SimpleChange } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService, CommonService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n\r\n\r\n@Component({\r\n  selector: 'app-template9',\r\n  templateUrl: './template9.component.html',\r\n  styleUrls: ['./template9.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class Template9Component extends ResultDetailsHelper implements OnChanges {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public isTestNoteVisible: boolean;\r\n  public isCytologyComplex: boolean;\r\n  public testNoteList: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public sliderMax = 0;\r\n  public graphAxisYTitle = \"\";\r\n\r\n  public expandedElement: any;\r\n  public allRowsExpanded = false;\r\n  public source: string;\r\n\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n\r\n  public isSeemore = true;\r\n\r\n  public chartOpenedTestList: string[] = [];\r\n\r\n  public isArroNavigation = false;\r\n  public dateDropdown: any[] = [];\r\n\r\n  public pathologistReviewNote = false;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public commonService: CommonService,\r\n    public modalService: NgbModal,\r\n    public confirmationDialogService: ConfirmationDialogService) {\r\n    super(patientService, labelService, dataService, modalService);\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    // debugger\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n      this.isArroNavigation = false;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.testNoteList = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    const selectedNote = this.testNoteList.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    const pathologistReview = ['2317', 'PATH', '2319']; // Pathologist Review to display as only Text view\r\n    this.pathologistReviewNote = pathologistReview.includes(selectedNote[0]?.AnalysisTypeId);\r\n\r\n    const histopathologyList = ['ZN100', 'ZN102', 'ZN101', 'ZN103', 'ZN301', 'ZN400', 'ZN500']; // HistopathologyList to display as only Text view\r\n\r\n    const isHistopathologyNote = histopathologyList.includes(selectedNote[0].AnalysisTypeId);\r\n\r\n    this.isTestNoteVisible = (isHistopathologyNote || (/cytology/.test(this.selectedAnalysisType.toLowerCase())));\r\n\r\n    const tblData = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n    if (this.dataService.appData.isTrendable || this.dataService.appData.VS2Tred) {\r\n      this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceivedAnalysisType\"], item])).values()];\r\n    } else {\r\n      this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()]; // Store only the last occurrence\r\n\r\n      this.labReportDistinct = Object.values(\r\n        tblData.reduce((acc, item) => {\r\n          if (!acc[item.DateReceived] && item.Result && /see Note/i.test(item.Result)) {\r\n            acc[item.DateReceived] = item; // Store only the first occurrence\r\n          }\r\n          return acc;\r\n        }, {})\r\n      );\r\n\r\n    }\r\n\r\n    this.testNoteList = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    const dateDropdown = JSON.parse(JSON.stringify(this.labReportDistinct));\r\n    this.dateDropdown = dateDropdown.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    console.log('labReportDistinct ==>', this.labReportDistinct);\r\n\r\n\r\n  }\r\n\r\n  public selectNote(event) {\r\n    this.selectedDate = event.value;\r\n    this.testNoteList = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.appData['backDates'] = [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n  public openNote(noteTitle, noteStr) {\r\n    this.confirmationDialogService.confirm(noteTitle, noteStr, this.labelService.dsDashboardScreen.Ok, '', \"lg\", true, false)\r\n  }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<section *ngIf=\"dataService.appData.tblTopPatientDetails?.['AnalyzerName'] === 'Ref Lab' && !isCVET\">\r\n  <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n    {{labelService.dsAnaysisResultsScreen. AvailableResults}}\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n    <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n      <mat-option *ngFor=\"let report of dateDropdown\" [value]=\"report.DateReceived\">\r\n        {{report.DateReceived}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</section>\r\n\r\n<section *ngIf=\"dataService.appData.tblTopPatientDetails?.['AnalyzerName'] === 'Ref Lab'\">\r\n  <h1 class=\"note-title\"> {{selectedAnalysisType}} </h1>\r\n  <section class=\"temp1\" *ngIf=\"testNoteList.length>0\">\r\n    <div *ngFor=\"let data of testNoteList; let i = index\">\r\n      <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n    </div>\r\n  </section>\r\n</section>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService, CommonService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n@Component({\r\n  selector: 'app-template10',\r\n  templateUrl: './template10.component.html',\r\n  styleUrls: ['./template10.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class Template10Component extends ResultDetailsHelper implements OnInit, OnChanges {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public isTestNoteVisible: boolean;\r\n  public isCytologyComplex: boolean;\r\n  public testNoteList: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayedColumns = ['Test', 'selectedDate', 'Ref_Range', 'Graph'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  public VS2Test: any[] = [];\r\n\r\n  public dataSourceGraphPoint1: any[] = [];\r\n  public dataSourceGraphPoint2: any[] = [];\r\n  public sliderMax = 0;\r\n  public graphAxisYTitle = \"\";\r\n\r\n  public expandedElement: any;\r\n  public allRowsExpanded = false;\r\n  public source: string;\r\n\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n\r\n  public isSeemore = true;\r\n\r\n\r\n  public trendingTests: any = [];\r\n  public trendable: any; // For RefLab, HM5, iStat\r\n  public chartOpenedTestList: string[] = [];\r\n\r\n  public isArroNavigation = false;\r\n  public dateDropdown: any[] = [];\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public commonService: CommonService,\r\n    public modalService: NgbModal,\r\n    public confirmationDialogService: ConfirmationDialogService) {\r\n    super(patientService, labelService, dataService, modalService);\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n      this.isArroNavigation = false;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.testNoteList = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    const selectedNote = this.testNoteList.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    const cytologyComplexList = ['7201', '7202', '7203', '7204', '7122', '7123', '7124', '7125', '7126', '7127'];\r\n    this.isCytologyComplex = cytologyComplexList.includes(selectedNote[0].AnalysisTypeId);\r\n\r\n    this.testNoteList = this.testNoteList.filter(ele => ele.DateReceived != this.selectedDate);\r\n    console.log('testNoteList =>', this.testNoteList);\r\n\r\n    const tblData = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n    if (this.dataService.appData.isTrendable || this.dataService.appData.VS2Tred) {\r\n      this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceivedAnalysisType\"], item])).values()];\r\n    } else {\r\n      this.labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    }\r\n    const selectedDateIndex = this.testNoteList.findIndex(i => i.DateReceived === this.selectedDate);\r\n    const datsToMoove = this.testNoteList.splice(selectedDateIndex, 1);\r\n    this.testNoteList = datsToMoove.concat(this.testNoteList);\r\n\r\n    const dateDropdown = JSON.parse(JSON.stringify(this.labReportDistinct));\r\n    this.dateDropdown = dateDropdown.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    console.log('labReportDistinct ==>', this.labReportDistinct);\r\n\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //write something code\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n\r\n    if (!this.isArroNavigation) {\r\n      this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n      if (this.labReportDistinct.length <= 4) {\r\n        this.backDates = this.labReportDistinct;\r\n      } else if ((this.labReportDistinct.length - 3) <= this.selectedBackDateIndex) {\r\n        this.selectedBackDateIndex = this.labReportDistinct.length - 4;\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      } else {\r\n        this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n      }\r\n    }\r\n\r\n    console.log('backDates =>', this.backDates);\r\n\r\n    this.dataService.appData['backDates'] = !this.isTestNoteVisible ? this.backDates : [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    this.backDates = this.backDates.map(ele => {\r\n      ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n      return ele;\r\n    });\r\n\r\n    // const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n\r\n    // const labReportFilterByAnalysisType = JSON.parse(JSON.stringify(this.labReportFilterByAnalysisType));\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n    const distinctSelectedObj = this.labReportDistinct.find(ele => ele.selected);\r\n    const distinctSelectedDateInded = this.labReportDistinct.findIndex(ele => ele.selected);\r\n\r\n    // const backDates = this.dataService.appData['backDates'];\r\n    const firstFourBackDates = this.backDates.slice(0, 4);\r\n    const selectedDateIdxForPdf = firstFourBackDates.findIndex(v => v.DateReceivedAnalysisType == distinctSelectedObj.DateReceivedAnalysisType);\r\n    let backDateToPrint;\r\n    if (firstFourBackDates.filter(x => x.selected).length) {\r\n      backDateToPrint = firstFourBackDates;\r\n    } else {\r\n      backDateToPrint = distinctSelectedDateInded > 2 ? this.labReportDistinct.slice(distinctSelectedDateInded - 3, distinctSelectedDateInded + 1) : this.labReportDistinct.slice(0, distinctSelectedDateInded + 1);\r\n    }\r\n    backDateToPrint.splice(selectedDateIdxForPdf, 1)\r\n    backDateToPrint.unshift({})\r\n    this.dataService.appData.backDateToPrint = backDateToPrint;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    console.log('backDateToPrint =>', backDateToPrint);\r\n\r\n    this.VS2Test = this.labReportFiltered.filter(x => x.TestTypeId == EnmTestType.VS2Test);\r\n    if (this.VS2Test.length > 4) {\r\n      this.VS2Test = this.VS2Test.slice(0, 3);\r\n    }\r\n    if (this.VS2Test) {\r\n      this.dataService.appData['VS2Test'] = this.VS2Test;\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      this.labReportFiltered = this.labReportFiltered.filter(x => x.TestTypeId != EnmTestType.VS2Test && x.AnalysisTypeId == analysisTypeId);\r\n    }\r\n\r\n    // const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n    // const analyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'].toString().toLowerCase().replace(' ', '');\r\n    // const params: any = null;\r\n    \r\n    this.testNoteList = this.labReportFiltered.filter(ele => {\r\n      if (ele.TestNote) {\r\n        return ele;\r\n      }\r\n    })\r\n    console.log('testNoteList =>', this.testNoteList);\r\n\r\n    console.log('labReportFiltered =>', this.labReportFiltered);\r\n\r\n    this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n\r\n    this.dataService.appData['labReportFiltered'] = this.labReportFiltered;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    console.log('labReportFiltered ==>', this.labReportFiltered);\r\n\r\n    this.getImageData();\r\n  }\r\n\r\n  public getImageData() {\r\n    this.dsImagyst = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter != null && x.Parameter.indexOf('_IMG') != -1);\r\n    this.dataService.appData['dsImagyst'] = this.dsImagyst;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    const filterDataImage = JSON.parse(JSON.stringify(this.dsImagyst));\r\n\r\n    this.patientService.imgData = [];\r\n    if (this.dsImagyst.length) {\r\n      this.patientService.imgData = Array.from(new Set(filterDataImage.map(x => x.Parameter.split(\"_\")[0]))).map(key => {\r\n        return {\r\n          'GroupName': (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null) != undefined ? (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null)['AnalyteDesc']).split('image')[0].trim() : key),\r\n          'Images': filterDataImage.filter(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null),\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  public selectedRow(rowIndex, row) {\r\n    if (this.chartOpenedTestList.includes(row.Parameter)) {\r\n      this.chartOpenedTestList = this.chartOpenedTestList.filter((item) => {\r\n        return item !== row.Parameter;\r\n      })\r\n    } else {\r\n      this.chartOpenedTestList.push(row.Parameter);\r\n    }\r\n    const chartOpenedTestList = this.chartOpenedTestList.join(',');\r\n    this.dataService.pageState['chartOpenedTestList'] = chartOpenedTestList;\r\n    this.dataService.page.next(this.dataService.appData);\r\n\r\n    if (this.expandedElement === row) {\r\n      this.expandedElement = null;\r\n      this.patientService.selectedTestName = \"\";\r\n    }\r\n    else {\r\n      this.expandedElement = row;\r\n    }\r\n  }\r\n\r\n  public selectNote(event) {\r\n    this.selectedDate = event.value;\r\n    const selectedDateIndex = this.testNoteList.findIndex(i => i.DateReceived === this.selectedDate);\r\n    const datsToMoove = this.testNoteList.splice(selectedDateIndex, 1);\r\n    this.testNoteList = datsToMoove.concat(this.testNoteList);\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.appData['backDates'] = [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n  public openNote(noteTitle, noteStr) {\r\n    this.confirmationDialogService.confirm(noteTitle, noteStr, this.labelService.dsDashboardScreen.Ok, '', \"lg\", true, false)\r\n  }\r\n\r\n\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n\r\n    return rtnValue;\r\n  }\r\n\r\n  public isNumber(val) {\r\n    return typeof (val);\r\n  }\r\n\r\n  showTrendingIcon(element) {\r\n    if (element.Indicator != null && element.Indicator != '' && element.GraphResult != null && element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1) {\r\n      if (element.Parameter && element.Parameter.trim() === 'GGT') {\r\n        if (element.MinRange !== null && element.MaxRange !== null) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  rangeCheck(elm) {\r\n\r\n    if (elm.MinRange || elm.MaxRange) return true;\r\n    if (elm.MinRange === 0 || elm.MaxRange === 0) return true;\r\n    return false;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","<section *ngIf=\"dataService.appData.tblTopPatientDetails?.['AnalyzerName'] === 'Ref Lab' && !isCVET\">\r\n  <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n    {{labelService.dsAnaysisResultsScreen. AvailableResults}}\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n    <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n      <mat-option *ngFor=\"let report of dateDropdown\" [value]=\"report.DateReceived\">\r\n        {{report.DateReceived}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</section>\r\n\r\n<div class=\"table-responsive mb-3\">\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"tbl\" summary=\"\" multiTemplateDataRows>\r\n    <ng-container matColumnDef=\"Test\">\r\n      <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n        {{selectedAnalysisType}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = dataIndex\">\r\n        <div>\r\n          <p style=\"width: 165px;\">\r\n            <img [ngStyle]=\"{'visibility': element.Definition?'initial':'hidden'}\" alt=\"info-icon\"\r\n              src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\"\r\n              (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n            <span> {{element.Parameter}} </span>\r\n          </p>\r\n\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"selectedDate\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <span class=\"date_block\">{{selectedDate}}</span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"unicode-fix\">\r\n        <!-- <span>\r\n          {{element.Result +' '+ (element.Units ||'')}}\r\n        </span> -->\r\n        <span style=\"font-weight: bolder;padding-right: 1%;\">{{element.Result}}</span>\r\n        <span class=\"text-lighter\">{{(element.Units||'')}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Ref_Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"dref\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"dref text-lighter\">\r\n        <div *ngIf=\"element.AnalyzerName !== 'Ref Lab';else refLabRange\">\r\n          <span\r\n            *ngIf=\"element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null);else generalContent\">\r\n            <span *ngIf=\"element.MinRange === null\"> {{ '<'+element.MaxRange }} </span>\r\n                <span *ngIf=\"element.MaxRange === null\">\r\n                  {{ '>'+element. MinRange }}\r\n                </span>\r\n            </span>\r\n            <ng-template #generalContent>\r\n              <span *ngIf=\"element.MinRange !== null && element.MaxRange !== null\">\r\n              <span *ngIf=\"element.MinRange !== null\">{{element.MinRange}}</span>-<span *ngIf=\"element.MaxRange !== null\">{{element.MaxRange}}</span>\r\n            </span>\r\n            </ng-template>\r\n        </div>\r\n        <ng-template #refLabRange>\r\n          {{element.TestResultRanges}}\r\n        </ng-template>\r\n      </td>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Graph\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n          <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf=\"((element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null)) || (element.Result && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 )));else resultBlock\">\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n          </span>\r\n          <ng-template #resultBlock>\r\n            <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n              *ngIf='element.Indicator !== null && element.Indicator !== \"\" && element.GraphResult !== null'>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': !(element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out'))}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'Low' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out')  ? element.GraphResult : (element.Indicator !== '' ? '100' : '0')\">\r\n              </mat-slider>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': element.Indicator !== 'In Range' || (element.Section === 'A' && element.Indicator === 'Out')}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'In Range' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'In Range' ? element.GraphResult : (element.Indicator === 'High' || (element.Section === 'C' && element.Indicator === 'Out') ? '100' : '0') \">\r\n              </mat-slider>\r\n              <mat-slider mode=\"determinate\"\r\n                [ngClass]=\"{'nothumb': (element.Indicator !== 'High' &&  element.Indicator !== 'Out')  || (element.Section === 'A' && element.Indicator === 'Out') }\"\r\n                [max]=\"element.Indicator !== 'High' &&  element.Indicator !== 'Out' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'High' || element.Indicator === 'Out' ? element.GraphResult : '0'\">\r\n              </mat-slider>\r\n            </span>\r\n          </ng-template>\r\n          <span\r\n            *ngIf=\"element.Indicator !== '' && (element.Indicator === 'High' || element.Indicator === 'Low' || element.Indicator === 'Out') && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\">{{getTranslation(element.Indicator)}}</span>\r\n          <span\r\n            *ngIf=\"element.Result && (element.AnalyzerName !== 'Ref Lab'|| (element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null))) && (element.AnalyzerName !== 'Ref Lab' && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 ))\"\r\n            class=\"clsRed indicator ml-1 no-underline\"> Out </span>\r\n          <span\r\n            *ngIf=\"element.Indicator !== 'High' && element.Indicator !== 'Low' && element.Indicator !== 'Out' && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span>\r\n\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator === null || element.Indicator === \"\" '>\r\n            {{ element.GraphResult }}\r\n          </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns;let i = dataIndex;\" (click)=\"selectedRow(i, element)\"\r\n      class=\"student-element-row\" [class.student-expanded-row]=\"element === expandedElement\"></tr>\r\n  </table>\r\n</div>\r\n\r\n<!-- Notes Details -->\r\n<section *ngIf=\"dataService.appData.tblTopPatientDetails?.['AnalyzerName'] === 'Ref Lab'\">\r\n  <section class=\"temp1\" *ngIf=\"testNoteList.length>0\">\r\n    <div *ngFor=\"let data of testNoteList; let i = index\">\r\n      <h5 style=\"font-weight: bold;\"> {{data.Parameter}} </h5>\r\n      <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n    </div>\r\n  </section>\r\n</section>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\nimport { ImageSliderComponent } from '../../../shared';\r\nimport { crystalSortSequence } from '../../../shared/constants/trend-mappings';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-template11',\r\n  templateUrl: './template11.component.html',\r\n  styleUrls: ['./template11.component.css']\r\n})\r\nexport class Template11Component extends ResultDetailsHelper implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n  public displayGroupColums = ['groupHeader', 'other'];\r\n  public displayedColumns = ['AnalyteDesc', 'SemiQuant', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  public dataSourceTop: any[] = [];\r\n  public imageDataFiltered: any[] = [];\r\n  public isArroNavigation = false;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    console.log('labReportDistinct =>', this.labReportDistinct);\r\n\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n\r\n    this.filterAndUpdateReport()\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    if (this.isHideTblBackDates && !this.isCVET) {\r\n      this.displayedColumns = ['AnalyteDesc', 'SemiQuant'];\r\n    } \r\n    else if(this.isCVET) {\r\n      this.displayedColumns = ['AnalyteDesc', 'SemiQuant', 'prevDate1'];\r\n    }\r\n    else {\r\n      this.displayedColumns = ['AnalyteDesc', 'SemiQuant', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n    }\r\n\r\n  }\r\n\r\n  public getImageData() {\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    this.imageDataFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.AnalysisTypeId == analysisTypeId && x.Parameter && /_IMG/.test(x.Parameter));\r\n    console.log('imageDataFiltered ==>', this.imageDataFiltered);\r\n    this.patientService.imgData = [];\r\n\r\n    let groupedData = JSON.parse(JSON.stringify(this.groupedData));\r\n    groupedData = groupedData.map(ele => {\r\n      ele.data[0].data = [];\r\n      return ele.data[0];\r\n    });\r\n    console.log('groupedData for images ==>', groupedData);\r\n\r\n    let imgData: any[] = [];\r\n    groupedData.forEach(ele => {\r\n      const tempData = [];\r\n      this.imageDataFiltered.forEach(subEle => {\r\n        subEle.AnalyteDescCustom = subEle.AnalyteDesc.split(new RegExp('image', \"i\"))[0];\r\n        if (ele.groupName == subEle.TestGroupName) {\r\n          ele.isGroupBy = true;\r\n          tempData.push(subEle);\r\n        }\r\n      })\r\n      imgData = Array.from(new Set(tempData.map(x => x.AnalyteDesc.split(new RegExp('image', \"i\"))[0]))).map(key => {\r\n\r\n        let imgLabel = key; //.replace('-', '').trim();\r\n        if (imgLabel?.trim() == 'RBC' || imgLabel?.trim() == 'RBC Rollup') {\r\n          imgLabel = 'RBCs';\r\n        }\r\n        if (imgLabel?.trim() == 'WBC' || imgLabel?.trim() == 'WBC Rollup') {\r\n          imgLabel = 'WBCs';\r\n        }\r\n        if (imgLabel == 'Cocci Cluster') {\r\n          imgLabel = 'Cocci Clusters & Chains';\r\n        }\r\n        if (imgLabel == 'Rods Cluster') {\r\n          imgLabel = 'Rods Clusters & Chains';\r\n        }\r\n        return {\r\n          'testGroupName': tempData.filter(e => e.AnalyteDesc && e.Result && e.AnalyteDesc.indexOf(key) == 0)[0].TestGroupName,\r\n          'imageLabel': imgLabel, // key,\r\n          'Images': tempData.filter(e => e.Result && e.AnalyteDesc && key == e.AnalyteDescCustom)\r\n        };\r\n      });\r\n      if (imgData.length > 0 && imgData[0].testGroupName == 'Blood Cells') {\r\n        imgData.sort((a, b) => a.imageLabel.localeCompare(b.imageLabel));\r\n      }\r\n      if (imgData.length > 0 && imgData[0].testGroupName == 'Crystals') {\r\n        // imgData.sort((a, b) => b.imageLabel.localeCompare(a.imageLabel));      \r\n        let staticList = crystalSortSequence;\r\n        imgData.sort((a, b) => {\r\n          let aDesc = a.imageLabel?.trim().toLowerCase();\r\n          let bDesc = b.imageLabel?.trim().toLowerCase();\r\n\r\n          let aIndex = staticList.findIndex(item => item.toLowerCase() === aDesc);\r\n          let bIndex = staticList.findIndex(item => item.toLowerCase() === bDesc);\r\n\r\n          if (aIndex === -1) aIndex = staticList.length;\r\n          if (bIndex === -1) bIndex = staticList.length;\r\n\r\n          return aIndex - bIndex;\r\n        });\r\n      }\r\n      ele.data = imgData;\r\n    })\r\n\r\n    this.patientService.imgData = groupedData;\r\n    console.log('this.patientService.imgData ==>', this.patientService.imgData);\r\n  }\r\n\r\n  public isGroup(index, item): boolean {\r\n    return item.isGroupBy;\r\n  }\r\n\r\n  public showToolTip(event, rowIndex, colIndex) {\r\n    $('#bkotooltip' + rowIndex + colIndex).show()\r\n  }\r\n\r\n  public hideTooltip(rowIndex, colIndex) {\r\n    $('#bkotooltip' + rowIndex + colIndex).hide()\r\n  }\r\n\r\n  public viewImageSlider(imageList, imgIndex) {\r\n    const modalRef = this.modalService.open(ImageSliderComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      scrollable: false\r\n    });\r\n    modalRef.componentInstance.imageList = imageList;\r\n    modalRef.componentInstance.currentIndex = imgIndex;\r\n    modalRef.componentInstance.patientDetails = this.patientService.patientDetails;\r\n  }\r\n\r\n  public getDatasourceTopValue(AnalyteDescValue) {\r\n    let value = this.dataSourceTop.filter(ele => {\r\n      if (ele.AnalyteDesc == AnalyteDescValue) {\r\n        return ele;\r\n      }\r\n    })\r\n    value = value.length > 0 ? value[0].Result : null;\r\n    return value;\r\n  }\r\n\r\n  firstLetterCapital(str) {\r\n    if (str) {\r\n      str = str.split('').map((e, i) => i == 0 ? e.toUpperCase() : e).join(',').replaceAll(',', '');\r\n      return str;\r\n    } else {\r\n      return str;\r\n    }\r\n  }\r\n\r\n}\r\n","<div style=\"margin: 0px 0px 14px 0px;\">\r\n    <ng-container *ngIf=\"dataSourceTop && dataSourceTop.length>0\">\r\n        <div class=\"row\">\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Urine Retrieval Technique')\">\r\n                <strong class=\"head1\">\r\n                    Urine Retrieval Technique:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Urine Retrieval Technique')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Clarity')\">\r\n                <strong class=\"head1\">\r\n                    Clarity:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Clarity')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Urine Volume')\">\r\n                <strong class=\"head1\">\r\n                    Urine Volume:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Urine Volume')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('pH')\">\r\n                <strong class=\"head1\">\r\n                    pH:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('pH')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('USG')\">\r\n                <strong class=\"head1\">\r\n                    USG:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('USG')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Color Before Centrifugation')\">\r\n                <strong class=\"head1\">\r\n                    Color Before Centrifugation:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Color Before Centrifugation')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Color After Centrifugation')\">\r\n                <strong class=\"head1\">\r\n                    Color After Centrifugation:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Color After Centrifugation')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Dilution Ratio')\">\r\n                <strong class=\"head1\">\r\n                    Dilution Ratio:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Dilution Ratio')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Collection Time')\">\r\n                <strong class=\"head1\">\r\n                    Collection Time:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Collection Time')}} </span>\r\n            </p>\r\n            <p class=\"col-sm-12 col-md-6\" *ngIf=\"getDatasourceTopValue('Storage Conditions')\">\r\n                <strong class=\"head1\">\r\n                    Storage Conditions:\r\n                </strong>\r\n                <span> {{getDatasourceTopValue('Storage Conditions')}} </span>\r\n            </p>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<div class=\"temp-2\" *ngIf=\"dataSource?.data?.length>0\">\r\n    <table class=\"sticky_table\" mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"AnalyteDesc\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{selectedAnalysisType}}-{{selectedDate}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <img *ngIf=\"element.Definition\" class=\"test_info_icon\" src=\"assets/img/info-icon.svg\" alt=\"info-icon\"\r\n                    (click)=\"patientService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n                <span class=\"capitalize\"> {{element.AnalyteDesc | capitalize }} </span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"SemiQuant\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.SemiQuant}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span style=\"font-weight: bolder;\"> {{element.Result}} </span>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <!-- Back Dates -->\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"isCVET ? 'text-center' : ''\">\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (labReportDistinct.length<=noOfDtColToShow || selectedBackDateIndex === 0)}\"\r\n                    (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span [ngClass]=\"{'fw-bold':backDates[0].selected}\" class=\"back-date {{ isCVET ? 'no-cursor' : '' }}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].Result\" (click)=\"onSelectDate(backDates[0])\">\r\n                    {{backDates[0].DateReceived}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=noOfDtColToShow || (backDates.length-noOfDtColToShow)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" style=\"border-left: 5px solid #ece7e7;\" [ngClass]=\" isCVET ? 'cvetcss' : ''\">\r\n                <p style=\"position: relative; width: 100%;\" [ngClass]=\"{'col-bg':backDates[0].selected}\"\r\n                    *ngIf=\"backDates[0] && backDates[0].DateReceived\">\r\n                    <span *ngIf=\"element.backDate0 && element.backDate0_Result\" (mouseover)='showToolTip($event, i, 0)'\r\n                        (mouseout)='hideTooltip(i, 0)'>\r\n                        {{element.backDate0_Result}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}0\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate0_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[1].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[1] && backDates[1].DateReceived\" (click)=\"onSelectDate(backDates[1])\">\r\n                    {{backDates[1].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; width: 100%;\" [ngClass]=\"{'col-bg':backDates[1].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[1] && backDates[1].DateReceived\">\r\n                    <span *ngIf=\"element.backDate1_Result\" (mouseover)='showToolTip($event, i, 1)'\r\n                        (mouseout)='hideTooltip(i, 1)'>\r\n                        {{element.backDate1_Result}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}1\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate1_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[2].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[2] && backDates[2].DateReceived\" (click)=\"onSelectDate(backDates[2])\">\r\n                    {{backDates[2].DateReceived}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; width: 100%;\" [ngClass]=\"{'col-bg':backDates[2].selected}\"\r\n                    *ngIf=\"backDates[2] && backDates[2].DateReceived\">\r\n                    <span *ngIf=\"element.backDate2 && element.backDate2_Result\" (mouseover)='showToolTip($event, i, 2)'\r\n                        (mouseout)='hideTooltip(i, 2)'>\r\n                        {{element.backDate2_Result}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}2\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate2_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngClass]=\"{'fw-bold':backDates[3].selected}\" class=\"back-date \"\r\n                    *ngIf=\"backDates[3] && backDates[3].DateReceived\" (click)=\"onSelectDate(backDates[3])\">\r\n                    {{backDates[3].DateReceived}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (backDates.length<=4 || (backDates.length-4)===0)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                <p style=\"position: relative; width: 100%;\" [ngClass]=\"{'col-bg':backDates[3].selected}\"\r\n                    *ngIf=\"backDates[3] && backDates[3].DateReceived\">\r\n                    <span *ngIf=\"element.backDate0 && element.backDate0_Result\" (mouseover)='showToolTip($event, i, 3)'\r\n                        (mouseout)='hideTooltip(i, 3)'>\r\n                        {{element.backDate3_Result}}\r\n                    </span>\r\n                    <span id=\"bkotooltip{{i}}3\" class=\"cutomToolTip\" [innerHTML]=\"element.backDate3_ToolTipStr\"> </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Back Dates End -->\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" class=\"mat-select-header\"></tr>\r\n\r\n        <ng-container matColumnDef=\"groupHeader\">\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <h4 style=\"font-weight: bold;\">\r\n                    <span>{{element.groupName}}</span>\r\n                </h4>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"other\">\r\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"5\">\r\n                <h4 style=\"font-weight: bold;\">\r\n                    <span *ngIf=\"element.groupName =='Other'\"> Presence</span>\r\n                </h4>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayGroupColums; when: isGroup\" class=\"student-detail-row\"></tr>\r\n\r\n    </table>\r\n</div>\r\n\r\n<div class=\"col-sm-12 m-comment pl-0\" *ngIf=\"getDatasourceTopValue('Comments')\">\r\n    <h3 class=\"mt-3 head1\">\r\n        {{labelService.dsAnaysisResultsScreen.COMMENTS}}:\r\n    </h3>\r\n    <P> {{getDatasourceTopValue('Comments')}} </P>\r\n</div>\r\n\r\n<!-- Image List -->\r\n<div class=\"col-sm-12 pl-0\" style=\"margin-top: 14px;\">\r\n    <ng-container *ngIf=\"patientService.imgData && patientService.imgData.length>0\">\r\n        <div *ngFor=\"let imgData of patientService.imgData\" class=\"img-text\">\r\n            <h3 *ngIf=\"imgData.isGroupBy\"> {{imgData.groupName}} </h3>\r\n            <div *ngFor=\"let data of imgData.data\">\r\n                <h3 class=\"capitalize\" *ngIf=\"data.Images.length>0\"> {{data.imageLabel}} </h3>\r\n                <div class=\"d-flex justify-content-start align-items-center flex-wrap temp-img\">\r\n                    <span class=\"imgpart mr-4\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n                        <img title=\"{{ele.AnalyteDesc}}\" [src]=\"ele.Result\"\r\n                            (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\" class=\"mb-3\">\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { LabelService, PatientService, DataService, CommonService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-template12',\r\n  templateUrl: './template12.component.html',\r\n  styleUrls: ['./template12.component.css']\r\n})\r\nexport class Template12Component implements OnChanges, OnInit {\r\n  @Input() data: any;\r\n\r\n  @Input() labResults: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  @Input() selectedDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n\r\n  public displayedColumns = ['Sensitivity', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  public labReports: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public labReportFiltered: any[] = [];\r\n\r\n  public noneSensitiveElements: any[];\r\n  public topNoneSensitiveElements: any[] = [];\r\n  public middleNoneSensitiveElements: any[] = []\r\n  public bottomNoneSensitiveElements: any[] = []\r\n\r\n  public organismList: any[] = [];\r\n  public noneSensitivityList: any[] = [];\r\n  public bottomNoneSensitivityList: any[] = [];\r\n  public sensitivityList: any[] = [];\r\n\r\n  public startOrganismIndex = 0;\r\n  public endOrganismIndex = 4;\r\n\r\n  public selectedBackDate: string;\r\n  public backDates: any[] = [];\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent));\r\n  public isHideTblBackDates = false;\r\n  noOfDtColToShow: number = 4;\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public commonService: CommonService) {\r\n\r\n    this.topNoneSensitiveElements = [\r\n      'Source',\r\n      'Urine Collection Method',\r\n      'Time & Date of Collection',\r\n      'Location of Collection'\r\n    ]\r\n\r\n    this.middleNoneSensitiveElements = [\r\n      'Media Plated',\r\n      'Culture Comment',\r\n      'Aerobic Culture Results',\r\n      'Anaerobic Culture Results',\r\n      'Fungal Culture Result',\r\n      'Culture Results',\r\n      'Blood Culture Results',\r\n      'Campylobacter Screen',\r\n      'Salmonella Screen',\r\n      'Fungal Culture Comment',\r\n      'Dermatophyte Culture Result',\r\n    ]\r\n\r\n    this.bottomNoneSensitiveElements = [\r\n      'Organism',\r\n      'Quantity',\r\n      'Comment'\r\n    ]\r\n    this.noneSensitiveElements = this.topNoneSensitiveElements.concat(this.middleNoneSensitiveElements).concat(this.bottomNoneSensitiveElements);\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //write do something code\r\n  }\r\n\r\n  public selectNote(event) {\r\n\r\n    this.selectedDate = event.value;\r\n    this.filterAndUpdateReport();\r\n\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n\r\n  public filterAndUpdateReport() {\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.DateReceived == this.selectedDate && x.Parameter && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    // const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    this.organismList = this.labReportFiltered.filter(ele => {\r\n      return ele.Parameter == 'Organism' && ele.Result != 'See Note' && /_/.test(ele.PanelTestId);\r\n    })\r\n    console.log('organismList =>', this.organismList);\r\n\r\n    this.backDates = this.organismList.slice(this.startOrganismIndex, this.endOrganismIndex);\r\n    console.log('backDates =>', this.backDates);\r\n\r\n    this.dataService.appData['backDates'] = this.labReportDistinct;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    this.isHideTblBackDates = this.backDates.length == 1 ? true : false;\r\n    // if (this.isHideTblBackDates) {\r\n    //   this.displayedColumns = ['Sensitivity'];\r\n    // } else {\r\n      if(this.isCVET) {\r\n        this.displayedColumns = ['Sensitivity', 'prevDate1'];\r\n      } else {\r\n        this.displayedColumns = ['Sensitivity', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n      }\r\n    // }\r\n\r\n    const topData = this.labReportFiltered.filter(ele => {\r\n      return this.noneSensitiveElements.includes(ele.Parameter);\r\n    })\r\n\r\n    const sortedTopData = [...topData].sort((a, b) => {\r\n      const indexA = this.noneSensitiveElements.indexOf(a.Parameter);\r\n      const indexB = this.noneSensitiveElements.indexOf(b.Parameter);\r\n      return indexA - indexB;\r\n    });\r\n    console.log('sortedTopData =>', sortedTopData);\r\n\r\n    const topNoneSensitiveData = [], bottomNoneSensitiveData = [], othersNoneSensitiveData = [];\r\n    let middleNoneSensitiveData = [];\r\n\r\n    sortedTopData.forEach(ele => {\r\n      if (this.topNoneSensitiveElements.includes(ele.Parameter)) {\r\n        topNoneSensitiveData.push(ele);\r\n      } else if (this.middleNoneSensitiveElements.includes(ele.Parameter)) {\r\n        middleNoneSensitiveData.push(ele);\r\n      } else if (/_/.test(ele.PanelTestId) && this.bottomNoneSensitiveElements.includes(ele.Parameter)) {\r\n        bottomNoneSensitiveData.push(ele);\r\n      } else {\r\n        othersNoneSensitiveData.push(ele);\r\n      }\r\n    })\r\n\r\n    const indexedMiddleNoneSensitiveData = []\r\n    middleNoneSensitiveData.forEach(ele => {\r\n      const id = ele.PanelTestId.split('_')[1];\r\n      if (ele.Parameter == 'Media Plated') {\r\n        indexedMiddleNoneSensitiveData.push(ele);\r\n        middleNoneSensitiveData.forEach(subEle => {\r\n          const subId = subEle.PanelTestId.split('_')[1];\r\n          if (ele.Parameter != subEle.Parameter && id == subId) {\r\n            indexedMiddleNoneSensitiveData.push(subEle);\r\n          }\r\n        })\r\n      }\r\n    })\r\n    middleNoneSensitiveData = indexedMiddleNoneSensitiveData;\r\n    this.noneSensitivityList = topNoneSensitiveData.concat(middleNoneSensitiveData);\r\n    console.log('noneSensitivityList =>', this.noneSensitivityList);\r\n\r\n    const indexedBottomNoneSensitiveData = []\r\n    bottomNoneSensitiveData.forEach(ele => {\r\n      const id = ele.PanelTestId.split('_')[1];\r\n      if (ele.Parameter == 'Organism') {\r\n        indexedBottomNoneSensitiveData.push(ele);\r\n        bottomNoneSensitiveData.forEach(subEle => {\r\n          const subId = subEle.PanelTestId.split('_')[1];\r\n          if (ele.Parameter != subEle.Parameter && id == subId) {\r\n            indexedBottomNoneSensitiveData.push(subEle);\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.bottomNoneSensitivityList = indexedBottomNoneSensitiveData.map(ele => {\r\n      if (ele.Parameter == 'Comment') {\r\n        if (ele.Result == 'See Note' && ele.TestNote) {\r\n          ele.displayNote = ele.TestNote;\r\n        } else if (ele.Result != 'See Note' && ele.TestNote) {\r\n          ele.displayNote = ele.Result + '<br/>' + ele.TestNote;\r\n        } else {\r\n          ele.displayNote = ele.Result;\r\n        }\r\n      } else {\r\n        if (ele.TestNote) {\r\n          ele.displayNote = ele.TestNote;\r\n        } else {\r\n          ele.displayNote = ele.Result;\r\n        }\r\n      }\r\n      return ele;\r\n    })\r\n    console.log('bottomNoneSensitivityList =>', this.bottomNoneSensitivityList);\r\n\r\n    this.sensitivityList = this.labReportFiltered.filter(ele => {\r\n      return !this.noneSensitiveElements.includes(ele.Parameter) && /_/.test(ele.PanelTestId);\r\n    })\r\n    // Removing duplicates\r\n    this.sensitivityList = this.sensitivityList.filter((obj, index) => {\r\n      return index === this.sensitivityList.findIndex(o => obj.Parameter === o.Parameter);\r\n    });\r\n    console.log('sensitivityList =>', this.sensitivityList);\r\n    this.labReportFiltered = this.sensitivityList;\r\n\r\n    this.labReportFiltered.forEach((element) => {\r\n      this.backDates.forEach((subEle, subIndx) => {\r\n        const nextOrganism = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.Parameter == element.Parameter && x.PanelTestId.split('_')[1] == subEle.PanelTestId.split('_')[1]);\r\n        if (nextOrganism != undefined) {\r\n          element['backDate' + subIndx] = nextOrganism;\r\n          element['backDate' + subIndx + '_Result'] = nextOrganism[\"Result\"] ? nextOrganism[\"Result\"] : \"--\";\r\n          element['backDate' + subIndx + '_Parameter'] = nextOrganism[\"Parameter\"];\r\n          element['backDate' + subIndx + '_TestNote'] = nextOrganism[\"TestNote\"];\r\n          element['backDate' + subIndx + '_PanelTestId'] = nextOrganism[\"PanelTestId\"];\r\n          element['backDate' + subIndx + '_OrganismName'] = nextOrganism[\"Parameter\"];\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n    // console.log('**********labReportFiltered ************', this.labReportFiltered);\r\n  }\r\n\r\n  public prevResult() {\r\n    if (this.startOrganismIndex == 0) return;\r\n    this.startOrganismIndex = this.startOrganismIndex - 1;\r\n    this.endOrganismIndex = this.endOrganismIndex - 1;\r\n    this.labReportFiltered.forEach((ele) => {\r\n      for (let i = 0; i < 4; i++) {\r\n        ele['backDate' + i + '_Result'] = null;\r\n      }\r\n    });\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  public nextResult() {\r\n\r\n    if (this.endOrganismIndex <= 4) return;\r\n    this.startOrganismIndex = this.startOrganismIndex + 1;\r\n    this.endOrganismIndex = this.endOrganismIndex + 1;\r\n    this.labReportFiltered.forEach((ele) => {\r\n      for (let i = 0; i < 4; i++) {\r\n        ele['backDate' + i + '_Result'] = null;\r\n      }\r\n    });\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n}\r\n","<section>\r\n    <article *ngIf=\"!isCVET\">\r\n        <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n            {{labelService.dsAnaysisResultsScreen. AvailableResults}}:\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n                <mat-option *ngFor=\"let dateObj of labReportDistinct\" [value]=\"dateObj.DateReceived\">\r\n                    {{dateObj.DateReceived}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </article>\r\n\r\n    <article>\r\n        <h3 class=\"hl-head\" *ngIf=\"noneSensitivityList.length>0\"> {{noneSensitivityList[0].AnalysisTypeName}} </h3>\r\n        <div class=\"wz-content\">\r\n            <ng-container *ngFor=\"let item of noneSensitivityList\">\r\n                <p *ngIf=\"item.Result || item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span *ngIf=\"item.Result\">\r\n                        <span *ngIf=\"item.Result === 'See Note' && item.TestNote; else showResult\">\r\n                            {{item.TestNote}}\r\n                        </span>\r\n                        <ng-template #showResult>{{item.Result}}</ng-template>\r\n                    </span>\r\n                </p>\r\n                <p *ngIf=\"item.Result !== 'See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}} Note: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n            </ng-container>\r\n            <div *ngFor=\"let item of bottomNoneSensitivityList\"\r\n                [ngClass]=\"{'top-border': bottomNoneSensitivityList.length>0 && item.Parameter === 'Organism'}\">\r\n                <p>\r\n                    <strong>\r\n                        {{item.Parameter}}\r\n                        <span *ngIf=\"item.TestNote && item.Parameter !=='Comment'\">Note</span>:\r\n                    </strong>\r\n                    <span [innerHTML]=\"item.displayNote\"></span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </article>\r\n</section>\r\n\r\n<div class=\"temp1 wz-table\" *ngIf=\"labReportFiltered.length > 0\">\r\n    <table mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"Sensitivity\">\r\n            <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Sensitivity}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div>\r\n                    <p style=\"width: 165px;\">\r\n                        <img src=\"../../../../assets/img/info-icon.svg\"\r\n                            [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\"\r\n                            [matTooltipPosition]=\"'above'\" class=\"test_info_icon pl-1\" alt=\"info-icon\"\r\n                            *ngIf=\"element.Definition\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                        <span> {{element.Parameter}} </span>\r\n                    </p>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span [ngStyle]=\"{'visibility':isHideTblBackDates ? 'hidden' : 'visible'}\"\r\n                    class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (startOrganismIndex === 0)}\" (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n\r\n                <span class=\"back-date \" *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    {{backDates[0].Result}}\r\n                </span>\r\n\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn newBTn\"\r\n                    [ngClass]=\"{'icon-disable' : (endOrganismIndex <= noOfDtColToShow)}\"\r\n                    (click)=\"nextResult()\" title=\"Next\" *ngIf=\"isCVET\"> arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    <span>\r\n                        {{element.backDate0_Result ? element.backDate0_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date \" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    {{backDates[1].Result}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p class=\"back-date \" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    <span>\r\n                        {{element.backDate1_Result ? element.backDate1_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date \" *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    {{backDates[2].Result}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    <span>\r\n                        {{element.backDate2_Result ? element.backDate2_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date \" *ngIf=\"backDates[3] && backDates[3].Result\">\r\n                    {{backDates[3].Result}}\r\n                </span>\r\n\r\n                <span [ngStyle]=\"{'visibility':isHideTblBackDates ? 'hidden' : 'visible'}\"\r\n                    class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (endOrganismIndex <= 4)}\" (click)=\"nextResult()\" title=\"Next\">\r\n                    arrow_forward\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[3] && backDates[3].Result\">\r\n                    <span>\r\n                        {{element.backDate3_Result ? element.backDate3_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\">\r\n        </tr>\r\n\r\n    </table>\r\n\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, DataService, CommonService } from '../../../services';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\n\r\n@Component({\r\n  selector: 'app-template13',\r\n  templateUrl: './template13.component.html',\r\n  styleUrls: ['./template13.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class Template13Component extends ResultDetailsHelper implements OnInit,OnChanges {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public testNoteList: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n  public dateDropdown: any[] = [];\r\n  @Input('isCVET') isCVET = false;\r\n  \r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public commonService: CommonService,\r\n    public modalService: NgbModal,\r\n    public confirmationDialogService: ConfirmationDialogService) {\r\n    super(patientService, labelService, dataService, modalService);\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    this.labReportDistinct = [...new Map(this.labReportFiltered.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    console.log('labReportDistinct ==>', this.labReportDistinct);\r\n\r\n    this.testNoteList = this.labReportFiltered.filter(ele => ele.DateReceived == this.selectedDate);\r\n    console.log('testNoteList ==>', this.testNoteList);\r\n\r\n    const dateDropdown = JSON.parse(JSON.stringify(this.labReportDistinct));\r\n    this.dateDropdown = dateDropdown.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //write something code here\r\n  }\r\n\r\n  public selectNote(event) {\r\n    this.selectedDate = event.value;\r\n    this.testNoteList = this.labReportFiltered.filter(ele => ele.DateReceived == this.selectedDate);\r\n\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.appData['backDates'] = [];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<section *ngIf=\"!isCVET\">\r\n  <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n    {{labelService.dsAnaysisResultsScreen. AvailableResults}}:\r\n  </div>\r\n  <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n    <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n      <mat-option *ngFor=\"let report of dateDropdown\" [value]=\"report.DateReceived\">\r\n        {{report.DateReceived}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</section>\r\n\r\n<!-- Notes Details -->\r\n<section>\r\n  <h1 class=\"note-title\">\r\n    {{ testNoteList && testNoteList.length>0 ? testNoteList[0].AnalyzerDisplayName : null}}\r\n    - {{selectedAnalysisType}}\r\n    - {{selectedDate}}\r\n  </h1>\r\n  <section class=\"temp1\" *ngIf=\"testNoteList.length>0\">\r\n    <div *ngFor=\"let data of testNoteList; let i = index\">\r\n      <ng-container *ngIf=\"data.TestNote\">\r\n        <!-- <h5 class=\"note-head\"> {{data.Parameter}} </h5> -->\r\n        <p><strong> {{data.Parameter}} </strong></p>\r\n        <p style=\"margin-bottom: 0px;\"> {{data.Result}} </p>\r\n        <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n      </ng-container>\r\n    </div>\r\n    <div *ngIf=\"testNoteList.length>0 && testNoteList[0].PanelNote\">\r\n      <h5 class=\"note-head\"> Panel Notes: </h5>\r\n      <p [innerHTML]=\"commonService.getResultText(testNoteList[0].Result, testNoteList[0].PanelNote)\"></p>\r\n    </div>\r\n  </section>\r\n</section>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, PatientService, CommonService, DataService } from '../../../services';\r\nimport { ResultDetailsHelper } from '../result-details-helper';\r\nimport { EnmTestType } from '../../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-template14',\r\n  templateUrl: './template14.component.html',\r\n  styleUrls: ['./template14.component.css']\r\n})\r\nexport class Template14Component extends ResultDetailsHelper implements OnChanges, OnInit {\r\n\r\n  @Input() selectedDate: string;\r\n  public selectedBackDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  @Input() labResults: any[] = [];\r\n  public labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public uniqResultDateList: string[];\r\n  public labReportFiltered: any[] = [];\r\n  public filteredData: any[] = [];\r\n  public resultImages: any[] = [];\r\n  public backDates: any[] = [];\r\n  public selectedBackDateIndex = 0;\r\n\r\n\r\n  public testTypeId = {\r\n    forTableData: 4,\r\n    forPageData: 5\r\n  }\r\n\r\n  public labReportGrouped: any[] = [];\r\n  public pageData: any[] = [];\r\n  public siteLocation: any;\r\n  public pageTableData: any[] = [];\r\n  public disclaimerText: string;\r\n  public comments: any;\r\n  public groupedPageData: any[] = [];\r\n\r\n  @Output() viewImages: EventEmitter<any> = new EventEmitter();\r\n\r\n  public clinicalHistory: any;\r\n  @Input('isCVET') isCVET = false;//public isCVET = (sessionStorage.ENV === 'CVET' && !(window === window.parent))\r\n  constructor(\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public commonService: CommonService,\r\n    public dataService: DataService,\r\n    public modalService: NgbModal) {\r\n    super(patientService, labelService, dataService, modalService);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    this.noOfDtColToShow = this.isCVET ? 1 : 4;\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    if (changes.selectedDate && !changes.selectedDate.firstChange) {\r\n      this.selectedDate = changes.selectedDate.currentValue;\r\n    }\r\n    this.selectedBackDate = this.selectedDate;\r\n\r\n    if (changes.labReportFilterByAnalysisType) {\r\n      this.labReportFilterByAnalysisType = changes.labReportFilterByAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReportFilterByAnalysisType.map((item) => [item[\"DateReceived\"], item])).values()];\r\n\r\n    this.labReportDistinct = this.labReportDistinct.sort((a, b) => {\r\n      return Number(new Date(b.DateReceivedRaw)) - Number(new Date(a.DateReceivedRaw));\r\n    });\r\n\r\n    this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //do something\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    // debugger\r\n    this.dataService.appData['backDates'] = this.backDates;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    const analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    this.backDates = this.backDates.map(ele => {\r\n      ele.selected = ele.DateReceived == this.selectedDate && ele.AnalysisTypeId == analysisTypeId ? true : false;\r\n      return ele;\r\n    });\r\n\r\n    this.labReportFiltered = this.labReportFilterByAnalysisType.filter(ele => {\r\n      if (ele.DateReceived == this.selectedDate) {\r\n        return ele;\r\n      }\r\n    })\r\n\r\n    const selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n    this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n\r\n    if (this.labReportFiltered.length) {\r\n      this.labReportGrouped = Object.entries(\r\n        this.labReportFiltered.reduce((acc, item) => {\r\n          const groupName = item.TestGroupName || \"Unknown\"; // Handle missing TestGroupName\r\n          if (!acc[groupName]) {\r\n            acc[groupName] = [];\r\n          }\r\n          acc[groupName].push(item);\r\n          return acc;\r\n        }, {})\r\n      ).map(([groupName, data]) => ({\r\n        groupName,\r\n        data,\r\n      }));\r\n      console.log('labReportGrouped =>', this.labReportGrouped);\r\n\r\n      // this.siteLocation = this.labReportFiltered.find(x => x.Parameter.toLowerCase() == 'site_location');\r\n      this.siteLocation = this.labReportFiltered.find(x => x.Parameter?.toLowerCase() == 'm_breg' || x.Parameter?.toLowerCase() == 'site_location');\r\n      // this.pageTableData = this.labReportFiltered.filter(x => x.TestTypeId == this.testTypeId.forTableData);\r\n      this.pageTableData = this.labReportGrouped.find(x => x.groupName == 'Table')?.data\r\n      this.pageTableData.sort((a, b) => a.AnalyteDesc.localeCompare(b.AnalyteDesc));\r\n      // this.pageData = this.labReportFiltered.filter(x => x.TestTypeId == this.testTypeId.forPageData);\r\n      // this.groupedPageData = this.labReportGrouped.filter(x => x.groupName != 'Site Location' && x.groupName != 'Table' && x.groupName != 'Unknown')\r\n\r\n      this.disclaimerText = this.labReportFiltered[0]?.DisclaimerText;\r\n\r\n      this.comments = this.labReportFiltered.find(x => x.Parameter == 'FEC_COMM');\r\n\r\n      let count = 1;\r\n      this.resultImages = this.labReportFiltered.filter(x => {\r\n        if (/data:image/.test(x.Result) && count <= 8) {\r\n          count++;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      console.log('images>', this.resultImages)\r\n\r\n\r\n      // this.pageData = this.labReportFiltered.filter(x => x.TestTypeId == this.testTypeId.forPageData);\r\n      // this.siteLocation = this.pageData.shift();\r\n      // this.pageTableData = this.labReportFiltered.filter(x => x.TestTypeId == this.testTypeId.forTableData);\r\n\r\n      // ===== generate  groupedPageData  =====\r\n      const typeMap = {};\r\n      // First, map `_TYPE` parameters to their `Result` values\r\n      this.labReportFiltered.forEach((item) => {\r\n        if (item.Parameter.endsWith(\"_TYPE\")) {\r\n          const baseKey = item.Parameter.replace(\"_TYPE\", \"\");\r\n          typeMap[baseKey] = item.Result || \"Unknown\";\r\n        }\r\n      });\r\n\r\n      // Now, group `_MSG` parameters based on the mapped `_TYPE` result\r\n      const groupedData = this.labReportFiltered.reduce((acc, item) => {\r\n        if (item.Parameter.endsWith(\"_MSG\")) {\r\n          const baseKey = item.Parameter.replace(\"_MSG\", \"\");\r\n          const groupName = typeMap[baseKey] || \"Unknown\"; // Use mapped `_TYPE` result\r\n\r\n          if (!acc[groupName]) {\r\n            acc[groupName] = [];\r\n          }\r\n          acc[groupName].push(item);\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      // Convert the grouped object into an array of `{ groupName, data }` format\r\n      this.groupedPageData = Object.entries(groupedData).map(([groupName, data]) => ({\r\n        groupName,\r\n        data,\r\n      }));\r\n      console.log('groupedPageData =>', this.groupedPageData)\r\n\r\n    }\r\n  }\r\n\r\n  public getStrToHtml(resultStr) {\r\n    return resultStr?.replaceAll('\\n', '<br/>');\r\n  }\r\n\r\n  public onDateChange(event) {\r\n    this.selectedDate = event.value;\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n===> Template-6 Reports <=== \r\nNames & Pids:-\r\npid - pat1aim\r\n\r\n*/","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <ng-container *ngIf=\"!isCVET\">\r\n            <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n                {{labelService.dsAnaysisResultsScreen. AvailableResults}}:\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"onDateChange($event)\">\r\n                    <mat-option *ngFor=\"let report of labReportDistinct\" [value]=\"report.DateReceived\">\r\n                        {{report.DateReceived}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </ng-container>\r\n        <h1 class=\"note-title\" *ngIf=\"selectedAnalysisType\"> {{selectedAnalysisType}} - {{selectedDate}} </h1>\r\n    </div>\r\n\r\n    <div class=\"col-sm-12\">\r\n        <div>\r\n            <div *ngIf=\"siteLocation\">\r\n                <p class=\"capitalize-first-letter mb-0\"><strong> {{siteLocation.AnalyteDesc}} </strong></p>\r\n                <span> {{siteLocation.Result}} </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"table-responsive table tbl-border mt-3 temp14\" *ngIf=\"pageTableData.length>0\">\r\n            <table class=\"table mb-0\">\r\n                <thead class=\"bg-dark text-white\">\r\n                    <tr>\r\n                        <th scope=\"col\">Lesion details</th>\r\n                        <th scope=\"col\">Result</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let d of pageTableData\">\r\n                        <td class=\"capitalize-first-letter\">{{d.AnalyteDesc}}</td>\r\n                        <td>{{d.Result?d.Result:'-'}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div>\r\n            <div *ngFor=\"let group of groupedPageData\">\r\n                <p class=\"capitalize-first-letter mb-0\"><strong>{{group.groupName}}</strong> </p>\r\n                <ul>\r\n                    <li *ngFor=\"let item of group.data\">\r\n                        <span> {{item.Result}} </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"comments\">\r\n            <span style=\"font-weight: bold;\"> {{comments.AnalyteDesc}} </span><br>\r\n            <span [innerHTML]=\"getStrToHtml(comments.Result)\"> </span>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"resultImages.length>0\">\r\n            <div class=\"col-md-8 mt-3\">\r\n                <p> <strong>Report region</strong> </p>\r\n                <div class=\"row\" *ngIf=\"resultImages.length>0\">\r\n                    <span class=\"col-sm-3 text-center imgpart\" *ngFor=\"let img of resultImages; let imgIndex=index;\">\r\n                        <img [src]=\"img.Result\" (click)=\"viewImageSlider(resultImages, imgIndex);\" alt=\"\">\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngIf=\"disclaimerText\">\r\n            <div class=\"disclaimer\">\r\n                <p class=\"analyte-desc\">\r\n                    <strong>{{labelService.dsAnaysisResultsScreen.Disclaimer}}:</strong>\r\n                    <br>\r\n                    <span> {{disclaimerText}} </span>\r\n                </p>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogService } from '../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DownloadResult } from '../../models/patient';\r\nimport { EnmLanguage, EnmTestType } from '../../shared/constants/enum';\r\nimport { environment } from '../../../environments/environment';\r\nimport { PatientService, HeaderService, CommonService, LabelService, DataService, RefLabService, FuseService, EncrDecrService } from '../../services';\r\nimport { constant } from '../../models/label';\r\n// const trendableElements: any[] = ['Hematology', 'G8+', 'EC8+', 'CHEM8+', '6+', 'E3+', '2000', 'CBCC', 'CCBCCUP', 'ACBCCUP', 'ONC2000', '7000', '8000', '25000517', 'RET', '2001', '25000525', 'PCV', 'TPTS', '4113', 'TPFIB'];\r\nimport {\r\n  // RefLab_HM5_iStat_Trendables, \r\n  // RefLab_HM5_iStat_TrendingTestList, \r\n  // trendable,\r\n  // vs2trends, \r\n  // iStatTrends\r\n  chemistryStandaloneTestList\r\n} from '../../shared';\r\nimport { SpinnerVisibilityService } from 'ng-http-loader';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-result-details',\r\n  templateUrl: './result-details.component.html',\r\n  styleUrls: ['./result-details.component.css']\r\n})\r\nexport class ResultDetailsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input('isCVET') isCVET = false;//(sessionStorage.ENV === 'CVET' && !(window === window.parent)) //window.location.href.indexOf(environment.CvetPATH) !== -1;\r\n  @Input('loadData') loadData: any = {};\r\n  @Input('originData') originData: any = {};\r\n  public selectedResult: any;\r\n  public BusinessGuid: string;\r\n  public isBackOfficeUser: boolean;\r\n  public isConsultantUser: boolean;\r\n  public labResults: any = null;\r\n  public labReports: any[] = [];\r\n  public labReportFilterByAnalysisType: any[] = [];\r\n  public templateId = 0;\r\n  public selectedSourceType: string;\r\n  public selectedAnalysisType: string;\r\n  public selectedAnalysisTypeId: string;\r\n  public selectedDate: string = null;\r\n  public analysisTypeList: any[] = [];\r\n  public patientHistoryList: any[] = [];\r\n  // public downloadResultsPDF: DownloadPatientResult;\r\n  public downloadResultsPDF: DownloadResult;\r\n  public uniqResultDateList: any[] = [];\r\n  // public reviewedResult: string = 'null';\r\n  public reviewedByObj: any;\r\n\r\n  public testTrendMappingData: any[] = [];\r\n  public reportTrendable: any;\r\n  public trendMappingList: any[] = [];\r\n  public trendable: any[]; // = trendable;  \r\n  public reportTrendableAll: string[];\r\n  public iStatTrends: any[]; // = iStatTrends;\r\n  public isTrendable = false;\r\n  public tblTopPatientDetails: any = {};\r\n  public bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n  public refLAbClinicId: any;\r\n  public helpObj: any;\r\n  public isResultLandingPage: any;\r\n  private cvetParams: Record<string, string>;\r\n  public tests = [];\r\n  public currentTest: any;\r\n  public loading = true;\r\n  public loadingText = 'Loading result details...';\r\n  public ctext: any = '';\r\n  //private lastPath = '/dashboard';\r\n  public warningTopList: any[] = [];\r\n\r\n  public isEnableCR = false;\r\n  public patientData: any;\r\n  constructor(public patientService: PatientService, public commonService: CommonService, public router: Router,\r\n    public headerService: HeaderService, public labelService: LabelService, public dataService: DataService,\r\n    public confirmationDialogService: ConfirmationDialogService, private EncrDecr: EncrDecrService,\r\n    private title: Title, private modalService: NgbModal, public refLabService: RefLabService,\r\n    public fuseService: FuseService, private spinner: SpinnerVisibilityService, private toastr: ToastrService) {\r\n    //this.lastPath = this.router.getCurrentNavigation()?.previousNavigation?.finalUrl?.toString() || localStorage.getItem('lastPath') || this.lastPath\r\n    //localStorage.setItem('lastPath', this.lastPath)\r\n\r\n    localStorage.setItem('prevPageFix', 'results-details');\r\n    this.selectedResult = this.dataService.appState.selectedResult;\r\n\r\n    this.dataService.data.subscribe(data => {\r\n      this.warningTopList = data.warningTopList;\r\n    })\r\n\r\n\r\n\r\n    //if (this.isCVET) this.cvetParams = JSON.parse(sessionStorage.CVET).params;\r\n    // console.log('cvetParams =>', this.cvetParams);\r\n\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n\r\n    this.isResultLandingPage = parseInt(localStorage.getItem('bkolanding'));\r\n    // if(localStorage.getItem(\"rediretionDetails\")){\r\n\r\n    //this.isCVET ? this.getPatientResults() : this.getPatientHistory();\r\n\r\n    //if (!this.isCVET) {\r\n    this.selectedSourceType = this.selectedResult.subElement && this.selectedResult.subElement['SourceType'] ? this.selectedResult.subElement['SourceType'] : null;\r\n    this.selectedAnalysisType = this.selectedResult.subElement && this.selectedResult.subElement['AnalysisTypeName'] ? this.selectedResult.subElement['AnalysisTypeName'] : null;\r\n    this.selectedAnalysisTypeId = this.selectedResult.subElement && this.selectedResult.subElement['AnalysisTypeId'] ? this.selectedResult.subElement['AnalysisTypeId'] : null;\r\n    this.selectedDate = this.selectedResult.subElement && this.selectedResult.subElement['DateReceivedStr'] ? this.selectedResult.subElement['DateReceivedStr'] : null;\r\n    //}\r\n\r\n    this.trendMappingList = this.dataService.appData.testTrendMapping;\r\n    this.refLAbClinicId = (this.dataService.appData.authDetails['BackOfficeFlag'] && this.bckBusinessInfo) ? this.bckBusinessInfo['RefLabClinicId'] : this.dataService.appData.authDetails['RefLabClinicId'];\r\n    this.dataService.data.subscribe(data => {\r\n      this.tblTopPatientDetails = data.tblTopPatientDetails;\r\n    });\r\n    //if (!this.isCVET) {\r\n    if (this.isEmptyArrayOrObj(this.labelService.dsLabelData)) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindAnaysisResultsLabel();\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.ctext = this.labelService.dsAnaysisResultsScreen.ConsultationRequest.split('ー').join('\\n');\r\n    }\r\n    //}\r\n\r\n  }\r\n  public isEmptyArrayOrObj(value) {\r\n    if (Array.isArray(value)) {\r\n      return value.length === 0;\r\n    } else if (value && typeof value === 'object') {\r\n      return Object.keys(value).length === 0;\r\n    }\r\n    return false; // If it's neither an array nor an object, return false\r\n  }\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage, true).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindAnaysisResultsLabel();\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindSideMenuLabel();\r\n      this.ctext = this.labelService.dsAnaysisResultsScreen.ConsultationRequest.split('ー').join('\\n');\r\n    });\r\n  }\r\n\r\n  public getPatientHistory() {\r\n    if (this.isCVET) {\r\n      this.patientHistoryListSetter(this.originData);\r\n      return;\r\n    }\r\n    this.selectedResult = this.dataService.appState.selectedResult;\r\n    let pid = this.selectedResult.element && this.selectedResult.element['PatientId'] ? this.selectedResult.element['PatientId'] : null;\r\n    let ZDXPatientId = this.selectedResult.element && this.selectedResult.element['ZDXPatientId'] ? this.selectedResult.element['ZDXPatientId'] : null;\r\n\r\n    const reqbody: any = {\r\n      AnalysisSourceId: 0,\r\n      AnalysisStatusId: 0,\r\n      AnalysisTypeId: 0,\r\n      AnalysisTypeName: null,\r\n      Analyzer: null,\r\n      Breed: \"\",\r\n      BusinessGuid: this.isCVET ? this.loadData.ZdxBusinessGuid : this.BusinessGuid,\r\n      FromDate: null,\r\n      GenderId: 0,\r\n      IsApplyFilter: true,\r\n      IsBackOfficeUser: (this.isConsultantUser || this.isBackOfficeUser) ? true : false,\r\n      IsExactFilter: true,\r\n      // IsPatientInfo: true, // no requred\r\n      LanguageId: this.labelService.selectedLanguage,\r\n      OwnerName: null,\r\n      PageNo: 1,\r\n      PageSize: 60,\r\n      PatientId: pid, // this.dataService.appState.selectedResult.element['PatientId'],\r\n      PatientName: null,\r\n      PhysicianName: null,\r\n      SearchText: null,\r\n      SpeciesId: 0,\r\n      SpeciesName: null,\r\n      ToDate: null,\r\n      UserGuid: this.isCVET ? this.loadData.UserGuid : this.headerService.loginUserGuid,\r\n      isFollowedPatient: false,\r\n      isSortByLastResultDate: true,\r\n      ZDXPatientInfoId: ZDXPatientId //this.dataService.appState.selectedResult.element['ZDXPatientId']\r\n    };\r\n    this.commonService.getPatientResultList(reqbody, this.loadData.AccessToken).subscribe(res => {\r\n      const patientHistoryList = res.ResponseData.DashboardPatientList[0].Details;\r\n      this.patientData = res?.ResponseData?.DashboardPatientList[0];\r\n      this.patientHistoryListSetter(patientHistoryList);\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * patientHistoryList\r\n   */\r\n  public patientHistoryListSetter(patientHistoryList) {\r\n    patientHistoryList.forEach(ele => {\r\n      if (ele.AnalysisStatusName == 'Completed') {\r\n        if (this.patientHistoryList == null) {\r\n          this.patientHistoryList.push(ele);\r\n        } else {\r\n          const ab = this.patientHistoryList.find(x => x.DateReceived == ele.DateReceived && x.AnalysisTypeName == ele.AnalysisTypeName);\r\n          if (ab == null) {\r\n            this.patientHistoryList.push(ele);\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  public getAnalysisResults() {\r\n    // debugger\r\n    // this.selectedResult = this.dataService.appState.selectedResult;\r\n    const filterDates = this.dataService.appState?.updatedFilterRequest;\r\n\r\n    const requestParams = {\r\n      UserGuid: this.isCVET ? this.loadData.UserGuid : this.headerService.loginUserGuid,\r\n      BusinessGuid: this.isCVET ? this.loadData.ZdxBusinessGuid : this.BusinessGuid,\r\n      LanguageId: this.labelService.selectedLanguage,\r\n      IsBackOfficeUser: (this.isConsultantUser || this.isBackOfficeUser) ? true : false,\r\n      PatientId: this.selectedResult.element?.['PatientId'] ? this.selectedResult.element['PatientId'] : null,\r\n      Analyzer: this.selectedResult.subElement?.['Analyzer'] ? this.selectedResult.subElement['Analyzer'] : null,\r\n      // ZDXPatientInfoId | ZDXPatientId\r\n      ZDXPatientInfoId: this.selectedResult?.element['ZDXPatientId'] ? this.selectedResult.element['ZDXPatientId'] : null,\r\n      // ReferenceLab source type\r\n      PanelCode: this.selectedSourceType == 'ReferenceLab' ? this.selectedResult.subElement['AnalysisTypeId'] : null,\r\n      // Inclinic source type\r\n      AnalysisTypeName: this.selectedSourceType == 'InClinic' ? this.selectedResult.subElement['AnalysisTypeName'] : null,\r\n      FromDate: filterDates?.FromDate ? filterDates.FromDate : null,\r\n      ToDate: filterDates?.ToDate ? filterDates.ToDate : null\r\n    }\r\n    console.log('requestParams =>', requestParams);\r\n\r\n    this.patientService.getResultDetails(requestParams, this.loadData.AccessToken).subscribe(data => {\r\n      this.labResults = data.ResponseData && data.ResponseData['LabResults'] && data.ResponseData['LabResults'].length > 0 ? data.ResponseData['LabResults'][0] : null;\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n      console.log('=======labResults=========', this.labResults);\r\n      this.templateId = this.labReports.length > 0 ? this.labReports[0].TemplateId : 0;\r\n      // if condition written becouse fof pdf data miscatch for temp-11\r\n      this.labReports.sort((a, b) => {\r\n        return Number(new Date(a.DateReceivedRaw)) - Number(new Date(b.DateReceivedRaw));\r\n      });\r\n\r\n      // const selectedDate = this.dataService?.appData?.tblTopPatientDetails?.['DateReceived'];\r\n      // this.warningTopList = selectedDate && this.labResults?.TestWarning?.filter(ele => ele.DateReceived == selectedDate);\r\n\r\n      // === MOOSE-5591 changes for CG8+ and CG4+ = ['Calculated pH','Calculated PO2','Calculated PCO2'] ===\r\n      this.labReports = this.labReports.map(ele => {\r\n        if (ele.Parameter == 'pH_calc') {\r\n          ele.Parameter = 'Calculated pH';\r\n        } else if (ele.Parameter == 'pO2_calc') {\r\n          ele.Parameter = 'Calculated PO2';\r\n        } else if (ele.Parameter == 'pCO2_calc') {\r\n          ele.Parameter = 'Calculated PCO2';\r\n        } else {\r\n          ele.Parameter = ele.Parameter;\r\n        }\r\n        return ele;\r\n      })\r\n      // === MOOSE-5591 changes for CG8+ and CG4+ end ===\r\n\r\n      // this.uniqResultDateList = [...new Set(this.labReports.map(item => item.DateReceived))];\r\n      // this.uniqResultDateList = [...new Map(this.labReports.map((item) => [item[\"DateReceived\"], item])).values()];\r\n      // console.log('=======uniqResultDateList=========', this.uniqResultDateList);\r\n\r\n      this.getLabReportFilterByAnalysisType(); // Old\r\n\r\n    }, () => {\r\n      this.toastr.error(this.labelService.dsFuseManagementScreen.AddRefLabAccountRespErrorMessage)\r\n    });\r\n  }\r\n\r\n  public onChangeAnalysisType(ele) {\r\n    if (!this.isCVET) this.patientService.markAs(ele, 'READ');\r\n    this.dataService.pageState['chartOpenedTestList'] = '';\r\n    this.selectedAnalysisType = ele['AnalysisTypeName'];\r\n    this.selectedDate = ele['DateReceivedStr'];//this.isCVET ? ele['DateReceived'] : ele['DateReceivedStr'];\r\n    this.selectedAnalysisTypeId = ele['AnalysisTypeId'];\r\n    this.getLabReportFilterByAnalysisType();\r\n  }\r\n\r\n  public async getLabReportFilterByAnalysisType() {\r\n    const tableTopPatientDetails = this.labReports.filter(ele => {\r\n      if (ele.AnalysisTypeName == this.selectedAnalysisType && ele.DateReceived == this.selectedDate) {\r\n        return ele;\r\n      }\r\n    });\r\n\r\n    this.dataService.appData.tblTopPatientDetails = tableTopPatientDetails.length > 0 ? tableTopPatientDetails[0] : null;\r\n    if (this.dataService.appData.tblTopPatientDetails == null) {\r\n      const x = this.labReports.filter(ele => ele.AnalysisTypeName == this.selectedAnalysisType)\r\n      this.dataService.appData.tblTopPatientDetails = x.length > 0 ? x[0] : null;\r\n    }\r\n    console.log('tblTopPatientDetails ==>', this.dataService.appData.tblTopPatientDetails);\r\n\r\n    // used for VETSCAN VUE+\r\n    if (this.dataService.appData.tblTopPatientDetails?.['DAPAnalyzerType'] == 'vetscan-ltf') {\r\n      if (!this.dataService.appData.tblTopPatientDetails?.['AnalyzerDisplayName'].includes('+')) {\r\n        this.dataService.appData.tblTopPatientDetails['AnalyzerDisplayName'] = this.dataService.appData.tblTopPatientDetails?.['AnalyzerDisplayName'] + '+';\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }\r\n    }\r\n\r\n    console.log('reportTrendable', this.reportTrendable);\r\n\r\n    let standAlonTest = [];\r\n    if (this.dataService.appData?.tblTopPatientDetails?.['AnalyzerName'] == 'Ref Lab') {\r\n      standAlonTest = await this.testTrendMappingData.filter(ele => {\r\n        return ele.IsStandAlone && ele.TestCode == this.dataService.appData?.tblTopPatientDetails?.['PanelTestId'];\r\n      })\r\n    }\r\n    if (standAlonTest.length) {\r\n      this.reportTrendableAll.push(standAlonTest[0]['TestCode']);\r\n    }\r\n    // chemistry Standalone TestList\r\n    const standaloneStaticTestList = chemistryStandaloneTestList.map(ele => ele.panelTestId);\r\n    this.reportTrendableAll = this.reportTrendableAll?.concat(standaloneStaticTestList);\r\n\r\n    // console.log('reportTrendableAll', this.reportTrendableAll);\r\n\r\n    this.dataService.appData.reportTrendableAll = this.reportTrendableAll;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    // this.dataService.appData.VS2Tred = (\r\n    //   (this.dataService.appData.tblTopPatientDetails\r\n    //     && this.dataService.appData.tblTopPatientDetails['AnalyzerName'] == 'VetScan VS2')\r\n    //   && (this.reportTrendable['VS2'].includes(this.selectedAnalysisType?.toLowerCase())\r\n    //     || this.reportTrendable['VS2'].includes(this.selectedAnalysisTypeId?.toLowerCase())));\r\n\r\n    // this.isTrendable = (\r\n    //   (this.selectedAnalysisType == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell'))\r\n    //   || this.reportTrendableAll.includes(this.selectedAnalysisType.toLowerCase())\r\n    //   || this.reportTrendableAll.includes(this.selectedAnalysisTypeId.toLowerCase()))\r\n    // || this.dataService.appData.VS2Tred ? true : false;\r\n\r\n    this.isTrendable = (\r\n      (this.selectedAnalysisType == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell'))\r\n      || this.reportTrendableAll?.includes(this.selectedAnalysisType.toLowerCase())\r\n      || this.reportTrendableAll?.includes(this.selectedAnalysisTypeId.toLowerCase())) ? true : false;\r\n\r\n    this.dataService.appData.isTrendable = this.isTrendable;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    // =======CHEKING TRANDABLE AND NONTRANDABLE========\r\n    if (this.isTrendable) {\r\n      this.labReportFilterByAnalysisType = this.labReports.filter(ele => {\r\n        if (ele.AnalysisTypeName == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell')) {\r\n          return ele;\r\n        } else if (this.reportTrendableAll.includes(ele.AnalysisTypeName?.toLowerCase()) || this.reportTrendableAll.includes(ele.AnalysisTypeId?.toLowerCase())) {\r\n          return ele;\r\n        }\r\n      });\r\n      // if (this.dataService.appData.tblTopPatientDetails && this.dataService.appData.tblTopPatientDetails['AnalyzerName'] == 'i-STAT') {\r\n      //   this.labReportFilterByAnalysisType = this.labReports.filter(ele => {\r\n      //     if (ele.AnalysisTypeName == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell')) {\r\n      //       return ele;\r\n      //     } else if (this.reportTrendable['iSTAT'].includes(ele.AnalysisTypeName?.toLowerCase()) || this.reportTrendable['iSTAT'].includes(ele.AnalysisTypeId?.toLowerCase())) {\r\n      //       return ele;\r\n      //     }\r\n      //   });\r\n      // } else if (this.dataService.appData.VS2Tred) {\r\n      //   this.labReportFilterByAnalysisType = this.labReports.filter(ele => {\r\n      //     if (ele.AnalysisTypeName == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell')) {\r\n      //       return ele;\r\n      //     } else if ((ele.AnalysisTypeName && this.reportTrendable['VS2'].includes(ele.AnalysisTypeName?.toLowerCase()))\r\n      //       || (ele.AnalysisTypeId && this.reportTrendable['VS2'].includes(ele.AnalysisTypeId?.toLowerCase()))) {\r\n      //       return ele;\r\n      //     }\r\n      //   });\r\n      // } else {\r\n      //   this.labReportFilterByAnalysisType = this.labReports.filter(ele => {\r\n      //     if (ele.AnalysisTypeName == 'Hematology-OptiCell' && this.reportTrendableAll.includes('hematology opticell')) {\r\n      //       // ele.AnalysisTypeName = ele.AnalysisTypeName.replace('Hematology-OptiCell', 'Hematology OptiCell');\r\n      //       return ele;\r\n      //     }\r\n      //     else if (this.reportTrendableAll.includes(ele.AnalysisTypeName?.toLowerCase()) || this.reportTrendableAll.includes(ele.AnalysisTypeId?.toLowerCase())) {\r\n      //       return ele;\r\n      //     }\r\n      //   });\r\n      // }\r\n    } else {\r\n      this.labReportFilterByAnalysisType = this.labReports.filter(ele => {\r\n        if (ele?.AnalysisTypeName?.toLowerCase() == this.selectedAnalysisType?.toLowerCase()) {\r\n          return ele;\r\n        }\r\n      });\r\n    }\r\n    // console.log('===labReportFilterByAnalysisType from Result-Details page ==>', this.labReportFilterByAnalysisType);\r\n\r\n    this.templateId = this.labReportFilterByAnalysisType.length > 0 ? this.labReportFilterByAnalysisType[0].TemplateId : 0;\r\n\r\n    if (this.templateId != 6) {\r\n      this.reviewedByObj = this.labReportFilterByAnalysisType.find(x => x.DateReceived == this.selectedDate && x.PanelTestId == \"2232\");  // Review By: to be shown above the table details\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n  public downloatAnalysisResults(requestType?) {\r\n\r\n    const tblData = this.labReportFilterByAnalysisType.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n    let labReportDistinct = [];\r\n    if (this.dataService.appData.isTrendable || this.dataService.appData.VS2Tred) {\r\n      labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceivedAnalysisType\"], item])).values()];\r\n    } else {\r\n      labReportDistinct = [...new Map(tblData.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    }\r\n    const tblTopPatientDetails = this.dataService.appData.tblTopPatientDetails;\r\n    const distinctSelectedDateInded = labReportDistinct.findIndex(v => v.DateReceivedAnalysisType == tblTopPatientDetails.DateReceivedAnalysisType);\r\n    labReportDistinct = labReportDistinct.map(ele => {\r\n      ele.selected = ele.DateReceived == tblTopPatientDetails.DateReceived && ele.AnalysisTypeId == tblTopPatientDetails.AnalysisTypeId ? true : false;\r\n      return ele;\r\n    });\r\n\r\n    let backDates = this.dataService.appData['backDates'];\r\n    if (this.templateId == 9 || this.templateId == 2) {\r\n      backDates = labReportDistinct;\r\n    }\r\n    const firstFourBackDates = backDates ? backDates.slice(0, 4) : [];\r\n    let backDateToPrint;\r\n    if (firstFourBackDates.filter(x => x && x.selected).length) {\r\n      backDateToPrint = firstFourBackDates;\r\n    } else {\r\n      backDateToPrint = distinctSelectedDateInded > 2 ? labReportDistinct.slice(distinctSelectedDateInded - 3, distinctSelectedDateInded + 1) : labReportDistinct.slice(0, distinctSelectedDateInded + 1);\r\n    }\r\n    this.dataService.appData.tblTopPatientDetails = tblTopPatientDetails;\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    const isTrendable = (this.isTrendable || this.dataService.appData.VS2Tred);\r\n    if (isTrendable) {\r\n      backDateToPrint = this.dataService.appData.backDateToPrint;\r\n    }\r\n    console.log('backDateToPrint', backDateToPrint);\r\n\r\n    this.downloadResultsPDF = new DownloadResult();\r\n    this.downloadResultsPDF.BusinessGuid = this.BusinessGuid;\r\n    this.downloadResultsPDF.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.downloadResultsPDF.TemplateId = this.templateId;\r\n    this.downloadResultsPDF.LanguageId = this.labelService.selectedLanguage;\r\n    this.downloadResultsPDF.PatientId = this.labResults.PatientId;\r\n    this.downloadResultsPDF.Analyzer = this.dataService.appData.tblTopPatientDetails['AnalyzerName'];\r\n    this.downloadResultsPDF.SourceType = this.dataService.appData.tblTopPatientDetails['AnalyzerDisplayName']\r\n      && this.dataService.appData.tblTopPatientDetails['AnalyzerDisplayName'].replace(' ', '') == 'ReferenceLab' ? 'ReferenceLab' : 'InClinic';\r\n    this.downloadResultsPDF.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n    this.downloadResultsPDF.PresentDate = this.dataService.appData.tblTopPatientDetails['DateReceived'];\r\n    this.downloadResultsPDF['Indicator'] = \"All\";\r\n    this.downloadResultsPDF.TestType = this.dataService?.pageState?.['chartOpenedTestList'] ? this.dataService.pageState['chartOpenedTestList'] : '';\r\n    this.downloadResultsPDF.TestTypeGraph = this.dataService.pageState['testTypeGraph'] ? this.dataService.pageState['testTypeGraph'] : []; // [{ \"TestType\": \"Calcium\", \"TestHelpFlag\": true }];\r\n    this.downloadResultsPDF.TrendType = isTrendable; // true if trandable or false\r\n    this.downloadResultsPDF.PhysicianName = this.dataService.appData.tblTopPatientDetails['PhysicianName'];\r\n    // =========================================================\r\n    if (isTrendable) {\r\n      this.downloadResultsPDF.BusinessGuid = this.BusinessGuid;\r\n      this.downloadResultsPDF.PatientId = this.labResults.PatientId;\r\n      this.downloadResultsPDF.AnalysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n\r\n      this.downloadResultsPDF.AccessionNumber = '';\r\n      this.downloadResultsPDF.PanelId = '';\r\n\r\n      this.downloadResultsPDF.Analyzer = null;\r\n      this.downloadResultsPDF.SourceType = this.dataService.appData.tblTopPatientDetails['AnalyzerDisplayName'].replace(' ', ''); // null; // Not Reqired for Trending //\r\n      this.downloadResultsPDF.TestType = this.dataService.pageState['chartOpenedTestList'] ? this.dataService.pageState['chartOpenedTestList'] : ''; // 'list of test name comma seprated if graph opened' example 'WBC,RBC' OR null\r\n      this.downloadResultsPDF.LanguageId = this.labelService.selectedLanguage;\r\n      this.downloadResultsPDF.TemplateId = this.templateId;\r\n      this.downloadResultsPDF.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n      this.downloadResultsPDF.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n      this.downloadResultsPDF.BusinessName = this.labResults['BusinessName'];\r\n      this.downloadResultsPDF.OwnerName = this.labResults['OwnerName'];\r\n      this.downloadResultsPDF.Species = this.labResults['Species'];\r\n      this.downloadResultsPDF.PhysicianName = this.dataService.appData.tblTopPatientDetails['PhysicianName'];\r\n      this.downloadResultsPDF.Name = this.labResults['Name'];\r\n      this.downloadResultsPDF.Breed = this.labResults['Breed'];\r\n      this.downloadResultsPDF.OrderNumber = this.dataService.appData.tblTopPatientDetails['OrderNumber'];\r\n      this.downloadResultsPDF.AnalysisTypeName = this.dataService.appData.tblTopPatientDetails['AnalysisTypeName'];\r\n      this.downloadResultsPDF.Dob = this.labResults['Dob'];\r\n      this.downloadResultsPDF.ReviewedBy = this.reviewedByObj && this.reviewedByObj['Result'] ? this.reviewedByObj['Result'] : null;\r\n      this.downloadResultsPDF.ReviewedName = this.reviewedByObj && this.reviewedByObj['Parameter'] ? this.reviewedByObj['Parameter'] : null;\r\n      this.downloadResultsPDF.Gender = this.labResults['Gender'];\r\n      this.downloadResultsPDF.AnalyzerDisplayName = this.dataService.appData.tblTopPatientDetails['AnalyzerDisplayName'];\r\n      this.downloadResultsPDF.TestResultRanges = this.dataService.appData.tblTopPatientDetails['TestResultRanges'];\r\n      // new added in sprint 7\r\n      this.downloadResultsPDF.BusinessAddressLine1 = this.labResults.BusinessAddressLine1;\r\n      this.downloadResultsPDF.BusinessAddressLine2 = this.labResults.BusinessAddressLine2;\r\n      this.downloadResultsPDF.BusinessCity = this.labResults.BusinessCity;\r\n      this.downloadResultsPDF.BusinessStateName = this.labResults.BusinessStateName;\r\n      this.downloadResultsPDF.BusinessZipCode = this.labResults.BusinessZipCode;\r\n      this.downloadResultsPDF.BusinessCountryName = this.labResults.BusinessCountryName;\r\n      this.downloadResultsPDF.BusinessPhoneNumber = this.labResults.BusinessPhoneNumber;\r\n      this.downloadResultsPDF.BusinessContactEmail = this.labResults.BusinessContactEmail;\r\n      this.downloadResultsPDF.TestTrendWarning = this.warningTopList;\r\n    }\r\n    // ==================================================================\r\n    // For template One\r\n    let ids = null; // !(isTrendable) ? this.getAnalysisIdForPDF(this.selectedDate) : null;\r\n    const idArry = [];\r\n    // let indx = this.dataService.appData['backDates'].findIndex(x => x.DateReceived == this.selectedDate);\r\n    // this.downloadResultsPDF.HistoricalDateList = [];\r\n    // let loopLength = backDateToPrint.length <= 4 ? (backDateToPrint.length - 1) : 3;\r\n    backDateToPrint = backDateToPrint.filter(ele => ele);\r\n    const loopLength = (backDateToPrint.length - 1);\r\n\r\n    if (loopLength > 0) {\r\n      for (let i = 0; i <= loopLength; i++) {\r\n        const element = backDateToPrint[i];\r\n\r\n        if (element.selected == false) {\r\n          // if (element.DateReceived != backDateToPrint.find(ele => ele.selected).DateReceived) {\r\n          this.downloadResultsPDF.HistoricalDateList.push({ \"HistoricalDate\": element.DateReceived });\r\n        }\r\n        if (this.downloadResultsPDF.SourceType == \"ReferenceLab\") {\r\n          idArry.push(element.PanelId);\r\n        } else {\r\n          idArry.push(element.AnalysisTypeId);\r\n        }\r\n\r\n      }\r\n      ids = !(isTrendable) ? idArry.reverse().toString() : null;\r\n\r\n      // this.downloadResultsPDF.HistoricalDateList.reverse();\r\n      if (this.downloadResultsPDF.TestType) {\r\n        this.downloadResultsPDF.HistoricalDateList.push({ \"HistoricalDate\": this.dataService.appData.tblTopPatientDetails.DateReceived });\r\n      }\r\n\r\n    } else {\r\n\r\n      if (this.downloadResultsPDF.TestType != '') {\r\n        this.downloadResultsPDF.HistoricalDateList.push({ \"HistoricalDate\": this.dataService.appData.tblTopPatientDetails.DateReceived })\r\n      } else {\r\n        if (!isTrendable) {\r\n          this.downloadResultsPDF.HistoricalDateList.push({ \"HistoricalDate\": null })\r\n        }\r\n        else {\r\n          this.downloadResultsPDF.HistoricalDateList.push({ \"HistoricalDate\": this.dataService.appData.tblTopPatientDetails.DateReceived })\r\n        }\r\n      }\r\n      ids = this.downloadResultsPDF.SourceType == \"ReferenceLab\" ? this.dataService.appData.tblTopPatientDetails.PanelId : this.dataService.appData.tblTopPatientDetails.AnalysisTypeId\r\n    }\r\n\r\n    const dataforPdf = this.dataService.appData['labReportFiltered'];\r\n\r\n    if (isTrendable && this.downloadResultsPDF.HistoricalDateList[0].HistoricalDate != null) {\r\n      this.downloadResultsPDF.LabTrendResultsList = [];\r\n      const LabTrendReportsList0: any[] = [];\r\n      const LabTrendReportsList1: any[] = [];\r\n      const LabTrendReportsList2: any[] = [];\r\n      const LabTrendReportsList3: any[] = [];\r\n\r\n      // backDateToPrint = backDateToPrint.length <= 4 ? backDateToPrint : backDateToPrint.slice(0, 4);\r\n\r\n      dataforPdf.forEach(element => {\r\n        LabTrendReportsList0.push({\r\n          Parameter: element.Parameter,\r\n          Units: element.Units,\r\n          MinRange: element.MinRange,\r\n          MaxRange: element.MaxRange,\r\n          Result: element.Result,\r\n          GraphResult: element.GraphResult,\r\n          Indicator: element.Indicator,\r\n          DateReceived: element.DateReceived,\r\n          Section: element.Section,\r\n          AnalyzerDisplayName: element.AnalyzerDisplayName,\r\n          AnalyzerName: element.AnalyzerName,\r\n          AnalyteDesc: element.AnalyteDesc ? element.AnalyteDesc : null,\r\n          PanelNote: element.PanelNote,\r\n          TestNote: element.TestNote,\r\n          PrelimText: element.PrelimText,\r\n          PanelTestId: element.PanelTestId,\r\n          TestType: element.TestTypeName,\r\n          SelectedDate: true, // true for selecteddate row else false,\r\n          TestTypeId: element.TestTypeId,\r\n          CatId: element.CatId,\r\n          IsUnitIrregularities: element['backDate0_showUnitWarning'] || element.showUnitWarning\r\n        });\r\n\r\n        if (backDateToPrint[1]) {\r\n          if (element.backDateToPrint1) {\r\n            LabTrendReportsList1.push({\r\n              Parameter: element.backDateToPrint1.Parameter,\r\n              Units: element.backDateToPrint1.Units,\r\n              MinRange: element.backDateToPrint1.MinRange,\r\n              MaxRange: element.backDateToPrint1.MaxRange,\r\n              Result: element.backDateToPrint1.Result, // element.backDateToPrint1.Result,\r\n              GraphResult: element.backDateToPrint1.GraphResult,\r\n              Indicator: element.backDateToPrint1.Indicator,\r\n              DateReceived: element.backDateToPrint1.DateReceived,\r\n              Section: element.backDateToPrint1.Section,\r\n              AnalyzerDisplayName: element.backDateToPrint1.AnalyzerDisplayName,\r\n              AnalyzerName: element.backDateToPrint1.AnalyzerName,\r\n              AnalyteDesc: element.backDateToPrint1.AnalyteDesc ? element.backDateToPrint1.AnalyteDesc : null,\r\n              PanelNote: element.backDateToPrint1.PanelNote,\r\n              TestNote: element.backDateToPrint1.TestNote,\r\n              PrelimText: element.backDateToPrint1.PrelimText,\r\n              PanelTestId: element.backDateToPrint1.PanelTestId,\r\n              TestType: element.backDateToPrint1.TestTypeName,\r\n              SelectedDate: false, // tru for selecteddate row else false,\r\n              TestTypeId: element.backDateToPrint1.TestTypeId,\r\n              CatId: element.backDateToPrint1.CatId,\r\n              IsUnitIrregularities: element.backDateToPrint1['backDate1_showUnitWarning'] || element.backDateToPrint1.showUnitWarning\r\n            })\r\n          } else {\r\n            LabTrendReportsList1.push({\r\n              Parameter: '',\r\n              Units: '',\r\n              MinRange: '',\r\n              MaxRange: '',\r\n              Result: '',\r\n              GraphResult: '',\r\n              Indicator: '',\r\n              DateReceived: backDateToPrint[1].DateReceived,\r\n              Section: '',\r\n              AnalyzerDisplayName: '',\r\n              AnalyzerName: backDateToPrint[1].AnalyzerName,\r\n              AnalyteDesc: '',\r\n              PanelNote: '',\r\n              TestNote: '',\r\n              PrelimText: '',\r\n              PanelTestId: '',\r\n              TestType: '',\r\n              SelectedDate: false,\r\n              TestTypeId: '',\r\n              CatId: '',\r\n              IsUnitIrregularities: false\r\n            })\r\n          }\r\n        }\r\n\r\n        if (backDateToPrint[2]) {\r\n          if (element.backDateToPrint2) {\r\n            LabTrendReportsList2.push({\r\n              Parameter: element.backDateToPrint2.Parameter,\r\n              Units: element.backDateToPrint2.Units,\r\n              MinRange: element.backDateToPrint2.MinRange,\r\n              MaxRange: element.backDateToPrint2.MaxRange,\r\n              Result: element.backDateToPrint2.Result, // backDateToPrint1_Result\r\n              GraphResult: element.backDateToPrint2.GraphResult,\r\n              Indicator: element.backDateToPrint2.Indicator,\r\n              DateReceived: element.backDateToPrint2.DateReceived,\r\n              Section: element.backDateToPrint2.Section,\r\n              AnalyzerDisplayName: element.backDateToPrint2.AnalyzerDisplayName,\r\n              AnalyzerName: element.backDateToPrint2.AnalyzerName,\r\n              AnalyteDesc: element.backDateToPrint2.AnalyteDesc ? element.backDateToPrint2.AnalyteDesc : null,\r\n              PanelNote: element.backDateToPrint2.PanelNote,\r\n              TestNote: element.backDateToPrint2.TestNote,\r\n              PrelimText: element.backDateToPrint2.PrelimText,\r\n              PanelTestId: element.backDateToPrint2.PanelTestId,\r\n              TestType: element.backDateToPrint2.TestTypeName,\r\n              SelectedDate: false,\r\n              TestTypeId: element.backDateToPrint2.TestTypeId,\r\n              CatId: element.backDateToPrint2.CatId,\r\n              IsUnitIrregularities: element.backDateToPrint2['backDate2_showUnitWarning'] || element.backDateToPrint2.showUnitWarning\r\n            })\r\n          } else {\r\n            LabTrendReportsList2.push({\r\n              Parameter: '',\r\n              Units: '',\r\n              MinRange: '',\r\n              MaxRange: '',\r\n              Result: '',\r\n              GraphResult: '',\r\n              Indicator: '',\r\n              DateReceived: backDateToPrint[2].DateReceived,\r\n              Section: '',\r\n              AnalyzerDisplayName: '',\r\n              AnalyzerName: backDateToPrint[2].AnalyzerName,\r\n              AnalyteDesc: '',\r\n              PanelNote: '',\r\n              TestNote: '',\r\n              PrelimText: '',\r\n              PanelTestId: '',\r\n              TestType: '',\r\n              SelectedDate: false,\r\n              TestTypeId: '',\r\n              CatId: '',\r\n              IsUnitIrregularities: false\r\n            })\r\n          }\r\n\r\n        }\r\n\r\n        if (backDateToPrint[3]) {\r\n          if (element.backDateToPrint3) {\r\n            LabTrendReportsList3.push({\r\n              Parameter: element.backDateToPrint3.Parameter,\r\n              Units: element.backDateToPrint3.Units,\r\n              MinRange: element.backDateToPrint3.MinRange,\r\n              MaxRange: element.backDateToPrint3.MaxRange,\r\n              Result: element.backDateToPrint3.Result,\r\n              GraphResult: element.backDateToPrint3.GraphResult,\r\n              Indicator: element.backDateToPrint3.Indicator,\r\n              DateReceived: element.backDateToPrint3.DateReceived,\r\n              Section: element.backDateToPrint3.Section,\r\n              AnalyzerDisplayName: element.backDateToPrint3.AnalyzerDisplayName,\r\n              AnalyzerName: element.backDateToPrint3.AnalyzerName,\r\n              AnalyteDesc: element.backDateToPrint3.AnalyteDesc ? element.backDateToPrint3.AnalyteDesc : null,\r\n              PanelNote: element.backDateToPrint3.PanelNote,\r\n              TestNote: element.backDateToPrint3.TestNote,\r\n              PrelimText: element.backDateToPrint3.PrelimText,\r\n              PanelTestId: element.backDateToPrint3.PanelTestId,\r\n              TestType: element.backDateToPrint3.TestTypeName,\r\n              SelectedDate: false,\r\n              TestTypeId: element.backDateToPrint3.TestTypeId,\r\n              CatId: element.backDateToPrint3.CatId,\r\n              IsUnitIrregularities: element.backDateToPrint3['backDate3_showUnitWarning'] || element.backDateToPrint3.showUnitWarning\r\n            })\r\n          } else {\r\n            LabTrendReportsList3.push({\r\n              Parameter: '',\r\n              Units: '',\r\n              MinRange: '',\r\n              MaxRange: '',\r\n              Result: '',\r\n              GraphResult: '',\r\n              Indicator: '',\r\n              DateReceived: backDateToPrint[3].DateReceived,\r\n              Section: '',\r\n              AnalyzerDisplayName: '',\r\n              AnalyzerName: backDateToPrint[3].AnalyzerName,\r\n              AnalyteDesc: '',\r\n              PanelNote: '',\r\n              TestNote: '',\r\n              PrelimText: '',\r\n              PanelTestId: '',\r\n              TestType: '',\r\n              SelectedDate: false,\r\n              TestTypeId: '',\r\n              CatId: '',\r\n              IsUnitIrregularities: false\r\n            })\r\n          }\r\n        }\r\n      });\r\n\r\n      if (this.dataService.appData['dsImagyst']) {\r\n        this.dataService.appData['dsImagyst'].forEach(ele => {\r\n          LabTrendReportsList0.push(ele);\r\n        })\r\n      }\r\n\r\n      if (this.dataService.appData['VS2Test']) {\r\n        this.dataService.appData['VS2Test'].forEach(ele => {\r\n          LabTrendReportsList0.push(ele);\r\n        })\r\n      }\r\n\r\n      this.downloadResultsPDF.LabTrendResultsList.push(\r\n        { LabTrendReportsList: LabTrendReportsList0 }\r\n      );\r\n\r\n      if (backDateToPrint[1] != undefined && backDateToPrint[1] != null) {\r\n        this.downloadResultsPDF.LabTrendResultsList.push(\r\n          { LabTrendReportsList: LabTrendReportsList1 }\r\n        );\r\n      }\r\n      if (backDateToPrint[2] != undefined && backDateToPrint[2] != null) {\r\n        this.downloadResultsPDF.LabTrendResultsList.push(\r\n          { LabTrendReportsList: LabTrendReportsList2 }\r\n        );\r\n      }\r\n      if (backDateToPrint[3] != undefined && backDateToPrint[3] != null) {\r\n        this.downloadResultsPDF.LabTrendResultsList.push(\r\n          { LabTrendReportsList: LabTrendReportsList3 }\r\n        );\r\n      }\r\n\r\n    }\r\n\r\n\r\n    // if (isTrendable && this.downloadResultsPDF.HistoricalDateList[0].HistoricalDate != null) {\r\n    //   this.downloadResultsPDF.LabTrendResultsList = [];\r\n\r\n    //   //=== Sprint 6 fix ===\r\n    //   let printableDates = this.dataService.appData.backDateToPrint;\r\n    //   let dataforPdf = this.dataService.appData['labReportFiltered'];\r\n\r\n    //   let LabTrendReportsList = [];\r\n    //   dataforPdf.forEach(ele=>{\r\n    //     LabTrendReportsList.push({\r\n    //       Parameter: ele.Parameter,\r\n    //       Units: ele.Units,\r\n    //       MinRange: ele.MinRange,\r\n    //       MaxRange: ele.MaxRange,\r\n    //       Result: ele.Result,\r\n    //       GraphResult: ele.GraphResult,\r\n    //       Indicator: ele.Indicator,\r\n    //       DateReceived: ele.DateReceived,\r\n    //       Section: ele.Section,\r\n    //       AnalyzerDisplayName: ele.AnalyzerDisplayName,\r\n    //       AnalyzerName: ele.AnalyzerName,\r\n    //       AnalyteDesc: ele.AnalyteDesc ? ele.AnalyteDesc : null,\r\n    //       PanelNote: ele.PanelNote,\r\n    //       TestNote: ele.TestNote,\r\n    //       PrelimText: ele.PrelimText,\r\n    //       PanelTestId: ele.PanelTestId,\r\n    //       TestType: ele.TestTypeName,\r\n    //       SelectedDate: true, // tru for selecteddate row else false,\r\n    //       TestTypeId: ele.TestTypeId,\r\n    //       CatId: ele.CatId\r\n    //     });\r\n\r\n    //    console.log(LabTrendReportsList);\r\n\r\n\r\n    //     // printableDates.forEach((backDateEle, backDateIndex)=>{\r\n    //     //   LabTrendReportsList\r\n    //     // })\r\n    //     // this.downloadResultsPDF.LabTrendResultsList.push({LabTrendReportsList:})\r\n    //   })\r\n\r\n    //   backDateToPrint.forEach((element, k) => {\r\n    //     const labReportFiltered = this.getFilteredReports(element);\r\n    //     backDateToPrint[k] = { LabTrendReportsList: labReportFiltered };\r\n    //   });\r\n    //   backDateToPrint = backDateToPrint.sort(function (a: any, b: any) {\r\n    //     return b.LabTrendReportsList[0].SelectedDate - a.LabTrendReportsList[0].SelectedDate\r\n    //   });\r\n    //   this.downloadResultsPDF.HistoricalDateList = this.downloadResultsPDF.HistoricalDateList.sort(function (a: any, b: any) {\r\n    //     return new Date(b.DateReceived).valueOf() - new Date(a.DateReceived).valueOf();\r\n    //   });\r\n    //   //console.log(backDateToPrint); return\r\n    //   const primaryReport = backDateToPrint[0].LabTrendReportsList;\r\n    //   const primaryReportParameters = this.getParameters(primaryReport);\r\n    //   backDateToPrint.forEach(v => {\r\n    //     if (!v.LabTrendReportsList[0].SelectedDate){\r\n    //       v.LabTrendReportsList = this.fillReports(v.LabTrendReportsList, primaryReport);\r\n    //     }\r\n    //   })\r\n\r\n    //   //===Sprint 6 fix end ==\r\n\r\n    //   if (this.dataService.appData['dsImagyst']) {\r\n    //     this.dataService.appData['dsImagyst'].forEach(ele => {\r\n    //       backDateToPrint[0].LabTrendReportsList.push(ele);\r\n    //     })\r\n    //   }\r\n\r\n    //   if (this.dataService.appData['VS2Test']) {\r\n    //     this.dataService.appData['VS2Test'].forEach(ele => {\r\n    //       backDateToPrint[0].LabTrendReportsList.push(ele);\r\n    //     })\r\n    //   }\r\n\r\n    //   this.downloadResultsPDF.LabTrendResultsList = backDateToPrint;\r\n\r\n    // }\r\n\r\n\r\n    if (this.downloadResultsPDF.SourceType == \"ReferenceLab\") {\r\n      this.downloadResultsPDF.AccessionNumber = this.dataService.appData.tblTopPatientDetails['AccessionNumber']; // this.labResults.AccessionNumber;\r\n      this.downloadResultsPDF.PanelId = ids;\r\n      this.downloadResultsPDF.AnalysisTypeId = null;\r\n    }\r\n    else {\r\n      this.downloadResultsPDF.AccessionNumber = null;\r\n      this.downloadResultsPDF.PanelId = null;\r\n      this.downloadResultsPDF.AnalysisTypeId = ids; // this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    }\r\n\r\n    if (this.downloadResultsPDF.TemplateId == 6) {\r\n      this.downloadResultsPDF.AnalysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    }\r\n\r\n    console.log('downloadPdfRquestParam ', this.downloadResultsPDF);\r\n    if (requestType == 'sendEmail') {\r\n      this.dataService.appData['requestFrom'] = 'ResultDetailsPage';\r\n      this.dataService.appData['downloadPdfRequestParams'] = this.downloadResultsPDF;\r\n      this.dataService.data.next(this.dataService.appData);\r\n    } else {\r\n\r\n      this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsPatientInfoScreen.DocumentCreatingMessage, this.labelService.dsPatientInfoScreen.Dismiss, \"\", \"sm\", true, false);\r\n      this.patientService.downloadResult(this.downloadResultsPDF).subscribe(res => {\r\n        const fileName = this.labResults.Name;\r\n        this.savePdfFile(res, fileName);\r\n      }, error => {\r\n        this.confirmationDialogService.dismiss();\r\n        console.log(error)\r\n        this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsPatientInfoScreen.ErrorOccur, '', this.labelService.dsPatientInfoScreen.Ok, \"sm\", false, true);\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 100)\r\n\r\n  }\r\n\r\n  // requiredParameters(pr) {\r\n  //   return {\r\n  //     'Parameter': '',\r\n  //     'Units': '',\r\n  //     'MinRange': '',\r\n  //     'MaxRange': '',\r\n  //     'Result': '',\r\n  //     'GraphResult': '',\r\n  //     'Indicator': '',\r\n  //     'DateReceived': pr.DateReceived,\r\n  //     'Section': '',\r\n  //     'AnalyzerDisplayName': '',\r\n  //     'AnalyzerName': pr.AnalyzerName,\r\n  //     'AnalyteDesc': '',\r\n  //     'PanelNote': '',\r\n  //     'TestNote': '',\r\n  //     'PrelimText': '',\r\n  //     'PanelTestId': '',\r\n  //     'TestType': '',\r\n  //     'SelectedDate': false,\r\n  //     'TestTypeId': '',\r\n  //     'CatId': ''\r\n  //   }\r\n  // }\r\n\r\n  // getParameters(primaryReport) {\r\n  //   \r\n  //   const list = [];\r\n  //   primaryReport.forEach(pr => {\r\n  //     list.push(pr.Parameter);\r\n  //   })\r\n  //   return list;\r\n  // }\r\n\r\n  // fillReports(report, primaryReport) {\r\n  //   console.log('report => ', report);\r\n  //   console.log('primaryReport => ', primaryReport);\r\n  //   const generatedReport = [];\r\n  //   primaryReport.forEach((v: any, k: any) => {\r\n  //     let item = report.find(x => {\r\n  //       return x.Parameter == v.Parameter\r\n  //     });\r\n  //     if (!item) {\r\n  //       item = this.requiredParameters(report[0])\r\n  //     }\r\n  //     generatedReport.push(item);\r\n  //   })\r\n  //   return generatedReport\r\n  // }\r\n\r\n\r\n  // fillReports(report, primaryReport) {\r\n  //   const generatedReport = [];\r\n  //   console.log(report, primaryReport)\r\n  //   primaryReport.forEach((v: any, k: any) => {\r\n  //     let item = report.find(x => x.Parameter == v.Parameter);\r\n  //     if (item) {\r\n  //       generatedReport.push(item);\r\n  //     } else {\r\n  //       let keyFronBDate\r\n  //       Object.entries(v).forEach(\r\n  //         ([key, value]) => {\r\n  //           if (key && key !== 'DateReceivedAnalysisType' && value === report[0].DateReceivedAnalysisType) {\r\n  //             let fPart = key.split('_')[0];\r\n  //             keyFronBDate = fPart[fPart.length - 1];\r\n  //           }\r\n  //         }\r\n  //       );\r\n  //       if (keyFronBDate) {\r\n  //         item = v['backDateToPrint' + keyFronBDate]\r\n  //         item.SelectedDate = false;\r\n  //         item.Result = v['backDate' + keyFronBDate + '_Result']\r\n  //       } else {\r\n  //         item = this.requiredParameters(report[0]);\r\n  //       }\r\n  //       generatedReport.push(item);\r\n  //     }\r\n  //   })\r\n  //   return generatedReport\r\n  // }\r\n\r\n  // getFilteredReports(elem) {\r\n  //   const tblTopDetails = this.dataService.appData.tblTopPatientDetails;\r\n  //   let labReportDistinct = this.labReportFilterByAnalysisType.filter(x => x.DateReceivedAnalysisType == elem.DateReceivedAnalysisType && x.DateReceived == elem.DateReceived && x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);\r\n\r\n  //   let VS2Test = labReportDistinct.filter(x => x.TestTypeId == EnmTestType.VS2Test);\r\n  //   if (VS2Test.length > 4) {\r\n  //     VS2Test = VS2Test.slice(0, 3);\r\n  //   }\r\n  //   if (VS2Test) {\r\n  //     labReportDistinct = labReportDistinct.filter(x => x.TestTypeId != EnmTestType.VS2Test && x.AnalysisTypeId == elem.AnalysisTypeId);\r\n  //   }\r\n  //   labReportDistinct.forEach(v => {\r\n  //     v.SelectedDate = v.DateReceivedAnalysisType == tblTopDetails.DateReceivedAnalysisType;\r\n  //   })\r\n  //   return labReportDistinct;\r\n  // }\r\n\r\n  // saveBlobDataToLocal(blob: Blob): void {\r\n  //   let sizeInBytes = blob.size;\r\n  //   let sizeInMB = sizeInBytes / (1024 * 1024);\r\n  //   let pdfFileSize = Number((sizeInMB).toFixed(2));\r\n  //   console.log(pdfFileSize);\r\n  //   const reader = new FileReader();\r\n  //   reader.onload = () => {\r\n  //     const dataUrl = reader.result as string;\r\n  //     // localStorage.setItem('pdfUrl', dataUrl);\r\n  //     this.dataService.appData['pdfUrl'] = dataUrl;\r\n  //     this.dataService.appData['pdfFileSize'] = 15// pdfFileSize;\r\n  //     this.dataService.data.next(this.dataService.appData);\r\n  //     // this.router.navigateByUrl('/communication/email');\r\n  //   };\r\n  //   reader.readAsDataURL(blob);\r\n  // }\r\n\r\n  savePdfFile(res, fileName) {\r\n    this.commonService.pdfDownloading.next({\r\n      data: res,\r\n      fileName: fileName\r\n    });\r\n    return false;\r\n  }\r\n\r\n  public getAnalysisIdForPDF(dt) {\r\n    return this.labReports.find(x => x.DateReceived == dt)[\"AnalysisTypeId\"];\r\n  }\r\n\r\n  public getRecords() {\r\n    this.dataService.appData.AccessionNumber = this.dataService.appData.tblTopPatientDetails.AccessionNumber;\r\n    this.dataService.data.next(this.dataService.appData)\r\n\r\n    const daysDifference = this.commonService.getDaysDifference(this.dataService.appData.tblTopPatientDetails.DateCreated, this.dataService.appData.serverDate);\r\n    if (daysDifference > 7) {\r\n      // constant.addOnAccessionRestrictionPopupMsg;\r\n      const msg = `<p>${this.labelService.dsAnaysisResultsScreen.addOnAccessionRestrictionPopupMsg} 888-965-9652 ${this.labelService.dsAnaysisResultsScreen.ORTxt} <a href=\"mailto:referencelabsupport@zoetis.com\"> referencelabsupport@zoetis.com </a></p>`;\r\n      this.confirmationDialogService.confirm(\"Alert\", msg, 'Dismiss', \"Cancel\", \"sm\", true, false);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('lastOrderId', this.dataService.appData.tblTopPatientDetails.OrderNumber);\r\n    this.fuseService.getClinicDetails(this.refLAbClinicId, this.BusinessGuid).subscribe(data => {\r\n      const isReflabActive = data.ResponseData['is_active'] == 'true' ? true : false;\r\n      if (isReflabActive) {\r\n        this.router.navigate(['/refLab/addOrder']);\r\n      } else {\r\n        const msg = constant.consultRestrictionPopupMsg;\r\n        this.confirmationDialogService.confirm(\"Alert\", msg, 'Dismiss', \"Cancel\", \"sm\", true, false);\r\n      }\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n  }\r\n\r\n  public goToConsultation() {\r\n    // // if (!this.isBackOfficeUser) {\r\n    this.dataService.appData.prevUrl = \"dashboard\";\r\n    this.dataService.data.next(this.dataService.appData);\r\n    const emailId = this.bckBusinessInfo ? this.bckBusinessInfo['EmailId'] : \"\";\r\n    let urlStr = \"email=\" + JSON.parse(localStorage.authDetails).Email\r\n      + \"&bkoClinicEmail=\" + emailId\r\n      + \"&token=\" + JSON.parse(localStorage.authDetails).access_token\r\n      + \"&refresh_token=\" + JSON.parse(localStorage.authDetails).refresh_token\r\n      + \"&deviceId=\" + (localStorage.UIGuid)\r\n      + \"&BusinessGuid=\" + JSON.parse(localStorage.authDetails).BusinessGuid\r\n      + \"&clinicname=\" + JSON.parse(localStorage.authDetails).BusinessName\r\n      + \"&clinicphone=\" + JSON.parse(localStorage.authDetails).BusinessPhoneNo\r\n      + \"&doctorname=\" + this.labResults.PhysicianName\r\n      + \"&patientId=\" + this.labResults.PatientId\r\n      + \"&patientName=\" + this.labResults.Name\r\n      + \"&species=\" + this.labResults.Species\r\n      + \"&breed=\" + this.labResults.Breed\r\n      + \"&ZDXPatientId=\" + this.labResults.ZDXPatientId\r\n      + \"&OwnerFirstName=\" + `${this.patientData?.OwnerFirstName ? this.patientData?.OwnerFirstName : null}`\r\n      + \"&OwnerLastName=\" + `${this.patientData?.OwnerLastName ? this.patientData?.OwnerLastName : null}`\r\n      + \"&FirstName=\" + `${this.patientData?.FirstName ? this.patientData?.FirstName : null}`\r\n      + \"&LastName=\" + `${this.patientData?.LastName ? this.patientData?.LastName : null}`\r\n      + \"&BirthDate=\" + this.patientData?.BirthDate\r\n      + \"&ownerName=\" + this.labResults.OwnerName\r\n      + \"&accessionId=\" + this.labResults.AccessionNumber\r\n      + \"&gender=\" + this.labResults.Gender\r\n      + \"&age=\" + this.labResults.Dob\r\n      + \"&timeZoneId=\" + this.commonService.tzSelectMethod().timeZoneId\r\n      + \"&timeZoneName=\" + this.commonService.tzSelectMethod().timeZoneName\r\n      + \"&Isbackoffice=\" + JSON.parse(localStorage.authDetails).BackOfficeFlag\r\n      + \"&backUrl=\" + window.location.href\r\n      + \"&TimeFormatId=\" + this.dataService.appData.authDetails['TimeFormatId']\r\n      + \"&TimeZoneId=\" + this.dataService.appData.authDetails['TimeZoneId']\r\n      + \"&DateFormatId=\" + this.dataService.appData.authDetails['DateFormatId']\r\n      + \"&ZDxUrl=\" + this.commonService.getZDxUrl();\r\n    urlStr = this.EncrDecr.encrypt(urlStr);\r\n\r\n    if (this.headerService.isNRP) {\r\n      this.commonService.getRedirectionKey({ \"ValueString\": urlStr }).subscribe(data => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + data.ResponseData;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.getEncryptDetail({ toEncryptStr: urlStr }).subscribe(res => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + res.ResponseData.encryptedKey;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n    // // }\r\n\r\n  }\r\n\r\n  public downloadMainfest(orderNumber) {\r\n    this.refLabService.downloadableMainfest(orderNumber, this.dataService.appData.authDetails['BusinessGuid']).subscribe(res => {\r\n      const blob = new Blob([res], { type: 'application/pdf' });\r\n      const objectURL = window.URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = objectURL;\r\n      a.target = '_blank';\r\n      a.click();\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    })\r\n  }\r\n\r\n  public getResultPdf(accessionNumber) {\r\n    if (accessionNumber != null) {\r\n      this.refLabService.downloadableAccession(accessionNumber, this.BusinessGuid).subscribe(res => {\r\n        console.log(res, 'responce');\r\n        const blob = new Blob([res], { type: 'application/pdf' });\r\n        const objectURL = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = objectURL;\r\n        a.target = '_blank';\r\n        a.click();\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.confirmationDialogService.confirm(\"\", \"No accession result pdf available\", \"OK\", \"Cancel\", \"sm\", true, false)\r\n          .then((confirmed) => {\r\n            console.log(confirmed)\r\n          })\r\n      })\r\n    }\r\n    else {\r\n      this.confirmationDialogService.confirm(\"\", \"No accession result pdf available\", \"OK\", \"Cancel\", \"sm\", true, false)\r\n        .then((confirmed) => {\r\n          console.log(confirmed)\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPatientHistory();\r\n    this.getAnalysisResults();\r\n    // ===== USED FOR TEMPLATE-1 =====\r\n    this.patientService.getTestUnitConversion(this.loadData.AccessToken).subscribe({\r\n      next: (res) => {\r\n        this.dataService.appData['testUnitConversionList'] = res.ResponseData;\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }, error: () => {\r\n      }\r\n    })\r\n\r\n    /** ========THIS MAPPING DATA WILL BE USED IN RESULT-DETAILS PAGE========= */\r\n    try {\r\n      this.patientService.getTestTrendMapping(this.loadData.AccessToken).subscribe(res => {\r\n        // console.log('getTestTrendMapping Response ==> ', res.ResponseData);          \r\n        const reportTrendMappingData = res.ResponseData['ReportTrendMapping'];\r\n        const testTrendMappingData = res.ResponseData['TestTrendMapping'];\r\n        this.testTrendMappingData = res.ResponseData['TestTrendMapping'];\r\n\r\n        // console.log('reportTrendMappingData ==> ', reportTrendMappingData);\r\n        // console.log('testTrendMappingData ==> ', testTrendMappingData);\r\n\r\n        // =====> Create Report TrendMapping Data <=====\r\n        const reportTrendMapping = { HM5: [], 'HM+': [], VS2: [], iSTAT: [] };\r\n        reportTrendMappingData.forEach(ele => {\r\n          if (!(ele.TrendingReport in reportTrendMapping)) {\r\n            Object.defineProperty(reportTrendMapping, ele.TrendingReport, { value: [] });\r\n          }\r\n          if (ele.TrendingReport in reportTrendMapping) {\r\n            if (ele.Source == 'ReferenceLab') {\r\n              reportTrendMapping[ele.TrendingReport].push(ele.PanelCode.toLowerCase());\r\n            } else {\r\n              reportTrendMapping[ele.TrendingReport].push(ele.Report.toLowerCase());\r\n            }\r\n          }\r\n        })\r\n\r\n        // console.log('reportTrendMapping =>', reportTrendMapping);\r\n        // =====> Create Report TrendMapping Data End <=====\r\n\r\n        // =====> Create Test TrendMapping Data <=====\r\n        const testTrendMapping = [];\r\n        testTrendMappingData.forEach((ele, index) => {\r\n          const tempObj = {\r\n            ID: index + 1,\r\n            TestCode: null,\r\n            TrendingReport: null,\r\n            Parameter: null,\r\n            TrendingAnalyzerList: []\r\n          }\r\n          testTrendMapping.push(tempObj);\r\n\r\n          for (const [key, value] of Object.entries(ele)) {\r\n            const src = key.split('_')[0];\r\n            const analysisType = key.split('_')[1];\r\n            const isKeySplitable = /_/.test(key);\r\n            if (key && isKeySplitable && value) {\r\n              testTrendMapping[index].Parameter = value;\r\n              break;\r\n            }\r\n          }\r\n\r\n          for (const [key, value] of Object.entries(ele)) {\r\n            const src = key.split('_')[0];\r\n            const analysisType = key.split('_')[1];\r\n            const isKeySplitable = /_/.test(key);\r\n            if (key && isKeySplitable && value) {\r\n              testTrendMapping[index].TrendingAnalyzerList.push(analysisType);\r\n            }\r\n            if (key == 'TestCode') {\r\n              testTrendMapping[index].TestCode = value;\r\n            }\r\n            if (key == 'TrendingReport') {\r\n              testTrendMapping[index].TrendingReport = value;\r\n            }\r\n          }\r\n        });\r\n        // console.log('trendateble test list =>', testTrendMapping)\r\n        // =====> Create Test TrendMapping Data End <=====\r\n\r\n        // ===Old reportTrendMappingData ===\r\n        const trendableObj = { HM5: [], iSTAT: [], ReferenceLab: [], VS2: [] }\r\n        for (const key in testTrendMappingData[0]) {\r\n          const src = key.split('_')[0];\r\n          const analysisType = key.split('_')[1];\r\n          if (src == 'Inc' && analysisType == 'Hematology') {\r\n            trendableObj.HM5.push(analysisType.toLowerCase());\r\n          }\r\n          if (src == 'Inc' && analysisType != 'Hematology') {\r\n            trendableObj.iSTAT.push(analysisType.toLowerCase());\r\n          }\r\n          if (/RPC_/.test(key)) {\r\n            trendableObj.ReferenceLab.push(analysisType.toLowerCase());\r\n          }\r\n          if (/VS2_/.test(key)) {\r\n            trendableObj.VS2.push(analysisType.toLowerCase());\r\n          }\r\n        }\r\n        let trendableReports = trendableObj.HM5.concat(trendableObj.iSTAT).concat(trendableObj.ReferenceLab);\r\n        // === Old reportTrendMappingData end ===\r\n\r\n        this.reportTrendable = reportTrendMapping;\r\n        this.iStatTrends = this.reportTrendable['iSTAT'];\r\n\r\n        if (this.dataService.appData['testUnitConversionList']?.length) {\r\n          this.reportTrendableAll = [...new Set([...this.reportTrendable['HM5'], ...this.reportTrendable['HM+'], ...this.reportTrendable['iSTAT'], ...this.reportTrendable['VS2']])];\r\n        } else {\r\n          this.reportTrendableAll = trendableReports;\r\n        }\r\n\r\n        this.dataService.appData.reportTrendableAll = this.reportTrendableAll;\r\n        this.dataService.appData.reportTrendMapping = reportTrendMapping;\r\n        this.dataService.appData.testTrendMapping = testTrendMapping;\r\n        this.dataService.data.next(this.dataService.appData);\r\n\r\n        //this.isCVET ? this.getAnalysisData() : this.getAnalysisResults();\r\n\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      })\r\n    } catch (err) {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    }\r\n    /**  ======THIS MAPPING DATA WILL BE USED IN RESULT-DETAILS PAGE END======= */\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsAnaysisResultsScreen.AnalysisResults}`);\r\n    this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == \"Result-Details\");\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.dataService.appData['ReportDisabled'] == 'false' && this.dataService.appData['AppointmentGuid'] && localStorage.getItem('rediretionDetails')) {\r\n      this.isEnableCR = true;\r\n    }\r\n  }\r\n\r\n  setChildDate(ev) {\r\n    this.selectedDate = ev;\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    // localStorage.removeItem(\"bkolanding\");\r\n    this.dataService.appData.warningTopList = [];\r\n    this.dataService.appState.updatedFilterRequest = null;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n  }\r\n\r\n  routerBack() {\r\n    //this.router.navigateByUrl(this.lastPath || '/dashboard');\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper result-detail-wrapper\" *ngIf=\"(isCVET && !loading) || !isCVET\">\r\n    <!-- Sidebar  -->\r\n    <app-side-menu *ngIf=\"!isCVET\"></app-side-menu>\r\n\r\n    <!-- Page Content  -->\r\n    <div id=\"content\" class=\"result-wrapper {{ isCVET ? 'paddingEq' : '' }}\">\r\n        <div class=\"resizepage\">\r\n            <!-- [hidden]=\"isBackOfficeUser\" -->\r\n            <div *ngIf=\"!isCVET\">\r\n                <app-header></app-header>\r\n            </div>\r\n            <!-- <div [hidden]=\"!isBackOfficeUser\">\r\n            <app-back-office-header></app-back-office-header>\r\n        </div> -->\r\n\r\n            <!-- Page Title -->\r\n            <section class=\"title-container icon-cont\" *ngIf=\"!isCVET\">\r\n                <a href=\"javascript:void(0)\"\r\n                    (click)=\"isResultLandingPage !== 3 ? commonService.goBack() : headerService.EndBkoImpersonation()\"\r\n                    class=\"back-btn\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n                <span class=\"page-title\">{{labelService.dsAnaysisResultsScreen.AnalysisResults}}</span>\r\n                <img class=\"iconquestion\" src=\"../../../assets/img/help-icon.svg\"\r\n                    [matTooltip]=\"labelService.dsSideMenuScreen.Help\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n                    alt=\"help-circle\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" DisableRightClick />\r\n            </section>\r\n\r\n            <section class=\"top-card container-fluid\" *ngIf=\"!isCVET\">\r\n                <div class=\"row\" *ngIf=\"labResults\">\r\n                    <div class=\"col-sm-12 col-md-6 col-lg-7\">\r\n                        <div style=\"border-bottom: 2px solid #6c757d;\">\r\n                            <p style=\"min-width: 60px; display: inline-block;margin: 0px;\" class=\"head1\">\r\n                                {{labelService.dsPatientInfoScreen.Patient}}:</p>\r\n                            <span>\r\n                                <!-- <a href=\"javascript:void(0)\"\r\n                                (click)=\"patientService.showPataientInfo(selectedResult['element'],null,null,null,null)\">\r\n                                {{labResults['Name']}} </a>  -->\r\n                                <!-- {{labResults['FirstName']}} {{labResults['LastName']}} -->\r\n                                {{labResults['Name']}}\r\n                                -\r\n                                <a href=\"javascript:void(0)\"\r\n                                    (click)=\"patientService.showPataientInfo(selectedResult['element'],null,null,null,null)\">\r\n                                    {{labResults['PatientId']}} </a>\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"topheadpart\" style=\"margin: 14px 0px;\">\r\n                            <p style=\"min-width: 60px; display: inline-block;\"></p>\r\n                            <!-- below sequence will be species, breed, age, sex -->\r\n                            <span *ngIf=\"labResults['Species']\"> {{labResults['Species']+','}} </span>\r\n                            <span *ngIf=\"labResults['Breed']\"> {{labResults['Breed']+','}} </span>\r\n                            <span *ngIf=\"labResults['Dob']\"> {{labResults['Dob']+','}} </span>\r\n                            <span *ngIf=\"labResults['Gender']\"> {{labResults['Gender']}} </span>\r\n                        </div>\r\n                        <div>\r\n                            <p style=\"min-width: 60px; display: inline-block;\" class=\"head1\">\r\n                                {{labelService.dsAnaysisResultsScreen.Owner}}:\r\n                                <!-- {{labelService.dsAnaysisResultsScreen.OwnerName}}: -->\r\n                            </p>\r\n                            {{labResults['OwnerName']}}\r\n                            <!-- {{labResults['OwnerName'] ? labResults['OwnerName'] : \"NA\" }} -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6 col-lg-5\">\r\n                        <p class=\"head1 ph-heading\">\r\n                            <span> {{labelService.dsAnaysisResultsScreen.PatientHistory}}: </span>\r\n                        </p>\r\n\r\n                        <ul class=\"patient-history list-group\">\r\n                            <li class=\"list-group-item active\" (click)=\"onChangeAnalysisType(null)\">\r\n                                <span> {{labelService.dsAnaysisResultsScreen.AnalysisType}} </span>\r\n                                <!-- {{labelService.dsAnaysisResultsScreen.AnalysisType}} -->\r\n                                <span style=\"float: right;\"> {{labelService.dsAnaysisResultsScreen.DateTime}} </span>\r\n                            </li>\r\n                            <ng-container *ngFor=\"let patientHistory of patientHistoryList ; let i = index\">\r\n                                <li *ngIf=\"patientHistory.AnalysisTypeName && i<=3\" class=\"list-group-item\"\r\n                                    (click)=\"onChangeAnalysisType(patientHistory)\">\r\n                                    <span class=\"ref pr-2\">\r\n                                        <img src=\"{{patientHistory.Analyzer === 'Ref Lab' ? '../../../assets/img/lab-icon@2x.png' : '../../../assets/img/poc-icon@2x.png'}}\"\r\n                                            alt=\"\" height=\"16\" />\r\n                                        <span style=\"margin-left: 7px;\">{{patientHistory.AnalysisTypeName}}</span>\r\n                                    </span>\r\n                                    <span style=\"float: right;\"> {{patientHistory.DateReceivedStr}} </span>\r\n                                </li>\r\n                            </ng-container>\r\n                            <li class=\"list-group-item\">\r\n                                <a href=\"javascript:void(0)\"\r\n                                    (click)=\"patientService.showPataientInfo(selectedResult['element'],null,null,null,null)\">\r\n                                    <!-- See full patient history  -->\r\n                                    {{labelService.dsAnaysisResultsScreen.SeeFullPatientHistory}}\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <mat-card>\r\n                <!-- <app-test-tabs *ngIf=\"isCVET\" (changeAnalysisType)=\"onChangeAnalysisType($event)\" [tests]=\"tests\"\r\n                [currentTest]=\"currentTest\"></app-test-tabs> -->\r\n                <section class=\"row\" *ngIf=\"labResults\">\r\n\r\n                    <!---icons for Mobile view-->\r\n                    <div class=\"iconview resulticon\" *ngIf=\"!isCVET\">\r\n                        <!-- <ng-container *ngIf=\"labResults\"> -->\r\n                        <!-- <ng-container *ngIf=\"isConsultantUser\">\r\n                        <ng-container *ngIf=\"tblTopPatientDetails\">\r\n                            <span class=\"imgs pdf-part mobileview\"\r\n                                *ngIf=\"tblTopPatientDetails['AnalyzerName'] == 'Ref Lab' && tblTopPatientDetails['AccessionNumber']\">\r\n                                <img src=\"../../../../assets/img/result-button@2x.svg\" alt=\"\"\r\n                                    (click)=\"getResultPdf(tblTopPatientDetails['AccessionNumber'])\" placement=\"bottom\"\r\n                                    ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AccessionResultPDF}}\">\r\n                            </span>\r\n                        </ng-container>\r\n                    </ng-container> -->\r\n\r\n\r\n                        <ng-container *ngIf=\"tblTopPatientDetails\">\r\n                            <span class=\"imgs mobileview\"\r\n                                *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['OrderNumber'] && tblTopPatientDetails['AccessionNumber'] && !isConsultantUser\">\r\n                                <img src=\"../../../../assets/img/add_button.svg\" alt=\"\" (click)=\"getRecords()\"\r\n                                    placement=\"top\" ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AddOnPanel}}\"\r\n                                    height=\"36\">\r\n                            </span>\r\n                            <span class=\"mr-2 ml-2 imgs mobileview\"\r\n                                *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['OrderNumber']\">\r\n                                <!-- <img src=\"../../../../assets/img/order_manifest.svg\" alt=\"\"\r\n                                (click)=\"downloadMainfest(labResults['OrderNumber'])\" placement=\"bottom\"\r\n                                ngbTooltip=\"Order Manifest\" height=\"36\"> -->\r\n                                <!-- ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.OrderManifest}}\" -->\r\n                                <img src=\"../../../../assets/img/order_manifest.svg\" alt=\"\"\r\n                                    (click)=\"downloadMainfest(tblTopPatientDetails['OrderNumber'])\" placement=\"top\"\r\n                                    ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.RequisitionForm}}\" height=\"36\">\r\n                            </span>\r\n                            <span class=\"imgs pdf-part mobileview\"\r\n                                *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['AccessionNumber']\">\r\n                                <img src=\"../../../../assets/img/result-button@2x.svg\" alt=\"\"\r\n                                    (click)=\"getResultPdf(tblTopPatientDetails['AccessionNumber'])\" placement=\"top\"\r\n                                    ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AccessionResultPDF}}\">\r\n                            </span>\r\n                        </ng-container>\r\n                        <span class=\"lastimg mobileview mx-2\">\r\n                            <img src=\"../../../../assets/img/print.svg\" alt=\"\"\r\n                                (click)=\"downloatAnalysisResults('downloadPdf')\" placement=\"top\"\r\n                                ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.Print}}\" class=\"adjusttip\"\r\n                                height=\"36\">\r\n                        </span>\r\n                        <span class=\"mobileview mr-0\" *ngIf=\"!(isConsultantUser || isBackOfficeUser)\">\r\n                            <img src=\"../../../../assets/img/BlueBgConsultancy2x.svg\" alt=\"\"\r\n                                (click)=\"goToConsultation()\" placement=\"top\"\r\n                                ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.ConsultationRequest}}\" class=\"aimg\">\r\n                        </span>\r\n\r\n                    </div>\r\n                    <!---icons for Mobile view-->\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n\r\n                            <p class=\"peramecorr\"\r\n                                *ngIf=\"tblTopPatientDetails && tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && commonService.ACPText(tblTopPatientDetails)\">\r\n                                {{ tblTopPatientDetails.StatusName === 'Amended' ?\r\n                                labelService.dsAnaysisResultsScreen.ThisIsAn :\r\n                                labelService.dsAnaysisResultsScreen.ThisIsA\r\n                                }} <span class=\"font-weight-bold\" style=\"text-transform: uppercase;\">{{\r\n                                    labelService.dsAnaysisResultsScreen[tblTopPatientDetails.StatusName]\r\n                                    }}</span>&nbsp;<span style=\"text-transform: lowercase;\">{{\r\n                                    labelService.dsAnaysisResultsScreen.Result }}</span>\r\n                            </p>\r\n                            <div class=\"{{ isCVET ? 'col-12' : 'col-sm-12 col-md-7 col-lg-8' }}\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n                                        <div *ngIf=\"tblTopPatientDetails\">\r\n                                            <!-- tblTopPatientDetails.AnalyzerDisplayName | AnalyzerName  -->\r\n                                            <p class=\"head1\">\r\n                                                {{tblTopPatientDetails.AnalyzerDisplayName}} -\r\n                                                <!-- {{selectedAnalysisType}} -->\r\n                                                {{tblTopPatientDetails.AnalysisTypeName}}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\" *ngIf=\"isCVET\">\r\n                                        <P>\r\n                                            <span\r\n                                                class=\"pl-0 head1\">{{labelService.dsAnaysisResultsScreen.DVMName}}:</span>\r\n                                            <span class=\"text-left\" *ngIf=\"tblTopPatientDetails\">\r\n                                                {{tblTopPatientDetails.PhysicianName?tblTopPatientDetails.PhysicianName:\r\n                                                labelService.dsAnaysisResultsScreen.none}}\r\n                                            </span>\r\n                                        </P>\r\n                                    </div>\r\n                                    <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\" *ngIf=\"isCVET\">\r\n                                        <P\r\n                                            *ngIf=\"tblTopPatientDetails?.AnalyzerName === 'Ref Lab' && (reviewedByObj && reviewedByObj['PanelTestId'] === '2232') \">\r\n                                            <span class=\"head1\">\r\n                                                {{labelService.dsAnaysisResultsScreen.ReviewedBy}}:\r\n                                            </span>\r\n                                            <span>\r\n                                                {{reviewedByObj['Result']}}\r\n                                            </span>\r\n                                        </P>\r\n                                    </div>\r\n                                    <ng-container\r\n                                        *ngIf=\"tblTopPatientDetails && tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && !isCVET\">\r\n\r\n                                        <div class=\"col-xs-12 col-md-4\"\r\n                                            *ngIf=\"tblTopPatientDetails && tblTopPatientDetails.OrderNumber\">\r\n                                            <P>\r\n                                                <span class=\"head1\">\r\n                                                    {{labelService.dsAnaysisResultsScreen.OrderID}}:\r\n                                                </span>\r\n                                                <span>\r\n                                                    <a class=\"underline\" href=\"javascript:void(0)\"\r\n                                                        (click)=\"patientService.showAccessionResult(selectedResult['element'], tblTopPatientDetails.AccessionNumber,null,null,null,null)\">\r\n                                                        <!-- {{labResults['OrderNumber']}} -->\r\n                                                        <span *ngIf=\"tblTopPatientDetails\">\r\n                                                            {{tblTopPatientDetails.OrderNumber}} </span>\r\n                                                    </a>\r\n                                                </span>\r\n                                            </P>\r\n                                        </div>\r\n                                        <div class=\"col-xs-12 col-md-4\"\r\n                                            *ngIf=\"tblTopPatientDetails && tblTopPatientDetails.AccessionNumber\">\r\n                                            <P>\r\n                                                <span\r\n                                                    class=\"head1 mr-1\">{{labelService.dsAnaysisResultsScreen.AccessionID}}:</span>\r\n                                                <span>\r\n                                                    <a class=\"underline\" href=\"javascript:void(0)\"\r\n                                                        (click)=\"patientService.showAccessionResult(selectedResult['element'], tblTopPatientDetails.AccessionNumber,null,null,null,null)\">\r\n                                                        {{tblTopPatientDetails.AccessionNumber}}\r\n                                                    </a>\r\n                                                </span>\r\n                                            </P>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div class=\"row\" *ngIf=\"!isCVET\">\r\n                                    <div class=\"col-sm-12 col-md-6\">\r\n                                        <P>\r\n                                            <span\r\n                                                class=\"pl-0 head1\">{{labelService.dsAnaysisResultsScreen.DVMName}}:</span>\r\n                                            <span class=\"text-left\" *ngIf=\"tblTopPatientDetails\">\r\n                                                {{tblTopPatientDetails.PhysicianName?tblTopPatientDetails.PhysicianName:\r\n                                                labelService.dsAnaysisResultsScreen.none}}\r\n                                            </span>\r\n                                        </P>\r\n                                    </div>\r\n                                    <div class=\"col-sm-12 col-md-6\">\r\n                                        <P\r\n                                            *ngIf=\"tblTopPatientDetails?.AnalyzerName === 'Ref Lab' && (reviewedByObj && reviewedByObj['PanelTestId'] === '2232') \">\r\n                                            <span class=\"head1\">\r\n                                                {{labelService.dsAnaysisResultsScreen.ReviewedBy}}:\r\n                                            </span>\r\n                                            <span>\r\n                                                {{reviewedByObj['Result']}}\r\n                                            </span>\r\n                                        </P>\r\n                                        <!-- <p *ngIf=\"tblTopPatientDetails?.PrelimText\">\r\n                                        <span class=\"col pl-0 head1\">{{tblTopPatientDetails.PrelimText}}</span>\r\n                                    </p> -->\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <ng-container *ngIf=\"warningTopList?.length>0\">\r\n                                    <div class=\"warningTxt\">\r\n                                        <ng-container *ngFor=\"let w of warningTopList\">\r\n                                            <p class=\"d-flex align-items-center\" *ngIf=\"w?.Warning\">\r\n                                                <img class=\"warning-result\" src=\"../../../../assets/img/Warning-rd.png\"\r\n                                                    alt=\"\">\r\n                                                <strong>Warning:</strong>\r\n                                                <span>{{w.Warning}}</span>\r\n                                            </p>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-container> -->\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-5 col-lg-4\" *ngIf=\"!isCVET\">\r\n                                <p class=\"text-right d-flex justify-content-end align-items-end\">\r\n                                    <ng-container *ngIf=\"tblTopPatientDetails\">\r\n                                        <span class=\"imgs deskview\"\r\n                                            *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['OrderNumber'] && tblTopPatientDetails['AccessionNumber'] &&!isConsultantUser\">\r\n                                            <button type=\"top\" class=\"save-change\" mat-raised-button\r\n                                                (click)=\"getRecords()\" color=\"accent\"\r\n                                                ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AddAPanel}}\">{{labelService.dsAnaysisResultsScreen.AddAPanel}}</button>\r\n\r\n                                            <!-- <img src=\"../../../../assets/img/add_button.svg\" alt=\"\" (click)=\"getRecords(element)\"\r\n                                    placement=\"bottom\" ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AddOnPanel}}\" height=\"36\"> -->\r\n                                        </span>\r\n                                        <span class=\"mr-2 ml-2 imgs deskview\"\r\n                                            *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['OrderNumber']\">\r\n                                            <!-- ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.OrderManifest}} -->\r\n                                            <img src=\"../../../../assets/img/order_manifest.svg\" alt=\"\"\r\n                                                (click)=\"downloadMainfest(tblTopPatientDetails['OrderNumber'])\"\r\n                                                placement=\"top\" ngbTooltip=\"Requisition Form\" height=\"36\"\r\n                                                DisableRightClick>\r\n                                        </span>\r\n                                        <span class=\"imgs pdf-part deskview\"\r\n                                            *ngIf=\"tblTopPatientDetails['AnalyzerName'] === 'Ref Lab' && tblTopPatientDetails['AccessionNumber']\">\r\n                                            <img src=\"../../../../assets/img/result-button@2x.svg\" alt=\"\"\r\n                                                (click)=\"getResultPdf(tblTopPatientDetails['AccessionNumber'])\"\r\n                                                placement=\"top\"\r\n                                                ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.AccessionResultPDF}}\"\r\n                                                DisableRightClick>\r\n                                        </span>\r\n                                    </ng-container>\r\n                                    <!---icons for Desktop view-->\r\n                                    <span class=\"lastimg deskview mx-2\">\r\n                                        <img src=\"../../../../assets/img/print.svg\" alt=\"\"\r\n                                            (click)=\"downloatAnalysisResults('downloadPdf')\" placement=\"top\"\r\n                                            ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.Print}}\" class=\"adjusttip\"\r\n                                            height=\"36\" DisableRightClick>\r\n                                    </span>\r\n                                    <span class=\"lastimg deskview mx-0\">\r\n                                        <!-- href=\"javascript:void(0) | routerLink=\"/communication/email\" -->\r\n                                        <a routerLink=\"/communication/email\">\r\n                                            <img src=\"../../../../assets/img/emailicon.svg\"\r\n                                                (click)=\"downloatAnalysisResults('sendEmail')\"\r\n                                                alt=\"{{labelService.dsAnaysisResultsScreen.EmailResults}}\"\r\n                                                placement=\"top\"\r\n                                                ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.EmailResults}}\"\r\n                                                class=\"adjusttip\" height=\"36\" DisableRightClick>\r\n                                        </a>\r\n                                    </span>\r\n                                    <span class=\"deskview mx-2\" *ngIf=\"!(isConsultantUser || isBackOfficeUser)\">\r\n                                        <img src=\"../../../../assets/img/BlueBgConsultancy2x.svg\" alt=\"\"\r\n                                            (click)=\"goToConsultation()\" placement=\"top\" ngbTooltip=\"{{ctext}}\"\r\n                                            class=\"aimg\" DisableRightClick>\r\n                                    </span>\r\n\r\n                                    <!---icons for Desktop view-->\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div class=\"row mx-1\">\r\n                                <div class=\"col\">\r\n                                    <ng-container *ngIf=\"warningTopList?.length>0\">\r\n                                        <div class=\"warningTxt\">\r\n                                            <ng-container *ngFor=\"let w of warningTopList\">\r\n                                                <p class=\"\" *ngIf=\"w?.Warning\">\r\n                                                    <img class=\"warning-result\"\r\n                                                        src=\"../../../../assets/img/Warning-rd.png\" alt=\"\">\r\n                                                    <strong>Warning:</strong>\r\n                                                    <span>{{w.Warning}}</span>\r\n                                                </p>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"tblTopPatientDetails && tblTopPatientDetails.AnalyzerName === 'Ref Lab'\">\r\n                        <div class=\"col-12\">\r\n                            <p *ngIf=\"tblTopPatientDetails && tblTopPatientDetails['PanelNote'] && tblTopPatientDetails['TemplateId'] !== 13\"\r\n                                class=\"px-3\">\r\n                                <span class=\"head1\">\r\n                                    <ng-container\r\n                                        *ngIf=\"tblTopPatientDetails.TemplateId === 10 || tblTopPatientDetails.TemplateId === 9 || tblTopPatientDetails.TemplateId === 12\">\r\n                                        {{tblTopPatientDetails.AnalysisTypeName}}\r\n                                    </ng-container>\r\n                                    {{labelService.dsAnaysisResultsScreen.Notes}}:\r\n                                </span>\r\n                                <!-- <span class=\"head1\" *ngIf=\"tblTopPatientDetails['PanelNote']\">\r\n                                {{labelService.dsAnaysisResultsScreen.Notes}}:\r\n                            </span> -->\r\n                                <span *ngIf=\"tblTopPatientDetails['PanelNote']\"\r\n                                    [innerHTML]=\"commonService.getResultText(null, tblTopPatientDetails['PanelNote'])\">\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <app-template1 *ngIf=\"templateId===1\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" (changedDate)=\"setChildDate($event)\"\r\n                    [isCVET]=\"isCVET\">\r\n                </app-template1>\r\n\r\n                <app-template2 *ngIf=\"templateId===2\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template2>\r\n\r\n                <app-template3 *ngIf=\"templateId===3\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template3>\r\n\r\n                <app-template4 *ngIf=\"templateId===4\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template4>\r\n\r\n                <app-template5 *ngIf=\"templateId===5\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template5>\r\n\r\n                <app-template6 *ngIf=\"templateId===6\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template6>\r\n\r\n                <app-template7 *ngIf=\"templateId===7\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template7>\r\n\r\n                <app-template8 *ngIf=\"templateId===8\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template8>\r\n\r\n                <app-template9 *ngIf=\"templateId===9\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template9>\r\n\r\n                <app-template10 *ngIf=\"templateId===10\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template10>\r\n\r\n                <app-template11 *ngIf=\"templateId===11\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template11>\r\n\r\n                <app-template12 *ngIf=\"templateId===12\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template12>\r\n\r\n                <app-template13 *ngIf=\"templateId===13\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template13>\r\n\r\n                <app-template14 *ngIf=\"templateId===14\" class=\"w-100\" [selectedDate]=\"selectedDate\"\r\n                    [selectedAnalysisType]=\"selectedAnalysisType\" [labResults]=\"labResults\"\r\n                    [labReportFilterByAnalysisType]=\"labReportFilterByAnalysisType\" [isCVET]=\"isCVET\"></app-template14>\r\n            </mat-card>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"isCVET && loading\" class=\"row col-12\"\r\n    style=\"display: flex; justify-content: center; align-items: center; height: 50vh;\">\r\n    <div class=\"loader-container\">\r\n        <div class=\"loader-section\">\r\n            <div class=\"loader\"></div>\r\n            <img id=\"logo-inside-loader\" src=\"./assets/img/logo-header@2x.png\" alt=\"\">\r\n        </div>\r\n        <div class=\"text-section\">\r\n            <span>\r\n                {{ loadingText }}\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<iframe id=\"print-frame\" style=\"display: none\" title=\"\"></iframe>\r\n\r\n<div style=\"position: fixed;left: 50%; bottom: 30px;transform: translate(-50%, 0);z-index: 99;\"\r\n    *ngIf=\"isConsultantUser && commonService?.consultationReport()\">\r\n    <app-floating-consult-report></app-floating-consult-report>\r\n</div>","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CvetStorage {\r\n  storage: Storage = sessionStorage;\r\n  nameSpace = \"CVET\";\r\n\r\n\r\n  init() {\r\n    this.storage.setItem(\"ENV\", this.nameSpace);\r\n    if (!this.storage.getItem(this.nameSpace)) {\r\n      this.storage.setItem(this.nameSpace, JSON.stringify({}));\r\n    }\r\n  }\r\n\r\n  get(key: string) {\r\n    let nameSpace = this.storage.getItem(this.nameSpace);\r\n    nameSpace = JSON.parse(nameSpace);\r\n    return nameSpace[key];\r\n  }\r\n\r\n  set(key: string, value: any) {\r\n    let nameSpace = this.storage.getItem(this.nameSpace);\r\n    nameSpace = JSON.parse(nameSpace);\r\n    nameSpace[key] = value\r\n    this.storage.setItem(this.nameSpace, JSON.stringify(nameSpace))\r\n    return nameSpace;\r\n  }\r\n\r\n  nameSpaceClearAll() {\r\n    this.storage.removeItem(this.nameSpace);\r\n  }\r\n\r\n  cvetClear() {\r\n    this.storage.removeItem(this.nameSpace);\r\n    this.storage.removeItem('ENV');\r\n  }\r\n\r\n  clearAll() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, Output, EventEmitter, OnChanges } from \"@angular/core\";\r\nimport {\r\n  DataService,\r\n} from \"../../../services\";\r\nimport { CvetStorage } from \"../../cvet/storage.service\";\r\n\r\ndeclare let $\r\n\r\n@Component({\r\n  selector: \"app-test-tabs\",\r\n  templateUrl: \"./test-tabs.component.html\",\r\n  styleUrls: [\"./test-tabs.component.css\"],\r\n})\r\nexport class TestTabsComponent implements AfterViewInit, OnChanges {\r\n  currentIdx = 0;\r\n  @Output() changeAnalysisType: EventEmitter<any> = new EventEmitter();\r\n  @Input() tests: any = [];\r\n  @Input() currentTest: any = {};\r\n  constructor(private dataService: DataService, private storage: CvetStorage) {\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    const scrollDuration = 300;\r\n    const leftPaddle = document.getElementsByClassName(\"left-paddle\");\r\n    const rightPaddle = document.getElementsByClassName(\"right-paddle\");\r\n    const itemsLength = $(\".item\").length;\r\n    const itemSize = $(\".item\").outerWidth(true);\r\n    // const paddleMargin = 20;\r\n    const getMenuWrapperSize = function () {\r\n      return $(\".menu-wrapper\").outerWidth();\r\n    };\r\n    let menuWrapperSize = getMenuWrapperSize();\r\n    $(window).on(\"resize\", function () {\r\n      menuWrapperSize = getMenuWrapperSize();\r\n    });\r\n    // const menuVisibleSize = menuWrapperSize;\r\n    const getMenuSize = function () {\r\n      return itemsLength * itemSize;\r\n    };\r\n    // const getMenuPosition = function () {\r\n    //   return $(\".menu\").scrollLeft();\r\n    // };\r\n    const menuSize = getMenuSize();\r\n    let menuInvisibleSize = menuSize - menuWrapperSize;\r\n    $(\".menu\").on(\"scroll\", function () {\r\n      menuInvisibleSize = menuSize - menuWrapperSize;\r\n    });\r\n\r\n    // scroll to left\r\n    const $menu = $(\".menu\");\r\n    $(rightPaddle).on(\"click\", function () {\r\n      $menu.animate({ scrollLeft: $menu.scrollLeft() + 100 }, scrollDuration);\r\n    });\r\n\r\n    // scroll to right\r\n    $(leftPaddle).on(\"click\", function () {\r\n      $menu.animate({ scrollLeft: $(\".menu\").scrollLeft() - 100 }, scrollDuration);\r\n    });\r\n  }\r\n  ngOnChanges(): void {\r\n    console.log(this.tests, this.currentTest)\r\n  }\r\n\r\n\r\n  selectTest(ele, idx) {\r\n    this.currentIdx = idx;\r\n    this.currentTest = ele;\r\n    this.changeAnalysisType.emit(ele);\r\n  }\r\n\r\n  selectPrev() {\r\n    if (this.currentIdx === 0) return false;\r\n    this.currentIdx--;\r\n    const ele = this.tests[this.currentIdx]\r\n    this.currentTest = ele;\r\n    this.changeAnalysisType.emit(ele);\r\n  }\r\n\r\n  selectNext() {\r\n    console.log(this.currentIdx)\r\n    if (this.currentIdx === (this.tests.length - 1)) return false;\r\n    this.currentIdx++;\r\n    const ele = this.tests[this.currentIdx]\r\n    this.currentTest = ele;\r\n    this.changeAnalysisType.emit(ele);\r\n  }\r\n\r\n  viewInZdx() {\r\n    this.storage.cvetClear()\r\n  }\r\n}\r\n","<div class=\"menu-wrapper\">\r\n    <p class=\"external-zdx ml-3\">\r\n        <a style=\"cursor: pointer;\" target=\"_blank\" (click)=\"viewInZdx()\" href=\"result-details\">View in ZoetisDX <em class=\"fa fa-external-link\"></em></a>\r\n    </p>\r\n    <div class=\"tab-container\">\r\n        <span class=\"icon {{ currentIdx === 0 ? 'hidden' : '' }}\" (click)=\"selectPrev()\">&#8592;</span>\r\n        <div class=\"trapezoid  {{ currentTest.AnalysisTypeName === test.AnalysisTypeName ? 'active' : '' }}\"\r\n            *ngFor=\"let test of tests index as i\" (click)=\"selectTest(test, i)\"><span>{{ test.AnalysisTypeName }}</span>\r\n        </div>\r\n        <span class=\"icon last {{ currentIdx === (tests.length-1) ? 'hidden' : '' }}\"\r\n            (click)=\"selectNext()\">&#8594;</span>\r\n    </div>\r\n</div>\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatModule } from '../../modules/mat-module/mat.module';\r\nimport { pipeModule } from '../../pipe/pipe.module';\r\nimport { HeaderModule } from '../../modules/header/header.module'\r\nimport { SideMenuModule } from '../../modules/side-menu/side-menu.module'\r\nimport { ResultDetailsComponent } from './result-details.component';\r\nimport { Template1Component } from './template1/template1.component';\r\nimport { Template2Component } from './template2/template2.component';\r\nimport { Template3Component } from './template3/template3.component';\r\nimport { Template4Component } from './template4/template4.component';\r\nimport { Template5Component } from './template5/template5.component';\r\nimport { Template6Component } from './template6/template6.component';\r\nimport { Template7Component } from './template7/template7.component';\r\nimport { Template8Component } from './template8/template8.component';\r\nimport { Template9Component } from './template9/template9.component';\r\nimport { Template10Component } from './template10/template10.component';\r\nimport { Template11Component } from './template11/template11.component';\r\nimport { Template12Component } from './template12/template12.component';\r\nimport { Template13Component } from './template13/template13.component';\r\nimport { Template14Component } from './template14/template14.component';\r\nimport { TestTabsComponent } from './test-tabs/test-tabs.component';\r\nimport { DirectivesModule } from '../../directive/directives.module';\r\nimport { FcrComponent } from 'src/app/components/floating-consult-report/fcr.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ResultDetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResultDetailsComponent,\r\n    Template1Component,\r\n    Template2Component,\r\n    Template3Component,\r\n    Template4Component,\r\n    Template5Component,\r\n    Template6Component,\r\n    Template7Component,\r\n    Template8Component,\r\n    Template9Component,\r\n    Template10Component,\r\n    Template11Component,\r\n    Template12Component,\r\n    Template13Component,\r\n    Template14Component,\r\n    TestTabsComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DirectivesModule,\r\n    MatModule,\r\n    pipeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HeaderModule,\r\n    SideMenuModule,\r\n    FcrComponent,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n  exports: [RouterModule, ResultDetailsComponent],\r\n})\r\nexport class ResultDetailsModule { }\r\n"],"mappings":"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","names":["_c0","_c1","timer","moment","file","_c2","_c1","notTrendatble","_c0","_c0","_c2","_c1","_c1","_c0","_c2","_c1","_c0","_c0","_c2","_c1","_c0","_c1","_c1","_c0","_c2","_c0","_c2","_c1"],"x_google_ignoreList":[0,10]}