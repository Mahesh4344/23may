{"version":3,"sources":["node_modules/intl-tel-input/build/js/intlTelInput.js","node_modules/intl-tel-input/index.js","node_modules/file-saver/dist/FileSaver.min.js","src/app/components/patient-managements/patient-info-edit/patient-info-edit.component.ts","src/app/components/patient-managements/patient-info-edit/patient-info-edit.component.html","src/app/components/reset/reset.component.ts","src/app/components/reset/reset.component.html","src/app/components/forgot/forgot.component.ts","src/app/components/forgot/forgot.component.html","src/environments/environment.prod.ts","src/app/components/dashboard/dashboard-filter/dashboard-filter.component.ts","src/app/components/dashboard/dashboard-filter/dashboard-filter.component.html","src/app/components/dashboard/dashboard.component.ts","src/app/components/dashboard/dashboard.component.html","src/app/modules/sidefilter/sidefilter.component.ts","src/app/modules/sidefilter/sidefilter.component.html","src/app/components/clinic-management/clinic-management.component.ts","src/app/components/clinic-management/clinic-management.component.html","src/app/modules/add-user/add-user.component.ts","src/app/modules/add-user/add-user.component.html","src/app/components/user-managements/user-list/user-list.component.ts","src/app/components/user-managements/user-list/user-list.component.html","src/app/components/verify/verify.component.ts","src/app/components/verify/verify.component.html","src/app/components/thanks/thanks.component.ts","src/app/components/thanks/thanks.component.html","src/app/components/patient-managements/patient-list/patient-list.component.ts","src/app/components/patient-managements/patient-list/patient-list.component.html","src/app/models/fuse.ts","src/app/components/fuse-managements/fuse-list/fuse-list.component.ts","src/app/components/fuse-managements/fuse-list/fuse-list.component.html","node_modules/@angular/cdk/fesm2022/clipboard.mjs","src/app/components/pims-management/pims-management.component.ts","src/app/components/pims-management/pims-management.component.html","src/app/components/settings/settings.component.ts","src/app/components/settings/settings.component.html","src/app/components/user-managements/user-support/user-support.component.ts","src/app/components/user-managements/user-support/user-support.component.html","src/app/components/help/help.component.ts","src/app/components/help/help.component.html","src/app/components/end-user-license-agreement/end-user-license-agreement.component.ts","src/app/components/end-user-license-agreement/end-user-license-agreement.component.html","src/app/components/rotor-credits/rotor-credit/rotor-credit.component.ts","src/app/components/rotor-credits/rotor-credit/rotor-credit.component.html","src/app/components/rotor-credits/rotor-credit-first-screen/rotor-credit-first-screen.component.ts","src/app/components/rotor-credits/rotor-credit-first-screen/rotor-credit-first-screen.component.html","src/app/components/patient-managements/merge-patient/merge-patient.component.ts","src/app/components/patient-managements/merge-patient/merge-patient.component.html","src/app/components/patient-managements/patient-info-tests/patient-info-tests.component.ts","src/app/components/patient-managements/patient-info-tests/patient-info-tests.component.html","src/app/shared/pdf-modal/pdf-modal.component.ts","src/app/components/patient-managements/consultation-list/consultation-details/consultation-details.component.ts","src/app/components/patient-managements/consultation-list/consultation-details/consultation-details.component.html","src/app/components/patient-managements/consultation-list/consultation-list.component.ts","src/app/components/patient-managements/consultation-list/consultation-list.component.html","src/app/components/patient-managements/patient-info/patient-info.component.ts","src/app/components/patient-managements/patient-info/patient-info.component.html","src/app/components/patient-managements/consult-patient-info/consult-patient-info.component.ts","src/app/components/patient-managements/consult-patient-info/consult-patient-info.component.html","src/app/components/login-regis-intermediate/login-regis-intermediate.component.ts","src/app/components/login-regis-intermediate/login-regis-intermediate.component.html","src/app/components/user-managements/account-settings/account-settings.component.ts","src/app/components/user-managements/account-settings/account-settings.component.html","src/app/components/user-managements/preferences/preferences.component.ts","src/app/components/user-managements/preferences/preferences.component.html","src/app/services/script-loader.service.ts","src/app/components/gigya-login/gigya-login.component.ts","src/app/components/gigya-login/gigya-login.component.html","src/app/components/user-managements/security/security.component.ts","src/app/components/user-managements/security/security.component.html","src/app/components/gigya-managements/gigya-reset/gigya-reset.component.ts","src/app/components/gigya-managements/gigya-reset/gigya-reset.component.html","src/app/components/gigya-managements/gigya-user-profile/gigya-user-profile.component.ts","src/app/components/gigya-managements/gigya-user-profile/gigya-user-profile.component.html","src/app/components/gigya-managements/gigya-change-password/gigya-change-password.component.ts","src/app/components/gigya-managements/gigya-change-password/gigya-change-password.component.html","src/app/components/ups/ups.component.ts","src/app/components/ups/ups.component.html","src/app/components/zrl-verification/zrl-verification.component.ts","src/app/components/zrl-verification/zrl-verification.component.html","src/app/components/zdx-redirection/zdx-redirection.component.ts","src/app/components/zdx-redirection/zdx-redirection.component.html","src/app/components/search-results/search-results.component.ts","src/app/components/search-results/search-results.component.html","src/app/components/accession-results/accession-results.component.ts","src/app/components/accession-results/accession-results.component.html","src/app/components/accession-results/templates/accession-template-one/accession-template-one.component.ts","src/app/components/accession-results/templates/accession-template-one/accession-template-one.component.html","src/app/components/accession-results/templates/accession-template-three/accession-template-three.component.ts","src/app/components/accession-results/templates/accession-template-three/accession-template-three.component.html","src/app/components/accession-results/templates/accession-template-four/accession-template-four.component.ts","src/app/components/accession-results/templates/accession-template-four/accession-template-four.component.html","src/app/components/accession-results/templates/accession-template-five/accession-template-five.component.ts","src/app/components/accession-results/templates/accession-template-five/accession-template-five.component.html","src/app/components/accession-results/templates/accession-template-six/accession-template-six.component.ts","src/app/components/accession-results/templates/accession-template-six/accession-template-six.component.html","src/app/components/accession-results/templates/accession-template-seven/accession-template-seven.component.ts","src/app/components/accession-results/templates/accession-template-seven/accession-template-seven.component.html","src/app/components/accession-results/templates/accession-template-nine/accession-template-nine.component.ts","src/app/components/accession-results/templates/accession-template-nine/accession-template-nine.component.html","src/app/components/accession-results/templates/accession-template-12/accession-template-12.component.ts","src/app/components/accession-results/templates/accession-template-12/accession-template-12.component.html","src/app/components/accession-results/templates/accession-template-13/accession-template-13.component.ts","src/app/components/accession-results/templates/accession-template-13/accession-template-13.component.html","src/app/components/accession-results/templates/accession-template-ten/accession-template-ten.component.ts","src/app/components/accession-results/templates/accession-template-ten/accession-template-ten.component.html","src/app/components/maintenance/maintenance.component.ts","src/app/components/maintenance/maintenance.component.html","src/app/components/consult-dos/consult-dos.component.ts","src/app/components/consult-dos/consult-dos.component.html","src/app/components/homepage/result-list/result-list.component.ts","src/app/components/homepage/result-list/result-list.component.html","src/app/components/homepage/consultations/consultations.component.ts","src/app/components/homepage/consultations/consultations.component.html","src/app/components/homepage/homepage.component.ts","src/app/components/homepage/homepage.component.html","src/app/app-routing.module.ts","src/app/modules/add-user/add-user.module.ts","src/app/modules/sidefilter/side-filter.module.ts","src/app/app.component.ts","src/app/app.component.html","src/app/components/signin/signin.component.ts","src/app/components/signin/signin.component.html","src/app/services/order-sidefilter.service.ts","src/app/components/gigya-market/gigya-market.component.ts","src/app/components/gigya-market/gigya-market.component.html","src/app/components/refresh-dap/refresh-dap.component.ts","src/app/components/refresh-dap/refresh-dap.component.html","src/app/components/internal-banner/internal-banner.component.ts","src/app/components/internal-banner/internal-banner.component.html","src/app/components/pagenotfound/pagenotfound.component.ts","src/app/components/pagenotfound/pagenotfound.component.html","src/app/services/error-handler.service.ts","src/app/components/patient-managements/consultation-list/consultation-report/consultation-report.component.ts","src/app/components/patient-managements/consultation-list/consultation-report/consultation-report.component.html","src/app/app.module.ts","src/app/modules/cvet/cvet.model.ts","node_modules/ts-mixer/dist/esm/index.js","src/app/modules/cvet/cvet.service.ts","src/app/modules/cvet/messages.ts","src/app/modules/cvet/zdx-deep-link/zdx-deep-link.component.ts","src/app/modules/cvet/zdx-deep-link/zdx-deep-link.component.html","src/app/modules/cvet/results/results.component.ts","src/app/modules/cvet/results/results.component.html","src/app/modules/cvet/cvet-routing.module.ts","src/app/modules/cvet/cvet.component.ts","src/app/modules/cvet/cvet.component.html","src/app/modules/cvet/cvet.module.ts","src/main.ts"],"sourcesContent":["/*\n * International Telephone Input v17.0.21\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function (factory) {\n  if (typeof module === \"object\" && module.exports) module.exports = factory();else window.intlTelInput = factory();\n})(function (undefined) {\n  \"use strict\";\n\n  return function () {\n    // Array of country objects for the flag dropdown.\n    // Here is the criteria for the plugin to support a given country/territory\n    // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n    // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n    // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n    // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n    // Each country array has the following information:\n    // [\n    //    Country name,\n    //    iso2 code,\n    //    International dial code,\n    //    Order (if >1 country with same dial code),\n    //    Area codes\n    // ]\n    var allCountries = [[\"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\"], [\"Albania (Shqipëri)\", \"al\", \"355\"], [\"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\"], [\"American Samoa\", \"as\", \"1\", 5, [\"684\"]], [\"Andorra\", \"ad\", \"376\"], [\"Angola\", \"ao\", \"244\"], [\"Anguilla\", \"ai\", \"1\", 6, [\"264\"]], [\"Antigua and Barbuda\", \"ag\", \"1\", 7, [\"268\"]], [\"Argentina\", \"ar\", \"54\"], [\"Armenia (Հայաստան)\", \"am\", \"374\"], [\"Aruba\", \"aw\", \"297\"], [\"Ascension Island\", \"ac\", \"247\"], [\"Australia\", \"au\", \"61\", 0], [\"Austria (Österreich)\", \"at\", \"43\"], [\"Azerbaijan (Azərbaycan)\", \"az\", \"994\"], [\"Bahamas\", \"bs\", \"1\", 8, [\"242\"]], [\"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\"], [\"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\"], [\"Barbados\", \"bb\", \"1\", 9, [\"246\"]], [\"Belarus (Беларусь)\", \"by\", \"375\"], [\"Belgium (België)\", \"be\", \"32\"], [\"Belize\", \"bz\", \"501\"], [\"Benin (Bénin)\", \"bj\", \"229\"], [\"Bermuda\", \"bm\", \"1\", 10, [\"441\"]], [\"Bhutan (འབྲུག)\", \"bt\", \"975\"], [\"Bolivia\", \"bo\", \"591\"], [\"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\"], [\"Botswana\", \"bw\", \"267\"], [\"Brazil (Brasil)\", \"br\", \"55\"], [\"British Indian Ocean Territory\", \"io\", \"246\"], [\"British Virgin Islands\", \"vg\", \"1\", 11, [\"284\"]], [\"Brunei\", \"bn\", \"673\"], [\"Bulgaria (България)\", \"bg\", \"359\"], [\"Burkina Faso\", \"bf\", \"226\"], [\"Burundi (Uburundi)\", \"bi\", \"257\"], [\"Cambodia (កម្ពុជា)\", \"kh\", \"855\"], [\"Cameroon (Cameroun)\", \"cm\", \"237\"], [\"Canada\", \"ca\", \"1\", 1, [\"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]], [\"Cape Verde (Kabu Verdi)\", \"cv\", \"238\"], [\"Caribbean Netherlands\", \"bq\", \"599\", 1, [\"3\", \"4\", \"7\"]], [\"Cayman Islands\", \"ky\", \"1\", 12, [\"345\"]], [\"Central African Republic (République centrafricaine)\", \"cf\", \"236\"], [\"Chad (Tchad)\", \"td\", \"235\"], [\"Chile\", \"cl\", \"56\"], [\"China (中国)\", \"cn\", \"86\"], [\"Christmas Island\", \"cx\", \"61\", 2, [\"89164\"]], [\"Cocos (Keeling) Islands\", \"cc\", \"61\", 1, [\"89162\"]], [\"Colombia\", \"co\", \"57\"], [\"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\"], [\"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\"], [\"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\"], [\"Cook Islands\", \"ck\", \"682\"], [\"Costa Rica\", \"cr\", \"506\"], [\"Côte d’Ivoire\", \"ci\", \"225\"], [\"Croatia (Hrvatska)\", \"hr\", \"385\"], [\"Cuba\", \"cu\", \"53\"], [\"Curaçao\", \"cw\", \"599\", 0], [\"Cyprus (Κύπρος)\", \"cy\", \"357\"], [\"Czech Republic (Česká republika)\", \"cz\", \"420\"], [\"Denmark (Danmark)\", \"dk\", \"45\"], [\"Djibouti\", \"dj\", \"253\"], [\"Dominica\", \"dm\", \"1\", 13, [\"767\"]], [\"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [\"809\", \"829\", \"849\"]], [\"Ecuador\", \"ec\", \"593\"], [\"Egypt (‫مصر‬‎)\", \"eg\", \"20\"], [\"El Salvador\", \"sv\", \"503\"], [\"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\"], [\"Eritrea\", \"er\", \"291\"], [\"Estonia (Eesti)\", \"ee\", \"372\"], [\"Eswatini\", \"sz\", \"268\"], [\"Ethiopia\", \"et\", \"251\"], [\"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\"], [\"Faroe Islands (Føroyar)\", \"fo\", \"298\"], [\"Fiji\", \"fj\", \"679\"], [\"Finland (Suomi)\", \"fi\", \"358\", 0], [\"France\", \"fr\", \"33\"], [\"French Guiana (Guyane française)\", \"gf\", \"594\"], [\"French Polynesia (Polynésie française)\", \"pf\", \"689\"], [\"Gabon\", \"ga\", \"241\"], [\"Gambia\", \"gm\", \"220\"], [\"Georgia (საქართველო)\", \"ge\", \"995\"], [\"Germany (Deutschland)\", \"de\", \"49\"], [\"Ghana (Gaana)\", \"gh\", \"233\"], [\"Gibraltar\", \"gi\", \"350\"], [\"Greece (Ελλάδα)\", \"gr\", \"30\"], [\"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\"], [\"Grenada\", \"gd\", \"1\", 14, [\"473\"]], [\"Guadeloupe\", \"gp\", \"590\", 0], [\"Guam\", \"gu\", \"1\", 15, [\"671\"]], [\"Guatemala\", \"gt\", \"502\"], [\"Guernsey\", \"gg\", \"44\", 1, [\"1481\", \"7781\", \"7839\", \"7911\"]], [\"Guinea (Guinée)\", \"gn\", \"224\"], [\"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\"], [\"Guyana\", \"gy\", \"592\"], [\"Haiti\", \"ht\", \"509\"], [\"Honduras\", \"hn\", \"504\"], [\"Hong Kong (香港)\", \"hk\", \"852\"], [\"Hungary (Magyarország)\", \"hu\", \"36\"], [\"Iceland (Ísland)\", \"is\", \"354\"], [\"India (भारत)\", \"in\", \"91\"], [\"Indonesia\", \"id\", \"62\"], [\"Iran (‫ایران‬‎)\", \"ir\", \"98\"], [\"Iraq (‫العراق‬‎)\", \"iq\", \"964\"], [\"Ireland\", \"ie\", \"353\"], [\"Isle of Man\", \"im\", \"44\", 2, [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"]], [\"Israel (‫ישראל‬‎)\", \"il\", \"972\"], [\"Italy (Italia)\", \"it\", \"39\", 0], [\"Jamaica\", \"jm\", \"1\", 4, [\"876\", \"658\"]], [\"Japan (日本)\", \"jp\", \"81\"], [\"Jersey\", \"je\", \"44\", 3, [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"]], [\"Jordan (‫الأردن‬‎)\", \"jo\", \"962\"], [\"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [\"33\", \"7\"]], [\"Kenya\", \"ke\", \"254\"], [\"Kiribati\", \"ki\", \"686\"], [\"Kosovo\", \"xk\", \"383\"], [\"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\"], [\"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\"], [\"Laos (ລາວ)\", \"la\", \"856\"], [\"Latvia (Latvija)\", \"lv\", \"371\"], [\"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\"], [\"Lesotho\", \"ls\", \"266\"], [\"Liberia\", \"lr\", \"231\"], [\"Libya (‫ليبيا‬‎)\", \"ly\", \"218\"], [\"Liechtenstein\", \"li\", \"423\"], [\"Lithuania (Lietuva)\", \"lt\", \"370\"], [\"Luxembourg\", \"lu\", \"352\"], [\"Macau (澳門)\", \"mo\", \"853\"], [\"Madagascar (Madagasikara)\", \"mg\", \"261\"], [\"Malawi\", \"mw\", \"265\"], [\"Malaysia\", \"my\", \"60\"], [\"Maldives\", \"mv\", \"960\"], [\"Mali\", \"ml\", \"223\"], [\"Malta\", \"mt\", \"356\"], [\"Marshall Islands\", \"mh\", \"692\"], [\"Martinique\", \"mq\", \"596\"], [\"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\"], [\"Mauritius (Moris)\", \"mu\", \"230\"], [\"Mayotte\", \"yt\", \"262\", 1, [\"269\", \"639\"]], [\"Mexico (México)\", \"mx\", \"52\"], [\"Micronesia\", \"fm\", \"691\"], [\"Moldova (Republica Moldova)\", \"md\", \"373\"], [\"Monaco\", \"mc\", \"377\"], [\"Mongolia (Монгол)\", \"mn\", \"976\"], [\"Montenegro (Crna Gora)\", \"me\", \"382\"], [\"Montserrat\", \"ms\", \"1\", 16, [\"664\"]], [\"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0], [\"Mozambique (Moçambique)\", \"mz\", \"258\"], [\"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\"], [\"Namibia (Namibië)\", \"na\", \"264\"], [\"Nauru\", \"nr\", \"674\"], [\"Nepal (नेपाल)\", \"np\", \"977\"], [\"Netherlands (Nederland)\", \"nl\", \"31\"], [\"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\"], [\"New Zealand\", \"nz\", \"64\"], [\"Nicaragua\", \"ni\", \"505\"], [\"Niger (Nijar)\", \"ne\", \"227\"], [\"Nigeria\", \"ng\", \"234\"], [\"Niue\", \"nu\", \"683\"], [\"Norfolk Island\", \"nf\", \"672\"], [\"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\"], [\"North Macedonia (Северна Македонија)\", \"mk\", \"389\"], [\"Northern Mariana Islands\", \"mp\", \"1\", 17, [\"670\"]], [\"Norway (Norge)\", \"no\", \"47\", 0], [\"Oman (‫عُمان‬‎)\", \"om\", \"968\"], [\"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\"], [\"Palau\", \"pw\", \"680\"], [\"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\"], [\"Panama (Panamá)\", \"pa\", \"507\"], [\"Papua New Guinea\", \"pg\", \"675\"], [\"Paraguay\", \"py\", \"595\"], [\"Peru (Perú)\", \"pe\", \"51\"], [\"Philippines\", \"ph\", \"63\"], [\"Poland (Polska)\", \"pl\", \"48\"], [\"Portugal\", \"pt\", \"351\"], [\"Puerto Rico\", \"pr\", \"1\", 3, [\"787\", \"939\"]], [\"Qatar (‫قطر‬‎)\", \"qa\", \"974\"], [\"Réunion (La Réunion)\", \"re\", \"262\", 0], [\"Romania (România)\", \"ro\", \"40\"], [\"Russia (Россия)\", \"ru\", \"7\", 0], [\"Rwanda\", \"rw\", \"250\"], [\"Saint Barthélemy\", \"bl\", \"590\", 1], [\"Saint Helena\", \"sh\", \"290\"], [\"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [\"869\"]], [\"Saint Lucia\", \"lc\", \"1\", 19, [\"758\"]], [\"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2], [\"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\"], [\"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [\"784\"]], [\"Samoa\", \"ws\", \"685\"], [\"San Marino\", \"sm\", \"378\"], [\"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\"], [\"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\"], [\"Senegal (Sénégal)\", \"sn\", \"221\"], [\"Serbia (Србија)\", \"rs\", \"381\"], [\"Seychelles\", \"sc\", \"248\"], [\"Sierra Leone\", \"sl\", \"232\"], [\"Singapore\", \"sg\", \"65\"], [\"Sint Maarten\", \"sx\", \"1\", 21, [\"721\"]], [\"Slovakia (Slovensko)\", \"sk\", \"421\"], [\"Slovenia (Slovenija)\", \"si\", \"386\"], [\"Solomon Islands\", \"sb\", \"677\"], [\"Somalia (Soomaaliya)\", \"so\", \"252\"], [\"South Africa\", \"za\", \"27\"], [\"South Korea (대한민국)\", \"kr\", \"82\"], [\"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\"], [\"Spain (España)\", \"es\", \"34\"], [\"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\"], [\"Sudan (‫السودان‬‎)\", \"sd\", \"249\"], [\"Suriname\", \"sr\", \"597\"], [\"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [\"79\"]], [\"Sweden (Sverige)\", \"se\", \"46\"], [\"Switzerland (Schweiz)\", \"ch\", \"41\"], [\"Syria (‫سوريا‬‎)\", \"sy\", \"963\"], [\"Taiwan (台灣)\", \"tw\", \"886\"], [\"Tajikistan\", \"tj\", \"992\"], [\"Tanzania\", \"tz\", \"255\"], [\"Thailand (ไทย)\", \"th\", \"66\"], [\"Timor-Leste\", \"tl\", \"670\"], [\"Togo\", \"tg\", \"228\"], [\"Tokelau\", \"tk\", \"690\"], [\"Tonga\", \"to\", \"676\"], [\"Trinidad and Tobago\", \"tt\", \"1\", 22, [\"868\"]], [\"Tunisia (‫تونس‬‎)\", \"tn\", \"216\"], [\"Turkey (Türkiye)\", \"tr\", \"90\"], [\"Turkmenistan\", \"tm\", \"993\"], [\"Turks and Caicos Islands\", \"tc\", \"1\", 23, [\"649\"]], [\"Tuvalu\", \"tv\", \"688\"], [\"U.S. Virgin Islands\", \"vi\", \"1\", 24, [\"340\"]], [\"Uganda\", \"ug\", \"256\"], [\"Ukraine (Україна)\", \"ua\", \"380\"], [\"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\"], [\"United Kingdom\", \"gb\", \"44\", 0], [\"United States\", \"us\", \"1\", 0], [\"Uruguay\", \"uy\", \"598\"], [\"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\"], [\"Vanuatu\", \"vu\", \"678\"], [\"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [\"06698\"]], [\"Venezuela\", \"ve\", \"58\"], [\"Vietnam (Việt Nam)\", \"vn\", \"84\"], [\"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\"], [\"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [\"5288\", \"5289\"]], [\"Yemen (‫اليمن‬‎)\", \"ye\", \"967\"], [\"Zambia\", \"zm\", \"260\"], [\"Zimbabwe\", \"zw\", \"263\"], [\"Åland Islands\", \"ax\", \"358\", 1, [\"18\"]]];\n    // loop over all of the countries above, restructuring the data to be objects with named keys\n    for (var i = 0; i < allCountries.length; i++) {\n      var c = allCountries[i];\n      allCountries[i] = {\n        name: c[0],\n        iso2: c[1],\n        dialCode: c[2],\n        priority: c[3] || 0,\n        areaCodes: c[4] || null\n      };\n    }\n    \"use strict\";\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    var intlTelInputGlobals = {\n      getInstance: function getInstance(input) {\n        var id = input.getAttribute(\"data-intl-tel-input-id\");\n        return window.intlTelInputGlobals.instances[id];\n      },\n      instances: {},\n      // using a global like this allows us to mock it in the tests\n      documentReady: function documentReady() {\n        return document.readyState === \"complete\";\n      }\n    };\n    if (typeof window === \"object\") window.intlTelInputGlobals = intlTelInputGlobals;\n    // these vars persist through all instances of the plugin\n    var id = 0;\n    var defaults = {\n      // whether or not to allow the dropdown\n      allowDropdown: true,\n      // if there is just a dial code in the input: remove it on blur\n      autoHideDialCode: true,\n      // add a placeholder in the input with an example number for the selected country\n      autoPlaceholder: \"polite\",\n      // modify the parentClass\n      customContainer: \"\",\n      // modify the auto placeholder\n      customPlaceholder: null,\n      // append menu to specified element\n      dropdownContainer: null,\n      // don't display these countries\n      excludeCountries: [],\n      // format the input value during initialisation and on setNumber\n      formatOnDisplay: true,\n      // geoIp lookup function\n      geoIpLookup: null,\n      // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n      hiddenInput: \"\",\n      // initial country\n      initialCountry: \"\",\n      // localized country names e.g. { 'de': 'Deutschland' }\n      localizedCountries: null,\n      // don't insert international dial codes\n      nationalMode: true,\n      // display only these countries\n      onlyCountries: [],\n      // number type to use for placeholders\n      placeholderNumberType: \"MOBILE\",\n      // the countries at the top of the list. defaults to united states and united kingdom\n      preferredCountries: [\"us\", \"gb\"],\n      // display the country dial code next to the selected flag so it's not part of the typed number\n      separateDialCode: false,\n      // specify the path to the libphonenumber script to enable validation/formatting\n      utilsScript: \"\"\n    };\n    // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n    var regionlessNanpNumbers = [\"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\"];\n    // utility function to iterate over an object. can't use Object.entries or native forEach because\n    // of IE11\n    var forEachProp = function forEachProp(obj, callback) {\n      var keys = Object.keys(obj);\n      for (var i = 0; i < keys.length; i++) {\n        callback(keys[i], obj[keys[i]]);\n      }\n    };\n    // run a method on each instance of the plugin\n    var forEachInstance = function forEachInstance(method) {\n      forEachProp(window.intlTelInputGlobals.instances, function (key) {\n        window.intlTelInputGlobals.instances[key][method]();\n      });\n    };\n    // this is our plugin class that we will create an instance of\n    // eslint-disable-next-line no-unused-vars\n    var Iti = /*#__PURE__*/\n    function () {\n      function Iti(input, options) {\n        var _this = this;\n        _classCallCheck(this, Iti);\n        this.id = id++;\n        this.telInput = input;\n        this.activeItem = null;\n        this.highlightedItem = null;\n        // process specified options / defaults\n        // alternative to Object.assign, which isn't supported by IE11\n        var customOptions = options || {};\n        this.options = {};\n        forEachProp(defaults, function (key, value) {\n          _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n        });\n        this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n      }\n      _createClass(Iti, [{\n        key: \"_init\",\n        value: function _init() {\n          var _this2 = this;\n          // if in nationalMode, disable options relating to dial codes\n          if (this.options.nationalMode) this.options.autoHideDialCode = false;\n          // if separateDialCode then doesn't make sense to A) insert dial code into input\n          // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n          // dial code next to them)\n          if (this.options.separateDialCode) {\n            this.options.autoHideDialCode = this.options.nationalMode = false;\n          }\n          // we cannot just test screen size as some smartphones/website meta tags will report desktop\n          // resolutions\n          // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n          // rest of these declarations\n          // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n          this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n          if (this.isMobile) {\n            // trigger the mobile dropdown css\n            document.body.classList.add(\"iti-mobile\");\n            // on mobile, we want a full screen dropdown, so we must append it to the body\n            if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n          }\n          // these promises get resolved when their individual requests complete\n          // this way the dev can do something like iti.promise.then(...) to know when all requests are\n          // complete\n          if (typeof Promise !== \"undefined\") {\n            var autoCountryPromise = new Promise(function (resolve, reject) {\n              _this2.resolveAutoCountryPromise = resolve;\n              _this2.rejectAutoCountryPromise = reject;\n            });\n            var utilsScriptPromise = new Promise(function (resolve, reject) {\n              _this2.resolveUtilsScriptPromise = resolve;\n              _this2.rejectUtilsScriptPromise = reject;\n            });\n            this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);\n          } else {\n            // prevent errors when Promise doesn't exist\n            this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function () {};\n            this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function () {};\n          }\n          // in various situations there could be no country selected initially, but we need to be able\n          // to assume this variable exists\n          this.selectedCountryData = {};\n          // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n          this._processCountryData();\n          // generate the markup\n          this._generateMarkup();\n          // set the initial state of the input value and the selected flag\n          this._setInitialState();\n          // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n          this._initListeners();\n          // utils script, and auto country\n          this._initRequests();\n        }\n      }, {\n        key: \"_processCountryData\",\n        value: function _processCountryData() {\n          // process onlyCountries or excludeCountries array if present\n          this._processAllCountries();\n          // process the countryCodes map\n          this._processCountryCodes();\n          // process the preferredCountries\n          this._processPreferredCountries();\n          // translate countries according to localizedCountries option\n          if (this.options.localizedCountries) this._translateCountriesByLocale();\n          // sort countries by name\n          if (this.options.onlyCountries.length || this.options.localizedCountries) {\n            this.countries.sort(this._countryNameSort);\n          }\n        }\n      }, {\n        key: \"_addCountryCode\",\n        value: function _addCountryCode(iso2, countryCode, priority) {\n          if (countryCode.length > this.countryCodeMaxLen) {\n            this.countryCodeMaxLen = countryCode.length;\n          }\n          if (!this.countryCodes.hasOwnProperty(countryCode)) {\n            this.countryCodes[countryCode] = [];\n          }\n          // bail if we already have this country for this countryCode\n          for (var i = 0; i < this.countryCodes[countryCode].length; i++) {\n            if (this.countryCodes[countryCode][i] === iso2) return;\n          }\n          // check for undefined as 0 is falsy\n          var index = priority !== undefined ? priority : this.countryCodes[countryCode].length;\n          this.countryCodes[countryCode][index] = iso2;\n        }\n      }, {\n        key: \"_processAllCountries\",\n        value: function _processAllCountries() {\n          if (this.options.onlyCountries.length) {\n            var lowerCaseOnlyCountries = this.options.onlyCountries.map(function (country) {\n              return country.toLowerCase();\n            });\n            this.countries = allCountries.filter(function (country) {\n              return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n            });\n          } else if (this.options.excludeCountries.length) {\n            var lowerCaseExcludeCountries = this.options.excludeCountries.map(function (country) {\n              return country.toLowerCase();\n            });\n            this.countries = allCountries.filter(function (country) {\n              return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n            });\n          } else {\n            this.countries = allCountries;\n          }\n        }\n      }, {\n        key: \"_translateCountriesByLocale\",\n        value: function _translateCountriesByLocale() {\n          for (var i = 0; i < this.countries.length; i++) {\n            var iso = this.countries[i].iso2.toLowerCase();\n            if (this.options.localizedCountries.hasOwnProperty(iso)) {\n              this.countries[i].name = this.options.localizedCountries[iso];\n            }\n          }\n        }\n      }, {\n        key: \"_countryNameSort\",\n        value: function _countryNameSort(a, b) {\n          return a.name.localeCompare(b.name);\n        }\n      }, {\n        key: \"_processCountryCodes\",\n        value: function _processCountryCodes() {\n          this.countryCodeMaxLen = 0;\n          // here we store just dial codes\n          this.dialCodes = {};\n          // here we store \"country codes\" (both dial codes and their area codes)\n          this.countryCodes = {};\n          // first: add dial codes\n          for (var i = 0; i < this.countries.length; i++) {\n            var c = this.countries[i];\n            if (!this.dialCodes[c.dialCode]) this.dialCodes[c.dialCode] = true;\n            this._addCountryCode(c.iso2, c.dialCode, c.priority);\n          }\n          // next: add area codes\n          // this is a second loop over countries, to make sure we have all of the \"root\" countries\n          // already in the map, so that we can access them, as each time we add an area code substring\n          // to the map, we also need to include the \"root\" country's code, as that also matches\n          for (var _i = 0; _i < this.countries.length; _i++) {\n            var _c = this.countries[_i];\n            // area codes\n            if (_c.areaCodes) {\n              var rootCountryCode = this.countryCodes[_c.dialCode][0];\n              // for each area code\n              for (var j = 0; j < _c.areaCodes.length; j++) {\n                var areaCode = _c.areaCodes[j];\n                // for each digit in the area code to add all partial matches as well\n                for (var k = 1; k < areaCode.length; k++) {\n                  var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                  // start with the root country, as that also matches this dial code\n                  this._addCountryCode(rootCountryCode, partialDialCode);\n                  this._addCountryCode(_c.iso2, partialDialCode);\n                }\n                // add the full area code\n                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n              }\n            }\n          }\n        }\n      }, {\n        key: \"_processPreferredCountries\",\n        value: function _processPreferredCountries() {\n          this.preferredCountries = [];\n          for (var i = 0; i < this.options.preferredCountries.length; i++) {\n            var countryCode = this.options.preferredCountries[i].toLowerCase();\n            var countryData = this._getCountryData(countryCode, false, true);\n            if (countryData) this.preferredCountries.push(countryData);\n          }\n        }\n      }, {\n        key: \"_createEl\",\n        value: function _createEl(name, attrs, container) {\n          var el = document.createElement(name);\n          if (attrs) forEachProp(attrs, function (key, value) {\n            return el.setAttribute(key, value);\n          });\n          if (container) container.appendChild(el);\n          return el;\n        }\n      }, {\n        key: \"_generateMarkup\",\n        value: function _generateMarkup() {\n          // if autocomplete does not exist on the element and its form, then\n          // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n          // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n          // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n          if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n            this.telInput.setAttribute(\"autocomplete\", \"off\");\n          }\n          // containers (mostly for positioning)\n          var parentClass = \"iti\";\n          if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n          if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n          if (this.options.customContainer) {\n            parentClass += \" \";\n            parentClass += this.options.customContainer;\n          }\n          var wrapper = this._createEl(\"div\", {\n            \"class\": parentClass\n          });\n          this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n          this.flagsContainer = this._createEl(\"div\", {\n            \"class\": \"iti__flag-container\"\n          }, wrapper);\n          wrapper.appendChild(this.telInput);\n          // selected flag (displayed to left of input)\n          this.selectedFlag = this._createEl(\"div\", {\n            \"class\": \"iti__selected-flag\",\n            role: \"combobox\",\n            \"aria-controls\": \"iti-\".concat(this.id, \"__country-listbox\"),\n            \"aria-owns\": \"iti-\".concat(this.id, \"__country-listbox\"),\n            \"aria-expanded\": \"false\"\n          }, this.flagsContainer);\n          this.selectedFlagInner = this._createEl(\"div\", {\n            \"class\": \"iti__flag\"\n          }, this.selectedFlag);\n          if (this.options.separateDialCode) {\n            this.selectedDialCode = this._createEl(\"div\", {\n              \"class\": \"iti__selected-dial-code\"\n            }, this.selectedFlag);\n          }\n          if (this.options.allowDropdown) {\n            // make element focusable and tab navigable\n            this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n            this.dropdownArrow = this._createEl(\"div\", {\n              \"class\": \"iti__arrow\"\n            }, this.selectedFlag);\n            // country dropdown: preferred countries, then divider, then all countries\n            this.countryList = this._createEl(\"ul\", {\n              \"class\": \"iti__country-list iti__hide\",\n              id: \"iti-\".concat(this.id, \"__country-listbox\"),\n              role: \"listbox\",\n              \"aria-label\": \"List of countries\"\n            });\n            if (this.preferredCountries.length) {\n              this._appendListItems(this.preferredCountries, \"iti__preferred\", true);\n              this._createEl(\"li\", {\n                \"class\": \"iti__divider\",\n                role: \"separator\",\n                \"aria-disabled\": \"true\"\n              }, this.countryList);\n            }\n            this._appendListItems(this.countries, \"iti__standard\");\n            // create dropdownContainer markup\n            if (this.options.dropdownContainer) {\n              this.dropdown = this._createEl(\"div\", {\n                \"class\": \"iti iti--container\"\n              });\n              this.dropdown.appendChild(this.countryList);\n            } else {\n              this.flagsContainer.appendChild(this.countryList);\n            }\n          }\n          if (this.options.hiddenInput) {\n            var hiddenInputName = this.options.hiddenInput;\n            var name = this.telInput.getAttribute(\"name\");\n            if (name) {\n              var i = name.lastIndexOf(\"[\");\n              // if input name contains square brackets, then give the hidden input the same name,\n              // replacing the contents of the last set of brackets with the given hiddenInput name\n              if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n            }\n            this.hiddenInput = this._createEl(\"input\", {\n              type: \"hidden\",\n              name: hiddenInputName\n            });\n            wrapper.appendChild(this.hiddenInput);\n          }\n        }\n      }, {\n        key: \"_appendListItems\",\n        value: function _appendListItems(countries, className, preferred) {\n          // we create so many DOM elements, it is faster to build a temp string\n          // and then add everything to the DOM in one go at the end\n          var tmp = \"\";\n          // for each country\n          for (var i = 0; i < countries.length; i++) {\n            var c = countries[i];\n            var idSuffix = preferred ? \"-preferred\" : \"\";\n            // open the list item\n            tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-\").concat(this.id, \"__item-\").concat(c.iso2).concat(idSuffix, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"' aria-selected='false'>\");\n            // add the flag\n            tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n            // and the country name and dial code\n            tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n            tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n            // close the list item\n            tmp += \"</li>\";\n          }\n          this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n        }\n      }, {\n        key: \"_setInitialState\",\n        value: function _setInitialState() {\n          // fix firefox bug: when first load page (with input with value set to number with intl dial\n          // code) and initialising plugin removes the dial code from the input, then refresh page,\n          // and we try to init plugin again but this time on number without dial code so get grey flag\n          var attributeValue = this.telInput.getAttribute(\"value\");\n          var inputValue = this.telInput.value;\n          var useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n          var val = useAttribute ? attributeValue : inputValue;\n          var dialCode = this._getDialCode(val);\n          var isRegionlessNanp = this._isRegionlessNanp(val);\n          var _this$options = this.options,\n            initialCountry = _this$options.initialCountry,\n            nationalMode = _this$options.nationalMode,\n            autoHideDialCode = _this$options.autoHideDialCode,\n            separateDialCode = _this$options.separateDialCode;\n          // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n          // flag, else fall back to the default country\n          if (dialCode && !isRegionlessNanp) {\n            this._updateFlagFromNumber(val);\n          } else if (initialCountry !== \"auto\") {\n            // see if we should select a flag\n            if (initialCountry) {\n              this._setFlag(initialCountry.toLowerCase());\n            } else {\n              if (dialCode && isRegionlessNanp) {\n                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                this._setFlag(\"us\");\n              } else {\n                // no dial code and no initialCountry, so default to first in list\n                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                if (!val) {\n                  this._setFlag(this.defaultCountry);\n                }\n              }\n            }\n            // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n            if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n              this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n            }\n          }\n          // NOTE: if initialCountry is set to auto, that will be handled separately\n          // format - note this wont be run after _updateDialCode as that's only called if no val\n          if (val) this._updateValFromNumber(val);\n        }\n      }, {\n        key: \"_initListeners\",\n        value: function _initListeners() {\n          this._initKeyListeners();\n          if (this.options.autoHideDialCode) this._initBlurListeners();\n          if (this.options.allowDropdown) this._initDropdownListeners();\n          if (this.hiddenInput) this._initHiddenInputListener();\n        }\n      }, {\n        key: \"_initHiddenInputListener\",\n        value: function _initHiddenInputListener() {\n          var _this3 = this;\n          this._handleHiddenInputSubmit = function () {\n            _this3.hiddenInput.value = _this3.getNumber();\n          };\n          if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n        }\n      }, {\n        key: \"_getClosestLabel\",\n        value: function _getClosestLabel() {\n          var el = this.telInput;\n          while (el && el.tagName !== \"LABEL\") {\n            el = el.parentNode;\n          }\n          return el;\n        }\n      }, {\n        key: \"_initDropdownListeners\",\n        value: function _initDropdownListeners() {\n          var _this4 = this;\n          // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n          // open the dropdown would then automatically trigger a 2nd click on the input which would\n          // close it again\n          this._handleLabelClick = function (e) {\n            // if the dropdown is closed, then focus the input, else ignore the click\n            if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus();else e.preventDefault();\n          };\n          var label = this._getClosestLabel();\n          if (label) label.addEventListener(\"click\", this._handleLabelClick);\n          // toggle country dropdown on click\n          this._handleClickSelectedFlag = function () {\n            // only intercept this event if we're opening the dropdown\n            // else let it bubble up to the top (\"click-off-to-close\" listener)\n            // we cannot just stopPropagation as it may be needed to close another instance\n            if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n              _this4._showDropdown();\n            }\n          };\n          this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n          // open dropdown list if currently focused\n          this._handleFlagsContainerKeydown = function (e) {\n            var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n            if (isDropdownHidden && [\"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\"].indexOf(e.key) !== -1) {\n              // prevent form from being submitted if \"ENTER\" was pressed\n              e.preventDefault();\n              // prevent event from being handled again by document\n              e.stopPropagation();\n              _this4._showDropdown();\n            }\n            // allow navigation from dropdown to input on TAB\n            if (e.key === \"Tab\") _this4._closeDropdown();\n          };\n          this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n        }\n      }, {\n        key: \"_initRequests\",\n        value: function _initRequests() {\n          var _this5 = this;\n          // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n          if (this.options.utilsScript && !window.intlTelInputUtils) {\n            // if the plugin is being initialised after the window.load event has already been fired\n            if (window.intlTelInputGlobals.documentReady()) {\n              window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n            } else {\n              // wait until the load event so we don't block any other requests e.g. the flags image\n              window.addEventListener(\"load\", function () {\n                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n              });\n            }\n          } else this.resolveUtilsScriptPromise();\n          if (this.options.initialCountry === \"auto\") this._loadAutoCountry();else this.resolveAutoCountryPromise();\n        }\n      }, {\n        key: \"_loadAutoCountry\",\n        value: function _loadAutoCountry() {\n          // 3 options:\n          // 1) already loaded (we're done)\n          // 2) not already started loading (start)\n          // 3) already started loading (do nothing - just wait for loading callback to fire)\n          if (window.intlTelInputGlobals.autoCountry) {\n            this.handleAutoCountry();\n          } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n            // don't do this twice!\n            window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n            if (typeof this.options.geoIpLookup === \"function\") {\n              this.options.geoIpLookup(function (countryCode) {\n                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                // tell all instances the auto country is ready\n                // TODO: this should just be the current instances\n                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                // setTimeout means that the current thread of execution will finish before executing\n                // this, which allows the plugin to finish initialising.\n                setTimeout(function () {\n                  return forEachInstance(\"handleAutoCountry\");\n                });\n              }, function () {\n                return forEachInstance(\"rejectAutoCountryPromise\");\n              });\n            }\n          }\n        }\n      }, {\n        key: \"_initKeyListeners\",\n        value: function _initKeyListeners() {\n          var _this6 = this;\n          // update flag on keyup\n          this._handleKeyupEvent = function () {\n            if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n              _this6._triggerCountryChange();\n            }\n          };\n          this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n          // update flag on cut/paste events (now supported in all major browsers)\n          this._handleClipboardEvent = function () {\n            // hack because \"paste\" event is fired before input is updated\n            setTimeout(_this6._handleKeyupEvent);\n          };\n          this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n          this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n        }\n      }, {\n        key: \"_cap\",\n        value: function _cap(number) {\n          var max = this.telInput.getAttribute(\"maxlength\");\n          return max && number.length > max ? number.substr(0, max) : number;\n        }\n      }, {\n        key: \"_initBlurListeners\",\n        value: function _initBlurListeners() {\n          var _this7 = this;\n          // on blur or form submit: if just a dial code then remove it\n          this._handleSubmitOrBlurEvent = function () {\n            _this7._removeEmptyDialCode();\n          };\n          if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n          this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n        }\n      }, {\n        key: \"_removeEmptyDialCode\",\n        value: function _removeEmptyDialCode() {\n          if (this.telInput.value.charAt(0) === \"+\") {\n            var numeric = this._getNumeric(this.telInput.value);\n            // if just a plus, or if just a dial code\n            if (!numeric || this.selectedCountryData.dialCode === numeric) {\n              this.telInput.value = \"\";\n            }\n          }\n        }\n      }, {\n        key: \"_getNumeric\",\n        value: function _getNumeric(s) {\n          return s.replace(/\\D/g, \"\");\n        }\n      }, {\n        key: \"_trigger\",\n        value: function _trigger(name) {\n          // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n          var e = document.createEvent(\"Event\");\n          e.initEvent(name, true, true);\n          // can bubble, and is cancellable\n          this.telInput.dispatchEvent(e);\n        }\n      }, {\n        key: \"_showDropdown\",\n        value: function _showDropdown() {\n          this.countryList.classList.remove(\"iti__hide\");\n          this.selectedFlag.setAttribute(\"aria-expanded\", \"true\");\n          this._setDropdownPosition();\n          // update highlighting and scroll to active list item\n          if (this.activeItem) {\n            this._highlightListItem(this.activeItem, false);\n            this._scrollTo(this.activeItem, true);\n          }\n          // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n          this._bindDropdownListeners();\n          // update the arrow\n          this.dropdownArrow.classList.add(\"iti__arrow--up\");\n          this._trigger(\"open:countrydropdown\");\n        }\n      }, {\n        key: \"_toggleClass\",\n        value: function _toggleClass(el, className, shouldHaveClass) {\n          if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className);else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n        }\n      }, {\n        key: \"_setDropdownPosition\",\n        value: function _setDropdownPosition() {\n          var _this8 = this;\n          if (this.options.dropdownContainer) {\n            this.options.dropdownContainer.appendChild(this.dropdown);\n          }\n          if (!this.isMobile) {\n            var pos = this.telInput.getBoundingClientRect();\n            // windowTop from https://stackoverflow.com/a/14384091/217866\n            var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n            var inputTop = pos.top + windowTop;\n            var dropdownHeight = this.countryList.offsetHeight;\n            // dropdownFitsBelow = (dropdownBottom < windowBottom)\n            var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n            var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n            // by default, the dropdown will be below the input. If we want to position it above the\n            // input, we add the dropup class.\n            this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n            // if dropdownContainer is enabled, calculate postion\n            if (this.options.dropdownContainer) {\n              // by default the dropdown will be directly over the input because it's not in the flow.\n              // If we want to position it below, we need to add some extra top value.\n              var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n              // calculate placement\n              this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n              this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n              // close menu on window scroll\n              this._handleWindowScroll = function () {\n                return _this8._closeDropdown();\n              };\n              window.addEventListener(\"scroll\", this._handleWindowScroll);\n            }\n          }\n        }\n      }, {\n        key: \"_getClosestListItem\",\n        value: function _getClosestListItem(target) {\n          var el = target;\n          while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n            el = el.parentNode;\n          }\n          // if we reached the countryList element, then return null\n          return el === this.countryList ? null : el;\n        }\n      }, {\n        key: \"_bindDropdownListeners\",\n        value: function _bindDropdownListeners() {\n          var _this9 = this;\n          // when mouse over a list item, just highlight that one\n          // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n          this._handleMouseoverCountryList = function (e) {\n            // handle event delegation, as we're listening for this event on the countryList\n            var listItem = _this9._getClosestListItem(e.target);\n            if (listItem) _this9._highlightListItem(listItem, false);\n          };\n          this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n          // listen for country selection\n          this._handleClickCountryList = function (e) {\n            var listItem = _this9._getClosestListItem(e.target);\n            if (listItem) _this9._selectListItem(listItem);\n          };\n          this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n          // click off to close\n          // (except when this initial opening click is bubbling up)\n          // we cannot just stopPropagation as it may be needed to close another instance\n          var isOpening = true;\n          this._handleClickOffToClose = function () {\n            if (!isOpening) _this9._closeDropdown();\n            isOpening = false;\n          };\n          document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n          // listen for up/down scrolling, enter to select, or letters to jump to country name.\n          // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n          // just hit down and hold it to scroll down (no keyup event).\n          // listen on the document because that's where key events are triggered if no input has focus\n          var query = \"\";\n          var queryTimer = null;\n          this._handleKeydownOnDropdown = function (e) {\n            // prevent down key from scrolling the whole page,\n            // and enter key from submitting a form etc\n            e.preventDefault();\n            // up and down to navigate\n            if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key);else if (e.key === \"Enter\") _this9._handleEnterKey();else if (e.key === \"Escape\") _this9._closeDropdown();else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n              // jump to countries that start with the query string\n              if (queryTimer) clearTimeout(queryTimer);\n              query += e.key.toLowerCase();\n              _this9._searchForCountry(query);\n              // if the timer hits 1 second, reset the query\n              queryTimer = setTimeout(function () {\n                query = \"\";\n              }, 1e3);\n            }\n          };\n          document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n        }\n      }, {\n        key: \"_handleUpDownKey\",\n        value: function _handleUpDownKey(key) {\n          var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n          if (next) {\n            // skip the divider\n            if (next.classList.contains(\"iti__divider\")) {\n              next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n            }\n            this._highlightListItem(next, true);\n          }\n        }\n      }, {\n        key: \"_handleEnterKey\",\n        value: function _handleEnterKey() {\n          if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n        }\n      }, {\n        key: \"_searchForCountry\",\n        value: function _searchForCountry(query) {\n          for (var i = 0; i < this.countries.length; i++) {\n            if (this._startsWith(this.countries[i].name, query)) {\n              var listItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(this.countries[i].iso2));\n              // update highlighting and scroll\n              this._highlightListItem(listItem, false);\n              this._scrollTo(listItem, true);\n              break;\n            }\n          }\n        }\n      }, {\n        key: \"_startsWith\",\n        value: function _startsWith(a, b) {\n          return a.substr(0, b.length).toLowerCase() === b;\n        }\n      }, {\n        key: \"_updateValFromNumber\",\n        value: function _updateValFromNumber(originalNumber) {\n          var number = originalNumber;\n          if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n            var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n            var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat,\n              NATIONAL = _intlTelInputUtils$nu.NATIONAL,\n              INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n            var format = useNational ? NATIONAL : INTERNATIONAL;\n            number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n          }\n          number = this._beforeSetNumber(number);\n          this.telInput.value = number;\n        }\n      }, {\n        key: \"_updateFlagFromNumber\",\n        value: function _updateFlagFromNumber(originalNumber) {\n          // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n          // with a +1 so _getDialCode will be able to extract the area code\n          // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n          // from the number), that means we're initialising the plugin with a number that already has a\n          // dial code, so fine to ignore this bit\n          var number = originalNumber;\n          var selectedDialCode = this.selectedCountryData.dialCode;\n          var isNanp = selectedDialCode === \"1\";\n          if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n            if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n            number = \"+\".concat(number);\n          }\n          // update flag if user types area code for another country\n          if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n            number = \"+\".concat(selectedDialCode).concat(number);\n          }\n          // try and extract valid dial code from input\n          var dialCode = this._getDialCode(number, true);\n          var numeric = this._getNumeric(number);\n          var countryCode = null;\n          if (dialCode) {\n            var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n            // check if the right country is already selected. this should be false if the number is\n            // longer than the matched dial code because in this case we need to make sure that if\n            // there are multiple country matches, that the first one is selected (note: we could\n            // just check that here, but it requires the same loop that we already have later)\n            var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n            var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n            // only update the flag if:\n            // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n            // AND\n            // B) the right country is not already selected\n            if (!isRegionlessNanpNumber && !alreadySelected) {\n              // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n              // non-empty index\n              for (var j = 0; j < countryCodes.length; j++) {\n                if (countryCodes[j]) {\n                  countryCode = countryCodes[j];\n                  break;\n                }\n              }\n            }\n          } else if (number.charAt(0) === \"+\" && numeric.length) {\n            // invalid dial code, so empty\n            // Note: use getNumeric here because the number has not been formatted yet, so could contain\n            // bad chars\n            countryCode = \"\";\n          } else if (!number || number === \"+\") {\n            // empty, or just a plus, so default\n            countryCode = this.defaultCountry;\n          }\n          if (countryCode !== null) {\n            return this._setFlag(countryCode);\n          }\n          return false;\n        }\n      }, {\n        key: \"_isRegionlessNanp\",\n        value: function _isRegionlessNanp(number) {\n          var numeric = this._getNumeric(number);\n          if (numeric.charAt(0) === \"1\") {\n            var areaCode = numeric.substr(1, 3);\n            return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n          }\n          return false;\n        }\n      }, {\n        key: \"_highlightListItem\",\n        value: function _highlightListItem(listItem, shouldFocus) {\n          var prevItem = this.highlightedItem;\n          if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n          this.highlightedItem = listItem;\n          this.highlightedItem.classList.add(\"iti__highlight\");\n          if (shouldFocus) this.highlightedItem.focus();\n        }\n      }, {\n        key: \"_getCountryData\",\n        value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n          var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n          for (var i = 0; i < countryList.length; i++) {\n            if (countryList[i].iso2 === countryCode) {\n              return countryList[i];\n            }\n          }\n          if (allowFail) {\n            return null;\n          }\n          throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n        }\n      }, {\n        key: \"_setFlag\",\n        value: function _setFlag(countryCode) {\n          var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n          // do this first as it will throw an error and stop if countryCode is invalid\n          this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n          // update the defaultCountry - we only need the iso2 from now on, so just store that\n          if (this.selectedCountryData.iso2) {\n            this.defaultCountry = this.selectedCountryData.iso2;\n          }\n          this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n          // update the selected country's title attribute\n          var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n          this.selectedFlag.setAttribute(\"title\", title);\n          if (this.options.separateDialCode) {\n            var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n            this.selectedDialCode.innerHTML = dialCode;\n            // offsetWidth is zero if input is in a hidden container during initialisation\n            var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n            // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n            this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n          }\n          // and the input's placeholder\n          this._updatePlaceholder();\n          // update the active list item\n          if (this.options.allowDropdown) {\n            var prevItem = this.activeItem;\n            if (prevItem) {\n              prevItem.classList.remove(\"iti__active\");\n              prevItem.setAttribute(\"aria-selected\", \"false\");\n            }\n            if (countryCode) {\n              // check if there is a preferred item first, else fall back to standard\n              var nextItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode, \"-preferred\")) || this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode));\n              nextItem.setAttribute(\"aria-selected\", \"true\");\n              nextItem.classList.add(\"iti__active\");\n              this.activeItem = nextItem;\n              this.selectedFlag.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n            }\n          }\n          // return if the flag has changed or not\n          return prevCountry.iso2 !== countryCode;\n        }\n      }, {\n        key: \"_getHiddenSelectedFlagWidth\",\n        value: function _getHiddenSelectedFlagWidth() {\n          // to get the right styling to apply, all we need is a shallow clone of the container,\n          // and then to inject a deep clone of the selectedFlag element\n          var containerClone = this.telInput.parentNode.cloneNode();\n          containerClone.style.visibility = \"hidden\";\n          document.body.appendChild(containerClone);\n          var flagsContainerClone = this.flagsContainer.cloneNode();\n          containerClone.appendChild(flagsContainerClone);\n          var selectedFlagClone = this.selectedFlag.cloneNode(true);\n          flagsContainerClone.appendChild(selectedFlagClone);\n          var width = selectedFlagClone.offsetWidth;\n          containerClone.parentNode.removeChild(containerClone);\n          return width;\n        }\n      }, {\n        key: \"_updatePlaceholder\",\n        value: function _updatePlaceholder() {\n          var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n          if (window.intlTelInputUtils && shouldSetPlaceholder) {\n            var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n            var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n            placeholder = this._beforeSetNumber(placeholder);\n            if (typeof this.options.customPlaceholder === \"function\") {\n              placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n            }\n            this.telInput.setAttribute(\"placeholder\", placeholder);\n          }\n        }\n      }, {\n        key: \"_selectListItem\",\n        value: function _selectListItem(listItem) {\n          // update selected flag and active list item\n          var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n          this._closeDropdown();\n          this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n          // focus the input\n          this.telInput.focus();\n          // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n          // inserting dial code), who try to put the cursor at the beginning the first time\n          var len = this.telInput.value.length;\n          this.telInput.setSelectionRange(len, len);\n          if (flagChanged) {\n            this._triggerCountryChange();\n          }\n        }\n      }, {\n        key: \"_closeDropdown\",\n        value: function _closeDropdown() {\n          this.countryList.classList.add(\"iti__hide\");\n          this.selectedFlag.setAttribute(\"aria-expanded\", \"false\");\n          // update the arrow\n          this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n          // unbind key events\n          document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n          document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n          this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n          this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n          // remove menu from container\n          if (this.options.dropdownContainer) {\n            if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n            if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n          }\n          this._trigger(\"close:countrydropdown\");\n        }\n      }, {\n        key: \"_scrollTo\",\n        value: function _scrollTo(element, middle) {\n          var container = this.countryList;\n          // windowTop from https://stackoverflow.com/a/14384091/217866\n          var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n          var containerHeight = container.offsetHeight;\n          var containerTop = container.getBoundingClientRect().top + windowTop;\n          var containerBottom = containerTop + containerHeight;\n          var elementHeight = element.offsetHeight;\n          var elementTop = element.getBoundingClientRect().top + windowTop;\n          var elementBottom = elementTop + elementHeight;\n          var newScrollTop = elementTop - containerTop + container.scrollTop;\n          var middleOffset = containerHeight / 2 - elementHeight / 2;\n          if (elementTop < containerTop) {\n            // scroll up\n            if (middle) newScrollTop -= middleOffset;\n            container.scrollTop = newScrollTop;\n          } else if (elementBottom > containerBottom) {\n            // scroll down\n            if (middle) newScrollTop += middleOffset;\n            var heightDifference = containerHeight - elementHeight;\n            container.scrollTop = newScrollTop - heightDifference;\n          }\n        }\n      }, {\n        key: \"_updateDialCode\",\n        value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n          var inputVal = this.telInput.value;\n          // save having to pass this every time\n          var newDialCode = \"+\".concat(newDialCodeBare);\n          var newNumber;\n          if (inputVal.charAt(0) === \"+\") {\n            // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n            var prevDialCode = this._getDialCode(inputVal);\n            if (prevDialCode) {\n              // current number contains a valid dial code, so replace it\n              newNumber = inputVal.replace(prevDialCode, newDialCode);\n            } else {\n              // current number contains an invalid dial code, so ditch it\n              // (no way to determine where the invalid dial code ends and the rest of the number begins)\n              newNumber = newDialCode;\n            }\n          } else if (this.options.nationalMode || this.options.separateDialCode) {\n            // don't do anything\n            return;\n          } else {\n            // nationalMode is disabled\n            if (inputVal) {\n              // there is an existing value with no dial code: prefix the new dial code\n              newNumber = newDialCode + inputVal;\n            } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n              // no existing value and either they've just selected a list item, or autoHideDialCode is\n              // disabled: insert new dial code\n              newNumber = newDialCode;\n            } else {\n              return;\n            }\n          }\n          this.telInput.value = newNumber;\n        }\n      }, {\n        key: \"_getDialCode\",\n        value: function _getDialCode(number, includeAreaCode) {\n          var dialCode = \"\";\n          // only interested in international numbers (starting with a plus)\n          if (number.charAt(0) === \"+\") {\n            var numericChars = \"\";\n            // iterate over chars\n            for (var i = 0; i < number.length; i++) {\n              var c = number.charAt(i);\n              // if char is number (https://stackoverflow.com/a/8935649/217866)\n              if (!isNaN(parseInt(c, 10))) {\n                numericChars += c;\n                // if current numericChars make a valid dial code\n                if (includeAreaCode) {\n                  if (this.countryCodes[numericChars]) {\n                    // store the actual raw string (useful for matching later)\n                    dialCode = number.substr(0, i + 1);\n                  }\n                } else {\n                  if (this.dialCodes[numericChars]) {\n                    dialCode = number.substr(0, i + 1);\n                    // if we're just looking for a dial code, we can break as soon as we find one\n                    break;\n                  }\n                }\n                // stop searching as soon as we can - in this case when we hit max len\n                if (numericChars.length === this.countryCodeMaxLen) {\n                  break;\n                }\n              }\n            }\n          }\n          return dialCode;\n        }\n      }, {\n        key: \"_getFullNumber\",\n        value: function _getFullNumber() {\n          var val = this.telInput.value.trim();\n          var dialCode = this.selectedCountryData.dialCode;\n          var prefix;\n          var numericVal = this._getNumeric(val);\n          if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n            // when using separateDialCode, it is visible so is effectively part of the typed number\n            prefix = \"+\".concat(dialCode);\n          } else {\n            prefix = \"\";\n          }\n          return prefix + val;\n        }\n      }, {\n        key: \"_beforeSetNumber\",\n        value: function _beforeSetNumber(originalNumber) {\n          var number = originalNumber;\n          if (this.options.separateDialCode) {\n            var dialCode = this._getDialCode(number);\n            // if there is a valid dial code\n            if (dialCode) {\n              // in case _getDialCode returned an area code as well\n              dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n              // a lot of numbers will have a space separating the dial code and the main number, and\n              // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n              // rid of it\n              // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n              var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n              number = number.substr(start);\n            }\n          }\n          return this._cap(number);\n        }\n      }, {\n        key: \"_triggerCountryChange\",\n        value: function _triggerCountryChange() {\n          this._trigger(\"countrychange\");\n        }\n      }, {\n        key: \"handleAutoCountry\",\n        value: function handleAutoCountry() {\n          if (this.options.initialCountry === \"auto\") {\n            // we must set this even if there is an initial val in the input: in case the initial val is\n            // invalid and they delete it - they should see their auto country\n            this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n            // if there's no initial value in the input, then update the flag\n            if (!this.telInput.value) {\n              this.setCountry(this.defaultCountry);\n            }\n            this.resolveAutoCountryPromise();\n          }\n        }\n      }, {\n        key: \"handleUtils\",\n        value: function handleUtils() {\n          // if the request was successful\n          if (window.intlTelInputUtils) {\n            // if there's an initial value in the input, then format it\n            if (this.telInput.value) {\n              this._updateValFromNumber(this.telInput.value);\n            }\n            this._updatePlaceholder();\n          }\n          this.resolveUtilsScriptPromise();\n        }\n      }, {\n        key: \"destroy\",\n        value: function destroy() {\n          var form = this.telInput.form;\n          if (this.options.allowDropdown) {\n            // make sure the dropdown is closed (and unbind listeners)\n            this._closeDropdown();\n            this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n            this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n            // label click hack\n            var label = this._getClosestLabel();\n            if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n          }\n          // unbind hiddenInput listeners\n          if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n          // unbind autoHideDialCode listeners\n          if (this.options.autoHideDialCode) {\n            if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n            this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n          }\n          // unbind key events, and cut/paste events\n          this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n          this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n          this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n          // remove attribute of id instance: data-intl-tel-input-id\n          this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n          // remove markup (but leave the original input)\n          var wrapper = this.telInput.parentNode;\n          wrapper.parentNode.insertBefore(this.telInput, wrapper);\n          wrapper.parentNode.removeChild(wrapper);\n          delete window.intlTelInputGlobals.instances[this.id];\n        }\n      }, {\n        key: \"getExtension\",\n        value: function getExtension() {\n          if (window.intlTelInputUtils) {\n            return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n          }\n          return \"\";\n        }\n      }, {\n        key: \"getNumber\",\n        value: function getNumber(format) {\n          if (window.intlTelInputUtils) {\n            var iso2 = this.selectedCountryData.iso2;\n            return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n          }\n          return \"\";\n        }\n      }, {\n        key: \"getNumberType\",\n        value: function getNumberType() {\n          if (window.intlTelInputUtils) {\n            return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n          }\n          return -99;\n        }\n      }, {\n        key: \"getSelectedCountryData\",\n        value: function getSelectedCountryData() {\n          return this.selectedCountryData;\n        }\n      }, {\n        key: \"getValidationError\",\n        value: function getValidationError() {\n          if (window.intlTelInputUtils) {\n            var iso2 = this.selectedCountryData.iso2;\n            return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n          }\n          return -99;\n        }\n      }, {\n        key: \"isValidNumber\",\n        value: function isValidNumber() {\n          var val = this._getFullNumber().trim();\n          var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n          return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n        }\n      }, {\n        key: \"setCountry\",\n        value: function setCountry(originalCountryCode) {\n          var countryCode = originalCountryCode.toLowerCase();\n          // check if already selected\n          if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n            this._setFlag(countryCode);\n            this._updateDialCode(this.selectedCountryData.dialCode, false);\n            this._triggerCountryChange();\n          }\n        }\n      }, {\n        key: \"setNumber\",\n        value: function setNumber(number) {\n          // we must update the flag first, which updates this.selectedCountryData, which is used for\n          // formatting the number before displaying it\n          var flagChanged = this._updateFlagFromNumber(number);\n          this._updateValFromNumber(number);\n          if (flagChanged) {\n            this._triggerCountryChange();\n          }\n        }\n      }, {\n        key: \"setPlaceholderNumberType\",\n        value: function setPlaceholderNumberType(type) {\n          this.options.placeholderNumberType = type;\n          this._updatePlaceholder();\n        }\n      }]);\n      return Iti;\n    }();\n    /********************\n    *  STATIC METHODS\n    ********************/\n    // get the country data object\n    intlTelInputGlobals.getCountryData = function () {\n      return allCountries;\n    };\n    // inject a <script> element to load utils.js\n    var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n      // inject a new script element into the page\n      var script = document.createElement(\"script\");\n      script.onload = function () {\n        forEachInstance(\"handleUtils\");\n        if (handleSuccess) handleSuccess();\n      };\n      script.onerror = function () {\n        forEachInstance(\"rejectUtilsScriptPromise\");\n        if (handleFailure) handleFailure();\n      };\n      script.className = \"iti-load-utils\";\n      script.async = true;\n      script.src = path;\n      document.body.appendChild(script);\n    };\n    // load the utils script\n    intlTelInputGlobals.loadUtils = function (path) {\n      // 2 options:\n      // 1) not already started loading (start)\n      // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n      // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n      if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n        // only do this once\n        window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n        // if we have promises, then return a promise\n        if (typeof Promise !== \"undefined\") {\n          return new Promise(function (resolve, reject) {\n            return injectScript(path, resolve, reject);\n          });\n        }\n        injectScript(path);\n      }\n      return null;\n    };\n    // default options\n    intlTelInputGlobals.defaults = defaults;\n    // version\n    intlTelInputGlobals.version = \"17.0.21\";\n    // convenience wrapper\n    return function (input, options) {\n      var iti = new Iti(input, options);\n      iti._init();\n      input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n      window.intlTelInputGlobals.instances[iti.id] = iti;\n      return iti;\n    };\n  }();\n});","/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");","(function (a, b) {\n  if (\"function\" == typeof define && define.amd) define([], b);else if (\"undefined\" != typeof exports) b();else {\n    b(), a.FileSaver = {\n      exports: {}\n    }.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  function b(a, b) {\n    return \"undefined\" == typeof b ? b = {\n      autoBom: !1\n    } : \"object\" != typeof b && (console.warn(\"Deprecated: Expected third argument to be a object\"), b = {\n      autoBom: !b\n    }), b.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type) ? new Blob([\"\\uFEFF\", a], {\n      type: a.type\n    }) : a;\n  }\n  function c(a, b, c) {\n    var d = new XMLHttpRequest();\n    d.open(\"GET\", a), d.responseType = \"blob\", d.onload = function () {\n      g(d.response, b, c);\n    }, d.onerror = function () {\n      console.error(\"could not download file\");\n    }, d.send();\n  }\n  function d(a) {\n    var b = new XMLHttpRequest();\n    b.open(\"HEAD\", a, !1);\n    try {\n      b.send();\n    } catch (a) {}\n    return 200 <= b.status && 299 >= b.status;\n  }\n  function e(a) {\n    try {\n      a.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (c) {\n      var b = document.createEvent(\"MouseEvents\");\n      b.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);\n    }\n  }\n  var f = \"object\" == typeof window && window.window === window ? window : \"object\" == typeof self && self.self === self ? self : \"object\" == typeof global && global.global === global ? global : void 0,\n    a = f.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),\n    g = f.saveAs || (\"object\" != typeof window || window !== f ? function () {} : \"download\" in HTMLAnchorElement.prototype && !a ? function (b, g, h) {\n      var i = f.URL || f.webkitURL,\n        j = document.createElement(\"a\");\n      g = g || b.name || \"download\", j.download = g, j.rel = \"noopener\", \"string\" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = \"_blank\")) : (j.href = i.createObjectURL(b), setTimeout(function () {\n        i.revokeObjectURL(j.href);\n      }, 4E4), setTimeout(function () {\n        e(j);\n      }, 0));\n    } : \"msSaveOrOpenBlob\" in navigator ? function (f, g, h) {\n      if (g = g || f.name || \"download\", \"string\" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {\n        var i = document.createElement(\"a\");\n        i.href = f, i.target = \"_blank\", setTimeout(function () {\n          e(i);\n        });\n      }\n    } : function (b, d, e, g) {\n      if (g = g || open(\"\", \"_blank\"), g && (g.document.title = g.document.body.innerText = \"downloading...\"), \"string\" == typeof b) return c(b, d, e);\n      var h = \"application/octet-stream\" === b.type,\n        i = /constructor/i.test(f.HTMLElement) || f.safari,\n        j = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n      if ((j || h && i || a) && \"undefined\" != typeof FileReader) {\n        var k = new FileReader();\n        k.onloadend = function () {\n          var a = k.result;\n          a = j ? a : a.replace(/^data:[^;]*;/, \"data:attachment/file;\"), g ? g.location.href = a : location = a, g = null;\n        }, k.readAsDataURL(b);\n      } else {\n        var l = f.URL || f.webkitURL,\n          m = l.createObjectURL(b);\n        g ? g.location = m : location.href = m, g = null, setTimeout(function () {\n          l.revokeObjectURL(m);\n        }, 4E4);\n      }\n    });\n  f.saveAs = g.saveAs = g, \"undefined\" != typeof module && (module.exports = g);\n});\n\n","import { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService, HeaderService, LabelService, PatientService, CommonService, SidefilterService, EncrDecrService, RefLabService } from '../../../services';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { SideFilter } from '../../../models/side-filter';\r\nimport moment from 'moment';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\n@Component({\r\n  selector: 'app-patient-info-edit',\r\n  templateUrl: './patient-info-edit.component.html',\r\n  styleUrls: ['./patient-info-edit.component.css']\r\n})\r\nexport class PatientInfoEditComponent implements OnInit, OnDestroy {\r\n\r\n  public isBackOfficeUser: boolean;\r\n  public isConsultantUser: boolean;\r\n  public pataientId: any;\r\n  public dsSpecies = [];\r\n  public dsGenders = [];\r\n  public dsBreeds = [];\r\n  editForm: UntypedFormGroup;\r\n  patient = null\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  today = new Date();\r\n  businessGuid: any;\r\n  filter: SideFilter;\r\n\r\n  constructor(public commonService: CommonService,\r\n    public patientService: PatientService,\r\n    public router: Router,\r\n    public labelService: LabelService,\r\n    public headerService: HeaderService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    private EncrDecr: EncrDecrService,\r\n    private fb: UntypedFormBuilder,\r\n    public refLabService: RefLabService,\r\n    private dateAdapter: DateAdapter<Date>) {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsEditPatientScreen.EditPatientInformation}`);\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindEditPatientLabel();\r\n      this.labelService.bindUserProfileLabel();\r\n    }\r\n    this.filter = new SideFilter();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n    console.log(this.filter,'abc')\r\n    this.filter.PageSize = 60;\r\n    this.filter.IsApplyFilter = true;\r\n    this.filter.PatientId = this.patientService.patientDetails?.PatientId;\r\n    this.filter.BusinessGuid = localStorage.businessGuid;\r\n    this.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.filter.IsExactFilter = true;\r\n    this.filter.LanguageId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    this.businessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.commonService.getDashboardPatientList(this.filter).subscribe(data => {\r\n      if (data.ResponseData && data.ResponseData.PatientList\r\n        && data.ResponseData.PatientList.length) {\r\n        this.patient = data.ResponseData.PatientList.length > 1 ? data.ResponseData.PatientList.find(x => x.ZDXPatientId == this.patientService.patientDetails.ZDXPatientId) : data.ResponseData.PatientList[0];\r\n        const filterDropDowns: any = this.dataService.appData.filterDropDownList;\r\n        this.dsSpecies = filterDropDowns.SpeciesList;\r\n\r\n        this.dsGenders = filterDropDowns.GenderList\r\n        if (this.patient && this.patient.SpeciesName) {\r\n          this.getBreedList(this.patient.SpeciesName);\r\n        }\r\n        this.createForm();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  createForm() {\r\n    console.log(this.patient)\r\n    if (this.patient && this.patient.BirthDate) {\r\n      this.patient.Dob = moment(this.patient.BirthDate).format('YYYY-MM-DD')\r\n    }\r\n    this.editForm = this.fb.group({\r\n      patientFirstName: [this.patient ? this.patient.FirstName : null, Validators.compose([Validators.required, Validators.pattern(/^(?:.*)?$/)])],\r\n      patientLastName: [(this.patient && this.patient.LastName != 'Not Provided') ? this.patient.LastName : null, Validators.pattern(/^(?:.*)?$/)],\r\n      ownerFirstName: [this.patient ? this.patient.OwnerFirstName : null, Validators.compose([Validators.required, Validators.pattern(/^(?:.*)?$/)])],\r\n      ownerLastName: [this.patient ? this.patient.OwnerLastName : null, Validators.pattern(/^(?:.*)?$/)],\r\n      species: [this.patient ? this.patient.SpeciesName : null, Validators.compose([Validators.required])],\r\n      breed: [this.patient ? this.patient.BreedName : ''],\r\n      dob: [this.patient ? this.patient.Dob : null, Validators.required],\r\n      gender: [this.patient ? this.patient.GenderName : null, Validators.required],\r\n    });\r\n  }\r\n\r\n  checkPatientName(patient) {\r\n    if (!patient.PatientName) {\r\n      return patient.OwnerName\r\n    } else {\r\n      return patient.LastName\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle('ZoetisDx');\r\n  }\r\n\r\n  checkWithLastName(ev) {\r\n    if (!this.editForm.controls['patientLastName'].value && ev.target.value) {\r\n      this.editForm.controls['patientLastName'].setValue(ev.target.value)\r\n    }\r\n  }\r\n\r\n  public getBreedList(speciesName, fromView = false) {\r\n    this.dsBreeds = []\r\n    const langId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.refLabService.getBreedListBySpeciesId(speciesName, langId).subscribe(res => {\r\n      this.dsBreeds = res.ResponseData;\r\n      if (fromView && !this.dsBreeds.length) this.editForm.controls['breed'].setValue('');\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    })\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindEditPatientLabel();\r\n      this.labelService.bindUserProfileLabel();\r\n    });\r\n  }\r\n\r\n  updatePatient() {\r\n    this.editForm.patchValue({\r\n      patientFirstName: this.editForm.controls['patientFirstName'].value?.trim(),\r\n      patientLastName: this.editForm.controls['patientLastName'].value?.trim(),\r\n      ownerFirstName:this.editForm.controls['ownerFirstName'].value?.trim(),\r\n      ownerLastName:this.editForm.controls['ownerLastName'].value?.trim(),\r\n      breed:this.editForm.controls['breed'].value?.trim()\r\n    })\r\n\r\n    if (this.editForm.valid) {\r\n      this.editForm.value.dob = moment(this.editForm.value.dob).format('YYYY-MM-DD');\r\n      this.patientService.patientUpdate(Object.assign(this.editForm.value, { patientId: this.patient.ZDXPatientId, BusinessGuid: this.businessGuid, UserGuid: this.dataService.appData.authDetails['UserGuid'] })).subscribe({\r\n      next:() => {\r\n          this.showMsg(this.labelService.dsEditPatientScreen.InformationForPatient + ' ' + this.patient.PatientId + ' ' + this.labelService.dsEditPatientScreen.IsSuccessfullyUpdated + \".\")\r\n        },\r\n        error:() => {\r\n          this.showMsg(this.labelService.dsEditPatientScreen.InformationForPatient + ' ' + this.patient.PatientId + ' ' + this.labelService.dsEditPatientScreen.IsSuccessfullyUpdated + \".\")\r\n        }\r\n    })\r\n    }\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    if (msg == undefined || msg == null || msg == \"\")\r\n      msg = this.labelService.dsPatientInfoScreen.CanceledTest;\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsPatientInfoScreen.Ok, '', \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.commonService.goBack()\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n  <div id=\"content\" class=\"page-wrapper editpart\">\r\n    <div>\r\n      <div>\r\n        <app-header></app-header>\r\n      </div>\r\n    </div>\r\n    <section class=\"title-container\">\r\n      <a href=\"javascript:void(0)\" (click)=\"commonService.goBack()\"\r\n        class=\"back-btn\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n      <span class=\"page-title font-weight-bold\" data-testid=\"pie-title\">{{ labelService.dsEditPatientScreen.EditPatientInformation }}</span>\r\n      <p class=\"headtext\">{{ labelService.dsEditPatientScreen.YouAreEditingInformationForPatientID }}: {{\r\n        patientService.patientDetails?.PatientId }}</p>\r\n    </section>\r\n    <!-- Page Title end -->\r\n\r\n    <div class=\"portal-outer view-user result_block view-edit\" id=\"portal-outer1\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1\">\r\n          <mat-card class=\"pt-0\">\r\n            <div class=\"edit-patient\">\r\n\r\n              <p class=\"head-text\">{{ labelService.dsEditPatientScreen.YouAreEditingInformationForPatientID }}: {{\r\n                patientService.patientDetails?.PatientId }}</p>\r\n\r\n              <h5 class=\"htext\"><strong>{{ labelService.dsEditPatientScreen.Patient }}</strong></h5>\r\n\r\n              <form [formGroup]=\"editForm\" novalidate (submit)=\"updatePatient()\">\r\n                <div class=\"row edit-content\">\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <label for=\"\"> {{ labelService.dsEditPatientScreen.PatientFirstName }}<sup>*</sup> : </label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <input type=\"text\" matInput [placeholder]=\"\" maxlength=\"50\" formControlName=\"patientFirstName\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.PatientLastName }} : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <input type=\"text\" matInput [placeholder]=\"\" maxlength=\"50\" formControlName=\"patientLastName\" />\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.OwnerFirstName }}<sup>*</sup> : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <input type=\"text\" matInput [placeholder]=\"\" maxlength=\"50\" formControlName=\"ownerFirstName\" />\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.OwnerLastName }} : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <input type=\"text\" matInput [placeholder]=\"\" maxlength=\"50\" formControlName=\"ownerLastName\" />\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.Species }}<sup>*</sup> : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <mat-select (selectionChange)=\"getBreedList($event.value, true)\" formControlName=\"species\">\r\n                        <mat-option *ngFor=\"let species of dsSpecies\" [value]=\"species.Code\">\r\n                          {{species.Code}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.Breed }} : </mat-label>\r\n\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\" *ngIf=\"dsBreeds.length\">\r\n                      <mat-select formControlName=\"breed\">\r\n                        <mat-option *ngFor=\"let species of dsBreeds\" [value]=\"species.Name\">\r\n                          {{species.Name}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\" *ngIf=\"!dsBreeds.length\">\r\n                      <input type=\"text\" matInput [placeholder]=\"\" maxlength=\"100\" formControlName=\"breed\" />\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.BirthDate }}<sup>*</sup> : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <input [max]=\"today\" matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                      <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-md-4 accpart\">\r\n\r\n                    <mat-label for=\"\"> {{ labelService.dsEditPatientScreen.Sex }}<sup>*</sup> : </mat-label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"full-50\">\r\n                      <mat-select formControlName=\"gender\">\r\n                        <mat-option *ngFor=\"let gender of dsGenders\" [value]=\"gender.GenderName\">\r\n                          {{gender.GenderName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12 row d-flex mt-4 justify-content-center mt-4\">\r\n\r\n                  <button type=\"button\" mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\"\r\n                    (click)=\"commonService.goBack()\">{{labelService.dsUserProfileScreen.Cancel}}</button>\r\n                  <button type=\"submit\" mat-raised-button\r\n                    color=\"warn\">{{labelService.dsUserProfileScreen.Save}}</button>\r\n\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormGroup, Validators, UntypedFormBuilder, FormGroupDirective, AbstractControlOptions } from '@angular/forms';\r\nimport { ResetSignal } from '../../models/user';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/user.service';\r\nimport { LabelService } from '../../services';\r\nimport { EnmLanguage } from '../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n\r\n  public userResetForm: UntypedFormGroup;\r\n  public isMsgRed = true;\r\n  public msg = \"\";\r\n  public isSubmitVisible = false;\r\n  public resetSignal: ResetSignal;\r\n  public lang = EnmLanguage.English;\r\n  public redirctUrl = null; // \"/internal\";\r\n  public baseUrl = 'zoetisdx.com';\r\n  public subDomain = 'staginginternal';\r\n  @ViewChild('formGroupDirective', { static: true }) private formGroupDirective: FormGroupDirective;\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, public labelService: LabelService, public userService: UserService, public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    if (this.router.url.indexOf(\"?rst=\") != -1) {\r\n      const params = this.router.url.trim().split('?rst=')[1].split(\"&loc=\");\r\n      if (params[1] != undefined && params[1] != null && params[1] != \"\") {\r\n        this.lang = parseInt(params[1].split(\"&rtyp=\")[0]);\r\n        debugger\r\n        if (params[1].split(\"&rtyp=\")[1] != undefined && params[1].split(\"&rtyp=\")[1].toString().toLocaleLowerCase() == \"bkoffice\")\r\n          // this.redirctUrl = \"/internal\";   // \"/backoffice\";\r\n          if (location.host == 'beta.zoetisdx.com') {\r\n            this.subDomain = 'betainternal';\r\n          } else if (location.host == 'staging.zoetisdx.com') {\r\n            this.subDomain = 'staginginternal';\r\n          } else {\r\n            this.subDomain = 'internal';\r\n          }\r\n        this.redirctUrl = `https://${this.subDomain}.zoetisdx.com`;\r\n      }\r\n      this.labelService.selectedLanguage = this.lang;\r\n      this.getLabelDetails();\r\n      this.isSubmitVisible = true;\r\n      this.resetSignal = new ResetSignal();\r\n      this.resetSignal.UserGuid = params[0];\r\n      this.userResetForm = this.createFormGroup(new ResetSignal());\r\n\r\n    }\r\n    else {\r\n      this.isSubmitVisible = false;\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindLinkLabel();\r\n    });\r\n  }\r\n\r\n  get f() { return this.userResetForm?.controls; }\r\n\r\n  public submitReset() {\r\n    if (this.userResetForm.invalid) {\r\n      this.isMsgRed = true;\r\n      return;\r\n    }\r\n\r\n    if (this.userResetForm.controls['NewSignal'].value === this.userResetForm.controls['ConfirmSignal'].value) {\r\n      this.resetSignal.NewSignal = this.userResetForm.controls[\"NewSignal\"].value;\r\n      this.userService.updateSignal(this.resetSignal).subscribe({\r\n        next: () => {\r\n          this.isMsgRed = false;\r\n          this.msg = this.labelService.dsLinkScreen.SignalUpdated;\r\n          this.formGroupDirective.resetForm();\r\n        }, error: () => {\r\n          this.isMsgRed = true;\r\n          this.msg = this.labelService.dsLinkScreen.InvalidLink;\r\n          this.formGroupDirective.resetForm();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.isMsgRed = true;\r\n      this.userResetForm.controls['ConfirmSignal'].setValue(\"\");\r\n      this.msg = this.labelService.dsLinkScreen.newSignalAndReenterSingnalNotSame;\r\n    }\r\n    // }\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      'NewSignal': [dataItem.Signal, Validators.compose([Validators.required, Validators.maxLength(20), Validators.minLength(8), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9$@$!%*?&].{7,}')])],\r\n      'ConfirmSignal': [\"\", Validators.required],\r\n    },\r\n      { validator: this.mustMatch('NewSignal', 'ConfirmSignal') });\r\n  }\r\n\r\n  public mustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: UntypedFormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        return;\r\n      }\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"signin-outer\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-75\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n          <div class=\"card-body\">\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"\" />\r\n            </div>\r\n            <div class=\"text-center mb-5 info\" id=\"pass-outer\">\r\n              <span> {{labelService.dsLinkScreen.ResetYourPassword}}</span>\r\n              <mat-icon placement=\"top\" [ngbTooltip]=\"labelService.dsLinkScreen.signalHints\"> info</mat-icon>\r\n            </div>\r\n            <div class=\"text-center mb-2 errormsg\" [ngClass]=\"{'red': isMsgRed, 'green': !isMsgRed}\">\r\n              {{msg}}\r\n            </div>\r\n\r\n            <div *ngIf=\"f?.NewSignal.errors\">\r\n              <span *ngIf=\"f?.NewSignal.touched && f.NewSignal.invalid\"\r\n                [ngClass]=\"{'red': isMsgRed, 'green': !isMsgRed}\">\r\n                {{labelService.dsLinkScreen.SignalNotMeetCriteria}}\r\n              </span>\r\n            </div>\r\n\r\n            <div *ngIf=\"!(f?.NewSignal.invalid) && f?.ConfirmSignal.errors\">\r\n              <span *ngIf=\"f?.ConfirmSignal.errors.mustMatch\" [ngClass]=\"{'red': isMsgRed, 'green': !isMsgRed}\">\r\n                {{labelService.dsLinkScreen.newSignalAndReenterSingnalNotSame}}\r\n              </span>\r\n            </div>\r\n\r\n            <form class=\"form-signin\" [formGroup]=\"userResetForm\" #formGroupDirective=\"ngForm\" autocomplete=\"off\">\r\n\r\n              <div class=\"form-label-group mb-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input type=\"password\" matInput [placeholder]=\"labelService.dsLinkScreen.NewPassword\"\r\n                    formControlName=\"NewSignal\" maxlength=\"20\" required />\r\n                  <mat-icon class=\"chkmark\" *ngIf=\"!f.NewSignal.invalid\"> check</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"form-label-group mb-4\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input type=\"password\" matInput [placeholder]=\"labelService.dsLinkScreen.ReenterPassword\" matInput\r\n                    formControlName=\"ConfirmSignal\" maxlength=\"20\" required />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"d-flex align-items-center justify-content-center flex-column\">\r\n                <button class=\"btn btn-lg btn-primary btn-block\" *ngIf=\"isSubmitVisible\"\r\n                  [disabled]=\"!userResetForm.valid\" mat-raised-button color=\"warn\" (click)=\"submitReset()\">\r\n                  {{labelService.dsLinkScreen.Submit}}\r\n                </button>\r\n                <!-- [disabled]=\"this.userResetForm.status == 'INVALID'\" >Submit</button> -->\r\n                <a class=\"btn btn1 btn-lg btn-primary btn-block   mt-3\" mat-raised-button color=\"warn\"\r\n                  href=\"{{redirctUrl}}\">\r\n                  {{labelService.dsLinkScreen.ReturntoLogin}}\r\n                </a>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormGroup, Validators, UntypedFormBuilder, FormGroupDirective } from '@angular/forms';\r\nimport { ResetSignalRequest } from '../../models/user';\r\nimport { UserService } from '../../services/user.service';\r\nimport { LabelService } from '../../services/label.service';\r\nimport { ForgotScreen } from '../../models/label';\r\nimport { CommonService } from '../../services';\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.css']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n\r\n  public dsForgotScreen = new ForgotScreen();\r\n  public userResetReqForm: UntypedFormGroup;\r\n  public isMsgRed = true;\r\n  public msg = \"\";\r\n  @ViewChild('formGroupDirective', { static: true }) private formGroupDirective: FormGroupDirective;\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, public userService: UserService, public labelService: LabelService, private commonService: CommonService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.bindLabel();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userResetReqForm = this.createFormGroup(new ResetSignalRequest());\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.bindLabel();\r\n    });\r\n  }\r\n\r\n  public bindLabel() {\r\n    this.dsForgotScreen = new ForgotScreen();\r\n    if (this.labelService.dsLabelData[\"ForgotScreen\"] != undefined) {\r\n      this.dsForgotScreen.ForgotYourPassword = this.labelService.dsLabelData[\"ForgotScreen\"].find(x => x.KeyValue == \"ForgotYourPassword\").LabelName;\r\n      this.dsForgotScreen.EnterEmail = this.labelService.dsLabelData[\"ForgotScreen\"].find(x => x.KeyValue == \"EnterEmail\").LabelName;\r\n      this.dsForgotScreen.Submit = this.labelService.dsLabelData[\"ForgotScreen\"].find(x => x.KeyValue == \"Submit\").LabelName;\r\n      this.dsForgotScreen.ReturntoLogin = this.labelService.dsLabelData[\"ForgotScreen\"].find(x => x.KeyValue == \"ReturntoLogin\").LabelName;\r\n      this.dsForgotScreen.forgotSignalRequest = this.labelService.getValue(\"ForgotScreen\", \"forgotSignalRequest\", this.dsForgotScreen.forgotSignalRequest);\r\n      this.dsForgotScreen.NotExist = this.labelService.getValue(\"ForgotScreen\", \"NotExist\", this.dsForgotScreen.NotExist);\r\n      this.dsForgotScreen.EmailIdNotFound = this.labelService.getValue(\"ForgotScreen\", \"EmailIdNotFound\", this.dsForgotScreen.EmailIdNotFound);\r\n    }\r\n  }\r\n\r\n  public submitResetReq() {\r\n    if (!this.userResetReqForm.valid) {\r\n      this.msg = this.dsForgotScreen.NotExist;\r\n      this.isMsgRed = true;\r\n      return;\r\n    }\r\n    this.userService.resetSignalRequest(this.userResetReqForm.value).subscribe({next:() => {\r\n      this.isMsgRed = false;\r\n      this.msg = this.dsForgotScreen.forgotSignalRequest;\r\n      this.formGroupDirective.resetForm();\r\n    }, error: (err) => {\r\n      if (err.error && err.error.DisplayMessage) {\r\n\r\n        this.msg = this.dsForgotScreen.EmailIdNotFound;\r\n        this.isMsgRed = false;\r\n      } else {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      }\r\n    }});\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      'Email': [dataItem.User, Validators.compose([Validators.required, Validators.maxLength(100), Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,9}$\")])],\r\n      'LanguageId': this.labelService.selectedLanguage\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"signin-outer\">\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-75\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n          <div class=\"card-body\">\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"img\" />\r\n            </div>\r\n            <div data-testid=\"frgt-title\" class=\"text-center mb-4 info\">\r\n              {{dsForgotScreen.ForgotYourPassword}}\r\n            </div>\r\n            <div class=\"text-center mb-2 errormsg\" [ngClass]=\"{'red': isMsgRed, 'black': !isMsgRed}\">\r\n              {{msg}}\r\n            </div>\r\n\r\n            <form class=\"form-signin\" [formGroup]=\"userResetReqForm\" #formGroupDirective=\"ngForm\" autocomplete=\"off\"\r\n              (keyup.enter)=\"submitResetReq()\">\r\n              <div class=\"form-label-group mb-3\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput [placeholder]=\"dsForgotScreen.EnterEmail\" formControlName=\"Email\" />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"d-flex align-items-center justify-content-center flex-column\">\r\n                <button class=\"btn btn-lg btn-primary btn-block  \" mat-raised-button color=\"warn\"\r\n                  (click)=\"submitResetReq()\">{{dsForgotScreen.Submit}}</button>\r\n                <button class=\"btn btn1 btn-lg btn-primary btn-block mt-4\" mat-raised-button color=\"warn\"\r\n                  routerLink=\"/internal\">{{dsForgotScreen.ReturntoLogin}}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","const apiUrl = window.location.href.replace('www', '').replace('.com', '.com/#').split('#')[0].replace('.zoetisdx', 'zoetisdx').replace('zoetisdx', 'api.zoetisdx');\r\nlet insightKey = `InstrumentationKey=b49ae51b-3358-459e-8676-0167c8b094d2;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=88e2cb06-5458-4e59-b678-ba7c7dff3ad5`;\r\nlet ZCSDynamicUrl = \"https://zcsdev.zoetisdx.com/\";\r\nlet ZdxInternalUrl = \"https://devinternal.zoetisdx.com/\";\r\nlet zdxsHelpBaseUrl = 'https://help.zoetisdx.com/zoetisdx';\r\n// let ZCSDynamicUrl = \"https://zcsdev.zoetisdx.com/\";\r\nlet envName = \"\";\r\nlet zcsResourceId:string='128';\r\nif (apiUrl.split(\".\")[0].split(\"//\")[1] != undefined)\r\n  envName = apiUrl.split(\".\")[0].split(\"//\")[1];\r\n\r\nif (envName.toLowerCase() == \"api\") {\r\n  // insightKey = \"a413ee42-ab15-4dac-8f89-1a42f51cb085\";\r\n  insightKey = \"InstrumentationKey=a413ee42-ab15-4dac-8f89-1a42f51cb085;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=eefbb8d3-664c-4d6d-8f46-e4528b65729d\"\r\n  ZCSDynamicUrl = \"https://zcs.zoetisdx.com/\";\r\n  ZdxInternalUrl = \"https://internal.zoetisdx.com/\";\r\n  zdxsHelpBaseUrl: 'https://help.zoetisdx.com/zoetisdx';\r\n}\r\nif (envName.toLowerCase() == \"betaapi\") {\r\n  //insightKey = \"a413ee42-ab15-4dac-8f89-1a42f51cb085\";\r\n  insightKey =\"InstrumentationKey=7306cbba-a1a5-47e7-aa61-1f568217e612;IngestionEndpoint=https://eastus2-3.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=710d6119-1258-4c13-b5b1-fe56ab376097\"\r\n  ZCSDynamicUrl = \"https://zcs-beta.zoetisdx.com/\";\r\n  ZdxInternalUrl = \"https://betainternal.zoetisdx.com/\";\r\n  zcsResourceId='131';\r\n}\r\nif (envName.toLowerCase() == \"devsupportapi\") {\r\n  //insightKey = \"a413ee42-ab15-4dac-8f89-1a42f51cb085\";\r\n  insightKey = \"InstrumentationKey=af3f235f-c5ab-44d6-b8f7-fb2c89d422b9;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=82aa28f3-065b-416d-a4a1-a8585b002f4d\"\r\n  ZCSDynamicUrl = \"https://zcs-support.zoetisdx.com/\";\r\n}\r\nelse if (envName.toLowerCase() == \"stagingapi\") {\r\n  // insightKey = \"820ac662-492a-4b02-b1f2-0d341f585567\";\r\n  insightKey = `InstrumentationKey=820ac662-492a-4b02-b1f2-0d341f585567;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=d99f87bf-dcc6-403b-b345-a3dccc6142d0`\r\n  // ZCSDynamicUrl = \"https://zcsqa.zoetisdx.com/\";\r\n  ZCSDynamicUrl = \"https://zcsstage.zoetisdx.com/\";\r\n  ZdxInternalUrl = \"https://staginginternal.zoetisdx.com/\"\r\n}\r\nelse if (envName.toLowerCase() == \"devapi\") {\r\n  // insightKey = \"b49ae51b-3358-459e-8676-0167c8b094d2\";\r\n  insightKey = `InstrumentationKey=b49ae51b-3358-459e-8676-0167c8b094d2;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus2.livediagnostics.monitor.azure.com/;ApplicationId=88e2cb06-5458-4e59-b678-ba7c7dff3ad5`\r\n\r\n}\r\n\r\nexport const environment = {\r\n  production: true,\r\n  zcsResourceId:zcsResourceId,\r\n  isProduction: location.host == 'www.zoetisdx.com',\r\n  cryptoEncryptionKey: \"N5O3gVXnGzurtPtO\",\r\n  openUrlKey: \"AWVH3475DG37FKF772EYE17A25432AU46E2D4UA61TRB1\",\r\n\r\n  // API_URL: 'https://stagingapi.zoetisdx.com/',                    // Zoetis Stage env\r\n  // API_URL: 'https://devapi.zoetisdx.com/',                        // Zoetis Dev env\r\n  API_URL: apiUrl,\r\n\r\n  version: \"/v215\", // Expected Value = 'V213 | v212'|'v211'|'v210 | v29'|'v28'|'v27'|'v20'|'v13'|v12 |'v11'\r\n  ZCSUrl: ZCSDynamicUrl,\r\n  zdxhelpUrl: 'zoetisdx',\r\n  ZdxInternalUrl: ZdxInternalUrl,\r\n  zdxsHelpBaseUrl: zdxsHelpBaseUrl,\r\n  appInsights: {\r\n    //instrumentationKey: 'a413ee42-ab15-4dac-8f89-1a42f51cb085'    // Zoetis Prod\r\n    //instrumentationKey: '820ac662-492a-4b02-b1f2-0d341f585567'    // Zoetis Stage\r\n    // instrumentationKey: insightKey\r\n    connectionString: insightKey\r\n  },\r\n\r\n  // GA_TRACKING_ID: {beta: 'G-GZQZ8JQJ7D', stage: 'GTM-KL26P23'},\r\n  GA_TRACKING_ID: ['www.zoetisdx.com','zoetisdx.com'].includes(location.host)? 'G-GZQZ8JQJ7D' : (location.host == 'beta.zoetisdx.com' ? 'G-GZQZ8JQJ7D' : 'GTM-KL26P23'),\r\n  Pendo_APIKey:'d9e7a2f2-6ba9-47ee-4dab-dcd9d66f8e53',\r\n  // ZdxStage config\r\n  firebaseConfig: {\r\n    // file deepcode ignore HardcodedNonCryptoSecret: <Secret keys need instantly when application start>\r\n    apiKey: \"AIzaSyCPfq7YHg_Lx6QTcY0n9elZP8TOy3sqRkU\",\r\n    authDomain: \"moose-uat.firebaseapp.com\",\r\n    databaseURL: \"https://moose-uat.firebaseio.com\",\r\n    projectId: \"moose-uat\",\r\n    storageBucket: \"moose-uat.appspot.com\",\r\n    messagingSenderId: \"130176374709\",\r\n    appId: \"1:130176374709:web:1f54b16b550cc7cb8c2bfc\",\r\n    measurementId: \"G-3STR4N75RL\"\r\n  },\r\n  CvetPATH: '/embedded'\r\n};\r\n","import { Component, OnInit, ViewChild, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { SideFilter } from '../../../models/side-filter';\r\nimport { RightSideFilterScreen } from '../../../models/label';\r\nimport { LabelService, CommonService, SidefilterService, DataService, RefLabService, PatientService, HeaderService } from '../../../services';\r\nimport { EnmAnalysisStatus } from '../../../shared/constants/enum';\r\n@Component({\r\n  selector: 'app-dashboard-filter',\r\n  templateUrl: './dashboard-filter.component.html',\r\n  styleUrls: ['./dashboard-filter.component.css']\r\n})\r\n\r\nexport class DashboardFilterComponent implements OnInit {\r\n\r\n  public filter: SideFilter;\r\n  @Output() outFilterBy: EventEmitter<SideFilter> = new EventEmitter();\r\n  @Output() outAnlysisSource: EventEmitter<any> = new EventEmitter();\r\n  @Output() closeFilterPanel = new EventEmitter();\r\n  public dsAnalyzer: any[] = [];\r\n  public dsAnalysisType: any[] = [];\r\n  public dsGender: any[] = [];\r\n  public dsSpecies: any[] = [];\r\n  public dsSubSpecies: any[] = [];\r\n  public dsBreed: any[] = [];\r\n  public dsAnalysisStatus: any[] = [];\r\n  public breedList: any[] = [];\r\n  public doctorList: any[];\r\n  pageNumber = 1\r\n  public step = 0;\r\n  public label: RightSideFilterScreen;\r\n  @ViewChild('select', { static: true }) select: any;\r\n  searchText = \"\";\r\n  enSpeciesList: any = [];\r\n  enGenderList: any = [];\r\n  isRefLabLink: boolean;\r\n  @ViewChild('myText', { static: true }) myNameElem: ElementRef;\r\n\r\n  constructor(public commonService: CommonService,\r\n    public refLabService: RefLabService,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public dataService: DataService,\r\n    public headerService: HeaderService,) {\r\n    this.label = this.labelService.dsSideFilterScreen;\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.LanguageId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.sidefilterService.filter.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.getLabelDetails();\r\n    // this.sidefilterService.ToDate = null;\r\n    // this.sidefilterService.FromDate = null;\r\n  }\r\n\r\n  ngOnInit(applyDoc = true) {\r\n    this.isRefLabLink = this.dataService.appData.authDetails['IsLinkedRefLabClinic'];\r\n    if (!this.isRefLabLink) this.sidefilterService.filter['AnalysisSourceId'] = 1;\r\n    this.select._handleKeydown = (event: KeyboardEvent) => {\r\n      if (event.key == \" \" || event.code == \"Space\")\r\n        return\r\n      if (!this.select.disabled) {\r\n        this.select.panelOpen\r\n          ? this.select._handleOpenKeydown(event)\r\n          : this.select._handleClosedKeydown(event);\r\n      }\r\n    };\r\n\r\n    /**  =====Fetch Doctor List====== */\r\n    this.getPhysicianList(\"\", this.pageNumber, 60, null)\r\n\r\n    this.commonService.getFilterDDLDetails(1).subscribe(data => {\r\n      this.enSpeciesList = data.ResponseData.SpeciesList;\r\n      this.enGenderList = data.ResponseData.GenderList\r\n    })\r\n    const langId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.commonService.getFilterDDLDetails(langId).subscribe(data => {\r\n      data.ResponseData['enSpeciesList'] = this.enSpeciesList\r\n      data.ResponseData['enGenderList'] = this.enGenderList\r\n      // var filterDropDowns: any = this.dataService.appData.filterDropDownList;\r\n      const filterDropDowns: any = data.ResponseData;\r\n      this.dataService.appData.filterDropDownList = filterDropDowns;\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      this.dsBreed = filterDropDowns.Breed;\r\n      this.dsGender = filterDropDowns.GenderList;\r\n      this.dsAnalysisStatus = filterDropDowns.AnalysisStatus;\r\n      this.dsSpecies = filterDropDowns.SpeciesList;\r\n\r\n      this.dsAnalysisStatus.forEach(ele => {\r\n        if (ele.Id == EnmAnalysisStatus.Completed) {\r\n          ele.Status = this.labelService.dsSideFilterScreen.Completed;\r\n          /** 'Test has been run and results are available'; */\r\n          ele.Info = this.labelService.dsSideFilterScreen.TestComplete;\r\n        }\r\n        if (ele.Id == EnmAnalysisStatus.Canceled) {\r\n          ele.Status = this.labelService.dsSideFilterScreen.Canceled;\r\n          /** 'Test was canceled by a user' */\r\n          ele.Info = this.labelService.dsSideFilterScreen.TestCanceled;\r\n        }\r\n        if (ele.Id == EnmAnalysisStatus.Pending)\r\n          ele.Status = this.labelService.dsSideFilterScreen.Pending;\r\n      });\r\n      this.outAnlysisSource.emit(filterDropDowns.AnalysisSourceList);\r\n    });\r\n\r\n    if (this.dataService.pageState.dashboard.selectedRequestingDoctors && applyDoc) {\r\n      this.sidefilterService.filter.selectedDr = this.dataService.pageState.dashboard.selectedRequestingDoctors\r\n      this.selectedPhysician = this.dataService.pageState.dashboard.selectedRequestingDoctors\r\n    }\r\n  }\r\n\r\n  public isComplated(id) {\r\n    return (id == EnmAnalysisStatus.Completed);\r\n  }\r\n\r\n  public isCanceled(id) {\r\n    return (id == EnmAnalysisStatus.Canceled);\r\n  }\r\n\r\n  public isPending(id) {\r\n    return (id == EnmAnalysisStatus.Pending);\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(res => {\r\n      this.labelService.dsLabelData = res.ResponseData;\r\n      this.labelService.bindSideFilterLabel();\r\n    });\r\n  }\r\n\r\n  triggerEvent(e) {\r\n    if (e == false) {\r\n      this.searchText = ''\r\n      this.sidefilterService.filter.selectedDr = this.selectedPhysician\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.sidefilterService.filter.selectedDr = this.selectedPhysician\r\n  }\r\n\r\n  selectedPhysician = []\r\n  public onRequestingDrChange() {\r\n    this.sidefilterService.filter.PhysicianName = this.selectedPhysician.join();\r\n  }\r\n\r\n  selectionChangee($event) {\r\n    if ($event.isUserInput) {\r\n      if (this.selectedPhysician.indexOf($event.source.value) == -1) {\r\n        this.selectedPhysician.push($event.source.value)\r\n      } else {\r\n        this.selectedPhysician.splice(this.selectedPhysician.indexOf($event.source.value), 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSpeciesChange(event) {\r\n    if (this.sidefilterService.filter.SpeciesId != null && this.sidefilterService.filter.SpeciesId > 0)\r\n      this.dsSubSpecies = this.dsSpecies.find(x => x.Id === this.sidefilterService.filter.SpeciesId)['SubSpecies'];\r\n    else\r\n      this.dsSubSpecies = [];\r\n\r\n    this.sidefilterService.filter.SpeciesId = event.value;\r\n    this.getBreedList(event.value)\r\n  }\r\n\r\n  public getBreedList(speciesId) {\r\n    const langId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.refLabService.getBreedListBySpeciesId(speciesId, langId).subscribe(res => {\r\n      this.sidefilterService.filter.Breed = '';\r\n      this.breedList = res.ResponseData;\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    })\r\n  }\r\n\r\n  public onAnalyzerChange(analyzerName) {\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.filter.AnalysisSourceId = analyzerName == 'Ref Lab' ? 2 : 1;\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.AnalysisTypeId = null;\r\n    this.sidefilterService.FromDate = new Date(this.commonService.twoYearBeforeFromToday); // null;\r\n    this.sidefilterService.ToDate = this.commonService.today; // null;\r\n    this.dsSubSpecies = [];\r\n    this.breedList = [];\r\n    this.sidefilterService.filter.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.sidefilterService.filter.LanguageId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.sidefilterService.filter.AnalysisSourceId = this.dataService.appData.authDetails['IsLinkedRefLabClinic'] ? 0 : 1;\r\n  }\r\n\r\n  public applyFilter(isFilter?, isMobile?) {\r\n    this.headerService.searchText = '';\r\n    this.commonService.firebase.analytics().logEvent('apply_filter');\r\n    this.sidefilterService.filter.IsApplyFilter = isFilter;\r\n    this.sidefilterService.filter.PageNo = 1;\r\n    this.sidefilterService.filter.FromDate = this.sidefilterService.FromDate != null ? this.commonService.getMomentFromDateTime(this.sidefilterService.FromDate) : null;\r\n    this.sidefilterService.filter.ToDate = this.sidefilterService.ToDate != null ? this.commonService.getMomentToDateTime(this.sidefilterService.ToDate) : null;\r\n    const filter = { ...this.sidefilterService.filter };\r\n\r\n    if (filter.selectedDr && filter.selectedDr.length) {\r\n      this.dataService.pageState.dashboard.selectedRequestingDoctors = filter.selectedDr;\r\n      this.dataService.page.next(this.dataService.pageState);\r\n      const selectedDr = [];\r\n      filter.selectedDr.forEach(v => {\r\n        const doc = this.doctorList.find(x => x.Id == v);\r\n        selectedDr.push(doc.FirstName + ' ' + doc.LastName);\r\n      })\r\n      filter.selectedDr = selectedDr;\r\n      filter.PhysicianName = selectedDr.join();\r\n    }\r\n    this.outFilterBy.emit(filter);\r\n    if (isMobile) this.closeFilter();\r\n  }\r\n\r\n  public clearFilter() {\r\n    this.myNameElem.nativeElement.value = '';\r\n    this.setDefaultFilter();\r\n    this.applyFilter(false);\r\n    // this.getPhysicianList(\"\",this.pageNumber,60,null)\r\n    this.selectedPhysician = []\r\n    this.ngOnInit(false)\r\n  }\r\n\r\n  public setStep(index: number) {\r\n    this.step = this.step == index ? 0 : index;\r\n  }\r\n\r\n  closeFilter() {\r\n    this.closeFilterPanel.emit(true);\r\n  }\r\n\r\n  public getPhysicianList(SearchText, PageNo, PageSize, AnalysisSourceId) {\r\n    if (this.sidefilterService.filter.AnalysisSourceId != 0) {\r\n      AnalysisSourceId = this.sidefilterService.filter.AnalysisSourceId\r\n    }\r\n    const dd = {\r\n      \"BusinessGuid\": localStorage.businessGuid,\r\n      \"AnalysisSourceId\": AnalysisSourceId,\r\n      \"PageSize\": PageSize,\r\n      \"PageNo\": PageNo,\r\n      \"SearchText\": SearchText\r\n    }\r\n    this.refLabService.GetProvidersFilterList(dd).subscribe(data => {\r\n      // this.doctorList = data.ResponseData.Physician;\r\n      const uniquePhysicians = [];\r\n      const seenNames = new Set();\r\n       data.ResponseData.Physician?.forEach(ele =>{\r\n        if(ele['FirstName'] == ele['LastName']){\r\n          ele['LastName'] = \"\";\r\n          ele['PhysicianIdName'] =ele['FirstName']\r\n        }\r\n        const cleanedName = ele.PhysicianIdName.replace(/\\s*\\([^)]*\\)$/, \"\").trim().toLowerCase();\r\n        if (!seenNames.has(cleanedName)) {\r\n          seenNames.add(cleanedName);\r\n          uniquePhysicians.push({\r\n              ...ele,\r\n              PhysicianIdName: cleanedName\r\n          });\r\n      };\r\n      });\r\n      this.doctorList = uniquePhysicians;\r\n      this.pageNumber += 1\r\n    }, (err: any) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"resp clse\">\r\n    <p>X <span (click)=\"closeFilter()\">{{ labelService.dsSideFilterScreen.Cancel }}</span></p>\r\n</div>\r\n\r\n<div class=\"resp respfilter\">\r\n    <div class=\"d-flex justify-content-between mt-2\">\r\n        <span class=\"filter-head\">{{labelService.dsSideFilterScreen.FILTERS}}</span>\r\n        <a data-testid=\"clr-title\" class=\"clrall\" (click)=\"clearFilter()\">{{labelService.dsSideFilterScreen.ClearAll}}</a>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"pl-4 pr-4\">\r\n    <div class=\"desk d-flex justify-content-between mt-4\" >\r\n        <span class=\"filter-head\">{{labelService.dsSideFilterScreen.FILTERS}}</span>\r\n        <span class=\"clrall\" (click)=\"clearFilter()\">{{labelService.dsSideFilterScreen.ClearAll}}</span>\r\n    </div>\r\n    <hr>\r\n    <div class=\"d-flex flex-column\">\r\n        <div class=\"r-head mt-1  heading\"> {{labelService.dsSideFilterScreen.Patient}} </div>\r\n        <div class=\"mt-1\">\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.PatientID\" maxlength=\"20\"\r\n                    [(ngModel)]=\"sidefilterService.filter.PatientId\" ngDefaultControl  (keyup.enter)=\"applyFilter(true)\"\r\n                    autocomplete=\"false\" />\r\n            </mat-form-field>\r\n        </div>\r\n        <div>\r\n            <div class=\"mt-2\">\r\n                <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                    <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.PatientName\"\r\n                        maxlength=\"20\" [(ngModel)]=\"sidefilterService.filter.PatientName\" ngDefaultControl \r\n                        (keyup.enter)=\"applyFilter(true)\" autocomplete=\"off\" />\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.OwnerName\" maxlength=\"20\"\r\n                    [(ngModel)]=\"sidefilterService.filter.OwnerName\" ngDefaultControl (keyup.enter)=\"applyFilter(true)\"\r\n                    autocomplete=\"off\" />\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <section>\r\n            <div class=\"r-head mt-1  heading\"> {{labelService.dsSideFilterScreen.Species}} </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                    <mat-select (selectionChange)=\"onSpeciesChange($event)\"\r\n                        [(ngModel)]=\"sidefilterService.filter.SpeciesId\"\r\n                        ngDefaultControl \r\n                        [placeholder]=\"labelService.dsSideFilterScreen.Species\">\r\n                        <mat-option value=\"\">{{labelService.dsSideFilterScreen.Species}}</mat-option>\r\n                        <mat-option *ngFor=\"let species of dsSpecies\" [value]=\"species.Code\">\r\n                            {{species.Code}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"mt-2\">\r\n                <div class=\"r-head mt-1  heading\"> {{labelService.dsSideFilterScreen.RequestingDoctor}} </div>\r\n                <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                    <mat-select [placeholder]=\"labelService.dsSideFilterScreen.SearchRequestingDoctor\" multiple\r\n                        (selectionChange)=\"onRequestingDrChange()\" #select=\"matSelect\"\r\n                        (openedChange)=\"triggerEvent($event)\"\r\n                        [matTooltip]=\"labelService.dsSideFilterScreen.RequestingDoctor.length>24?labelService.dsSideFilterScreen.RequestingDoctor: ''\"\r\n                        [(ngModel)]=\"sidefilterService.filter.selectedDr\" ngDefaultControl  matTooltipPosition=\"below\"\r\n                        matTooltipClass=\"below\">\r\n                        <input type=\"text\" #myText\r\n                            placeholder=\"{{labelService.dsSideFilterScreen.SearchRequestingDoctor}}\" matInput\r\n                            style=\"margin:12px;\" [(ngModel)]=\"searchText\" (ngModelChange)=\"onChange()\" ngDefaultControl >\r\n                        <mat-option (onSelectionChange)=\"selectionChangee($event)\"\r\n                            *ngFor=\"let dr of doctorList | physicianFilter : searchText\" [value]=\"dr.Id\">\r\n                            <!-- {{dr.PhysicianIdName | titlecase}} -->\r\n                             {{dr?.FirstName}} {{dr?.LastName}}\r\n                        </mat-option>\r\n                        <p style=\"text-align: center;\" *ngIf=\"(doctorList | physicianFilter : searchText)?.length <=0\">\r\n                            {{labelService.dsSideFilterScreen.NoRecordsFound}}\r\n                        </p>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <hr />\r\n        </section>\r\n\r\n        <section>\r\n            <div style=\"margin: 14px 5px;\">\r\n                <span class=\"htext heading\"> {{labelService.dsSideFilterScreen.Result}} </span>\r\n                <a style=\"float: right;\" (click)=\"setStep(2)\">\r\n                    <span class=\"closeall\" [ngClass]=\"{'toggle-accordion-icon' : step === 2}\">\r\n                        <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\" />\r\n                    </span>\r\n                </a>\r\n            </div>\r\n            <div [hidden]=\"!(step===2)\">\r\n                <div class=\"d-flex flex-column range\">\r\n                    <div class=\"r-head mt-3 heading\">{{labelService.dsSideFilterScreen.ResultDate}}</div>\r\n                    <div>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input matInput [placeholder]=\"labelService.dsSideFilterScreen.From\"\r\n                                [matDatepicker]=\"pickerFrom\" (focus)=\"pickerFrom.open()\"\r\n                                [(ngModel)]=\"sidefilterService.FromDate\" ngDefaultControl \r\n                                [max]=\"this.sidefilterService.ToDate !== null ? this.sidefilterService.ToDate : commonService.getCurrentDate()\"\r\n                                readonly>\r\n                            <mat-datepicker-toggle matPrefix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #pickerFrom></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input matInput [placeholder]=\"labelService.dsSideFilterScreen.To\"\r\n                                [matDatepicker]=\"pickerTo\" (focus)=\"pickerTo.open()\"\r\n                                [(ngModel)]=\"sidefilterService.ToDate\" ngDefaultControl [min]=\"this.sidefilterService.FromDate\"\r\n                                [max]=\"commonService.getCurrentDate()\" readonly>\r\n                            <mat-datepicker-toggle matPrefix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #pickerTo></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex flex-column mt-3 \">\r\n                    <div class=\"r-head mt-1  heading\">{{labelService.dsSideFilterScreen.Source}}</div>\r\n                    <div class=\"d-flex flex-column\">\r\n                        <mat-radio-group class=\"d-flex flex-column\"\r\n                            [(ngModel)]=\"sidefilterService.filter.AnalysisSourceId\" ngDefaultControl >\r\n                            <div class=\"d-flex justify-content-between mb-1\" *ngIf=\"isRefLabLink\">\r\n                                <mat-radio-button class=\"example-margin\" [value]=0>\r\n                                    {{labelService.dsSideFilterScreen.All}}\r\n                                </mat-radio-button>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between mb-1\">\r\n                                <mat-radio-button class=\"example-margin\" [value]=\"1\">\r\n                                    {{labelService.dsSideFilterScreen.InClinic}}\r\n                                </mat-radio-button>\r\n                                <span style=\"margin-right: -4px!important;\">\r\n                                    <img class=\"mr-0 ng-star-inserted\" height=\"16\"\r\n                                        Src=\"../../../assets/img/poc-icon@2x.png\" alt=\"img\" />\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between mb-1\" *ngIf=\"isRefLabLink\">\r\n                                <mat-radio-button class=\"example-margin\" [value]=\"2\">\r\n                                    {{labelService.dsSideFilterScreen.RefLab}}\r\n                                </mat-radio-button>\r\n                                <span>\r\n                                    <img class=\"mr-0 ng-star-inserted\" height=\"20\"\r\n                                        Src=\"../../../assets/img/lab-icon@2x.png\" alt=\"img\" />\r\n                                </span>\r\n                            </div>\r\n                        </mat-radio-group>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <hr>\r\n        <div class=\"d-flex flex-column mt-3 \">\r\n            <div class=\"r-head mt-1  heading\">{{labelService.dsSideFilterScreen.Status}}</div>\r\n            <div class=\"d-flex flex-column\">\r\n                <mat-radio-group class=\"d-flex flex-column\" [(ngModel)]=\"sidefilterService.filter.AnalysisStatusId\" ngDefaultControl >\r\n                    <div class=\"d-flex justify-content-between mb-1\">\r\n                        <mat-radio-button class=\"example-margin\" [value]=0>\r\n                            {{labelService.dsSideFilterScreen.All}}\r\n                        </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between mb-1\" *ngFor=\"let status of dsAnalysisStatus\">\r\n                        <mat-radio-button class=\"example-margin\" [value]=\"status.Id\" *ngIf=\"status.InClinic\">\r\n                            {{status.Status}}\r\n                            <span class=\"status-info-icon\" [matTooltip]=\"status.Info\" matTooltipPosition=\"below\"\r\n                                matTooltipClass=\"below\">\r\n                                <img src=\"./assets/img/icart.svg\" alt=\"\" class=\"icart\"></span>\r\n                        </mat-radio-button>\r\n                        <span *ngIf=\"status.InClinic\" [ngClass]=\"{'completed': isComplated(status.Id), \r\n                'cancelled': isCanceled(status.Id),\r\n                'pending': isPending(status.Id)}\">\r\n                        </span>\r\n                    </div>\r\n                </mat-radio-group>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"mt-5 mb-3 d-flex justify-content-center applydesk\">\r\n            <button class=\"w-25\" mat-raised-button color=\"warn\" (click)=\"applyFilter(true, false)\">\r\n                {{labelService.dsSideFilterScreen.Apply}}\r\n            </button>\r\n        </div>\r\n\r\n        <!---for mobile responsive apply button-->\r\n        <div class=\"mt-5 mb-3 d-flex justify-content-center applymob\">\r\n            <button class=\"w-25\" mat-raised-button color=\"warn\" (click)=\"applyFilter(true, true)\">\r\n                {{labelService.dsSideFilterScreen.Apply}}\r\n            </button>\r\n        </div>\r\n    </div>","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { SideFilter } from \"../../models/side-filter\";\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from \"@angular/material/legacy-table\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { environment } from \"../../../environments/environment.prod\";\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from \"@angular/animations\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DashboardScreen } from \"../../models/label\";\r\nimport {\r\n  EnmAnalysisSource,\r\n  EnmModule,\r\n  EnmAnalysisStatus,\r\n} from \"../../shared/constants/enum\";\r\nimport { ConfirmationDialogService } from \"../../components/confirmation-dialog/confirmation-dialog.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {\r\n  LabelService,\r\n  DataService,\r\n  HeaderService,\r\n  SidemenuService,\r\n  SidefilterService,\r\n  PatientService,\r\n  CommonService,\r\n  EncrDecrService,\r\n  AlertService,\r\n} from \"../../services\";\r\nimport { MatDrawer } from \"@angular/material/sidenav\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n// declare const gtag: Function;\r\ndeclare const gtag: (...arg) => void;\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n  animations: [\r\n    trigger(\"detailExpand\", [\r\n      state(\"collapsed, void\", style({ height: \"0px\", minHeight: \"0\" })),\r\n      state(\"expanded\", style({ height: \"*\" })),\r\n      transition(\r\n        \"expanded <=> collapsed\",\r\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\r\n      ),\r\n      transition(\r\n        \"expanded <=> void\",\r\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\r\n      ),\r\n    ]),\r\n  ],\r\n})\r\nexport class DashboardComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  public label: DashboardScreen;\r\n  allRowsExpanded = false;\r\n  expandedElement: any;\r\n  isAdvSearched = false;\r\n  isNotificationSelected = false;\r\n  recordCount = 0;\r\n  BusinessGuId: any;\r\n  filter: SideFilter;\r\n  columnsToDisplay = [\r\n    \"ViewedFlag\",\r\n    \"DateReceivedStr\",\r\n    \"PatientId\",\r\n    \"PatientName\",\r\n    \"OwnerName\",\r\n    \"SpeciesName\",\r\n    \"BreedName\",\r\n    \" \",\r\n  ];\r\n  \r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  dsAnalysisSource: any[] = [];\r\n  selectedAnalysisSource: string;\r\n  public Eula: any[] = [];\r\n  headerText = \"Results\";\r\n  public analysisSrcId = EnmAnalysisSource.POC;\r\n  public canceledAnalysisStatusId = EnmAnalysisStatus.Canceled;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public sortState: Sort;\r\n  public isBackOfficeUser: boolean;\r\n  public pageNo: number;\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 30;\r\n  end: number = this.limit + this.start;\r\n  selectedRowIndex: number;\r\n  patientIdList: string[] = [];\r\n  public pataientList: any[] = [];\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem(\"bckBusinessInfo\"));\r\n  public helpObj: any;\r\n\r\n  public FromDateLabel: Date;\r\n  public ToDateLabel: Date;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public commonService: CommonService,\r\n    private modalService: NgbModal,\r\n    public sidemenuService: SidemenuService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public headerService: HeaderService,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public dataService: DataService,\r\n    private EncrDecr: EncrDecrService,\r\n    private title: Title,\r\n    public alertService: AlertService,\r\n    private toaster: ToastrService\r\n  ) {\r\n    this.FromDateLabel = new Date(this.commonService.twoYearBeforeFromToday);\r\n    this.ToDateLabel = this.commonService.today;\r\n\r\n    this.label = this.labelService.dsDashboardScreen;\r\n    this.filter = new SideFilter();\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails[\r\n      \"BackOfficeFlag\"\r\n    ];\r\n    this.BusinessGuId = this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n    this.filter.BusinessGuid = this.BusinessGuId;\r\n    this.filter.LanguageId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    this.filter.UserGuid = this.dataService.appData.authDetails[\"UserGuid\"];\r\n    this.dataService.pageState.default.requestParams = this.filter;\r\n    this.sortState = this.dataService.pageState.dashboard.sortState;\r\n\r\n    if (!this.dataService.pageState.dashboard.requestParams) {\r\n      this.dataService.pageState.dashboard.requestParams = this.filter;\r\n    }\r\n    if (this.dataService.pageState.dashboard.requestParams) {\r\n      if (this.dataService.pageState.dashboard.requestParams.FromDate) {\r\n        this.sidefilterService.FromDate = new Date(\r\n          this.dataService.pageState.dashboard.requestParams.FromDate\r\n        );\r\n      }\r\n      if (this.dataService.pageState.dashboard.requestParams.ToDate) {\r\n        this.sidefilterService.ToDate = new Date(\r\n          this.dataService.pageState.dashboard.requestParams.ToDate\r\n        );\r\n      }\r\n    }\r\n    this.sidemenuService.selectedModuleId = EnmModule.Dashboard;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title.setTitle(\r\n      `ZoetisDx | ${this.labelService.dsSideMenuScreen.Dashboard}`\r\n    );\r\n    /*  if(this.dataService.pageState.dashboard.resultsList.length && this.dataService.pageState.dashboard.selectedRow){\r\n \r\n     } */\r\n    if (!this.dataService.appData.authDetails[\"IsLinkedRefLabClinic\"])\r\n      this.filter[\"AnalysisSourceId\"] = 1;\r\n    if (this.dataService.appData.authDetails[\"IsLicenseAgreement\"]) {\r\n      this.confirmationDialogService\r\n        .confirm(\r\n          \"EULA update\",\r\n          \"\",\r\n          this.labelService.dsRotorManagementScreen.AgreeLabel,\r\n          \"Cancel\",\r\n          \"lg\",\r\n          true,\r\n          true\r\n        )\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.commonService\r\n              .UpdateAgreementFlag({\r\n                UserGuid: JSON.parse(localStorage.authDetails).UserGuid,\r\n                FlagId: 1,\r\n              })\r\n              .subscribe({\r\n                next: (data) => {\r\n                  this.Eula = data.ResponseData;\r\n                  this.dataService.appData.authDetails[\r\n                    \"IsLicenseAgreement\"\r\n                  ] = false;\r\n                  this.dataService.data.next(this.dataService.appData);\r\n                },\r\n                error: () => {\r\n                  this.confirmationDialogService.confirm(\r\n                    \"Alert\",\r\n                    this.labelService.dsFuseManagementScreen\r\n                      .AddRefLabAccountRespErrorMessage,\r\n                    this.labelService.dsPatientInfoScreen.Ok,\r\n                    \"\",\r\n                    \"sm\",\r\n                    true,\r\n                    false\r\n                  );\r\n                },\r\n              });\r\n          } else {\r\n            this.sidemenuService.logOut();\r\n            this.router.navigate([\"/login\"]);\r\n            window.location.reload();\r\n          }\r\n        });\r\n    }\r\n\r\n    if (\r\n      this.dataService.pageState.dashboard.requestParams.FromDate != null &&\r\n      this.dataService.pageState.dashboard.requestParams.FromDate != \"\"\r\n    ) {\r\n      this.sidefilterService.FromDate = new Date(\r\n        this.dataService.pageState.dashboard.requestParams.FromDate\r\n      );\r\n      this.sidefilterService.filter.FromDate = this.dataService.pageState.dashboard.requestParams.FromDate;\r\n    }\r\n\r\n    if (\r\n      this.dataService.pageState.dashboard.requestParams.ToDate != null &&\r\n      this.dataService.pageState.dashboard.requestParams.ToDate != \"\"\r\n    ) {\r\n      this.sidefilterService.ToDate = new Date(\r\n        this.dataService.pageState.dashboard.requestParams.ToDate\r\n      );\r\n      this.sidefilterService.filter.ToDate = this.dataService.pageState.dashboard.requestParams.ToDate;\r\n    }\r\n\r\n    if (\r\n      this.headerService.selectedNotification != undefined &&\r\n      this.headerService.selectedNotification != null\r\n    ) {\r\n      this.getPatientBySelectedNotification(\r\n        this.headerService.selectedNotification\r\n      );\r\n    } else {\r\n      if (this.dataService.pageState.dashboard.resultsList.length > 0) {\r\n        // this.FromDateLabel = this.sidefilterService.FromDate;\r\n        // this.ToDateLabel = this.sidefilterService.ToDate;\r\n        debugger\r\n        this.FromDateLabel = this.sidefilterService.FromDate\r\n          ? this.sidefilterService.FromDate\r\n          : new Date(this.commonService.twoYearBeforeFromToday);\r\n        this.ToDateLabel = this.sidefilterService.ToDate\r\n          ? this.sidefilterService.ToDate\r\n          : this.commonService.today;\r\n\r\n        this.sidefilterService.filter = this.dataService.pageState.dashboard.requestParams;\r\n        this.originData = this.dataService.pageState.dashboard.resultsList;\r\n        this.isLoadMore = this.dataService.pageState.dashboard?.loadmore;\r\n        this.pataientList = this.dataService.pageState.dashboard.resultsList;\r\n        this.dataSource = new MatTableDataSource<any>(this.originData);\r\n        this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n        this.dataSource.sort = this.sort;\r\n        this.bindDVMDDL();\r\n\r\n        if (\r\n          this.dataService.pageState.dashboard &&\r\n          this.dataService.pageState.dashboard.selectedRow\r\n        ) {\r\n          const patient = this.pataientList[\r\n            this.dataService.pageState.dashboard.selectedRow\r\n          ];\r\n          patient.ViewedFlag =\r\n            patient.Details.filter((x) => {\r\n              return x.ViewedFlag === false;\r\n            }).length < 1;\r\n        }\r\n      } else {\r\n        this.sidefilterService.FromDate = new Date(\r\n          this.commonService.twoYearBeforeFromToday\r\n        );\r\n        this.sidefilterService.ToDate = this.commonService.today;\r\n\r\n        this.getPatientList(this.dataService.pageState.dashboard.requestParams);\r\n      }\r\n    }\r\n\r\n    this.helpObj = this.dataService.appData.helpTopics.find(\r\n      (e) => e.HelpTopic == \"Results\"\r\n    );\r\n    console.log(this.sidefilterService.filter.IsApplyFilter);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    try {\r\n      this.labelService\r\n        .getLabelDetails(null, this.labelService.selectedLanguage)\r\n        .subscribe(\r\n          (data) => {\r\n            this.labelService.dsLabelData = data.ResponseData;\r\n            this.labelService.getDashboardScreenLabel();\r\n            this.labelService.bindAnaysisResultsLabel();\r\n            this.headerText = this.labelService.dsDashboardScreen.AnalysisResults;\r\n            this.label = {\r\n              ...this.labelService.dsAnaysisResultsScreen,\r\n              ...this.labelService.dsDashboardScreen,\r\n            };\r\n            this.selectedAnalysisSource = this.filter\r\n              .SearchTextToDisplayOnDashboard\r\n              ? this.filter.SearchTextToDisplayOnDashboard\r\n              : this.labelService.dsDashboardScreen.All;\r\n          },\r\n          (err) => {\r\n            console.log(JSON.stringify(err));\r\n            this.commonService.showCommonToastrError();\r\n          }\r\n        );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    if (this.dataService.pageState.dashboard.resultsList.length > 0) {\r\n      setTimeout(() => {\r\n        this.expandedElement = this.dataService.pageState.dashboard.selectedRow;\r\n        const elmnt: any = document.getElementById(\r\n          \"row\" + this.expandedElement\r\n        );\r\n        if (elmnt)\r\n          elmnt.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\",\r\n            inline: \"center\",\r\n          });\r\n        const patient = this.pataientList[this.expandedElement];\r\n        this.getPatientResultDetails(patient);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle(\"ZoetisDx\");\r\n    this.sidefilterService.ToDate = null;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.filter = new SideFilter();\r\n  }\r\n\r\n  public selectedRow(rowIindex) {\r\n    if (this.expandedElement == rowIindex) {\r\n      this.expandedElement = null;\r\n    } else {\r\n      this.expandedElement = null;\r\n      this.expandedElement = rowIindex;\r\n    }\r\n  }\r\n\r\n  public gotToResultDetails(rowIindex, ele, subEle) {\r\n    gtag(\"event\", \"Results_Page\", {\r\n      Total_Results: \"\",\r\n      Total_Unique_Results: \"\",\r\n      Patient_ID: ele.PatientId,\r\n      Patient_Name: ele.PatientName,\r\n      Owner_Name: ele.OwnerName,\r\n      Species: ele.SpeciesName,\r\n      Breed: ele.BreedName,\r\n      Result_Status: subEle.AnalysisStatusName,\r\n      Result_Source: subEle.SourceType,\r\n      Requesting_Doctor: subEle.PhysicianName,\r\n      Clinic_Name: \"\",\r\n    });\r\n    console.log(this.dataService)\r\n    this.dataService.appState.selectedResult.element = ele;\r\n    this.dataService.appState.selectedResult.subElement = subEle;\r\n    this.dataService.state.next(this.dataService.appState);\r\n\r\n    this.expandedElement = rowIindex;\r\n    this.dataService.pageState.dashboard.selectedRow = rowIindex;\r\n\r\n    if (subEle.AnalysisStatusId == this.canceledAnalysisStatusId) {\r\n      this.showMsg(subEle.CancelComment);\r\n    } else {\r\n      this.dataService.pageState.dashboard.resultsList = this.originData;\r\n      this.markAs(subEle, \"READ\");\r\n      this.patientService.showPataientTestResult(\r\n        ele,\r\n        subEle,\r\n        this.headerService.filter,\r\n        this.sidefilterService.filter,\r\n        this.sort.active,\r\n        this.sort.direction\r\n      );\r\n    }\r\n    this.dataService.page.next(this.dataService.pageState);\r\n  }\r\n\r\n  public onDataSort(e) {\r\n    this.expandedElement = null;\r\n    this.dataService.pageState.dashboard.sortState = e;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.scrolltoTop(null);\r\n  }\r\n\r\n  public scrolltoTop(topVal) {\r\n    const scrollabe = document.getElementById(\"dashboard-scrollabe\");\r\n    scrollabe.scrollTop = topVal;\r\n    this.isLoadMore = false;\r\n  }\r\n\r\n  public getAnlysisSourceList(event) {\r\n    this.dsAnalysisSource = event;\r\n  }\r\n\r\n  public onAnalysisSourceChange(obj) {\r\n    if (obj != null) {\r\n      this.filter.AnalysisSourceId = obj.Id;\r\n    } else {\r\n      this.filter.AnalysisSourceId = 0;\r\n    }\r\n  }\r\n\r\n  public filterDataSource(event) {\r\n    this.getPatientList(event);\r\n  }\r\n\r\n  public bindDVMDDL() {\r\n    this.sidefilterService.dsDVM = [];\r\n    if (this.originData != null) {\r\n      const arrDVM = [];\r\n      let noDVMText = \"\";\r\n      this.originData.forEach((element) => {\r\n        if (element.Details) {\r\n          element.Details.forEach((subEle) => {\r\n            if (\r\n              subEle.PhysicianName != null &&\r\n              !arrDVM.includes(subEle.PhysicianName)\r\n            ) {\r\n              if (subEle.PhysicianName == \"None\") {\r\n                noDVMText = subEle.PhysicianName;\r\n              } else {\r\n                arrDVM.push(subEle.PhysicianName.trim());\r\n                this.sidefilterService.dsDVM.push(subEle.PhysicianName.trim());\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.sidefilterService.dsDVM = this.commonService.arraySortByAscendingOrders(\r\n        arrDVM\r\n      );\r\n      if (noDVMText != null && noDVMText.trim() != \"\") {\r\n        this.sidefilterService.dsDVM.splice(0, 0, noDVMText.trim());\r\n      }\r\n    }\r\n  }\r\n\r\n  public getPatientListByAdvSearch(event) {\r\n    this.sidefilterService.filter = this.dataService.pageState.default.requestParams;\r\n    if (event.FromDate == null) this.sidefilterService.FromDate = null;\r\n    if (event.ToDate == null) this.sidefilterService.ToDate = null;\r\n    this.isAdvSearched = true;\r\n    this.selectedAnalysisSource =\r\n      event.SearchTextToDisplayOnDashboard != null\r\n        ? event.SearchTextToDisplayOnDashboard\r\n        : this.labelService.dsDashboardScreen.All;\r\n    this.getPatientList(event);\r\n  }\r\n\r\n  public onAdvSearchCrossClick() {\r\n    this.setDefaultFilter();\r\n    this.headerService.setDefaultAdvSearch();\r\n    this.getPatientList(this.headerService.filter);\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    /**  viewport */\r\n    const tableViewHeight = e.target.offsetHeight;\r\n    const tableScrollHeight = e.target.scrollHeight; /** length of all table */\r\n    const scrollLocation = e.target.scrollTop; /** how far user scrolled */\r\n    /** If the user has scrolled within 200px of the bottom, add more data */\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      if (this.dataService.pageState.dashboard.resultsList.length >= 60) {\r\n        this.pageNo = this.dataService.pageState.dashboard.requestParams.PageNo;\r\n        // this.dataService.pageState.dashboard.resultsList = [];\r\n\r\n        this.isLoadMore = true;\r\n        this.pageNo++;\r\n        this.start = this.end;\r\n        this.end = this.limit + this.start;\r\n        this.dataService.pageState.dashboard.requestParams[\r\n          \"PageNo\"\r\n        ] = this.pageNo;\r\n        this.getPatientList(this.dataService.pageState.dashboard.requestParams);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getPatientList(event) {\r\n    // debugger\r\n\r\n    // this.FromDateLabel = this.sidefilterService?.FromDate\r\n    //   ? this.sidefilterService.FromDate\r\n    //   : new Date(this.commonService.twoYearBeforeFromToday);\r\n    // this.ToDateLabel = this.sidefilterService?.ToDate\r\n    //   ? this.sidefilterService.ToDate\r\n    //   : this.commonService.today;\r\n\r\n    if (this.sidefilterService?.FromDate) {\r\n      this.FromDateLabel = this.sidefilterService.FromDate\r\n    } else {\r\n      this.FromDateLabel = new Date(this.commonService.twoYearBeforeFromToday);\r\n      this.sidefilterService.FromDate = new Date(this.commonService.twoYearBeforeFromToday);\r\n    }\r\n    if (this.sidefilterService?.ToDate) {\r\n      this.ToDateLabel = this.sidefilterService.ToDate\r\n    } else {\r\n      this.ToDateLabel = this.commonService.today;\r\n      this.sidefilterService.ToDate = this.commonService.today;\r\n    }\r\n\r\n    this.selectedAnalysisSource = event.SearchText\r\n      ? event.SearchTextToDisplayOnDashboard\r\n      : this.labelService.dsDashboardScreen.All;\r\n    this.expandedElement = null;\r\n    if (!event.SearchText) {\r\n      this.isAdvSearched = false;\r\n    }\r\n\r\n    event.IsBackOfficeUser = this.isBackOfficeUser;\r\n    this.pageNo = event.PageNo;\r\n    if (event.PageNo == 1) {\r\n      this.originData = [];\r\n      this.pataientList = [];\r\n      /** this.followPatientList = []; */\r\n    }\r\n\r\n    event[\"IsExactFilter\"] = this.isNotificationSelected ? true : false;\r\n    event.isSortByLastResultDate = true;\r\n    // event[\"orderIds\"] = null;\r\n    // event[\"PracticeRefs\"] = null;\r\n    // event[\"resultDates\"] = null;\r\n    this.dataService.pageState.dashboard.requestParams = event;\r\n    this.dataService.appState.updatedFilterRequest = event;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n\r\n    const params = Object.assign(\r\n      {},\r\n      this.dataService.pageState.dashboard.requestParams\r\n    );\r\n\r\n    if (params.FromDate) {\r\n      //const fDate = moment.utc(params.FromDate, 'MM/DD/YYYY HH:mm:ss').format()\r\n      params.FromDate =\r\n        params.FromDate != null\r\n          ? this.commonService.getMomentFromDateTime(params.FromDate)\r\n          : null;\r\n    }\r\n    if (params.ToDate) {\r\n      //const fDate = moment.utc(params.ToDate, 'MM/DD/YYYY HH:mm:ss').format()\r\n      params.ToDate =\r\n        params.ToDate != null\r\n          ? this.commonService.getMomentToDateTime(params.ToDate)\r\n          : null;\r\n    }\r\n\r\n    this.commonService\r\n      .getDashboardPatientList(\r\n        this.dataService.pageState.dashboard.requestParams\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          this.isNotificationSelected = false;\r\n          if (event.PageNo == 1) {\r\n            if (\r\n              data.ResponseData.PatientList != null &&\r\n              data.ResponseData.PatientList.length > 0\r\n            ) {\r\n              this.pataientList = data.ResponseData.PatientList;\r\n              /** this.followPatientList = data.ResponseData.FollowPatientList; */\r\n            } else {\r\n              this.pataientList = [];\r\n              /**   this.followPatientList = []; */\r\n            }\r\n          } else {\r\n            if (\r\n              data.ResponseData.PatientList != null &&\r\n              data.ResponseData.PatientList.length > 0\r\n            ) {\r\n              this.pataientList = this.pataientList.concat(\r\n                data.ResponseData.PatientList\r\n              );\r\n              /**   this.followPatientList = this.followPatientList.concat(data.ResponseData.FollowPatientList);  */\r\n            }\r\n          }\r\n\r\n          if (\r\n            data.ResponseData.PatientList != null &&\r\n            this.pataientList.length < 60\r\n          ) {\r\n            event.PageNo += 1;\r\n            this.pageNo = event.PageNo;\r\n            this.dataService.pageState.dashboard.requestParams[\r\n              \"PageNo\"\r\n            ] = this.pageNo;\r\n            this.getPatientList(event);\r\n          }\r\n          if (this.pataientList && this.pataientList.length > 0) {\r\n            this.pataientList = this.pataientList.map((item) => {\r\n              if (!item.PhysicianName || item.PhysicianName.trim() == \"None\")\r\n                item.PhysicianName = this.labelService.dsDashboardScreen.none;\r\n              return item;\r\n            });\r\n\r\n            if (this.originData.length > 0 && this.isLoadMore) {\r\n              this.isLoadMore =\r\n                data.ResponseData.PatientList != null ? false : true;\r\n              this.dataService.pageState.dashboard.loadmore = this.isLoadMore;\r\n            } else {\r\n              this.scrolltoTop(null);\r\n            }\r\n            this.originData = this.pataientList;\r\n            this.dataSource = new MatTableDataSource<any>(this.originData);\r\n\r\n            this.dataService.pageState.dashboard.resultsList = this.originData;\r\n            this.dataService.page.next(this.dataService.pageState);\r\n\r\n            this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n            this.dataSource.sort = this.sort;\r\n            if (this.dataService.pageState.dashboard.selectedRow) {\r\n              const expandedRowDetails = this.dataService.pageState.dashboard\r\n                .selectedRow;\r\n              this.expandedElement = this.originData.find(\r\n                (x) =>\r\n                  x.Id == expandedRowDetails.Id &&\r\n                  x.PatientId == expandedRowDetails.PatientId &&\r\n                  x.PatientName == expandedRowDetails.PatientName &&\r\n                  x.dob == expandedRowDetails.dob &&\r\n                  x.owner_id == expandedRowDetails.owner_id\r\n              );\r\n            }\r\n            this.sortState = this.dataService.pageState.dashboard.sortState;\r\n          } else {\r\n            this.dataSource.data = [];\r\n          }\r\n        },\r\n        (err) => {\r\n          this.originData = [];\r\n          this.dataSource.data = [];\r\n          console.log(JSON.stringify(err));\r\n        }\r\n      );\r\n  }\r\n\r\n  getPatientResultDetails(element) {\r\n    // debugger\r\n    let reqbody: any;\r\n    if (element?.PatientId) {\r\n      reqbody = JSON.parse(\r\n        JSON.stringify(this.dataService.pageState.dashboard.requestParams)\r\n      );\r\n      reqbody.AnalysisTypeId = this.checkAnalysisTypId(reqbody);\r\n      reqbody.PageNo = 1;\r\n      reqbody.IsApplyFilter = true;\r\n      reqbody.IsExactFilter = true;\r\n      reqbody.PatientId = element.PatientId;\r\n      reqbody.ZDXPatientInfoId = element.ZDXPatientId;\r\n      // reqbody.FromDate = null;\r\n      // reqbody.ToDate = null;\r\n      this.commonService.getPatientResultList(reqbody).subscribe((data) => {\r\n        const patientDetails = [];\r\n        if (data.ResponseData.DashboardPatientList) {\r\n          data.ResponseData.DashboardPatientList.forEach((data) => {\r\n            if (this.checkPatDetails(data)) {\r\n              patientDetails.push(...data.Details);\r\n            }\r\n          });\r\n        }\r\n        this.pataientList.forEach((patient) => {\r\n          if (\r\n            patient.PatientId == element.PatientId &&\r\n            patient.ZDXPatientId == element.ZDXPatientId\r\n          ) {\r\n            patient.Details = patientDetails;\r\n            patient.ViewedFlag =\r\n              patient.Details.filter((x) => {\r\n                return x.ViewedFlag === false;\r\n              }).length < 1;\r\n          }\r\n        });\r\n\r\n        this.originData = this.pataientList;\r\n        this.dataSource = new MatTableDataSource<any>(this.originData);\r\n        this.dataService.pageState.dashboard.resultsList = this.originData;\r\n        this.dataService.page.next(this.dataService.pageState);\r\n        this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n        this.dataSource.sort = this.sort;\r\n        const elmnt: any = document.getElementById(\r\n          \"row\" + this.expandedElement\r\n        );\r\n        if (elmnt)\r\n          elmnt.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\",\r\n            inline: \"center\",\r\n          });\r\n\r\n        this.bindDVMDDL();\r\n      });\r\n    } else {\r\n      this.expandedElement = null;\r\n    }\r\n  }\r\n\r\n  checkPatDetails(data) {\r\n    return data.Details && data.Details.length > 0;\r\n  }\r\n\r\n  checkAnalysisTypId(reqbody) {\r\n    return reqbody.AnalysisTypeId == null ? 0 : reqbody.AnalysisTypeId;\r\n  }\r\n\r\n  public openRefLabNote(element) {\r\n    const noteStr = element.PanelNote ? element.PanelNote : \"Note not found\";\r\n    this.confirmationDialogService.confirm(\r\n      \"Additional Note\",\r\n      noteStr,\r\n      this.labelService.dsDashboardScreen.Ok,\r\n      \"\",\r\n      \"lg\",\r\n      true,\r\n      false\r\n    );\r\n    // .then((confirmed) => {\r\n    // })\r\n    // .catch(() => console.log('Error in open note.....'));\r\n  }\r\n\r\n  public getPatientBySelectedNotification(event) {\r\n    this.isNotificationSelected = true;\r\n\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.PatientId = event.PatientId;\r\n    this.sidefilterService.filter.BusinessGuid = this.BusinessGuId;\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails[\r\n      \"UserGuid\"\r\n    ];\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    this.sidefilterService.filter.ZDXPatientInfoId = event.ZDXPatientInfoId;\r\n    this.getPatientList(this.sidefilterService.filter);\r\n    this.headerService.selectedNotification = null;\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.filter = new SideFilter();\r\n    this.filter.BusinessGuid = this.BusinessGuId;\r\n    this.filter.LanguageId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    this.filter.UserGuid = this.dataService.appData.authDetails[\"UserGuid\"];\r\n    this.filter.PatientName = null;\r\n    this.filter.PatientId = null;\r\n    this.filter.OwnerName = null;\r\n    this.filter.FromDate = null;\r\n    this.filter.ToDate = null;\r\n    this.filter.AnalysisSourceId = this.dataService.appData.authDetails[\r\n      \"IsLinkedRefLabClinic\"\r\n    ]\r\n      ? 0\r\n      : 1;\r\n    this.filter.AnalysisTypeId = 0;\r\n    this.filter.AnalysisStatusId = 0;\r\n    this.filter.SpeciesId = 0;\r\n    this.filter.Breed = null;\r\n    this.filter.SearchText = null;\r\n    this.filter.SearchTextToDisplayOnDashboard = null;\r\n    this.isAdvSearched = false;\r\n    this.selectedAnalysisSource = this.labelService.dsDashboardScreen.All;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.ToDate = null;\r\n  }\r\n\r\n  public showMsg(cancelComment) {\r\n    /*\r\n    cancelComment may be:-\r\n    1) user.cancelled : The user canceled the process.\r\n    2) 11 : Test cancelled by user\r\n    3) X : Order cannot be done, order cancelled\r\n    */\r\n    if (cancelComment && /user.cancelled/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsDashboardScreen.CanceledTestMessage;\r\n    } else if (cancelComment && /11 :/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsDashboardScreen.CanceledTestMessage11;\r\n    } else if (cancelComment && /X :/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsDashboardScreen.CanceledTestMessageX;\r\n    } else {\r\n      cancelComment = this.labelService.dsDashboardScreen.CanceledTest;\r\n      // cancelComment = cancelComment ? cancelComment : this.labelService.dsPatientInfoScreen.CanceledTest;\r\n    }\r\n\r\n    this.confirmationDialogService.confirm(\r\n      \"\",\r\n      cancelComment,\r\n      this.labelService.dsDashboardScreen.Ok,\r\n      \"\",\r\n      \"sm\",\r\n      true,\r\n      false\r\n    );\r\n    // .then((confirmed) => {\r\n    // }).catch(() => console.log('User dismissed the dialog'));\r\n  }\r\n\r\n  public toggle() {\r\n    this.allRowsExpanded = !this.allRowsExpanded;\r\n    this.expandedElement = null;\r\n  }\r\n\r\n  public navigateTo(e, ele) {\r\n    e.stopPropagation();\r\n    const authDetails = this.dataService.appData.authDetails;\r\n    const emailId = this.bckBusinessInfo ? this.bckBusinessInfo[\"EmailId\"] : \"\";\r\n    const doctorName =\r\n      ele.Details.length > 0 && ele.Details[0].PhysicianName\r\n        ? ele.Details[0].PhysicianName\r\n        : \"\";\r\n    let urlStr =\r\n      \"email=\" +\r\n      authDetails[\"Email\"] +\r\n      \"&bkoClinicEmail=\" +\r\n      emailId +\r\n      \"&token=\" +\r\n      JSON.parse(localStorage.authDetails).access_token +\r\n      \"&refresh_token=\" +\r\n      JSON.parse(localStorage.authDetails).refresh_token +\r\n      \"&deviceId=\" +\r\n      localStorage.UIGuid +\r\n      \"&clinicname=\" +\r\n      authDetails[\"BusinessName\"] +\r\n      \"&clinicphone=\" +\r\n      authDetails[\"BusinessPhoneNo\"] +\r\n      \"&doctorname=\" +\r\n      doctorName +\r\n      \"&patientId=\" +\r\n      ele.PatientId +\r\n      \"&patientName=\" +\r\n      ele.PatientName +\r\n      \"&Isbackoffice=\" +\r\n      JSON.parse(localStorage.authDetails).BackOfficeFlag +\r\n      \"&species=\" +\r\n      ele.SpeciesName +\r\n      \"&breed=\" +\r\n      ele.BreedName +\r\n      \"&accessionId=\" +\r\n      (ele.AccessionId ? ele.AccessionId : \"\") +\r\n      \"&backUrl=\" +\r\n      location.href;\r\n    urlStr = this.EncrDecr.encrypt(urlStr);\r\n    if (this.headerService.isNRP) {\r\n      this.commonService.getRedirectionKey({ ValueString: urlStr }).subscribe({\r\n        next: (data) => {\r\n          window.location.href =\r\n            environment.ZCSUrl +\r\n            \"#/user/consultation-request?ref=\" +\r\n            data.ResponseData;\r\n        },\r\n        error: () => {\r\n          this.confirmationDialogService.confirm(\r\n            \"Alert\",\r\n            this.labelService.dsFuseManagementScreen\r\n              .AddRefLabAccountRespErrorMessage,\r\n            this.labelService.dsPatientInfoScreen.Ok,\r\n            \"\",\r\n            \"sm\",\r\n            true,\r\n            false\r\n          );\r\n        },\r\n      });\r\n    } else {\r\n      this.commonService.getEncryptDetail({ toEncryptStr: urlStr }).subscribe({\r\n        next: (res) => {\r\n          window.location.href =\r\n            environment.ZCSUrl +\r\n            \"#/user/consultation-request?ref=\" +\r\n            res.ResponseData.encryptedKey;\r\n        },\r\n        error: () => {\r\n          this.commonService.showCommonToastrError();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  closeFilter() {\r\n    this.drawer.close();\r\n  }\r\n\r\n  navToPatientInfo(element, rowIndex) {\r\n    this.dataService.appState.selectedResult.element = element;\r\n    this.expandedElement = rowIndex;\r\n    this.dataService.pageState.dashboard.selectedRow = rowIndex;\r\n    this.dataService.pageState.dashboard.resultsList = this.originData;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.patientService.showPataientInfo(\r\n      element,\r\n      this.headerService.filter,\r\n      this.sidefilterService.filter,\r\n      this.sort.active,\r\n      this.sort.direction\r\n    );\r\n  }\r\n\r\n  public navigateToInfoPage(element) {\r\n    this.dataService.pageState.PatientList.resultsList = this.originData;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n\r\n    this.patientService.showPataientInfo(\r\n      element,\r\n      this.sidefilterService.filter,\r\n      this.sidefilterService.filter.PageNo,\r\n      null,\r\n      null\r\n    );\r\n  }\r\n\r\n  public markAs(elem, as, ele: any = false) {\r\n    if (this.commonService.isInternalUsers()) {\r\n      const req = {\r\n        BusinessGuid: this.BusinessGuId,\r\n        UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n        ObjResultTagModel: [\r\n          {\r\n            Source: elem.SourceType,\r\n            ResultIds: elem.RecID,\r\n            Tag: as,\r\n          },\r\n        ],\r\n      };\r\n      this.commonService.UpdateResultTag(req).subscribe({\r\n        next: () => {\r\n          elem.ViewedFlag = as == \"READ\";\r\n          if (ele && ele.Details) {\r\n            ele.ViewedFlag =\r\n              ele.Details.filter((x) => {\r\n                return x.ViewedFlag === false;\r\n              }).length < 1;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n    <div>\r\n      <app-header (outFilterBy)=\"getPatientListByAdvSearch($event)\"\r\n        (outFilterNotification)=\"getPatientBySelectedNotification($event)\"></app-header>\r\n    </div>\r\n\r\n    <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n      <mat-drawer #drawer class=\"example-sidenav sidefilter right-filter\" mode=\"over\" position=\"end\">\r\n        <app-dashboard-filter (outAnlysisSource)=\"getAnlysisSourceList($event)\" (outFilterBy)=\"filterDataSource($event)\"\r\n          (closeFilterPanel)='closeFilter()'>\r\n        </app-dashboard-filter>\r\n      </mat-drawer>\r\n\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n\r\n        <div class=\"left-block\">\r\n          <!-- Page Title -->\r\n          <div class=\"ques-icon text-right\">\r\n            <section class=\"title-container title-card\">\r\n              <h5> <span data-testid=\"mk-app-title\" class=\"page-title\">{{headerText}}</span> </h5>\r\n            </section>\r\n\r\n            <img class=\"qicon\" src=\"../../../assets/img/help-icon.svg\" [matTooltip]=\"labelService.dsSideMenuScreen.Help\"\r\n              alt=\"help-circle\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n              (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n          </div>\r\n\r\n          <!-- Page Title end -->\r\n          <mat-card class=\"p-0 m-card\">\r\n            <div class=\"mt-0\">\r\n              <div class=\"d-flex justify-content-between pt-2 pl-3 pr-3 align-items-center toprow\">\r\n                <div class=\"filter-txt justify-content-between\">\r\n                  <span class=\"all\" *ngIf=\"selectedAnalysisSource === label.All\">\r\n                    {{ selectedAnalysisSource }}\r\n                    ({{originData.length}})\r\n                  </span>\r\n                  <span>\r\n                    <!-- Showing results for -->\r\n                    {{labelService.dsDashboardScreen.ShowingResultDated}}\r\n                    <span style=\"font-weight: bold;\">\r\n                      {{commonService.getMomentFromatedDate(this.FromDateLabel)}}\r\n                    </span>\r\n                    {{labelService.dsDashboardScreen.To}}\r\n                    <span style=\"font-weight: bold;\">\r\n                      {{commonService.getMomentFromatedDate(this.ToDateLabel) }}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <h5> <span class=\"page-title\">{{headerText}}</span> </h5>\r\n                <span class=\"d-flex\">\r\n                  <span class=\"ipadfiler  align-items-center pr-2\">\r\n                    <button type=\"button\" class=\"pr-0 \" mat-button (click)=\"drawer.toggle()\">\r\n                      <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"img\" class=\"filtericon\" />\r\n                    </button>\r\n                    <img class=\"qpart qicon\" src=\"../../../assets/img/help-circle.svg\"\r\n                      [matTooltip]=\"labelService.dsSideMenuScreen.Help\" alt=\"help-circle\" matTooltipPosition=\"below\"\r\n                      matTooltipClass=\"below\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n                  </span>\r\n                </span>\r\n\r\n              </div>\r\n              <div class=\"p-0 pt-2 cust-postion\">\r\n                <div>\r\n                  <div class=\"d-flex justify-content-between mb-1\">\r\n                  </div>\r\n                  <div class=\"example-container dashboard-result  pt-0\" id=\"dashboard-scrollabe\"\r\n                    (scroll)=\"onTableScroll($event)\">\r\n                    <table class=\"dashboard-table\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows matSort\r\n                      [matSortActive]=\"sortState.active\" [matSortDirection]=\"sortState.direction\"\r\n                      (matSortChange)=\"onDataSort($event)\" summary=\"\">\r\n\r\n                      <ng-container matColumnDef=\"ViewedFlag\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span style=\"color: #fd6400; font-weight: bold;\" class=\"textTtl text-bold\"\r\n                            *ngIf=\"element.ViewedFlag === false\">{{label.new}}</span>\r\n                        </td>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"DateReceivedStr\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.LastAnalysis}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.LastAnalysis}}</span> {{ element.DateReceivedStr }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"PatientId\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.PatientID}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.PatientID}}</span>\r\n                          {{ element.PatientId }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"PatientName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.PatientName}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.PatientName}}</span>\r\n                          {{element.PatientName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"OwnerName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.OwnerName}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.OwnerName}}</span> {{ element.OwnerName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"SpeciesName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.Species}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.Species}}</span> {{ element.SpeciesName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"BreedName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.Breed}}\r\n\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.Breed}}</span> {{ element.BreedName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\" \">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\"> </span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"expandedDetail\" class=\"expanded-detail\">\r\n                        <td mat-cell td *matCellDef=\"let element; let i = dataIndex;\"\r\n                          [attr.colspan]=\"columnsToDisplay.length\" class=\"expanded-detail\">\r\n                          <div id=\"row{{i}}\" class=\"example-element-detail\"\r\n                            [@detailExpand]=\"(i === expandedElement || allRowsExpanded) ? 'expanded' : 'collapsed'\">\r\n\r\n                            <div class=\"row pt-3 pb-3 card-block w-100\">\r\n                              <ng-container *ngIf=\"element.Details\">\r\n                                <div class=\"card-width col-sm-4 \"\r\n                                  *ngFor=\"let subEle of (element.preDetails || element.Details)| slice:0:element.Details.length >10? 10:element.Details.length\">\r\n                                  <mat-card [ngClass]=\"{completed: subEle.AnalysisStatusId === 1,\r\n                                                      cancelled: subEle.AnalysisStatusId === 2,\r\n                                                      pending: subEle.AnalysisStatusId === 3 }\" class=\"inner-card\">\r\n                                    <div class=\"d-flex justify-content-between align-items-top card-heading\">\r\n                                      <span [ngStyle]=\"{'font-weight':subEle.ViewedFlag ? 'normal':'bold'}\"\r\n                                        class=\"card-head clickable\" (click)=\"gotToResultDetails(i, element, subEle)\">\r\n                                        {{subEle.AnalysisTypeName}}\r\n                                      </span>\r\n                                      <span [ngStyle]=\"{'font-weight':subEle.ViewedFlag ? 'normal':'bold'}\"\r\n                                        class=\"card-date\">\r\n                                        {{subEle.DateReceivedStr}}\r\n                                      </span>\r\n                                    </div>\r\n                                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                                      <span class=\"cardimg\"\r\n                                        [ngStyle]=\"{'font-weight':subEle.ViewedFlag ? 'normal':'bold'}\">\r\n                                        <img class=\"mr-2 ng-star-inserted\" height=\"16\"\r\n                                          Src=\"../../../assets/img/poc-icon@2x.png\"\r\n                                          *ngIf=\"subEle.AnalysisSourceId === analysisSrcId\" alt=\"img\" />\r\n                                        <img class=\"mr-2 ng-star-inserted\" height=\"16\"\r\n                                          Src=\"../../../assets/img/lab-icon@2x.png\"\r\n                                          *ngIf=\"subEle.AnalysisSourceId === 2\" alt=\"img\" />\r\n                                        <span *ngIf=\"subEle.AnalysisSourceName === 'In Clinic'\">\r\n                                          <ng-container *ngIf=\"subEle.AnalysisSourceName === 'In Clinic'\">{{\r\n                                            label.InClinic }}</ng-container>\r\n                                        </span>\r\n                                        <span *ngIf=\"subEle.AnalysisSourceName === 'Ref Lab'\">\r\n                                          <ng-container *ngIf=\"subEle.AnalysisSourceName === 'Ref Lab'\">{{ label.RefLab\r\n                                            }}</ng-container>\r\n                                        </span>\r\n                                      </span>\r\n                                      <span *ngIf=\"subEle.AnalysisSourceId === 2\">\r\n                                        <span [ngStyle]=\"{'color':subEle.HighCount?'red':'black'}\">\r\n                                          {{subEle.HighCount?subEle.HighCount:'--'}} </span>/<span\r\n                                          [ngStyle]=\"{'color':subEle.LowCount?'blue':'black'}\">{{subEle.LowCount?subEle.LowCount:'--'}}</span>\r\n                                      </span>\r\n                                    </div>\r\n                                    <div class=\"layout-row\" style=\"margin-top: 14px;\">\r\n                                      <span (click)=\"markAs(subEle, 'READ', element)\" title=\"{{ label.MarkAsViewed }}\"\r\n                                        class=\"float-left new-status-border mr-2\" *ngIf=\"subEle.ViewedFlag === false && subEle.AnalysisStatusId !== 2\">{{\r\n                                        label.new }}</span>\r\n                                      <span (click)=\"markAs(subEle, 'UNREAD', element)\" title=\"{{ label.MarkAsNew }}\"\r\n                                        class=\"float-left viewed-status-border mr-2\"\r\n                                        *ngIf=\"subEle.ViewedFlag === true && subEle.AnalysisStatusId !== 2\">{{ label.Viewed }}</span>\r\n                                      <span title=\"{{ label[subEle.StatusName] }}\" style=\"cursor: pointer;\"\r\n                                        *ngIf=\"subEle.SourceType === 'ReferenceLab' && commonService.ACPText(subEle)\"\r\n                                        class=\"float-left statusCode {{ commonService.ACPStatusCodeShow(subEle.StatusCode) }}\">{{\r\n                                        commonService.ACPStatusCodeShow(subEle.StatusCode) }}</span>\r\n                                      <span (click)=\"gotToResultDetails(i, element, subEle)\" class=\"float-right\">\r\n                                        <button mat-icon-button aria-label=\"right arrow\"\r\n                                          [ngStyle]=\"{'color':subEle.AnalysisStatusName === 'Completed'?'#067cd3':'#0201009e'}\">\r\n                                          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                      </span>\r\n                                    </div>\r\n                                  </mat-card>\r\n\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-center align-items-center viewcontainer\"\r\n                                  *ngIf=\"element.Details.length >= 1\" (click)=\"navToPatientInfo(element,i)\">\r\n                                  <span class=\"viewmoretxt\"> {{label.Viewmore}}</span>\r\n                                  <img class=\"viewmoreIcn\" src=\"./assets/img/viewmore.svg\" alt=\"img\" />\r\n                                </div>\r\n                                <div class=\"norecord\" *ngIf=\"element.Details.length === 0\">\r\n                                  <span>{{label.Norecordsfound}}</span>\r\n                                </div>\r\n                              </ng-container>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\r\n                      <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay; let i = dataIndex;\"\r\n                        class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\"\r\n                        (click)=\"selectedRow(i);(expandedElement !==null)?getPatientResultDetails(element):none\"></tr>\r\n                      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n                    </table>\r\n\r\n                    <div class=\"noresult\" *ngIf=\"dataSource.data.length === 0\">\r\n                      <div *ngIf=\"isAdvSearched\">\r\n                        <p>{{label.Wewereunabletofindresults}}</p>\r\n                        <p> {{label.SearchTips}}</p>\r\n                        <ul>\r\n                          {{label.Pleaseverifyyourspelling}}\r\n                          <br>\r\n                          {{label.Widenthescopeofyoursearch}}\r\n                        </ul>\r\n                      </div>\r\n                      <tbody class=\"norecord\" *ngIf=\"!isAdvSearched\">\r\n                        <tr>\r\n                          <div *ngIf=\"sidefilterService.filter.IsApplyFilter==false\">{{labelService.dsAnaysisResultsScreen.Norecordsfound}}</div>\r\n                          <div *ngIf=\"sidefilterService.filter.IsApplyFilter==true\">{{labelService.dsAnaysisResultsScreen.NorecordsfoundByFilter}}</div>\r\n                        </tr>\r\n                      </tbody>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n          <div style=\"background: #fff; margin-right: 3px; text-align: right; z-index: 999999; position: relative;\">\r\n            <span class=\"material-icons gotToTopBtn\" (click)=\"scrolltoTop(null)\"> arrow_upward </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"right-filter pl-0\">\r\n          <app-dashboard-filter (outAnlysisSource)=\"getAnlysisSourceList($event)\"\r\n            (outFilterBy)=\"getPatientList($event)\">\r\n          </app-dashboard-filter>\r\n\r\n        </div>\r\n      </div>\r\n    </mat-drawer-container>\r\n\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { SideFilter } from \"../../models/side-filter\";\r\nimport {\r\n  LabelService,\r\n  CommonService,\r\n  SidefilterService,\r\n  DataService,\r\n  RefLabService,\r\n  PatientService,\r\n  HeaderService,\r\n} from \"../../services\";\r\nimport { EnmAnalysisStatus } from \"../../shared/constants/enum\";\r\n\r\n@Component({\r\n  selector: \"app-sidefilter\",\r\n  templateUrl: \"./sidefilter.component.html\",\r\n  styleUrls: [\"./sidefilter.component.css\"],\r\n})\r\nexport class SidefilterComponent implements OnInit {\r\n  public filter: SideFilter;\r\n  @Output() outFilterBy: EventEmitter<SideFilter> = new EventEmitter();\r\n  @Output() clearFilterEvent: EventEmitter<any> = new EventEmitter();\r\n  @Output() outAnlysisSource: EventEmitter<any> = new EventEmitter();\r\n\r\n  public dsAnalyzer: any[] = [];\r\n  public dsAnalysisType: any[] = [];\r\n  public dsGender: any[] = [];\r\n  public dsSpecies: any[] = [];\r\n  public dsSubSpecies: any[] = [];\r\n  public dsBreed: any[] = [];\r\n  public dsAnalysisStatus: any[] = [];\r\n  public breedList: any[] = [];\r\n  public doctorList: any[];\r\n  searchText1 = \"\";\r\n  public isVisibleDVM = true;\r\n  public isVisiblePatientName = true;\r\n  public isVisiblePatientID = true;\r\n  public isVisibleStatus = true;\r\n  public isVisibleSource = true;\r\n  public isVisibleAnalyzer = false;\r\n  public isVisibleAnalysisType = false;\r\n  public isVisibleGender = false;\r\n  public isVisibleSpecies = true;\r\n  public isVisibleBreed = true;\r\n  public isVisibleOwnerName = true;\r\n  // public isVisibleFollowPatient = true;\r\n  pageNumber = 1;\r\n  @ViewChild(\"select\", { static: true }) select: any;\r\n  isRefLabLink = true;\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public dataService: DataService,\r\n    public refLabService: RefLabService,\r\n    public patientService: PatientService,\r\n    public headerService: HeaderService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.dataService.appData.authDetails[\r\n      \"BusinessGuid\"\r\n    ];\r\n    this.sidefilterService.filter.LanguageId = this.dataService.appData.authDetails[\r\n      \"LanguageId\"\r\n    ];\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails[\r\n      \"UserGuid\"\r\n    ];\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindSideFilterLabel();\r\n      //this.bindLabel();\r\n    }\r\n\r\n    if (window.location.href.indexOf(\"patient/list\") > -1) {\r\n      this.isVisibleDVM = false;\r\n      this.isVisibleGender = true;\r\n      this.isVisibleStatus = false;\r\n      this.isVisibleAnalysisType = false;\r\n      this.isVisibleAnalyzer = false;\r\n      this.isVisibleSource = false;\r\n    }\r\n\r\n    if (window.location.href.indexOf(\"patient/info\") > -1) {\r\n      this.isVisiblePatientName = false;\r\n      this.isVisiblePatientID = false;\r\n      this.isVisibleAnalyzer = true;\r\n      this.isVisibleAnalysisType = true;\r\n      this.isVisibleSpecies = false;\r\n      this.isVisibleBreed = false;\r\n      this.isVisibleOwnerName = false;\r\n      this.isVisibleSource = false;\r\n    }\r\n\r\n    // this.setDefaultFilter();\r\n    this.sidefilterService.FromDate = new Date(\r\n      this.commonService.twoYearBeforeFromToday\r\n    );\r\n    this.sidefilterService.ToDate = this.commonService.today;\r\n    // this.getTranslationByLang()\r\n  }\r\n\r\n  // getTranslationByLang() {\r\n  //   console.log('Initiated')\r\n  // }\r\n\r\n  ngOnInit() {\r\n    const langId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    if (langId) {\r\n      this.commonService.getFilterDDLDetails(langId).subscribe(\r\n        (res) => {\r\n          this.dataService.appData.filterDropDownList = res.ResponseData;\r\n          this.dataService.data.next(this.dataService.appData);\r\n          console.log(this.dataService.appData);\r\n          this.isRefLabLink = this.dataService.appData.authDetails[\r\n            \"IsLinkedRefLabClinic\"\r\n          ];\r\n          if (!this.isRefLabLink)\r\n            this.sidefilterService.filter[\"AnalysisSourceId\"] = 1;\r\n          this.select._handleKeydown = (event: KeyboardEvent) => {\r\n            if (event.key == \" \" || event.code == \"Space\") return;\r\n            if (!this.select.disabled) {\r\n              this.select.panelOpen\r\n                ? this.select._handleOpenKeydown(event)\r\n                : this.select._handleClosedKeydown(event);\r\n            }\r\n          };\r\n\r\n          /**  =====Fetch Doctor List====== */\r\n          this.getPhysicianList(\"\", this.pageNumber, 60, null);\r\n\r\n          // this.patientService.getAnalyzer(this.sidefilterService.filter.BusinessGuid).subscribe(data => {\r\n          //   this.dsAnalyzer = data.ResponseData.Analyzers.forEach(ele =>{\r\n          //      if(ele.AnalyzerName != \"Ref Lab\" && this.isRefLabLink) return ele\r\n          //   });\r\n          // }, err => {\r\n          //   console.log(JSON.stringify(err));\r\n          //   this.commonService.showCommonToastrError();\r\n          // });\r\n\r\n          if (this.dataService.appData.authDetails[\"IsConsultantUser\"] != true) {\r\n            const businessGuid = this.dataService.appData.authDetails['BusinessGuid']; // this.sidefilterService.filter.BusinessGuid\r\n            this.patientService.getAnalyzer(businessGuid).subscribe({\r\n              next: (data) => {\r\n                this.dsAnalyzer = data.ResponseData.Analyzers.filter(\r\n                  (ele) => {\r\n                    if (ele.AnalyzerName != \"Ref Lab\" || this.isRefLabLink) {\r\n                      return ele;\r\n                    }\r\n                  }\r\n                );\r\n              },\r\n              error: () => {\r\n                // console.log(JSON.stringify(err));\r\n                this.commonService.showCommonToastrError();\r\n              },\r\n            });\r\n          }\r\n\r\n          this.dataService.state.subscribe((data) => {\r\n            this.dsAnalysisType = data.analysisTypeList;\r\n          });\r\n\r\n          const filterDropDowns: any = this.dataService.appData\r\n            .filterDropDownList;\r\n          console.log(\"filterDropDowns\", filterDropDowns);\r\n          this.dsGender = filterDropDowns.GenderList;\r\n          console.log(this.dsGender);\r\n          this.dsSpecies = filterDropDowns.SpeciesList;\r\n          this.dsBreed = filterDropDowns.Breed;\r\n\r\n          this.dsAnalysisStatus = filterDropDowns.AnalysisStatus.filter(\r\n            (ele) => {\r\n              if (\r\n                ele.Id == EnmAnalysisStatus.Completed ||\r\n                ele.Id == EnmAnalysisStatus.Canceled ||\r\n                ele.Id == EnmAnalysisStatus.Pending\r\n              ) {\r\n                return ele;\r\n              }\r\n            }\r\n          );\r\n          console.log(this.dsAnalysisStatus)\r\n          this.dsAnalysisStatus.forEach((ele) => {\r\n            if (ele.Status == \"Completed\") {\r\n              ele.Status = this.labelService.dsSideFilterScreen.Completed;\r\n              ele.Info = this.labelService.dsSideFilterScreen.TestComplete;\r\n            }\r\n            if (ele.Status == \"Canceled\") {\r\n              ele.Status = this.labelService.dsSideFilterScreen.Canceled;\r\n              ele.Info = this.labelService.dsSideFilterScreen.TestCanceled;\r\n            }\r\n            if (ele.Status == \"Ordered\") {\r\n              ele.Status = this.labelService.dsSideFilterScreen.Pending;\r\n              ele.Info = this.labelService.dsSideFilterScreen.TestNotAvailable;\r\n            }\r\n          });\r\n          this.outAnlysisSource.emit(filterDropDowns.AnalysisSourceList);\r\n        },\r\n        (err) => {\r\n          console.log(JSON.stringify(err));\r\n          // this.commonService.showCommonToastrError();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public isComplated(Id) {\r\n    return Id == EnmAnalysisStatus.Completed;\r\n  }\r\n  public isCanceled(Id) {\r\n    return Id == EnmAnalysisStatus.Canceled;\r\n  }\r\n  public isPending(Id) {\r\n    return Id == EnmAnalysisStatus.Pending;\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.bindSideFilterLabel();\r\n        // this.bindLabel();\r\n      });\r\n  }\r\n\r\n  triggerEvent(e) {\r\n    if (e == false) {\r\n      this.searchText1 = \"\";\r\n      this.sidefilterService.filter.selectedDr = this.selectedPhysician;\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.sidefilterService.filter.selectedDr = this.selectedPhysician;\r\n  }\r\n  selectedPhysician = [];\r\n  public onRequestingDrChange() {\r\n    this.sidefilterService.filter.PhysicianName = this.selectedPhysician.join();\r\n  }\r\n  selectionChangee($event) {\r\n    if ($event.isUserInput) {\r\n      console.log($event.source.value);\r\n      if (this.selectedPhysician.indexOf($event.source.value) == -1) {\r\n        this.selectedPhysician.push($event.source.value);\r\n      } else {\r\n        this.selectedPhysician.splice(\r\n          this.selectedPhysician.indexOf($event.source.value),\r\n          1\r\n        );\r\n      }\r\n      console.log(this.selectedPhysician);\r\n    }\r\n  }\r\n\r\n  public onSpeciesChange(speciesId) {\r\n    if (\r\n      this.sidefilterService.filter.SpeciesId != null &&\r\n      this.sidefilterService.filter.SpeciesId > 0\r\n    )\r\n      this.dsSubSpecies = this.dsSpecies.find(\r\n        (x) => x.Id === this.sidefilterService.filter.SpeciesId\r\n      )[\"SubSpecies\"];\r\n    else this.dsSubSpecies = [];\r\n\r\n    this.sidefilterService.filter.SpeciesId = speciesId;\r\n    this.getBreedList(speciesId);\r\n  }\r\n\r\n  public getBreedList(speciesId) {\r\n    const langId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    this.refLabService.getBreedListBySpeciesId(speciesId, langId).subscribe(\r\n      (res) => {\r\n        this.sidefilterService.filter.Breed = \"\";\r\n        this.breedList = res.ResponseData;\r\n      },\r\n      (err) => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      }\r\n    );\r\n  }\r\n\r\n  public onAnalyzerChange(element) {\r\n    // debugger\r\n    // console.log(this.dsAnalyzer);\r\n    this.sidefilterService.filter.Analyzer = element.AnalyzerName;\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.filter.AnalysisSourceId = element.AnalyzerName == \"Ref Lab\" ? 2 : 1;\r\n\r\n    this.dsAnalysisType = this.dataService.appState?.analysisTypeList?.filter(ele => {\r\n      if (element.AnalyzerDisplayName == \"Vetscan Vue/Vue+\" && new RegExp('Vetscan Vue', \"i\").test(ele.analyzerDisplayName)) {\r\n        return ele;\r\n      } else {\r\n        return ele.analyzerDisplayName == element.AnalyzerDisplayName;\r\n      }\r\n    })\r\n  }\r\n\r\n  public applyFilter(isFilter?, isMobile?) {\r\n    this.headerService.searchText = \"\";\r\n    this.commonService.firebase.analytics().logEvent(\"apply_filter\");\r\n\r\n    this.sidefilterService.filter.FromDate =\r\n      this.sidefilterService.FromDate != null\r\n        ? this.commonService.getMomentFromDateTime(\r\n          this.sidefilterService.FromDate\r\n        )\r\n        : null;\r\n    this.sidefilterService.filter.ToDate =\r\n      this.sidefilterService.ToDate != null\r\n        ? this.commonService.getMomentToDateTime(this.sidefilterService.ToDate)\r\n        : null;\r\n\r\n    this.sidefilterService.filter.IsApplyFilter = isFilter;\r\n    this.sidefilterService.filter.PageNo = 1;\r\n    this.outFilterBy.emit(this.sidefilterService.filter);\r\n    if (isMobile) this.closeFilter();\r\n  }\r\n\r\n  @ViewChild(\"myText\", { static: true }) myNameElem: ElementRef;\r\n\r\n  public clearFilter() {\r\n    this.myNameElem.nativeElement.value = \"\";\r\n    this.clearFilterEvent.emit(null);\r\n    this.setDefaultFilter();\r\n    this.applyFilter(false);\r\n    this.getPhysicianList(\"\", this.pageNumber, 60, null);\r\n    this.selectedPhysician = [];\r\n    this.ngOnInit();\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.dataService.appData.authDetails[\r\n      \"BusinessGuid\"\r\n    ];\r\n    this.sidefilterService.filter.LanguageId = this.dataService.appData.authDetails[\r\n      \"LanguageId\"\r\n    ];\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails[\r\n      \"UserGuid\"\r\n    ];\r\n    this.sidefilterService.filter.AnalysisSourceId = this.dataService.appData\r\n      .authDetails[\"IsLinkedRefLabClinic\"]\r\n      ? 0\r\n      : 1;\r\n    this.sidefilterService.filter.AnalysisTypeId = null;\r\n    // this.sidefilterService.FromDate = null;\r\n    // this.sidefilterService.ToDate = null;\r\n    this.sidefilterService.FromDate = new Date(this.commonService.twoYearBeforeFromToday);\r\n    this.sidefilterService.ToDate = this.commonService.today;\r\n    this.dsSubSpecies = [];\r\n    this.breedList = [];\r\n  }\r\n\r\n  closeFilter() {\r\n    this.commonService.closeFilterForPatient.next(true);\r\n  }\r\n\r\n  public getPhysicianList(SearchText, PageNo, PageSize, AnalysisSourceId) {\r\n    const dd = {\r\n      BusinessGuid: localStorage.businessGuid,\r\n      AnalysisSourceId: AnalysisSourceId,\r\n      PageSize: PageSize,\r\n      PageNo: PageNo,\r\n      SearchText: SearchText,\r\n    };\r\n    this.refLabService.GetProvidersFilterList(dd).subscribe(\r\n      (data) => {\r\n        if (PageNo == 1) {\r\n          // this.doctorList = data.ResponseData.Physician;\r\n          const uniquePhysicians = [];\r\n          const seenNames = new Set();\r\n          data.ResponseData.Physician?.forEach(ele => {\r\n            if (ele['FirstName'] == ele['LastName']) {\r\n              ele['LastName'] = \"\";\r\n              ele['PhysicianIdName'] = ele['FirstName']\r\n            }\r\n            const cleanedName = ele.PhysicianIdName.replace(/\\s*\\([^)]*\\)$/, \"\").trim().toLowerCase();\r\n            if (!seenNames.has(cleanedName)) {\r\n              seenNames.add(cleanedName);\r\n              uniquePhysicians.push({\r\n                ...ele,\r\n                PhysicianIdName: cleanedName\r\n              });\r\n            };\r\n          });\r\n          this.doctorList = uniquePhysicians;\r\n        }\r\n        this.pageNumber += 1;\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"resp clse\">\r\n  <p (click)=\"closeFilter()\">X <span>{{ labelService.dsSideFilterScreen.Cancel }}</span></p>\r\n</div>\r\n<div class=\"resp respfilter\">\r\n  <div class=\"d-flex justify-content-between mt-4\">\r\n    <span class=\"filter-head\">{{labelService.dsSideFilterScreen.FILTERS}}</span>\r\n    <a class=\"clrall\" (click)=\"clearFilter()\">{{labelService.dsSideFilterScreen.ClearAll}}</a>\r\n  </div>\r\n</div>\r\n<div class=\"pl-4 pr-4\">\r\n  <div class=\"desk d-flex justify-content-between mt-4\">\r\n    <span class=\"filter-head\">{{labelService.dsSideFilterScreen.FILTERS}}</span>\r\n    <a class=\"clrall\" (click)=\"clearFilter()\">{{labelService.dsSideFilterScreen.ClearAll}}</a>\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-column\">\r\n    <div class=\"mt-1\" *ngIf=\"isVisiblePatientID\">\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n        <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.PatientID\" maxlength=\"20\"\r\n          [(ngModel)]=\"sidefilterService.filter.PatientId\" (keyup.enter)=\"applyFilter(true)\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <div class=\"mt-2\" *ngIf=\"isVisiblePatientName\">\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n          <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.PatientName\" maxlength=\"20\"\r\n            [(ngModel)]=\"sidefilterService.filter.PatientName\" (keyup.enter)=\"applyFilter(true)\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isVisibleOwnerName\">\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n        <input type=\"text\" matInput [placeholder]=\"labelService.dsSideFilterScreen.OwnerName\" maxlength=\"20\"\r\n          [(ngModel)]=\"sidefilterService.filter.OwnerName\" (keyup.enter)=\"applyFilter(true)\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mt-2\" *ngIf=\"isVisibleSpecies\">\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n        <mat-select (selectionChange)=\"onSpeciesChange($event.value)\" [(ngModel)]=\"sidefilterService.filter.SpeciesId\"\r\n          [placeholder]=\"labelService.dsSideFilterScreen.Species\">\r\n          <mat-option value=\"\">{{labelService.dsSideFilterScreen.Species}}</mat-option>\r\n          <mat-option *ngFor=\"let species of dsSpecies\" [value]=\"species.Code\">\r\n            {{species.Code}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mt-2\" *ngIf=\"isVisibleGender\">\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n      <mat-select [placeholder]=\"labelService.dsSideFilterScreen.Sex\" [(ngModel)]=\"sidefilterService.filter.GenderId\">\r\n        <mat-option *ngFor=\"let gender of dsGender\" [value]=\"gender.Id\">\r\n          {{gender.GenderName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mt-2\" [hidden]=\"!isVisibleDVM\">\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n      <mat-select [placeholder]=\"labelService.dsSideFilterScreen.SearchRequestingDoctor\" multiple\r\n        (selectionChange)=\"onRequestingDrChange()\" #select=\"matSelect\" (openedChange)=\"triggerEvent($event)\"\r\n        [(ngModel)]=\"sidefilterService.filter.selectedDr\">\r\n        <input #myText type=\"text\" [placeholder]=\"labelService.dsSideFilterScreen.SearchRequestingDoctor\" matInput\r\n          style=\"margin:12px;\" [(ngModel)]=\"searchText1\" (ngModelChange)=\"onChange()\">\r\n        <mat-option (onSelectionChange)=\"selectionChangee($event)\"\r\n          *ngFor=\"let dr of doctorList | physicianFilter : searchText1\" [value]=\"dr.FirstName+ ' ' +dr.LastName\">\r\n          <!-- {{dr.PhysicianIdName | titlecase}} -->\r\n          {{dr?.FirstName}} {{dr?.LastName}}\r\n        </mat-option>\r\n        <p style=\"text-align: center;\" *ngIf=\"(doctorList | physicianFilter : searchText1)?.length <=0\">\r\n          {{labelService.dsSideFilterScreen.NoRecordsFound}}\r\n        </p>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-column range\">\r\n    <div class=\"r-head mt-3 heading\">{{labelService.dsSideFilterScreen.ResultDate}}</div>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n        <input matInput [placeholder]=\"labelService.dsSideFilterScreen.From\" [matDatepicker]=\"pickerFrom\"\r\n          (focus)=\"pickerFrom.open()\" [(ngModel)]=\"this.sidefilterService.FromDate\"\r\n          [max]=\"this.sidefilterService.ToDate !== null ? this.sidefilterService.ToDate : commonService.getCurrentDate()\"\r\n          readonly>\r\n        <mat-datepicker-toggle matPrefix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n        <mat-datepicker #pickerFrom></mat-datepicker>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n        <input matInput [placeholder]=\"labelService.dsSideFilterScreen.To\" [matDatepicker]=\"pickerTo\"\r\n          (focus)=\"pickerTo.open()\" [(ngModel)]=\"this.sidefilterService.ToDate\" [min]=\"this.sidefilterService.FromDate\"\r\n          [max]=\"commonService.getCurrentDate()\" readonly>\r\n        <mat-datepicker-toggle matPrefix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n        <mat-datepicker #pickerTo></mat-datepicker>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-column mt-3 \" *ngIf=\"isVisibleSource\">\r\n    <div class=\"r-head mt-1  heading\">{{labelService.dsSideFilterScreen.Source}}</div>\r\n    <div class=\"d-flex flex-column\">\r\n      <mat-radio-group class=\"d-flex flex-column\" [(ngModel)]=\"sidefilterService.filter.AnalysisSourceId\">\r\n        <div class=\"d-flex justify-content-between mb-1\">\r\n          <mat-radio-button class=\"example-margin\" [value]=0>\r\n            {{labelService.dsSideFilterScreen.All}}\r\n          </mat-radio-button>\r\n        </div>\r\n        <div class=\"d-flex justify-content-between mb-1\">\r\n          <mat-radio-button class=\"example-margin\" [value]=\"1\">\r\n            {{labelService.dsSideFilterScreen.InClinic}}\r\n          </mat-radio-button>\r\n          <span style=\"margin-right: -4px!important;\">\r\n            <img class=\"mr-0 ng-star-inserted\" height=\"16\" Src=\"../../../assets/img/poc-icon@2x.png\" alt=\"poc-icon\" />\r\n          </span>\r\n        </div>\r\n        <div class=\"d-flex justify-content-between mb-1\">\r\n          <mat-radio-button class=\"example-margin\" [value]=\"2\">\r\n            {{labelService.dsSideFilterScreen.RefLab}}\r\n          </mat-radio-button>\r\n          <span>\r\n            <img class=\"mr-0 ng-star-inserted\" height=\"20\" Src=\"../../../assets/img/lab-icon@2x.png\" alt=\"lab-icon\" />\r\n          </span>\r\n        </div>\r\n      </mat-radio-group>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mt-2\" *ngIf=\"isVisibleAnalyzer\">\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n      <mat-select [placeholder]=\"labelService.dsSideFilterScreen.AnalysisSource\"\r\n        (selectionChange)=\"onAnalyzerChange($event.value)\">\r\n        <mat-option *ngFor=\"let analyzer of dsAnalyzer\" [value]=\"analyzer\">\r\n          {{analyzer.AnalyzerDisplayName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mt-2\" *ngIf=\"isVisibleAnalysisType\">\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n      <mat-select [placeholder]=\"labelService.dsSideFilterScreen.AnalysisType\"\r\n        [(ngModel)]=\"sidefilterService.filter.AnalysisTypeName\">\r\n        <mat-option *ngFor=\"let analysisType of dsAnalysisType\" [value]=\"analysisType?.analysisTypeName\">\r\n          {{analysisType?.analysisTypeName}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-column mt-3 \" *ngIf=\"isVisibleStatus\">\r\n    <div class=\"r-head mt-1  heading\">{{labelService.dsSideFilterScreen.Status}}</div>\r\n    <div class=\"d-flex flex-column\">\r\n      <mat-radio-group class=\"d-flex flex-column\" [(ngModel)]=\"sidefilterService.filter.AnalysisStatusId\">\r\n        <div class=\"d-flex justify-content-between mb-1\">\r\n          <mat-radio-button class=\"example-margin\" [value]=0>\r\n            {{labelService.dsSideFilterScreen.All}}\r\n          </mat-radio-button>\r\n        </div>\r\n        <div class=\"d-flex justify-content-between mb-1\" *ngFor=\"let status of dsAnalysisStatus\">\r\n          <mat-radio-button class=\"example-margin\" [value]=\"status.Id\">\r\n            {{status.Status}}\r\n            <span class=\"status-info-icon\" [matTooltip]=\"status.Info\" [matTooltipPosition]=\"status.Placement || 'below'\"\r\n              matTooltipClass=\"below\"><img src=\"./assets/img/info.png\" alt=\"\"></span>\r\n          </mat-radio-button>\r\n          <span [ngClass]=\"{'completed': isComplated(status.Id), \r\n                        'cancelled': isCanceled(status.Id),\r\n                        'pending': isPending(status.Id)}\">\r\n          </span>\r\n        </div>\r\n      </mat-radio-group>\r\n    </div>\r\n  </div>\r\n  <div class=\"mt-5 mb-3 d-flex justify-content-center applydesk\">\r\n    <button class=\"w-25\" mat-raised-button color=\"warn\" (click)=\"applyFilter(true, false)\">\r\n      {{labelService.dsSideFilterScreen.Apply}}\r\n    </button>\r\n  </div>\r\n  <!---mobile responsive button-->\r\n  <div class=\"mt-5 mb-3 d-flex justify-content-center applymob\">\r\n    <button class=\"w-25\" mat-raised-button color=\"warn\" (click)=\"applyFilter(true, true)\">\r\n      {{labelService.dsSideFilterScreen.Apply}}\r\n    </button>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-clinic-management',\r\n  templateUrl: './clinic-management.component.html',\r\n  styleUrls: ['./clinic-management.component.css']\r\n})\r\nexport class ClinicManagementComponent {\r\n\r\n  panelOpenState: boolean;\r\n\r\n  constructor() {\r\n    this.panelOpenState = false\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div> <app-header></app-header></div>\r\n\r\n    <div class=\"outer sidefilter\">\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-sm-9\">\r\n          <mat-card>\r\n            <div class=\"mt-4\">\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <div class=\"col\">\r\n                  <button type=\"button\" class=\"btn btn-light back mr-4\" routerLink=\"/login\">\r\n                    <em class=\"fa fa-angle-left\"></em> Back\r\n                  </button>\r\n                </div>\r\n                <div class=\"col text-uppercase text-center\">\r\n                  <h5 data-testid=\"cm-title\">Clinic Management View</h5>\r\n                </div>\r\n                <div class=\"col text-right pr-0\">\r\n                  <button type=\"button\" class=\"btn addclinic  \" routerLink=\"/login\">\r\n                    Add Clinic\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <table class=\"table\" summary=\"\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Clinic Name</th>\r\n                    <th scope=\"col\">Address</th>\r\n                    <th scope=\"col\">Zip Code</th>\r\n                    <th scope=\"col\">Phone No.</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">Paw</th>\r\n                    <td>121,NY</td>\r\n                    <td>75821</td>\r\n                    <td>124568951</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-9\">\r\n                  <div class=\"row mt-4\">\r\n                    <div class=\"col\">\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <mat-label>FUSE Serial No. </mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"Enter Phone No.\" maxlength=\"15\" />\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <mat-label>Enter Pin. </mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"Enter Phone No.\" maxlength=\"15\" />\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                      <img class=\"mr-2 mt-2\" src=\"../../../assets/img/plus.png\" alt=\"img\" />\r\n                      <img class=\"mt-2\" src=\"../../../assets/img/minus.png\" alt=\"img\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3 d-flex justify-content-end align-items-center\">\r\n                  <button class=\"mt-2 g-btn\" mat-flat-button color=\"accent\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n\r\n        <div class=\"col-sm-3 right-filter\">\r\n          <app-sidefilter></app-sidefilter>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, UntypedFormArray, AbstractControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserDetails, UserListDetails, UserList } from '../../models/user';\r\nimport { ConfirmationDialogService } from '../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { LabelService, DataService, HeaderService, CommonService, RefLabService } from '../../services';\r\ndeclare const gtag: (...arg) => void;\r\n// declare const gtag: Function;\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  public user: UserDetails;\r\n  public userForm: UntypedFormGroup;\r\n  public userTypeList: any[] = [];\r\n  public rolesType: any[] = [];\r\n  public userListDetails: any;\r\n  public userList: UserList;\r\n  public isAddingMultiple: boolean;\r\n  public headerTxt = '';\r\n  public emailPlaceholder = '';\r\n  public message = \"\";\r\n  public authDetails: any;\r\n  @Input() public requestFrom: any;\r\n  @Input() public businessInfo: any;\r\n\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    public commonService: CommonService,\r\n    public refLabService: RefLabService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    public headerService: HeaderService,\r\n    public router: Router,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public activeModal: NgbActiveModal) {\r\n    this.authDetails = this.dataService.appData.authDetails;\r\n    this.user = new UserDetails();\r\n    // this.userForm = this.createFormGroup(this.user);\r\n    this.emailPlaceholder = this.labelService.dsUserManagementScreen.EnterEmail;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n    const countryId = (this.dataService.appData.authDetails['BackOfficeFlag'] && bckBusinessInfo && bckBusinessInfo['BCountryId']) ? bckBusinessInfo['BCountryId'] : localStorage.getItem('userCountryId');\r\n    this.refLabService.insideUSCAuser = [31, 40].indexOf(parseInt(countryId)) === -1 ? false : true;\r\n    this.userForm = this.formBuilder.group({\r\n      //Id: '',\r\n      FirstName: ['', Validators.compose([Validators.maxLength(50), Validators.pattern('[^,;:!`~\"?#&@$%^+{}*<>=]+$')])],\r\n      LastName: ['', Validators.compose([Validators.maxLength(50), Validators.pattern('[^,;:!`~\"?#&@$%^+{}*<>=]+$')])],\r\n\r\n      UserTypeId: this.formBuilder.array([null]), // ['dvm','vettech']\r\n      Email: this.formBuilder.array([null]),\r\n      BusinessGuid: this.headerService.businessGuid,\r\n    });\r\n\r\n    // =====================\r\n    this.commonService.getUserManagmentDDLDetails(this.labelService.selectedLanguage, null).subscribe(data => {\r\n      this.userTypeList = data.ResponseData.UserTypeList;\r\n      if (!this.refLabService.insideUSCAuser) {\r\n        // this.rolesType = this.userTypeList.filter(item => !/\\([^)]+\\)/.test(item.TypeName));\r\n        this.rolesType = this.userTypeList.filter(item => !/[()]/g.test(item.TypeName));\r\n      } else {\r\n        this.rolesType = data.ResponseData.UserTypeList\r\n      }\r\n      // this.dsTitle = data.ResponseData.TitleDetails;\r\n    });\r\n\r\n  }\r\n\r\n  public addMultipleUsers() {\r\n    this.isAddingMultiple = true;\r\n    this.headerTxt = this.labelService.dsUserManagementScreen.AddMultipleUsers;\r\n  }\r\n\r\n  public onSubmit() {\r\n    this.checkEmailValidation();\r\n    if (this.userForm.valid) {\r\n      this.userListDetails = new UserListDetails();\r\n\r\n      try {\r\n        gtag('event', 'User_Management', {\r\n          Total_Users: '',\r\n          User_Name: this.userForm.value.FirstName + ' ' + this.userForm.value.LastName,\r\n          User_Role: this.userForm.value.UserTypeId,\r\n          User_Email_ID: this.userForm.value.Email,\r\n          User_Phone: '',\r\n          User_Status: 'Request Sent',\r\n          User_Action: 'Add User',\r\n        })\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n\r\n      if (this.requestFrom == 'admin') {\r\n        // this.userListDetails.BusinessId = this.businessInfo.BusinessId;\r\n        this.userListDetails.BusinessGuid = this.businessInfo.BusinessGuid;\r\n        this.userListDetails.CreatedGuid = null;\r\n        this.userListDetails.LanguageId = 1;\r\n      } else {\r\n        // this.userListDetails.BusinessId = this.headerService.businessGuid;\r\n        this.userListDetails.BusinessGuid = localStorage.businessGuid;\r\n        this.userListDetails.CreatedGuid = this.headerService.loginUserGuid;\r\n        this.userListDetails.LanguageId = this.labelService.selectedLanguage; // localStorage['languageId'];\r\n      }\r\n\r\n      this.userListDetails.ObjUsersModel = [];\r\n      for (let i = 0; i < this.userForm.value.Email.length; i++) {\r\n        this.userList = new UserList();\r\n        this.userList.FirstName = this.userForm.value.FirstName;\r\n        this.userList.LastName = this.userForm.value.LastName;\r\n        this.userList.Email = this.userForm.value.Email[i];\r\n        this.userList.RoleID = this.userForm.value.UserTypeId[i];\r\n        this.userListDetails.ObjUsersModel.push(this.userList);\r\n      }\r\n\r\n      this.commonService.addUpdateMultipleUsers(this.userListDetails).subscribe(() => {\r\n        let okText: string;\r\n        if (this.requestFrom == 'admin') {\r\n          okText = 'OK';\r\n        } else {\r\n          okText = this.labelService.dsUserManagementScreen.OK;\r\n        }\r\n\r\n        this.activeModal.close('inviteSuccess');\r\n        this.confirmationDialogService.confirm(\"\", this.labelService.dsUserManagementScreen.UserAddedSuccessfully, okText, \"\", \"sm\", true, false)\r\n          .then(() => {\r\n            //do someting\r\n          })\r\n          .catch(() => console.log('Error Ocoured'));\r\n      }, error => {\r\n        if (error.error.DisplayMessage == \"Data not Saved\") {\r\n          if (error.error.ResponseData != undefined) {\r\n            this.message = \"\";\r\n            const index = ((<UntypedFormArray>this.userForm.get('Email')).controls.length);\r\n            const indexarr = [];\r\n            for (let i = 0; i < error.error.ResponseData.length; i++) {\r\n              this.message += error.error.ResponseData[i].Email;\r\n              if (i != error.error.ResponseData.length - 1)\r\n                this.message += \", \";\r\n\r\n              for (let indx = 0; indx < index; indx++) {\r\n                if (this.userForm.value.Email[indx].trim() == error.error.ResponseData[i].Email.trim())\r\n                  indexarr.push(indx);\r\n              }\r\n            }\r\n            this.message += \" \" + this.labelService.dsUserManagementScreen.EmailAlreadyExists;\r\n          }\r\n        }\r\n        else\r\n          this.message = this.labelService.dsUserManagementScreen.Error;\r\n      });\r\n    }\r\n    else {\r\n      this.message = this.labelService.dsUserManagementScreen.PleaseEnterMandatoryFields;\r\n    }\r\n  }\r\n\r\n  addRow(): void {\r\n    (this.userForm.get('UserTypeId') as UntypedFormArray).push(this.formBuilder.control(null));\r\n    (this.userForm.get('Email') as UntypedFormArray).push(this.formBuilder.control(null));\r\n  }\r\n\r\n  removeRow() {\r\n    const index = ((<UntypedFormArray>this.userForm.get('Email')).controls.length) - 1;\r\n    if (index > 0) {\r\n      (this.userForm.get('UserTypeId') as UntypedFormArray).removeAt(index);\r\n      (this.userForm.get('Email') as UntypedFormArray).removeAt(index);\r\n    }\r\n\r\n  }\r\n\r\n  public checkEmailValidation() {\r\n    for (let i = 0; i < this.userForm.value.Email.length; i++) {\r\n      if (!this.checkEmailPater((<UntypedFormArray>this.userForm.get('Email')).controls[i].value))\r\n        (<UntypedFormArray>this.userForm.get('Email')).controls[i].setErrors({ status: \"INVALID\" });\r\n    }\r\n  }\r\n\r\n  public checkEmailPater(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  public checkDublicateEmail(email) {\r\n    let cnt = 0;\r\n    this.userForm.get('Email').value.forEach(ele => {\r\n      if (ele == email.value) {\r\n        cnt++;\r\n        if (cnt > 1)\r\n          email.setErrors({ status: \"INVALID\" });\r\n      }\r\n    });\r\n    if (cnt <= 1 && !this.checkEmailPater(email.value))\r\n      email.setErrors({ status: \"INVALID\" });\r\n  }\r\n\r\n  getUserTypeIdFormControls(): AbstractControl[] {\r\n    return (<UntypedFormArray>this.userForm.get('UserTypeId')).controls;\r\n  }\r\n\r\n  getEmailFormControls(): AbstractControl[] {\r\n    return (<UntypedFormArray>this.userForm.get('Email')).controls;\r\n  }\r\n\r\n}\r\n","<!-- =================For single User================== -->\r\n\r\n<div class=\"modal-header\">\r\n  <h5 class=\"modal-title\" id=\"editProfileLabel\">{{headerTxt}}</h5>\r\n</div>\r\n<div style=\"text-align: right; margin: 0px 8px;margin-bottom: 10px;\">\r\n  <span class=\"custom-error\">{{message}}</span>\r\n  <ng-container *ngIf=\"!isAddingMultiple\">\r\n    <button type=\"button\" class=\"multuser\" mat-flat-button color=\"accent\"\r\n      (click)=\"addMultipleUsers()\">{{labelService.dsUserManagementScreen.AddMultipleUsers}} </button>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"isAddingMultiple\">\r\n    <button type=\"button\" mat-flat-button color=\"accent\" style=\"margin: 0px 7px;\" (click)=\"removeRow()\"\r\n      class=\"cncl_btn \"> {{labelService.dsUserManagementScreen.DeleteRow}} </button>\r\n    <button type=\"button\" mat-flat-button color=\"accent\" (click)=\"addRow()\">\r\n      {{labelService.dsUserManagementScreen.AddRow}} </button>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"modal-body edit-profile\">\r\n\r\n  <form class=\"add-user-form\" [formGroup]=\"userForm\" autocomplete=\"off\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row mt-5\" [hidden]=\"isAddingMultiple\">\r\n      <div class=\"col\">\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"left_block\">\r\n          <mat-label>{{labelService.dsUserManagementScreen.FirstName}} </mat-label>\r\n          <input type=\"text\" matInput autocomplete=\"off\"\r\n            [placeholder]=\"labelService.dsUserManagementScreen.EnterFirstName\" formControlName=\"FirstName\"\r\n            maxlength=\"50\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col\">\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"right_block\">\r\n          <mat-label>{{labelService.dsUserManagementScreen.LastName}} </mat-label>\r\n          <input type=\"text\" matInput autocomplete=\"off\"\r\n            [placeholder]=\"labelService.dsUserManagementScreen.EnterLastName\" formControlName=\"LastName\"\r\n            maxlength=\"50\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <!-- LOOP -->\r\n    <div class=\"row multuser_outer\" [ngClass]=\"{'addbox':isAddingMultiple}\">\r\n      <div class=\"col\">\r\n        <ng-container *ngFor=\"let UserTypeId of getUserTypeIdFormControls()\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"left_block\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.Role}}</mat-label>\r\n            <mat-select required [formControl]=\"UserTypeId\" [placeholder]=\"labelService.dsUserManagementScreen.Choose\">\r\n              <mat-option *ngFor=\"let userType of rolesType\" [value]=\"userType.Id\">\r\n                {{userType.TypeName}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </ng-container>\r\n      </div>\r\n      <div class=\"col\">\r\n        <ng-container *ngFor=\"let Email of getEmailFormControls()\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"right_block right-part\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.Email}}</mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\" [placeholder]=\"emailPlaceholder\" maxlength=\"100\"\r\n              (blur)=\"checkDublicateEmail(Email)\" [formControl]=\"Email\" required />\r\n          </mat-form-field>\r\n          <!-- <button (click)=\"removeRow(i)\">Remove</button> -->\r\n\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n    <!-- LOOP END -->\r\n\r\n    <div class=\"row mt-5 justify-content-center\">\r\n      <button type=\"button\" mat-flat-button color=\"accent\" style=\"margin: 5px 15px;\"\r\n        (click)=\"activeModal.close('close')\">\r\n        {{labelService.dsUserManagementScreen.Close}}\r\n      </button>\r\n      <button mat-flat-button color=\"accent\" type=\"submit\">\r\n        {{labelService.dsUserManagementScreen.SendInvite}}\r\n      </button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { LabelService, HeaderService, CommonService, DataService, RefLabService } from '../../../services';\r\nimport { UserDetails } from '../../../models/user';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { EnmUserStatus, EnmTitle, EnmUserType } from '../../../shared/constants/enum';\r\nimport { AddUserComponent } from '../../../modules/add-user/add-user.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertMessageComponent } from '../../../components/alert-message/alert-message.component';\r\nimport { Title } from '@angular/platform-browser';\r\n// declare const gtag: Function;\r\ndeclare const gtag: (...arg) => void;\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  label1 = 'Inactive';\r\n  label2 = 'Active';\r\n  public userStatusId = 0;\r\n  public userTypeId = 0;\r\n  public userId: number = localStorage.authDetails ? JSON.parse(localStorage.authDetails).UserGuid:null;\r\n  public dsUserStatus: any[] = [];\r\n  public dsUserType: any[] = [];\r\n  public rolesType: any[] = [];\r\n  public dsTitle: any[] = [];\r\n  public rowwiseData: any;\r\n  public user: any;\r\n  public providerData: any[] = [];\r\n  public physician: any[] = [];\r\n  public dsUserList: UserDetails[];\r\n  public popupTitle: string;\r\n  public popupSubmitText: string;\r\n  public isEmailReadOnly = true;\r\n  public isStatueRequestSent = false;\r\n  public islinkDoctor = false;\r\n  public deleteDoctor = false;\r\n  public hideModal = false;\r\n  public linkID = false;\r\n  public linkingMsg = false;\r\n  public linkingOK = false;\r\n  public DelMsg = false;\r\n  // public checkClinicID:boolean = false\r\n  public bottonsCondition = false;\r\n  public RecordExist = false;\r\n  public checked = true;\r\n  public checkedIN = false;\r\n  public userExist: string;\r\n  public targetModal: any;\r\n  public dataItem: any;\r\n  public selectedProvider: any;\r\n  checkProviderID: any;\r\n  checkClinicID: any;\r\n  displayedColumns: string[] = ['FullName', 'UserType', 'Email', 'PhoneNo', 'Status', 'action'];\r\n  dataSource = new MatTableDataSource<UserDetails>();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public addUserForm: UntypedFormGroup;\r\n  public CheckForm: UntypedFormGroup = new UntypedFormGroup({});\r\n  public popupMsgs: any;\r\n  public selectedRole: any;\r\n  public isBackOfficeUser: boolean;\r\n  public selectedInclinic: any;\r\n  ReflabIDOUT: string;\r\n  InclinicIDout: string;\r\n  public helpObj: any;\r\n  public selectedUser: any;\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public headerService: HeaderService,\r\n    private fb: UntypedFormBuilder,\r\n    private modalService: NgbModal,\r\n    public refLabService: RefLabService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public labelService: LabelService,\r\n     public title:Title,\r\n    public dataService: DataService) {\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    // // this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'] == 'True' ? true : false;\r\n    this.CheckForm = fb.group({\r\n      checkProviderID: [true],\r\n      checkClinicID: [false]\r\n    })\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindUserManagementLabel();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsUserManagementScreen.UserManagement}`)\r\n    this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == 'User-Management');\r\n    const bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n    const countryId = (this.dataService.appData.authDetails['BackOfficeFlag'] && bckBusinessInfo && bckBusinessInfo['BCountryId']) ? bckBusinessInfo['BCountryId'] : localStorage.getItem('userCountryId');\r\n    this.refLabService.insideUSCAuser = [40].indexOf(parseInt(countryId)) === -1 ? false : true;\r\n\r\n    if (localStorage.getItem('alert-popup') == 'true') {\r\n      this.modalService.open(AlertMessageComponent, {\r\n        centered: true,\r\n        backdrop: 'static',\r\n        scrollable: false\r\n      });\r\n    }\r\n    this.commonService.getUserManagmentDDLDetails(this.labelService.selectedLanguage, null).subscribe(data => {\r\n      this.dsUserStatus = data.ResponseData.StatusList;\r\n      this.dsUserType = data.ResponseData.UserTypeList;\r\n      this.dsTitle = data.ResponseData.TitleDetails;\r\n      if (!this.refLabService.insideUSCAuser) {\r\n        this.rolesType = this.dsUserType.filter(item => !/[()]/g.test(item.TypeName));\r\n      } else {\r\n        this.rolesType = data.ResponseData.UserTypeList\r\n      }\r\n    });\r\n    this.getUserList();\r\n\r\n  }\r\n\r\n  public openAddUserModal() {\r\n    const modalRef = this.modalService.open(AddUserComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      scrollable: false\r\n    });\r\n    modalRef.componentInstance.headerTxt = this.labelService.dsUserManagementScreen.AddUser;\r\n    modalRef.componentInstance.requestFrom = 'clinic';\r\n\r\n    modalRef.result.then((result) => {\r\n      if (result == 'inviteSuccess') {\r\n        this.getUserList();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindUserManagementLabel();\r\n    });\r\n  }\r\n\r\n  public getUserList() {\r\n    this.commonService.getUserList(this.headerService.loginUserGuid, this.headerService.selectedBusinessGuid, this.userStatusId > 0 ? this.userStatusId : null, this.userTypeId > 0 ? this.userTypeId : null, this.labelService.selectedLanguage).subscribe({next:(data) => {\r\n      this.dsUserList = data.ResponseData;\r\n      this.dataSource = new MatTableDataSource<UserDetails>(this.dsUserList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error:() => {\r\n      this.dataSource = null;\r\n\r\n    }});\r\n  }\r\n\r\n  public GetProviderDetails() {\r\n    this.commonService.GetProviderList(localStorage.businessGuid).subscribe(data => {\r\n      this.providerData = data.ResponseData.Provider;\r\n      this.physician = data.ResponseData.Physician;\r\n    });\r\n  }\r\n\r\n  openModal(targetModal, user) {\r\n    this.selectedUser = user;\r\n    this.userExist = \"\";\r\n\r\n    if (user != null) {\r\n      this.commonService.getUserManagmentDDLDetails(this.labelService.selectedLanguage, user.PrefixTypeId).subscribe(data => {\r\n        this.dsTitle = data.ResponseData.TitleDetails;\r\n      });\r\n      this.rowwiseData = user;\r\n      this.popupTitle = this.labelService.dsUserManagementScreen.EditProfile;\r\n\r\n      this.popupSubmitText = this.labelService.dsUserManagementScreen.Savechanges;\r\n      this.hideModal = false;\r\n      this.linkID = false;\r\n      this.bottonsCondition = false;\r\n      this.linkingMsg = false;\r\n      this.linkingOK = false;\r\n      this.DelMsg = false;\r\n      this.RecordExist = false;\r\n      this.islinkDoctor = false;\r\n      this.deleteDoctor = false;\r\n      if (user.UserTypeId == EnmUserType.DVM && user.RefLabProviderId == \"\" && user.InClinicProviderId == \"\" || user.UserTypeId == 35 && user.RefLabProviderId == \"\" && user.InClinicProviderId == \"\") {\r\n        this.islinkDoctor = true;\r\n      }\r\n      if (user.UserTypeId == EnmUserType.DVM && user.RefLabProviderId != \"\" || user.UserTypeId == EnmUserType.DVM && user.InClinicProviderId != \"\" ||\r\n        user.UserTypeId == 35 && user.RefLabProviderId != \"\" || user.UserTypeId == 35 && user.InClinicProviderId != \"\") {\r\n        this.deleteDoctor = true;\r\n      }\r\n\r\n      if (user.StatusId == EnmUserStatus.RequestSent)\r\n        this.isStatueRequestSent = true;\r\n      else\r\n        this.isStatueRequestSent = false;\r\n      this.isEmailReadOnly = true;\r\n      this.addUserForm = this.createFormGroup(user);\r\n    }\r\n    else {\r\n      this.popupTitle = this.labelService.dsUserManagementScreen.AddUser;\r\n      this.islinkDoctor = false;\r\n      this.deleteDoctor = false;\r\n      this.popupSubmitText = this.labelService.dsUserManagementScreen.SendInvite;\r\n      this.isStatueRequestSent = false;\r\n      this.isEmailReadOnly = false;\r\n      this.addUserForm = this.createFormGroup(new UserDetails());\r\n      this.hideModal = false;\r\n      this.linkID = false;\r\n      this.bottonsCondition = false;\r\n      this.linkingMsg = false;\r\n      this.linkingOK = false;\r\n      this.DelMsg = false;\r\n      this.RecordExist = false;\r\n      this.islinkDoctor = false;\r\n      this.deleteDoctor = false;\r\n    }\r\n\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      keyboard: false\r\n    });\r\n  }\r\n\r\n  public linkDoctorid() {\r\n    if (this.rowwiseData.RefLabProviderId == \"\" || this.rowwiseData.InClinicProviderId == \"\") {\r\n      this.GetProviderDetails();\r\n      this.popupTitle = this.labelService.dsUserManagementScreen.LinkDoctorID;\r\n      this.hideModal = true;\r\n      this.linkID = true;\r\n      this.bottonsCondition = true;\r\n    }\r\n  }\r\n\r\n  public deleteDoctorid() {\r\n    if (this.rowwiseData.RefLabProviderId != \"\" || this.rowwiseData.InClinicProviderId != \"\") {\r\n      this.hideModal = true;\r\n\r\n      this.RecordExist = true;\r\n      return this.popupTitle = this.labelService.dsUserManagementScreen.DeleteID;\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.CheckForm.controls;\r\n  }\r\n\r\n  changeValue(value, IN) {\r\n    if (IN == undefined) {\r\n      this.checked = !value;\r\n    }\r\n    if (IN != undefined) {\r\n      this.checkedIN = !value;\r\n    }\r\n  }\r\n\r\n  public DeleteProvider() {\r\n    if (this.rowwiseData.RefLabProviderId != \"\" && this.CheckForm.controls['checkProviderID'].value == true || this.rowwiseData.InClinicProviderId != \"\" && this.CheckForm.controls['checkClinicID'].value == true) {\r\n      if (this.rowwiseData.RefLabProviderId != \"\" && this.CheckForm.controls['checkProviderID'].value == true) {\r\n        this.ReflabIDOUT = \"\";\r\n      }\r\n      else {\r\n        this.ReflabIDOUT = this.rowwiseData.SelectedRefLabProviderId;\r\n      }\r\n      if (this.rowwiseData.InClinicProviderId != \"\" && this.CheckForm.controls['checkClinicID'].value == true) {\r\n        this.InclinicIDout = \"\";\r\n      } else {\r\n        this.InclinicIDout = this.rowwiseData.SelectedInClinicProviderId;\r\n      }\r\n      const reflabID = {\r\n        ReflabProviderId: this.ReflabIDOUT,\r\n        ClinicProviderId: this.InclinicIDout,\r\n        FirstName: \"\",\r\n        LastName: \"\",\r\n        BusinessGuid: localStorage.businessGuid,\r\n        UserGuid: this.rowwiseData.UserGuid\r\n      }\r\n      this.commonService.postProviderDetails(reflabID).subscribe(() => {\r\n        this.getUserList();\r\n        this.RecordExist = false;\r\n        this.DelMsg = true;\r\n        this.linkingOK = true;\r\n        this.checkedIN = false;\r\n        this.CheckForm.get('checkClinicID').setValue(false);\r\n      });\r\n    }\r\n    return this.popupTitle = this.labelService.dsUserManagementScreen.DeleteID;\r\n  }\r\n\r\n  public PostProviderDetails() {\r\n    const providerDetails = {\r\n      ReflabProviderId: this.selectedProvider ? this.selectedProvider.Id : '',\r\n      ClinicProviderId: this.selectedInclinic.Id,\r\n      FirstName: this.selectedProvider ? this.selectedProvider.FirstName : this.selectedInclinic.FirstName,\r\n      LastName: this.selectedProvider ? this.selectedProvider.LastName : this.selectedInclinic.LastName,\r\n      BusinessGuid: localStorage.businessGuid,\r\n      UserGuid: this.rowwiseData.UserGuid\r\n    }\r\n\r\n    // {\r\n    this.commonService.postProviderDetails(providerDetails).subscribe(data => {\r\n      if (data.StatusCode == \"302\") {\r\n        this.showMsg(\"This ID is already linked to another user. Please contact your clinic administrator\");\r\n      } else if (data.StatusCode == \"200\") {\r\n        this.getUserList();\r\n        this.linkID = false;\r\n        this.bottonsCondition = false;\r\n        this.linkingMsg = true;\r\n        this.linkingOK = true;\r\n        this.selectedInclinic = \"\";\r\n        this.selectedProvider = \"\";\r\n      }\r\n      else {\r\n        this.showMsg(\"Record not found\");\r\n      }\r\n\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n     });\r\n\r\n  }\r\n\r\n  public addUser() {\r\n    if (this.addUserForm.status == \"VALID\") {\r\n      gtag('event', 'User_Management', {\r\n        Total_Users: '',\r\n        User_Name: this.addUserForm.value.FirstName + ' ' + this.addUserForm.value.LastName,\r\n        User_Role: this.addUserForm.value.UserTypeId,\r\n        User_Email_ID: this.addUserForm.value.Email,\r\n        User_Phone: this.addUserForm.value.PhoneNo,\r\n        User_Status: this.addUserForm.value.StatusId,\r\n        User_Action: 'Update User',\r\n      })\r\n\r\n      this.commonService.addUpdateUser(this.addUserForm.value).subscribe({next:() => {\r\n        this.selectedRole = this.addUserForm.get('UserTypeId').value;\r\n        console.log(this.selectedRole, 'selected role');\r\n        this.getUserList();\r\n        this.modalService.dismissAll();\r\n        if (this.addUserForm.value.UserGuid != null)\r\n          this.showMsg(this.labelService.dsUserManagementScreen.Userupdatedsuccessfully);\r\n        else\r\n          this.showMsg(this.labelService.dsUserManagementScreen.Invitesentsuccessfully);\r\n\r\n      }, error:(error) => {\r\n\r\n        if (error != null && error.error.DisplayMessage == \"Record already exist!\") {\r\n          this.userExist = this.labelService.dsUserManagementScreen.useralreadyexists;\r\n        }\r\n        else if (error != null && error.error.DisplayMessage == \"User already exist\") {\r\n          this.userExist = this.labelService.dsUserManagementScreen.UserAlreadyExistsInOtherClinic;\r\n        }\r\n        else\r\n          this.userExist = this.labelService.dsUserManagementScreen.Error;\r\n      }});\r\n\r\n    }\r\n  }\r\n  public deleteRequest() {\r\n    this.modalService.dismissAll();\r\n    this.confirmationDialogService.confirm(\"Please Confirm\", this.labelService.dsUserManagementScreen.DeletConfirmationMsg, this.labelService.dsUserManagementScreen.Yes, this.labelService.dsUserManagementScreen.No)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.addUserForm.controls['IsDeleted'].setValue(true);\r\n          this.updateUser(this.addUserForm.value);\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n\r\n  }\r\n\r\n  public updateActiveInactive(val: any, element: any) {\r\n    const msg = element.IsActive ? this.labelService.dsUserManagementScreen.UserInactiveConfirmationMsg : this.labelService.dsUserManagementScreen.UserActiveConfirmationMsg\r\n\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserManagementScreen.Yes, this.labelService.dsUserManagementScreen.No)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          element.StatusId = element.IsActive ? EnmUserStatus.Active : EnmUserStatus.Inactive;\r\n          this.updateUser(element);\r\n        }\r\n        else {\r\n          element.IsActive = element.IsActive = !element.IsActive;\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)')\r\n      });\r\n  }\r\n\r\n  public updateUser(ele) {\r\n    this.commonService.addUpdateUser(ele).subscribe({next:(data) => {\r\n      if (data.DisplayMessage == \"Alredy Verified\")\r\n        this.showMsg(this.labelService.dsUserManagementScreen.RequestCanNotBeDeleted);\r\n      this.getUserList();\r\n    }, error:() => {\r\n      this.showMsg(this.labelService.dsUserManagementScreen.Error);\r\n    }});\r\n  }\r\n\r\n  public getTraslation(ele) {\r\n    let rtnValue = ele.Status;\r\n    switch (ele.StatusId) {\r\n      case EnmUserStatus.RequestSent:\r\n        rtnValue = this.labelService.dsUserManagementScreen.RequestSent;\r\n        break;\r\n      case EnmUserStatus.RequestCanceled:\r\n        rtnValue = this.labelService.dsUserManagementScreen.RequestCancelled;\r\n        break;\r\n    }\r\n    return rtnValue;\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserManagementScreen.OK, this.labelService.dsUserManagementScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      //   if (confirmed) {\r\n      //   }\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.fb.group({\r\n      'BusinessGuid': localStorage.businessGuid,\r\n      'PrefixTypeId': dataItem.Id > 0 ? dataItem.PrefixTypeId : EnmTitle.Choose,\r\n      'Email': [dataItem.Email, Validators.compose([Validators.required, Validators.maxLength(100), Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,9}$\")])],\r\n      'FirstName': [dataItem.FirstName, Validators.pattern(\"^[A-Za-z0-9.,'?/][A-Za-z0-9.,'?/ ]{0,50}\")],\r\n      'LastName': [dataItem.LastName, Validators.pattern(\"^[A-Za-z0-9.,'?/][A-Za-z0-9.,'?/ ]{0,50}\")],\r\n      'SuffixTypeId': dataItem.SuffixTypeId,\r\n      'PhoneNo': [dataItem.PhoneNo],\r\n      'UserTypeId': dataItem.UserTypeId > 0 ? dataItem.UserTypeId : EnmUserType.DVM,\r\n      'CountryId': dataItem.CountryId,\r\n      'StateId': dataItem.StateId,\r\n      'StatusId': dataItem.StatusId,\r\n      'IsDeleted': dataItem.IsDeleted,\r\n      'UserGuid': dataItem.UserGuid,\r\n      'UserRelationGuid': dataItem.UserRelationGuid,\r\n      'CreatedAt': dataItem.CreatedAt,\r\n      'LanguageId': this.labelService.selectedLanguage,\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n  <div id=\"content\" class=\"userlist\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"ques-icon text-right\">\r\n      <section class=\"title-container\">\r\n        <span class=\"page-title\" data-testid=\"um-title\">{{ labelService.dsUserManagementScreen.UserManagement }}</span>\r\n\r\n        <img class=\"qicon\" src=\"../../../assets/img/help-icon.svg\" [matTooltip]=\"labelService.dsSideMenuScreen.Help\"\r\n          alt=\"help-circle\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n          (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n\r\n      </section>\r\n    </div>\r\n    <div class=\"outer view-user outpart\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1\">\r\n          <mat-card class=\"p-0\">\r\n\r\n            <div class=\"d-flex justify-content-between  pb-3 align-items-center pt-0 w-100\">\r\n              <div class=\"col text-right d-flex justify-content-end select-outer align-items-center\">\r\n                <button class=\"ml-4 adduser-btn\" style=\"margin: 14px 0px 0px;\" mat-flat-button color=\"accent\"\r\n                  (click)=\"openAddUserModal() \">{{labelService.dsUserManagementScreen.AddUser}}</button>\r\n              </div>\r\n            </div>\r\n            <div class=\"userpart user-section\">\r\n              <div class=\"usermangemt pt-0 \">\r\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z2_\" summary=\"\">\r\n\r\n                  <ng-container matColumnDef=\"FullName\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsUserManagementScreen.Name}}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.Name}}</span>\r\n                      {{ element.FullName }}\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"UserType\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsUserManagementScreen.Role}}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.Role}}</span>\r\n                      <span> {{ element.UserType }} </span>\r\n                      <span> {{element.RefLabProviderId}} </span>\r\n                      <span> {{element.InClinicProviderId}} </span>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"Email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                      {{labelService.dsUserManagementScreen.EmailID}}</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.EmailID}}</span>\r\n                      {{ element.Email }}\r\n                    </td>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"PhoneNo\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                      {{labelService.dsUserManagementScreen.PhoneNo}}</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.PhoneNo}}</span>\r\n                      {{ element.PhoneNo }}\r\n                    </td>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"Status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsUserManagementScreen.Status}}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\" >\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.Status}}</span>\r\n                      <span \r\n                        *ngIf=\"!element.IsActiveInactive && !element.IsUserOtherBusiness\">{{getTraslation(element)}}</span>\r\n\r\n                      <ng-container *ngIf=\"element.IsActiveInactive\">\r\n                        <span [ngStyle]=\"{'color': !element.IsActive ? 'black' : 'grey'}\">\r\n                          {{labelService.dsUserManagementScreen.Inactive}}\r\n                        </span>\r\n                        <mat-slide-toggle [(ngModel)]=\"element.IsActive\"\r\n                          (click)=\"updateActiveInactive($event.target,element)\">\r\n                          <span [ngStyle]=\"{'color': element.IsActive ? 'black' : 'grey'}\">\r\n                            {{labelService.dsUserManagementScreen.Active}}\r\n                          </span>\r\n                        </mat-slide-toggle>\r\n                      </ng-container>\r\n                    </td>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>{{labelService.dsUserManagementScreen.Action}}</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsUserManagementScreen.Action}}</span>\r\n                      <span class=\"editicon\" (click)=\"openModal(editProfileModal, element)\"\r\n                        *ngIf=\"((!element.IsActiveInactive || element.IsActive) && !element.IsUserOtherBusiness)\">\r\n                        <button mat-icon-button color=\"accent\" [matTooltip]=\"labelService.dsUserManagementScreen.Edit\"\r\n                          matTooltipPosition=\"above\">\r\n                          <img src=\"../../../../assets/img/edit-button@2x.png\" alt=\"edit\" class=\"rounded-0\">\r\n                        </button></span>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                </table>\r\n                <tbody class=\"  norecord\" *ngIf=\"(dataSource === null || dataSource.data.length === 0)\">\r\n                  <tr>\r\n                    <td>{{labelService.dsUserManagementScreen.Norecordsfound}}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n                <mat-paginator [pageSize]='10' _intl.itemsPerPageLabel=\"\" [hidePageSize]=\"true\" showFirstLastButtons\r\n                  class=\"mat-paginator-sticky\"></mat-paginator>\r\n                <!-- <mat-paginator [pageSizeOptions]=\"[2, 10, 20]\" showFirstLastButtons></mat-paginator> -->\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #editProfileModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\" id=\"editProfileLabel\">{{popupTitle}}</h5>\r\n  </div>\r\n\r\n  <div class=\"modal-body edit-profile\">\r\n    <form [formGroup]=\"addUserForm\" autocomplete=\"off\" [hidden]=\"hideModal\">\r\n      <div class=\"row mt-5\">\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.Title}}</mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\" [placeholder]=\"labelService.dsUserManagementScreen.Title\"\r\n              [value]=\"selectedUser.PrefixType\" readonly />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.FirstName}} </mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\"\r\n              [placeholder]=\"labelService.dsUserManagementScreen.EnterFirstName\" formControlName=\"FirstName\"\r\n              maxlength=\"50\" readonly />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.LastName}} </mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\"\r\n              [placeholder]=\"labelService.dsUserManagementScreen.EnterLastName\" formControlName=\"LastName\"\r\n              maxlength=\"50\" readonly />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mt-5\">\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.Role}}</mat-label>\r\n            <mat-select required formControlName=\"UserTypeId\"\r\n              [placeholder]=\"labelService.dsUserManagementScreen.Select\">\r\n              <mat-option *ngFor=\"let userType of rolesType\" [value]=\"userType.Id\">\r\n                {{userType.TypeName}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\" [ngClass]=\"{'email-block': isEmailReadOnly}\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.Email}}</mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\"\r\n              [placeholder]=\"labelService.dsUserManagementScreen.EnterEmail\" maxlength=\"100\" formControlName=\"Email\"\r\n              required [readonly]=\"isEmailReadOnly\" />\r\n          </mat-form-field>\r\n          <span class=\"custom-error\">{{userExist}}</span>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>{{labelService.dsUserManagementScreen.PhoneNo}} </mat-label>\r\n            <input type=\"tell\" id=\"phone\" matInput autocomplete=\"off\"\r\n              [placeholder]=\"labelService.dsUserManagementScreen.PhoneExtNo\" formControlName=\"PhoneNo\" maxlength=\"15\"\r\n              (keyup)=\"validateNumber()\" (blur)=\"validateITIPhone()\" readonly />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-5 justify-content-center\" *ngIf=\"!isStatueRequestSent\">\r\n        <button type=\"button\" class=\"cancel-btn  mr-2\" mat-raised-button color=\"primary\"\r\n          (click)=\"modal.dismiss()\">{{labelService.dsUserManagementScreen.Close}}</button>\r\n        <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\" (click)=\"linkDoctorid()\"\r\n          *ngIf=\"islinkDoctor\">\r\n          <!-- Link Doctor ID  -->\r\n          {{labelService.dsUserManagementScreen.LinkDoctorID}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\" (click)=\"deleteDoctorid()\"\r\n          *ngIf=\"deleteDoctor\">{{labelService.dsUserManagementScreen.DeleteID}}</button>\r\n\r\n        <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\"\r\n          (click)=\"addUser()\">{{popupSubmitText}}</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"row mt-5 justify-content-center edit-mob-view\" *ngIf=\"isStatueRequestSent\">\r\n\r\n        <div class=\"colr text-right\"> <button type=\"button\" class=\"save-change delbtn mr-2\" mat-raised-button\r\n            color=\"accent\" (click)=\"deleteRequest()\">{{labelService.dsUserManagementScreen.DeleteRequest}}</button>\r\n        </div>\r\n        <div class=\"colr text-center\"> <button type=\"button\" class=\"cancel-btn  mr-2\" mat-raised-button color=\"primary\"\r\n            (click)=\"modal.dismiss()\">{{labelService.dsUserManagementScreen.Close}}</button></div>\r\n        <div class=\"colr text-left\"> <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\"\r\n            (click)=\"addUser()\">{{popupSubmitText}}</button></div>\r\n      </div>\r\n    </form>\r\n\r\n    <div *ngIf=\"linkID\">\r\n      <div class=\"col1 d-flex w-100\">\r\n        <div class=\"d-flex align-items-center justify-content-between w-100\">\r\n          <label class=\"mr-2 mb-0\">\r\n            <strong>\r\n              {{labelService.dsUserManagementScreen.RefLabProviderID}} :\r\n              <!-- Ref Lab Provider ID :  -->\r\n            </strong>\r\n          </label>\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-75\">\r\n            <mat-select [(ngModel)]=\"selectedProvider\" [placeholder]=\"labelService.dsUserManagementScreen.Select\"\r\n              ngDefaultControls>\r\n              <mat-option value=\"\">\r\n                {{labelService.dsUserManagementScreen.Select}}\r\n              </mat-option>\r\n              <mat-option *ngFor=\"let provider of providerData\" [value]=\"provider\">\r\n                {{provider.ProviderIdName}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"col1 d-flex w-100\">\r\n        <div class=\"d-flex align-items-center justify-content-between w-100\">\r\n          <label class=\"mr-2 mb-0\">\r\n            <strong>\r\n              <!-- In Clinic Provider ID :  -->\r\n              {{labelService.dsUserManagementScreen.InClinicProviderID}} :\r\n            </strong>\r\n          </label>\r\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-75\">\r\n            <mat-select [(ngModel)]=\"selectedInclinic\" [placeholder]=\"labelService.dsUserManagementScreen.Select\">\r\n              <mat-option value=\"\">\r\n                {{labelService.dsUserManagementScreen.Select}}\r\n              </mat-option>\r\n              <mat-option *ngFor=\"let p of physician\" [value]=\"p\"> {{p.PhysicianIdName}} </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div [hidden]=\"!linkingMsg\" class=\"msg\">\r\n      <!-- ID Linked Successfully -->\r\n      {{labelService.dsUserManagementScreen.IDLinkedSuccessfully}}\r\n    </div>\r\n    <div [hidden]=\"!DelMsg\" class=\"msg\">\r\n      <!-- ID Deleted Successfully -->\r\n      {{labelService.dsUserManagementScreen.IDDeletedSuccessfully}}\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center mt-5 linkpart\">\r\n      <button type=\"button\" class=\"cancel-btn  mr-2\" mat-raised-button color=\"primary\" (click)=\"modal.dismiss()\"\r\n        [hidden]=\"!bottonsCondition\">{{labelService.dsUserManagementScreen.Cancel}} </button>\r\n      <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\" (click)=\"PostProviderDetails()\"\r\n        [hidden]=\"!bottonsCondition\">{{labelService.dsUserManagementScreen.Confirm}} </button>\r\n      <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\" (click)=\"modal.dismiss()\"\r\n        [hidden]=\"!linkingOK\"> {{labelService.dsUserManagementScreen.Ok}} </button>\r\n    </div>\r\n    <div class=\"w-50 mx-auto del_doc\" *ngIf=\"RecordExist\">\r\n      <form [formGroup]=\"CheckForm\">\r\n        <div class=\"mb-4 msg\"><strong>\r\n            <!-- Please Select ID to Delete -->\r\n            {{labelService.dsUserManagementScreen.PleaseSelectIDtoDelete}}\r\n          </strong></div>\r\n        <div class=\"mb-3\" *ngIf=\"rowwiseData.RefLabProviderId\">\r\n          <mat-checkbox class=\"example-margin xbt\" formControlName=\"checkProviderID\" value=\"checked\"\r\n            (click)=\"changeValue(checked)\">\r\n            {{labelService.dsUserManagementScreen.RefLabProviderID}} :{{rowwiseData.RefLabProviderId}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div *ngIf=\"rowwiseData.InClinicProviderId\">\r\n          <mat-checkbox class=\"example-margin xbt\" formControlName=\"checkClinicID\" value=\"checkedIN\"\r\n            (click)=\"changeValue(checkedIN,'IN')\">\r\n            {{labelService.dsUserManagementScreen.InClinicProviderID}} : {{rowwiseData.InClinicProviderId}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center mt-5\">\r\n          <button type=\"button\" class=\"cancel-btn  mr-2\" mat-raised-button color=\"primary\" (click)=\"modal.dismiss()\">\r\n            {{labelService.dsUserManagementScreen.Cancel}} </button>\r\n          <button type=\"button\" class=\"save-change mr-2\" mat-raised-button color=\"accent\" (click)=\"DeleteProvider()\">\r\n            {{labelService.dsUserManagementScreen.Delete}} </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  </div>\r\n</ng-template>","import { Component} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService, DataService } from '../../services';\r\nimport { LabelService} from '../../services';\r\n// import { deepEqual } from 'assert';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.component.html',\r\n  styleUrls: ['./verify.component.css']\r\n})\r\nexport class VerifyComponent {\r\n\r\n  public isVerified = false;\r\n  public verifiedMsg = \"\";\r\n  public userGuid: string;\r\n  public businessGuid: string;\r\n\r\n  constructor(public router: Router, public commonService: CommonService, public labelService: LabelService, public dataService: DataService) {\r\n\r\n    if (this.router.url.indexOf(\"?vry=\") != -1) {\r\n      const params = this.router.url.trim().split('?vry=')[1].split(\"&loc=\");\r\n      if (params[1] != undefined && params[1] != null && params[1] != \"\")\r\n        this.labelService.selectedLanguage = parseInt(params[1]);\r\n\r\n      this.userGuid = params[0];\r\n      this.businessGuid = params[1].split('verifyid=')[1];\r\n      this.getLabelDetails();\r\n    }\r\n    else if (this.router.url.indexOf(\"verify?\") != -1) {\r\n      let languages = [];\r\n      const params = this.router.url.trim().split(\"?lang=\");\r\n      if (params[1] != undefined && params[1] != null && params[1] != \"\") {\r\n        this.dataService.data.pipe(first()).subscribe(resp => {\r\n          languages = resp.userDropDownList.LanguageDetails;\r\n          const gigyaLangCode = params[1].split(\"&\")[0];\r\n          const filteredLangs = this.getLanIdByLanCode(gigyaLangCode, languages);\r\n          this.labelService.selectedLanguage = filteredLangs ? filteredLangs.Id : this.labelService.selectedLanguage;\r\n          this.getLabelDetails(false);\r\n          this.router.navigateByUrl('/thanks');\r\n          this.isVerified = true;\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.router.navigateByUrl('/thanks');\r\n      this.isVerified = true;\r\n\r\n    }\r\n  }\r\n\r\n  public getLanIdByLanCode(val, languages) {\r\n    return languages.find(x => x.GigyaLanguageCode.find(y => y.GigyaLangCode == val));\r\n  }\r\n\r\n  public getLabelDetails(verify = true) {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe({next:(data) => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindLinkLabel();\r\n      if (verify) this.verifyLink();\r\n      // if(this.verifiedMsg == \"\")\r\n      //   this.verifiedMsg = this.labelService.dsLinkScreen.InvalidRegisLink;\r\n    }, error:() => {\r\n      this.verifiedMsg = this.labelService.dsLinkScreen.InvalidRegisLink;\r\n    }});\r\n  }\r\n\r\n  public verifyLink() {\r\n    this.commonService.verifyLinkByGuId(this.userGuid, this.businessGuid).subscribe({next:(data) => {\r\n      if (data.IsSuccess == true) {\r\n        this.isVerified = true;\r\n        this.dataService.appState.isInviteLinkExpired = true;\r\n        this.dataService.state.next(this.dataService.appState);\r\n\r\n        if (data.DisplayMessage == \"Alredy Verified\") {\r\n          this.verifiedMsg = this.labelService.dsLinkScreen.BusinessRegisLinkAlreadyValidated; //this.verifiedMsg = AppConstant.businessRegisLinkAlreadyValidated;\r\n        }\r\n        else {\r\n          this.router.navigateByUrl('/thanks');\r\n        }\r\n\r\n      }\r\n      else {\r\n        this.verifiedMsg = this.labelService.dsLinkScreen.InvalidRegisLink;\r\n        this.isVerified = false;\r\n        this.dataService.appState.isInviteLinkExpired = true;\r\n        this.dataService.state.next(this.dataService.appState);\r\n      }\r\n    }, error:() => {\r\n      this.verifiedMsg = this.labelService.dsLinkScreen.BusinessRegisLinkValidationFail;\r\n      this.isVerified = false;\r\n      this.dataService.appState.isInviteLinkExpired = true;\r\n      this.dataService.state.next(this.dataService.appState);\r\n    }})\r\n  }\r\n\r\n}\r\n","<div class=\"signin-outer\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-75\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n          <div class=\"card-body\">\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo.png\" width=\"196\" alt=\"logo\" />\r\n            </div>\r\n\r\n            <form class=\"form-signin\" autocomplete=\"off\">\r\n              <div class=\"form-label-group mb-4\">\r\n                <div class=\"text-center mb-4 info\">\r\n                  <span class=\"verify\" *ngIf=\"isVerified\">{{\r\n                    verifiedMsg\r\n                    }}</span>\r\n                  <span class=\"notverify\" *ngIf=\"!isVerified\">{{\r\n                    verifiedMsg\r\n                    }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex align-items-center justify-content-center flex-column\">\r\n                <button class=\"btn btn1 btn-lg btn-primary btn-block text-uppercase mt-3\" *ngIf=\"isVerified\"\r\n                  mat-raised-button color=\"warn\" routerLink=\"/login\">\r\n                  {{labelService.dsLinkScreen.ReturntoLogin}}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <script>\r\n  function onGigyaServiceReady() {\r\n    gigya.accounts.showScreenSet({\r\n      screenSet: \"RegistrationLogin\",\r\n      //startScreen: \"gigya-reset-password-screen\",\r\n      containerID: \"gigyaContainer\"\r\n    });\r\n  }\r\n</script> -->","import { Component, OnInit } from '@angular/core';\r\nimport { LabelService, DataService } from '../../services';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-thanks',\r\n  templateUrl: './thanks.component.html',\r\n  styleUrls: ['./thanks.component.css']\r\n})\r\nexport class ThanksComponent implements OnInit {\r\n\r\n  public isInviteLinkExpired: boolean;\r\n  public displayMessage = '';\r\n  public loginUrl = 'login';\r\n\r\n  constructor(public labelService: LabelService, public dataService: DataService, public router: Router, public route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.loginUrl = params.next || this.loginUrl;\r\n      })\r\n    this.isInviteLinkExpired = this.dataService.appState.isInviteLinkExpired;\r\n    this.getLabelDetails();\r\n\r\n  }\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindLinkLabel();\r\n      this.displayMsg();\r\n    });\r\n  }\r\n\r\n  public displayMsg() {\r\n\r\n    if (this.router.url.indexOf('/thanks') !== -1) {\r\n      this.displayMessage = '<p>' + this.labelService.dsLinkScreen.ThankYouMsg + '</p>';\r\n    }\r\n    if (this.router.url.indexOf('/link-expired') !== -1) {\r\n      this.displayMessage = this.labelService.dsLinkScreen.InvalidRegisLink;\r\n      document.getElementById('responseMessage').style.color = 'red';\r\n    }\r\n    if (this.router.url.indexOf('/alredy-verified') !== -1) {\r\n      this.displayMessage = this.labelService.dsLinkScreen.BusinessRegisLinkAlreadyValidated;\r\n      document.getElementById('responseMessage').style.color = 'green';\r\n      document.getElementById('responseMessage').style.padding = '40px 0px';\r\n      document.getElementById('responseMessage').style.fontSize = '15px';\r\n    }\r\n  }\r\n\r\n  public goToLogin() {\r\n    this.router.navigateByUrl(\"/\" + this.loginUrl);\r\n  }\r\n\r\n}\r\n","<div class=\"bg d-flex align-items-center justify-content-center flex-column reg-outer\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"d-flex justify-content-center align-items-center mb-2 flex-column\">\r\n        <div class=\"mt-0 mb-3\">\r\n          <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"logo-login\" />\r\n        </div>\r\n        <div class=\"spacer\"><mat-divider></mat-divider></div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\" class=\"reg-form\">\r\n        <div class=\"thanks-outer\">\r\n          <div id=\"responseMessage\" class=\"t-head\" [innerHTML]=\"displayMessage\"></div>\r\n          <div class=\"d-flex justify-content-center icon-outer\">\r\n            <span (click)=\"goToLogin()\">\r\n              <img src=\"../../../assets/img/browser@2x.png\" alt=\"browser\" />\r\n            </span>\r\n            <span class=\"mr-4 ml-4\">\r\n              <img src=\"../../../assets/img/googleplay@2x.png\" alt=\"googleplay\" />\r\n            </span>\r\n            <span>\r\n              <img src=\"../../../assets/img/appstore@2x.png\" alt=\"appstore\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SideFilter } from '../../../models/side-filter';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { HeaderService } from '../../../services/header.service';\r\nimport { Router } from '@angular/router';\r\nimport { PatientService } from '../../../services/patient.service';\r\nimport { LabelService } from '../../../services/label.service';\r\nimport { SidefilterService } from '../../../services/sidefilter.service';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DataService } from '../../../services/data.sevice';\r\nimport { EnmNotificationSetting } from '../../../shared/constants/enum';\r\nimport { AlertMessageComponent } from '../../../components/alert-message/alert-message.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SidemenuService } from '../../../services';\r\nimport { Subject } from 'rxjs';\r\nimport { LocationStrategy, Location } from '@angular/common';\r\nimport { HostListener } from '@angular/core';\r\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.css']\r\n})\r\nexport class PatientListComponent implements OnInit, OnDestroy {\r\n\r\n  businessGuid = (localStorage.businessGuid != undefined && localStorage.businessGuid != null && localStorage.businessGuid != \"\" ? localStorage.businessGuid : 0);\r\n  displayedColumns = ['PatientId', 'PatientName', 'OwnerName', 'SpeciesName', 'BreedName', 'GenderName', 'DateReceived'];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public isBackOfficeUser: boolean;\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 15;\r\n  end: number = this.limit + this.start;\r\n  selectedRowIndex: number = null;\r\n  filter: SideFilter;\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  isConsultantUser: boolean;\r\n  private unsubscriber: Subject<void> = new Subject<void>();\r\n  public helpObj: any;\r\n\r\n  public FromDateLabel: Date;\r\n  public ToDateLabel: Date;\r\n  public backUrl:string;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public headerService: HeaderService,\r\n    public router: Router,\r\n    public patientService: PatientService,\r\n    public sidemenuService: SidemenuService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    private modalService: NgbModal, private location: LocationStrategy, private loc: Location) {\r\n\r\n    this.FromDateLabel = new Date(this.commonService.twoYearBeforeFromToday);\r\n    this.ToDateLabel = this.commonService.today;\r\n\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n\r\n    this.filter = new SideFilter();\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    // this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.filter.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.filter.LanguageId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.dataService.pageState.default.requestParams = this.filter;\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindPatientListLabel();\r\n    }\r\n    if (!this.dataService.pageState.PatientList.requestParams) {\r\n      this.sidefilterService.filter = this.filter;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    const redirectionData = localStorage.getItem(\"rediretionDetails\")\r\n    if (redirectionData){\r\n      this.backUrl =(redirectionData.split(\"backURL=\")[1] != undefined ? redirectionData.split(\"backURL=\")[1].split(\"&\")[0] : \"\");\r\n      this.backUrl = '#'+this.backUrl.split('#')[1]+'?ref='\r\n    }\r\n    this.closeFilterRegister();\r\n    if (localStorage.getItem('alert-popup') == 'true') {\r\n      this.modalService.open(AlertMessageComponent, {\r\n        centered: true,\r\n        backdrop: 'static',\r\n        scrollable: false\r\n      });\r\n    }\r\n    if (this.dataService.pageState.PatientList.requestParams) {\r\n      if (this.dataService.pageState.PatientList.requestParams.FromDate != null && this.dataService.pageState.PatientList.requestParams.FromDate != \"\") {\r\n        this.sidefilterService.FromDate = new Date(this.dataService.pageState.PatientList.requestParams.FromDate);\r\n        this.sidefilterService.filter.FromDate = this.dataService.pageState.PatientList.requestParams.FromDate;\r\n      }\r\n\r\n      if (this.dataService.pageState.PatientList.requestParams.ToDate != null && this.dataService.pageState.PatientList.requestParams.ToDate != \"\") {\r\n        this.sidefilterService.ToDate = new Date(this.dataService.pageState.PatientList.requestParams.ToDate);\r\n        this.sidefilterService.filter.ToDate = this.dataService.pageState.PatientList.requestParams.ToDate;\r\n      }\r\n    }\r\n    if (this.dataService.pageState.PatientList.requestParams) {\r\n\r\n      this.sidefilterService.filter = this.dataService.pageState.PatientList.requestParams;\r\n      this.sidefilterService.filter.PageNo = 1;\r\n    } else {\r\n      this.sidefilterService.filter = new SideFilter();\r\n      this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    }\r\n    this.getPatientList(this.sidefilterService.filter);\r\n    this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == 'Patients');\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsPatientListScreen.PatientsList}`);\r\n  }\r\n\r\n  // ngAfterViewInit() { }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle('ZoetisDx');\r\n    this.dataService.pageState.PatientList.requestParams = this.sidefilterService.filter;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.sidefilterService.ToDate = null;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.unsubscriber.next();\r\n    if (this.isConsultantUser) {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:popstate', ['$event'])\r\n  onPopState() {\r\n    if (this.isConsultantUser) {\r\n      console.log('Back button Clicked');\r\n      history.pushState(null, \"\");\r\n      this.sidemenuService.goToLink(184)\r\n    }\r\n  }\r\n\r\n  public navigateToInfoPage(element) {\r\n    this.dataService.pageState.PatientList.resultsList = this.originData;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.patientService.showPataientInfo(element, this.sidefilterService.filter, this.sidefilterService.filter.PageNo, null, null);\r\n  }\r\n\r\n  public onDataSort(e) {\r\n    this.dataService.pageState.PatientList.sortState = e;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.scrolltoTop(null);\r\n  }\r\n\r\n  public clearPageHistory() {\r\n    this.dataService.pageState.PatientList.requestParams = null;\r\n    this.dataService.pageState.PatientList.resultsList = [];\r\n    this.dataService.page.next(this.dataService.pageState);\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindPatientListLabel();\r\n    });\r\n  }\r\n\r\n  public filterData(e) {\r\n    this.getPatientList(e);\r\n  }\r\n\r\n  public getPatientList(event) {\r\n\r\n    this.FromDateLabel = this.sidefilterService.FromDate;\r\n    this.ToDateLabel = this.sidefilterService.ToDate;\r\n\r\n    event.UserGuid = this.headerService.loginUserGuid;\r\n    event.LanguageId = this.labelService.selectedLanguage;\r\n    event.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n\r\n    if (event.IsApplyFilter) {\r\n      this.sidefilterService.filter.PageNo = event.PageNo;\r\n    }\r\n    \r\n    if (event.PageNo == 1) {\r\n      this.originData = [];\r\n    }\r\n\r\n    this.dataService.pageState.PatientList.requestParams = event;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n\r\n    this.commonService.getPatientList(event).subscribe({\r\n      next: (data) => {\r\n\r\n        if (event.PageNo == 1) {\r\n          if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n            this.originData = data.ResponseData.PatientList;\r\n          } else {\r\n            this.originData = [];\r\n          }\r\n        } else {\r\n          if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n            this.originData = this.originData.concat(data.ResponseData.PatientList);\r\n          }\r\n        }\r\n\r\n        if (data.ResponseData.PatientList != null && this.originData.length < 60) {\r\n          event.PageNo += 1;\r\n          this.sidefilterService.filter.PageNo = event.PageNo;\r\n          this.getPatientList(event);\r\n        }\r\n\r\n        if (this.originData.length > 0) {\r\n\r\n          if (this.originData.length > 0 && this.isLoadMore) {\r\n            this.isLoadMore = false;\r\n          } else {\r\n            this.scrolltoTop(null);\r\n          }\r\n\r\n          this.dataService.pageState.PatientList.resultsList = this.originData;\r\n          this.dataService.page.next(this.dataService.pageState);\r\n\r\n          this.dataSource = new MatTableDataSource<any>(this.originData);\r\n          this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        } else {\r\n          this.dataSource.data = [];\r\n        }\r\n      }, error: () => {\r\n        this.dataSource.data = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight /** viewport */\r\n    const tableScrollHeight = e.target.scrollHeight /**  length of all table */\r\n    const scrollLocation = e.target.scrollTop; /** how far user scrolled */\r\n\r\n    /**If the user has scrolled within 200px of the bottom, add more data  */\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      this.isLoadMore = true;\r\n      this.sidefilterService.filter.PageNo++;\r\n      this.sidefilterService.filter.PageSize = 60;\r\n      this.getPatientList(this.sidefilterService.filter);\r\n    }\r\n  }\r\n\r\n  public scrolltoTop(topVal) {\r\n    const scrollabe = document.getElementById('patient-list-scrollabe');\r\n    scrollabe.scrollTop = topVal;\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.PatientName = null;\r\n    this.sidefilterService.filter.PatientId = null;\r\n    this.sidefilterService.filter.OwnerName = null;\r\n    this.sidefilterService.filter.FromDate = null;\r\n    this.sidefilterService.filter.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisSourceId = 0;\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.filter.AnalysisStatusId = 0;\r\n    this.sidefilterService.filter.SpeciesId = null;\r\n    this.sidefilterService.filter.Breed = null;\r\n    this.sidefilterService.filter.UserGuid = 0;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.ToDate = null;\r\n  }\r\n\r\n  onToggleFollowPatient(e, obj) {\r\n    if (this.headerService.notificationSettingId == EnmNotificationSetting.FollowPatients) {\r\n      this.onOffFollowPatient(e.checked, obj);\r\n    } else {\r\n      const msg = this.labelService.dsPatientListScreen.ConfirmMessage;\r\n      this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsPatientListScreen.Updatepreferences, this.labelService.dsPatientListScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.dataService.appState.admin.profilePageSelectedAccordion = 1;\r\n            this.dataService.state.next(this.dataService.appState);\r\n            this.router.navigateByUrl('/user/account');\r\n          } else {\r\n            this.dataSource.data.forEach(item => {\r\n              if (item.PatientId == obj.PatientId) {\r\n                item.IsFollowedPatient = !item.IsFollowedPatient;\r\n              }\r\n              return item;\r\n            })\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  public onOffFollowPatient(toggleValue, obj) {\r\n    const params = {\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.headerService.selectedBusinessGuid,\r\n      PatientId: obj.PatientId,\r\n      FuseSerialNo: obj.fuse_serial_number,\r\n      IsActive: toggleValue\r\n    }\r\n    this.patientService.onOffFollowPatient(params).subscribe({\r\n      next: () => {\r\n        this.getPatientList(this.sidefilterService.filter);\r\n      }, error: () => {\r\n        this.commonService.showCommonToastrError();\r\n      }\r\n    });\r\n  }\r\n\r\n  closeFilterRegister() {\r\n    this.commonService.closeFilterForPatient.subscribe(ev => {\r\n      if (ev) {\r\n        this.drawer.close()\r\n      }\r\n    })\r\n  }\r\n\r\n}","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n    <div>\r\n      <app-header (outFilterBy)='getPatientList($event)'></app-header>\r\n    </div>\r\n    <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n      <mat-drawer #drawer class=\"example-sidenav sidefilter right-filter\" mode=\"over\" position=\"end\">\r\n        <app-sidefilter (outFilterBy)=\"filterData($event)\" (clearFilterEvent)=\"clearPageHistory()\"></app-sidefilter>\r\n      </mat-drawer>\r\n\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n\r\n        <div class=\"left-block\">\r\n          <!-- Page Title -->\r\n          <section class=\"title-container title-card icon-cont\">\r\n            <ng-container *ngIf=\"isConsultantUser\">\r\n              <a href=\"javascript:void(0)\" (click)=\"sidemenuService.goToLink(184,backUrl)\"\r\n                class=\"back-btn\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n            </ng-container>\r\n            <h5> <span class=\"page-title\"\r\n                data-testid=\"pl-title\">{{labelService.dsPatientListScreen.PatientsList}}</span> </h5>\r\n            <img class=\"iconquestion\" src=\"../../../assets/img/help-icon.svg\"\r\n              [matTooltip]=\"labelService.dsSideMenuScreen.Help\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n              alt=\"help-circle\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n\r\n          </section>\r\n          <!-- Page Title end -->\r\n          <mat-card class=\"p-0 m-card\">\r\n            <div class=\"mt-0\">\r\n\r\n              <div class=\"d-flex justify-content-between pt-2 pl-3 pr-3 align-items-center toprow\">\r\n                <span></span>\r\n                <h5> <span class=\"page-title\">{{labelService.dsPatientListScreen.PatientsList}}</span> </h5>\r\n\r\n                <span class=\"d-flex\">\r\n                  <span class=\"ipadfiler  align-items-center pr-2\">\r\n                    <button type=\"button\" class=\"pr-0 \" mat-button (click)=\"drawer.toggle()\">\r\n                      <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"\" class=\"filtericon\" />\r\n                    </button>\r\n                    <img class=\"qpart qicon\" src=\"../../../assets/img/help-circle.svg\"\r\n                      [matTooltip]=\"labelService.dsSideMenuScreen.Help\" alt=\"help-circle\" matTooltipPosition=\"below\"\r\n                      matTooltipClass=\"below\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n                  </span>\r\n                </span>\r\n\r\n              </div>\r\n              <div class=\"p-0 pt-2 cust-postion\">\r\n                <p class=\"pr-4\" style=\"text-align: right;\">\r\n                  <span>\r\n                    <!-- Showing results for -->\r\n                    {{labelService.dsPatientListScreen.ShowingResultDated}}\r\n                    <span style=\"font-weight: bold;\">\r\n                      {{commonService.getMomentFromatedDate(this.FromDateLabel)}}\r\n                    </span>\r\n                    {{labelService.dsPatientListScreen.To}}\r\n                    <span style=\"font-weight: bold;\">\r\n                      {{commonService.getMomentFromatedDate(this.ToDateLabel) }}\r\n                    </span>\r\n                  </span>\r\n                </p>\r\n                <div>\r\n\r\n                  <div class=\"example-container pt-0\" id=\"patient-list-scrollabe\" (scroll)=\"onTableScroll($event)\">\r\n                    <!-- <div class=\"example-container pt-0\"  id=\"patient-list-scrollabe\">   -->\r\n\r\n                    <table class=\"patient-table ptpart\" mat-table [dataSource]=\"dataSource\" summary=\"\" matSort\r\n                      (matSortChange)=\"onDataSort($event)\">\r\n                      <ng-container matColumnDef=\"PatientId\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{labelService.dsPatientListScreen.PatientID}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.PatientID}}</span>\r\n                          <a href=\"javascript:void(0)\" (click)=\"navigateToInfoPage(element)\">\r\n                            {{ element.PatientId }}\r\n                          </a>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"PatientName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{labelService.dsPatientListScreen.PatientName}}</th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.PatientName}}</span>\r\n                          <span class=\"\">\r\n                            {{ element.PatientName }}\r\n                          </span>\r\n\r\n                        </td>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"OwnerName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{labelService.dsPatientListScreen.OwnerName}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.OwnerName}}</span> {{\r\n                          element.OwnerName }}\r\n                        </td>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"SpeciesName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{labelService.dsPatientListScreen.Species}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.Species}}</span> {{\r\n                          element.SpeciesName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"BreedName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsPatientListScreen.Breed}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.Breed}}</span> {{\r\n                          element.BreedName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"GenderName\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsPatientListScreen.Sex}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.Sex}}</span> {{\r\n                          element.GenderName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"DateReceived\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{labelService.dsPatientListScreen.LastAnalysis}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{labelService.dsPatientListScreen.LastAnalysis}}</span>\r\n                          <div *ngIf=\"element.DateReceivedStr\">\r\n                            <span class=\"plist-date\"> {{element.DateReceivedStr}}</span>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"> </tr>\r\n                    </table>\r\n\r\n                    <tbody class=\" norecord\" *ngIf=\"dataSource.data.length === 0\">\r\n                      <tr>\r\n                        <div *ngIf=\"sidefilterService.filter.IsApplyFilter==false\">{{labelService.dsPatientListScreen.Norecordsfound}}</div>\r\n                        <div *ngIf=\"sidefilterService.filter.IsApplyFilter==true\">{{labelService.dsPatientListScreen.NorecordsfoundByFilter}}</div>\r\n                      </tr>\r\n                    </tbody>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"right-filter pl-0\">\r\n          <app-sidefilter (outFilterBy)=\"filterData($event)\" (clearFilterEvent)=\"clearPageHistory()\"></app-sidefilter>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </mat-drawer-container>\r\n\r\n  </div>\r\n</div>","export class FuseDetails {\r\n    public Id = 0;\r\n    public FuseSerialNo: string;\r\n    public FusePin: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n\r\n    public UserGuid: string;\r\n    public businessGuid: string;\r\n    public CreatedAt: string;\r\n    public CreatedBy: number;\r\n    public ModifiedAt: string;\r\n    public modifiedGuid: string;\r\n    public IsActive: boolean;\r\n    public IsDeleted = false;\r\n}\r\n\r\nexport class PIMSDetails{\r\n    public proxyPartnerId:string;\r\n    public proxyClientId:string;\r\n}\r\n\r\nexport class BusineesDetails {\r\n    public BusinessId: number;\r\n    public BusinessName: string;\r\n    public Address: string;\r\n    public Zipcode: string;\r\n    public Phone: string;\r\n    public City: string;\r\n    public StateName: string;\r\n    public RefLabClinicId: string;\r\n    public ZoetisAccountNumber: any;\r\n    public FuseDetails: FuseDetails[];\r\n}\r\nexport class ReflabDetails {\r\n    public clinic_id: string;\r\n    public name_1: string;\r\n    public address_1: string;\r\n    public address_2: '';\r\n    public city: string;\r\n    public state: string;\r\n    public zip: number;\r\n    public phone: number;\r\n    public is_active: boolean;\r\n    public api_access: boolean;\r\n    public is_zdx_clinic: boolean;\r\n    public ReflabDetails: ReflabDetails[];\r\n}","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FuseService } from \"../../../services/fuse.service\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n  FormGroupDirective,\r\n  UntypedFormControl,\r\n} from \"@angular/forms\";\r\nimport { HeaderService } from \"../../../services/header.service\";\r\nimport { ConfirmationDialogService } from \"../../confirmation-dialog/confirmation-dialog.service\";\r\nimport {\r\n  BusineesDetails,\r\n  FuseDetails,\r\n  ReflabDetails,\r\n} from \"../../../models/fuse\";\r\nimport {\r\n  LabelService,\r\n  DataService,\r\n  UserService,\r\n  RefLabService,\r\n  CommonService,\r\n} from \"../../../services\";\r\nimport { NgbModal, NgbModalOptions } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AlertMessageComponent } from \"../../../components/alert-message/alert-message.component\";\r\nimport { ResetSignalRequest, UserDetails } from \"../../../models/user\";\r\nimport {\r\n  EnmNotificationSetting,\r\n  EnmUserType,\r\n} from \"../../../shared/constants/enum\";\r\nimport { DomSanitizer, SafeResourceUrl, Title } from \"@angular/platform-browser\";\r\n// declare const gtag: Function;\r\ndeclare const gtag: (...arg) => void;\r\ndeclare let intlTelInputGlobals;\r\nimport intlTelInput from \"intl-tel-input\";\r\nimport { MatLegacyPaginator as MatPaginator } from \"@angular/material/legacy-paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from \"@angular/material/legacy-table\";\r\nimport moment from \"moment\";\r\n@Component({\r\n  selector: \"app-fuse-list\",\r\n  templateUrl: \"./fuse-list.component.html\",\r\n  styleUrls: [\"./fuse-list.component.css\"],\r\n})\r\nexport class FuseListComponent implements OnInit, AfterViewInit {\r\n  public businessDetails: BusineesDetails;\r\n  public reflabDetails: ReflabDetails;\r\n  public addFuseForm: UntypedFormGroup;\r\n  public refLabform: UntypedFormGroup;\r\n  public msg = \"\";\r\n  public langID = localStorage.getItem(\"languageId\");\r\n  @ViewChild(\"editModal\", { static: false }) editModal: TemplateRef<any>;\r\n  @ViewChild(\"addLogModal\", { static: false }) addlogoModal: TemplateRef<any>;\r\n  @ViewChild(\"ViewLogModal\", { static: false }) viewlogoModal: TemplateRef<any>;\r\n  @ViewChild(\"editLogModal\", { static: false }) editlogoModal: TemplateRef<any>;\r\n  @ViewChild(\"deleteLogo\", { static: false }) deletelogoModal: TemplateRef<any>;\r\n  @ViewChild(\"fuseInactiveCalender\", { static: false })\r\n  fuseInactiveCalender: TemplateRef<any>;\r\n  public show = false;\r\n  @ViewChild(\"formGroupDirective\", { static: true })\r\n  private formGroupDirective: FormGroupDirective;\r\n  displayedColumns: string[] = [\r\n    \"FuseSerialNo\",\r\n    \"StartDateStr\",\r\n    \"EndDateStr\",\r\n    \" \",\r\n  ];\r\n  dataSource = new MatTableDataSource<any>();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public Lisfirstdetails = false;\r\n  public LisgetDetails = false;\r\n  public cancelbutton = false;\r\n  public okbutton = false;\r\n  public confirmbutton = false;\r\n  public addLisButton = true;\r\n  public deleteAccount = false;\r\n  public isconfirm = false;\r\n  public delectedmsg = false;\r\n  public clinicLinked = false;\r\n  public doesnotExist = false;\r\n  public nextbutton = false;\r\n  public editLisbutton = false;\r\n  public supporterror = false;\r\n  public connectionerror = false;\r\n  public linkerror = false;\r\n  public updateDeside = false;\r\n  public updateforDelete = false;\r\n  public updateAccount = false;\r\n  public LISpopupTitle: any;\r\n  public addandEditButton: any;\r\n  public linkidError: any;\r\n  public truevalue: any;\r\n  public isfalse: any;\r\n  public clinicErrors: any;\r\n  public NgbModalOptions: any;\r\n  public filterName: any;\r\n  public refID: any;\r\n  public isBackOfficeUser: boolean;\r\n  status: any;\r\n  /** New Added */\r\n  panelOpenState = false;\r\n  public isProfileEditable = false;\r\n  public isPreferenceEditable = false;\r\n  public dsUserProfile: any = {};\r\n  public dsUserPreference: any = {};\r\n  public resetSignalRequest: ResetSignalRequest;\r\n  public isUserTypeBusiness = false;\r\n  public resetReqMsg = \"\";\r\n  public profileEmail = \"\";\r\n  public securityEmail = \"\";\r\n  public profileForm: UntypedFormGroup;\r\n  public selectedAccordion: number;\r\n  public dsState: any[] = [];\r\n  public phoneInput: HTMLInputElement;\r\n  public iti: any;\r\n  public businessPhoneITI: any;\r\n  public countryData = intlTelInputGlobals.getCountryData();\r\n  public dateFormateList = [\"MM/DD/YY\", \"DD/MM/YY\"];\r\n  public selectedDateFormate: string;\r\n  public timeFormateList = [\r\n    { value: true, text: \"On (23:59)\" },\r\n    { value: false, text: \"Off (11:59 AM/PM)\" },\r\n  ];\r\n  public selectedTimeFormate = this.dataService.appState.date.is24Hours;\r\n  public isConsultantUser: boolean;\r\n  public businessGUID: string;\r\n  isNumberValue = true;\r\n  GUID: any;\r\n  CountryID: number;\r\n  prevRefLabDetails: any;\r\n  acceptExtension = [\"image/jpeg\", \"image/png\"];\r\n  fileName = \"\";\r\n  fileError = false;\r\n  errorMsg: string;\r\n  isEdit = false;\r\n  displayLogo: SafeResourceUrl;\r\n  imageBase64: string;\r\n  displayLogoName: any;\r\n  /** End */\r\n  hideState = true;\r\n  hideCity = true;\r\n  changeStateTxt = true;\r\n  public selectedCountryCode: any = \"US\";\r\n  public helpObj: any;\r\n  isJapanese: boolean;\r\n  fuseElem: any;\r\n  maxDate = new Date();\r\n  dateFormat = moment(new Date()).format(\r\n    localStorage.DateTimeFormat || \"YYYY-MM-DD\"\r\n  );\r\n  fuseEndDateStr: any = new Date();\r\n  isClinicAdmin: boolean;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public headerService: HeaderService,\r\n    public fuseService: FuseService,\r\n    private fb: UntypedFormBuilder,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    private modalService: NgbModal,\r\n    public userService: UserService,\r\n    private formBuilder: UntypedFormBuilder,\r\n    public refLabService: RefLabService,\r\n    private sanitizer: DomSanitizer,\r\n    private title: Title\r\n  ) {\r\n    this.isBackOfficeUser =\r\n      this.dataService.appData.authDetails[\"BackOfficeFlag\"];\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindUserProfileLabel();\r\n      this.labelService.bindFuseManagementLabel();\r\n      this.mutateLabelText();\r\n    }\r\n\r\n    this.businessGUID = this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsFuseManagementScreen.ClinicManagement}`)\r\n    console.log(this.isJapanese);\r\n    if (localStorage.getItem(\"langCode\") && localStorage.getItem(\"langCode\") != undefined) {\r\n      this.isJapanese =\r\n        localStorage.getItem(\"langCode\").toLowerCase().indexOf(\"jp\") != -1\r\n          ? true\r\n          : false;\r\n    }\r\n    this.helpObj = this.dataService.appData.helpTopics.find(\r\n      (e) => e.HelpTopic == \"Clinic-Management\"\r\n    );\r\n    const bckBusinessInfo = JSON.parse(localStorage.getItem(\"bckBusinessInfo\"));\r\n    const countryId =\r\n      this.dataService.appData.authDetails[\"BackOfficeFlag\"] &&\r\n        bckBusinessInfo &&\r\n        bckBusinessInfo[\"BCountryId\"]\r\n        ? bckBusinessInfo[\"BCountryId\"]\r\n        : localStorage.getItem(\"userCountryId\");\r\n    this.refLabService.insideUSCAuser =\r\n      [40, 31].indexOf(parseInt(countryId)) === -1 ? false : true;\r\n    this.profileForm = this.createProfileFormGroup(new UserDetails());\r\n    this.dsUserPreference = new UserDetails();\r\n\r\n    this.getUserDDLDetails(null);\r\n    if (localStorage.getItem(\"alert-popup\") == \"true\") {\r\n      this.modalService.open(AlertMessageComponent, {\r\n        centered: true,\r\n        backdrop: \"static\",\r\n        scrollable: false,\r\n      });\r\n    }\r\n\r\n    this.addFuseForm = this.createFormGroup(new FuseDetails());\r\n    this.refLabform = this.createFormGroupref(new ReflabDetails());\r\n    this.businessDetails = new BusineesDetails();\r\n    this.businessDetails.FuseDetails = [];\r\n    this.getFuseList();\r\n    this.getUserSetting();\r\n    this.getBusinessLog();\r\n    this.isClinicAdmin = this.dataService.appData.authDetails['UserTypeId'] == 1 ? true : false;\r\n  }\r\n\r\n  mutateLabelText() {\r\n    // console.log(localStorage.languageId)\r\n    const countryId: any = localStorage.getItem(\"userCountryId\");\r\n    const postalCodeCountries = [\r\n      \"31\",\r\n      \"38\",\r\n      \"49\",\r\n      \"53\",\r\n      \"167\",\r\n      \"64\",\r\n      \"168\",\r\n      \"33\",\r\n      \"169\",\r\n      \"170\",\r\n      \"63\",\r\n      \"3\",\r\n      \"51\",\r\n      \"22\",\r\n      \"24\",\r\n      \"18\",\r\n      \"213\",\r\n      \"44\",\r\n      \"21\",\r\n      \"56\",\r\n      \"37\",\r\n      \"65\",\r\n      \"5\",\r\n      \"34\",\r\n      \"27\",\r\n      \"341\",\r\n      \"348\",\r\n      \"77\",\r\n      \"361\",\r\n      \"412\",\r\n      \"405\",\r\n      \"376\",\r\n      \"419\",\r\n      \"369\",\r\n      \"383\",\r\n    ];\r\n    // ['63', '170', '169', '33', '168', '64', '167','56','37','65','5','34','27','328','341','348'];\r\n    const postCodeCountries = [\"20\", \"68\", \"79\", \"58\", \"71\", \"50\", \"46\", \"328\"];\r\n    //Change state label text based on Country selection\r\n    const provinceCountries = [\r\n      \"31\",\r\n      \"49\",\r\n      \"53\",\r\n      \"24\",\r\n      \"60\",\r\n      \"47\",\r\n      \"18\",\r\n      \"21\",\r\n      \"7\",\r\n      \"65\",\r\n    ]; //['33','21','24','60','47','18'];\r\n    const countyCountries = [\r\n      \"79\",\r\n      \"58\",\r\n      \"71\",\r\n      \"50\",\r\n      \"64\",\r\n      \"3\",\r\n      \"51\",\r\n      \"77\",\r\n      \"376\",\r\n      \"369\",\r\n      \"383\",\r\n    ]; //'64', '167','51','3','79',\r\n    const stateUTCountries = [\"44\"];\r\n    const regionCountries = [\"56\", \"27\", \"341\", \"170\", \"328\", \"412\", \"405\"];\r\n    const departmentCountries = [\"37\", \"12\"];\r\n    const cantonCountries = [\"34\"];\r\n    const StateAbvCountries = [\"20\"];\r\n    const DistrictCountries = [\"45\", \"361\"];\r\n    const PrefectureCountries = [\"390\"];\r\n    const VoivodeshipCountires = [\"398\"];\r\n    const otherStateTexts = [\r\n      { id: \"348\", text: \"Emirate\" }, // UAE\r\n    ];\r\n    const GovernorateCountries = [\"51\"];\r\n    const District = [\"3\", \"60\"];\r\n    if (provinceCountries.indexOf(countryId) !== -1) {\r\n      if (\r\n        localStorage.languageId == \"6\" &&\r\n        localStorage.userCountryId == \"49\"\r\n      ) {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen.Region;\r\n      } else if (\r\n        localStorage.languageId == \"1\" &&\r\n        localStorage.userCountryId == \"31\"\r\n      ) {\r\n        this.labelService.dsUserProfileScreen.State = \"Province/Territory\";\r\n      } else {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen.Province;\r\n      }\r\n    } else if (countyCountries.indexOf(countryId) !== -1) {\r\n      if (\r\n        localStorage.languageId == \"2\" &&\r\n        localStorage.userCountryId == \"50\"\r\n      ) {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen.Department;\r\n      } else if (\r\n        localStorage.languageId == \"8\" &&\r\n        localStorage.userCountryId == \"71\"\r\n      ) {\r\n        const state = this.labelService.dsUserProfileScreen.State;\r\n        this.labelService.dsUserProfileScreen.State = state;\r\n      } else {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen.County;\r\n      }\r\n    } else if (stateUTCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State =\r\n        this.labelService.dsUserProfileScreen.StateUT;\r\n    } else if (regionCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State =\r\n        this.labelService.dsUserProfileScreen.Region;\r\n    } else if (cantonCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State =\r\n        this.labelService.dsUserProfileScreen.Canton;\r\n    } else if (departmentCountries.indexOf(countryId) !== -1) {\r\n      if (localStorage.languageId == \"4\") {\r\n        this.labelService.dsUserProfileScreen.State = \"Departmento\";\r\n      } else {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen.Department;\r\n      }\r\n    } else if (StateAbvCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State = \"State Abbreviation\";\r\n    } else if (DistrictCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State = \"District\";\r\n    } else if (PrefectureCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State =\r\n        this.labelService.dsUserProfileScreen.Prefecture;\r\n    } else if (VoivodeshipCountires.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State = \"Voivodeship\";\r\n    }\r\n\r\n    if (postalCodeCountries.indexOf(countryId) !== -1) {\r\n      if (localStorage.languageId == \"7\") {\r\n        this.labelService.dsUserProfileScreen.EnterZipCode =\r\n          this.labelService.dsUserProfileScreen.EnterPostalcode;\r\n      } else {\r\n        this.labelService.dsUserProfileScreen.EnterZipCode =\r\n          this.labelService.dsUserProfileScreen.EnterPostalCode;\r\n      }\r\n      this.labelService.dsUserProfileScreen.ZipCode =\r\n        this.labelService.dsUserProfileScreen.PostalCode;\r\n    } else if (postCodeCountries.indexOf(countryId) !== -1) {\r\n      if (localStorage.languageId != \"2\") {\r\n        this.labelService.dsUserProfileScreen.EnterZipCode =\r\n          this.labelService.dsUserProfileScreen.EnterPostCode;\r\n      }\r\n      this.labelService.dsUserProfileScreen.ZipCode =\r\n        this.labelService.dsUserProfileScreen.PostCode;\r\n    }\r\n    if ([\"45\"].indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.EnterZipCode =\r\n        this.labelService.dsUserProfileScreen.EnterZipcode;\r\n      this.labelService.dsUserProfileScreen.ZipCode =\r\n        this.labelService.dsUserProfileScreen.Zipcode;\r\n    }\r\n    otherStateTexts.forEach((p) => {\r\n      if (p[\"id\"] == countryId) {\r\n        this.labelService.dsUserProfileScreen.State =\r\n          this.labelService.dsUserProfileScreen[p[\"text\"]];\r\n      }\r\n    });\r\n\r\n    if (GovernorateCountries.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.City =\r\n        this.labelService.dsUserProfileScreen.Governorate;\r\n    } else if (District.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.City =\r\n        this.labelService.dsUserProfileScreen.District;\r\n    } else if ([\"20\"].indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.City = \"Suburb\";\r\n    } else if ([\"77\"].indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.City = \"Region\";\r\n    }\r\n  }\r\n\r\n  public getUserSetting() {\r\n    this.userService\r\n      .getUserSettingDetails(\r\n        this.headerService.loginUserGuid,\r\n        this.businessGUID\r\n      )\r\n      .subscribe({\r\n        next: (data) => {\r\n          this.userService.originalUserProfileData = data.ResponseData;\r\n          if (\r\n            this.userService.originalUserProfileData.FollowPatient ==\r\n            undefined ||\r\n            this.userService.originalUserProfileData.FollowPatient == null\r\n          )\r\n            this.userService.originalUserProfileData.FollowPatient =\r\n              EnmNotificationSetting.AllClinicResults;\r\n          this.getUserTitleDetails(\r\n            this.userService.originalUserProfileData.PrefixTypeId\r\n          );\r\n          this.setDataSource();\r\n        },\r\n        error: () => {\r\n          this.userService.originalUserProfileData = null;\r\n          this.dsUserProfile = {};\r\n          this.dsUserPreference = {};\r\n          this.profileEmail = \"\";\r\n          this.securityEmail = \"\";\r\n          this.isUserTypeBusiness = false;\r\n        },\r\n      });\r\n    this.checkCountryBasedChange();\r\n  }\r\n\r\n  public setDataSource() {\r\n    this.dsUserProfile = Object.assign(\r\n      {},\r\n      this.userService.originalUserProfileData\r\n    );\r\n    Object.assign(\r\n      this.dsUserPreference,\r\n      this.userService.originalUserProfileData\r\n    );\r\n    this.securityEmail = this.userService.originalUserProfileData.Email;\r\n    this.profileEmail = this.userService.originalUserProfileData.Email;\r\n    this.profileForm.controls[\"ZoetisAccountNumber\"].setValue(\r\n      this.dsUserProfile.ZoetisAccountNumber\r\n    );\r\n    this.isNumberValue = this.dsUserProfile.PhoneNo ? true : false;\r\n    if (this.dsUserProfile.UserTypeId == EnmUserType.Business) {\r\n      this.isUserTypeBusiness = true;\r\n      if (this.userService.dsCountry.length) {\r\n        this.dsState = this.userService.dsCountry.find(\r\n          (x) => x.Id == this.dsUserProfile.CountryId\r\n        ).StateDetails;\r\n        if (\r\n          this.dsUserProfile.CountryId == \"213\" &&\r\n          !this.dsUserProfile.StateId &&\r\n          this.dsUserProfile.City\r\n        ) {\r\n          this.dsUserProfile.StateId = this.dsState.find(\r\n            (x) => x.StateName == this.dsUserProfile.City\r\n          )?.Id;\r\n          this.dsUserProfile.State = this.dsUserProfile.City;\r\n          this.dsUserPreference.StateId = this.dsState.find(\r\n            (x) => x.StateName == this.dsUserProfile.City\r\n          )?.Id;\r\n          this.dsUserPreference.State = this.dsUserProfile.City;\r\n        }\r\n        this.profileForm.controls[\"StateId\"].setValue(\r\n          this.dsUserProfile.StateId\r\n        );\r\n      }\r\n    } else {\r\n      this.isUserTypeBusiness = false;\r\n    }\r\n    // this.reIti();\r\n    console.log(this.dsUserProfile.CountryId);\r\n    this.checkCountryBasedChange(this.dsUserProfile.CountryId.toString());\r\n  }\r\n\r\n  public getUserTitleDetails(prefixId) {\r\n    this.userService\r\n      .getUserDDLDetails(\r\n        this.labelService.selectedLanguage,\r\n        this.labelService.userCountryId,\r\n        prefixId\r\n      )\r\n      .subscribe((data) => {\r\n        this.userService.dsTitle = data.ResponseData.TitleDetails;\r\n      });\r\n  }\r\n\r\n  checkCountryBasedChange(countryid?: string) {\r\n    const countryId: any = countryid;\r\n    const changeStatelabelName = [\"22\", \"213\"];\r\n    const hideStateField = [\"169\", \"33\", \"168\", \"63\", \"167\", \"419\", \"534\", \"590\", \"550\", \"542\", \"582\", \"566\", \"558\", \"574\", \"598\", \"606\", \"614\", \"638\", \"622\", \"630\", \"678\", \"686\", \"694\", \"670\", \"654\", \"646\", \"710\", \"718\", \"662\", \"702\"];\r\n    const hideCityField = [\"376\", \"390\", \"369\"];\r\n    if (changeStatelabelName.indexOf(countryId) !== -1) {\r\n      this.labelService.dsUserProfileScreen.State =\r\n        countryId == 22 ? this.labelService.dsUserProfileScreen.City : \"Town\";\r\n      this.changeStateTxt = false;\r\n      this.hideCity = false;\r\n    }\r\n    if (hideStateField.indexOf(countryId) !== -1) {\r\n      this.hideState = false;\r\n    }\r\n    if (hideCityField.indexOf(countryId) !== -1) {\r\n      this.hideCity = false;\r\n      this.changeStateTxt = false;\r\n    }\r\n  }\r\n\r\n  public reIti() {\r\n    const businessPhoneNo = this.businessPhoneITI.getNumber();\r\n    const phoneNo = this.dsUserProfile.PhoneNo;\r\n    if (phoneNo && this.iti) this.iti.setNumber(phoneNo);\r\n    if (businessPhoneNo && this.businessPhoneITI)\r\n      this.businessPhoneITI.setNumber(businessPhoneNo);\r\n    if (businessPhoneNo && this.businessPhoneITI)\r\n      this.businessPhoneITI.setCountry(this.selectedCountryCode);\r\n  }\r\n\r\n  public editProfile() {\r\n    this.isProfileEditable = true;\r\n    this.profileForm = this.createProfileFormGroup(new UserDetails());\r\n    this.profileForm.patchValue(this.dsUserProfile);\r\n    // this.profileForm.get('ContactEmail').patchValue(this.dsUserProfile.ContactEmail)\r\n    // this.reIti();\r\n    this.formateEditableBusinessPhone();\r\n  }\r\n\r\n  public cancelEditProfile() {\r\n    this.isProfileEditable = false;\r\n    this.profileForm.patchValue(this.dsUserProfile);\r\n    this.formateDisplayBusinessPhone();\r\n    this.formateEditableBusinessPhone();\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.bindUserProfileLabel();\r\n        this.labelService.bindFuseManagementLabel();\r\n        this.mutateLabelText();\r\n      });\r\n  }\r\n\r\n  public getUserDDLDetails(prefixId) {\r\n    this.userService\r\n      .getUserDDLDetails(\r\n        this.labelService.selectedLanguage,\r\n        this.labelService.userCountryId,\r\n        prefixId\r\n      )\r\n      .subscribe((data) => {\r\n        this.userService.dsCountry = data.ResponseData.CountryDetails;\r\n        this.userService.dsTitle = data.ResponseData.TitleDetails;\r\n        this.userService.dsSuffix = data.ResponseData.SuffixDetails;\r\n        this.userService.dsLanguage = data.ResponseData.LanguageDetails;\r\n        this.userService.dsNotification =\r\n          data.ResponseData.NotificationSettingsValue;\r\n        this.getUserSetting();\r\n      });\r\n  }\r\n\r\n  public onCountryChange() {\r\n    this.dsState = this.userService.dsCountry.find(\r\n      (x) => x.Id == this.profileForm.controls[\"CountryId\"].value\r\n    ).StateDetails;\r\n  }\r\n\r\n  public getCountryName(cId) {\r\n    return cId && this.userService.dsCountry.length\r\n      ? this.userService.dsCountry.find((x) => x.Id == cId).CountryName\r\n      : \"\";\r\n  }\r\n\r\n  public validateBusinessPhoneNo() {\r\n    this.profileForm.controls[\"BusinessPhoneNo\"].setValue(\r\n      this.profileForm.controls[\"BusinessPhoneNo\"].value.replace(\r\n        /[^0-9-+ ]*/g,\r\n        \"\"\r\n      )\r\n    );\r\n    const BusinessPhoneNo = this.businessPhoneITI.getNumber().trim();\r\n    const inputValue = this.profileForm.controls[\"BusinessPhoneNo\"].value;\r\n    const isOnlyNumber = /^[0-9-]+$/.test(inputValue); // To prevent enter + in input\r\n    // const errorMap = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\r\n    if (BusinessPhoneNo) {\r\n      if (isOnlyNumber && this.businessPhoneITI.isValidNumber()) {\r\n        // console.log('Valid');\r\n      } else {\r\n        // const errorCode = this.businessPhoneITI.getValidationError();\r\n        this.businessPhoneITI.getValidationError();\r\n        this.profileForm.controls[\"BusinessPhoneNo\"].setErrors({\r\n          incorrect: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateUserProfile() {\r\n    if (this.selectedCountryCode != undefined && (this.selectedCountryCode.toLowerCase() != this.businessPhoneITI.defaultCountry)) {\r\n      this.profileForm.controls[\"BusinessPhoneNo\"].setErrors({\r\n        incorrect: true,\r\n      });\r\n    }\r\n    if (!this.profileForm.valid) {\r\n      this.profileForm.setErrors({ invalid: true });\r\n      const msg = this.labelService.dsUserProfileScreen.ErrorMessage;\r\n      this.confirmationDialogService\r\n        .confirm(\r\n          \"\",\r\n          msg,\r\n          this.labelService.dsUserProfileScreen.OK,\r\n          this.labelService.dsUserProfileScreen.Cancel,\r\n          \"sm\",\r\n          true,\r\n          false\r\n        )\r\n        .then((confirmed) => {\r\n          console.log(confirmed);\r\n        })\r\n        .catch(() => {\r\n          console.log(\"error...\");\r\n        });\r\n      return;\r\n    }\r\n\r\n    this.profileForm.addControl(\r\n      \"IsBusinessUpdate\",\r\n      new UntypedFormControl(true)\r\n    );\r\n    this.userService.updateUserProfile(this.profileForm.value).subscribe({\r\n      next: (data) => {\r\n        if (data.StatusCode == 200) {\r\n          this.headerService.selectedBusinessName =\r\n            this.profileForm.controls[\"BusinessName\"].value;\r\n          localStorage.setItem(\r\n            \"businessName\",\r\n            this.headerService.selectedBusinessName\r\n          );\r\n          localStorage.setItem(\"userName\", this.headerService.userName);\r\n          if (this.profileForm.controls[\"CountryId\"].value != null) {\r\n            localStorage.setItem(\r\n              \"userCountryId\",\r\n              this.profileForm.controls[\"CountryId\"].value\r\n            );\r\n            this.labelService.userCountryId =\r\n              this.profileForm.controls[\"CountryId\"].value;\r\n            this.dataService.appData.masterData.userCountryId =\r\n              this.profileForm.controls[\"CountryId\"].value;\r\n            this.dataService.data.next(this.dataService.appData);\r\n          }\r\n          this.headerService.getBusinessListDetailsByUserId(this.businessGUID);\r\n\r\n          //  used for send email page dispaly\r\n          this.dataService.appData.authDetails[\"BusinessPhoneNo\"] =\r\n            this.profileForm.value.BusinessPhoneNo;\r\n          this.dataService.appData.authDetails[\"Email\"] =\r\n            this.profileForm.value.Email;\r\n          this.dataService.data.next(this.dataService.appData);\r\n\r\n          this.getUserDDLDetails(null);\r\n          this.cancelEditProfile();\r\n          this.showMsg(\r\n            this.labelService.dsUserProfileScreen.UserProfileUpdatedSuccessfully\r\n          );\r\n        } else {\r\n          this.showMsg(this.labelService.dsUserProfileScreen.Error);\r\n        }\r\n      },\r\n      error: () => {\r\n        this.showMsg(this.labelService.dsUserProfileScreen.Error);\r\n      },\r\n    });\r\n  }\r\n\r\n  public createProfileFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      PrefixTypeId: dataItem.PrefixTypeId,\r\n      Email: dataItem.Email,\r\n      ContactEmail: [\r\n        dataItem.ContactEmail,\r\n        Validators.compose([Validators.email]),\r\n      ], // Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,9}$\")\r\n      FirstName: [dataItem.FirstName], // Validators.compose([Validators.required, Validators.maxLength(50), Validators.pattern(\"[a-zA-Z0-9-.,' ]{1,50}\")])\r\n      LastName: [dataItem.LastName], // , Validators.compose([Validators.maxLength(50), Validators.pattern(\"[a-zA-Z0-9-.,' ]{1,50}\")])\r\n      Suffix: [dataItem.Suffix],\r\n      Title: [dataItem.Title],\r\n      PhoneNo: [dataItem.PhoneNo, [Validators.pattern(\"^[0-9-+ ]{1,15}\")]],\r\n      CountryId: dataItem.CountryId,\r\n      BusinessName: [\r\n        dataItem.BusinessName,\r\n        Validators.compose([Validators.required, Validators.maxLength(255)]),\r\n      ], //Validators.pattern(`^[a-zA-Z0-9-.&@$\"'][a-zA-Z0-9-.&@$'()\", ]{0,100}`)\r\n      AddressLine1: [\r\n        dataItem.AddressLine1,\r\n        Validators.compose([Validators.required, Validators.maxLength(255)]),\r\n      ], //Validators.pattern(\"^[a-zA-Z0-9-'][a-zA-Z0-9-.,' ]{0,100}\")\r\n      AddressLine2: [\r\n        dataItem.AddressLine2,\r\n        Validators.compose([Validators.maxLength(100)]),\r\n      ], //Validators.pattern(\"^[a-zA-Z0-9-'][a-zA-Z0-9-.,' ]{0,100}\")\r\n      City: [\r\n        dataItem.City,\r\n        this.isUserTypeBusiness\r\n          ? Validators.compose([\r\n            this.hideCity ? Validators.required : Validators.nullValidator,\r\n            Validators.maxLength(50),\r\n          ])\r\n          : Validators.nullValidator,\r\n      ], //Validators.pattern(\"^[a-zA-Z0-9][a-zA-ZâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ0-9-..,' ]{1,50}\")\r\n      StateId: [\r\n        dataItem.StateId,\r\n        this.hideState && localStorage.userCountryId != \"79\"\r\n          ? Validators.required\r\n          : Validators.nullValidator,\r\n      ],\r\n      ZipCode: [\r\n        dataItem.ZipCode,\r\n        Validators.compose([Validators.required, Validators.maxLength(11)]),\r\n      ], // Validators.pattern('^[a-zA-Z0-9][a-zA-Z0-9- ]{1,11}')\r\n      BusinessPhoneNo: [dataItem.BusinessPhoneNo],\r\n      UserRelationGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.headerService.businessGuid,\r\n      CreatedGuid: this.headerService.businessGuid,\r\n      UserTypeId: dataItem.UserTypeId,\r\n      UserGuid: dataItem.UserGuid,\r\n      CreatedAt: dataItem.CreatedAt,\r\n      ZoetisAccountNumber: [\r\n        dataItem.ZoetisAccountNumber,\r\n        Validators.compose([\r\n          Validators.maxLength(100),\r\n          Validators.pattern(\"^[a-zA-Z0-9-]{1,100}\"),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const selectedCountryId = this.dataService.appData.authDetails[\"CountryId\"];\r\n    if (this.dataService.appData.userDropDownList.CountryDetails != undefined) {\r\n      this.selectedCountryCode =\r\n        this.dataService.appData.userDropDownList.CountryDetails.filter(\r\n          (ele) => selectedCountryId == ele.Id\r\n        )[0].CountryCode;\r\n    }\r\n\r\n    for (let i = 0; i < this.countryData.length; i++) {\r\n      const country = this.countryData[i];\r\n      country.name = \"\";\r\n    }\r\n    this.formateDisplayBusinessPhone();\r\n    this.formateEditableBusinessPhone();\r\n  }\r\n\r\n  public formateDisplayBusinessPhone() {\r\n    setTimeout(() => {\r\n      const BPhone = document.querySelector(\"#BPhone\");\r\n      if (BPhone) {\r\n        intlTelInput(document.querySelector(\"#BPhone\"), {\r\n          allowDropdown: false,\r\n          separateDialCode: true,\r\n          initialCountry: this.selectedCountryCode,\r\n          onlyCountries: [this.selectedCountryCode],\r\n          formatOnDisplay: true,\r\n          utilsScript: \"assets/intl-tel-input/js/utils.js\",\r\n        });\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  public formateEditableBusinessPhone() {\r\n    setTimeout(() => {\r\n      this.businessPhoneITI = intlTelInput(\r\n        document.querySelector(\"#businessPhone\"),\r\n        {\r\n          allowDropdown: false,\r\n          separateDialCode: true,\r\n          initialCountry: this.selectedCountryCode,\r\n          onlyCountries: [this.selectedCountryCode],\r\n          formatOnDisplay: true,\r\n          utilsScript: \"assets/intl-tel-input/js/utils.js\",\r\n        }\r\n      );\r\n    }, 500);\r\n  }\r\n\r\n  public getFuseList() {\r\n    const params = {\r\n      businessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"],\r\n      UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n      IsBackOfficeUser: this.isBackOfficeUser,\r\n    };\r\n    this.fuseService.getFuseList(params).subscribe({\r\n      next: (data) => {\r\n        this.businessDetails = data.ResponseData[0];\r\n        this.dataService.appData.authDetails[\"IsReflabActive\"] =\r\n          this.businessDetails.RefLabClinicId;\r\n        this.dataService.data.next(this.dataService.appData);\r\n        // this.businessDetails.FuseDetails = this.businessDetails.FuseDetails.sort(function (a, b) {\r\n        //   return ('' + a.FuseSerialNo).localeCompare(b.FuseSerialNo);\r\n        // })\r\n        this.businessDetails.FuseDetails.map((x, y) => {\r\n          x['StDate'] = moment(x['StartDate'].split('T')[0], 'YYYY-MM-DD')\r\n          x['shouldShow'] = this.toggleFlagGenerator(x)\r\n        })\r\n        console.log(this.businessDetails.FuseDetails.filter(x => x.FuseSerialNo === 'VFU000091'), 'pp')\r\n        this.dataSource = new MatTableDataSource<any>(\r\n          this.businessDetails.FuseDetails\r\n        );\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.refID = this.businessDetails.RefLabClinicId;\r\n        this.show = true;\r\n\r\n        gtag(\"event\", \"Clinic_Management\", {\r\n          Clinic_Name: this.businessDetails.BusinessName,\r\n          Clinic_Address: this.businessDetails.Address,\r\n          Clinic_Zipcode: this.businessDetails.Zipcode,\r\n          Clinic_Phone: this.businessDetails.Phone,\r\n          Ref_Lab_ID: this.businessDetails.RefLabClinicId,\r\n          FUSE_Serial_No:\r\n            this.businessDetails.FuseDetails.length > 0\r\n              ? this.businessDetails.FuseDetails[\"FuseSerialNo\"]\r\n              : \"\",\r\n          Start_Date:\r\n            this.businessDetails.FuseDetails.length > 0\r\n              ? this.businessDetails.FuseDetails[\"StartDateStr\"]\r\n              : \"\",\r\n          End_Date:\r\n            this.businessDetails.FuseDetails.length > 0\r\n              ? this.businessDetails.FuseDetails[\"EndDateStr\"]\r\n              : \"\",\r\n          Action:\r\n            this.businessDetails.FuseDetails.length > 0\r\n              ? this.businessDetails.FuseDetails[\"IsActive\"]\r\n              : \"\",\r\n        });\r\n      },\r\n      error: () => {\r\n        this.dataSource = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  public openDrawer(drawer) {\r\n    this.msg = \"\";\r\n    this.formGroupDirective.resetForm();\r\n    drawer.open();\r\n    this.addFuseForm = this.createFormGroup(new FuseDetails());\r\n  }\r\n\r\n  public addUpdateFuse(drawer) {\r\n    if (this.addFuseForm.status == \"VALID\") {\r\n      this.fuseService.addUpdateFuse(this.addFuseForm.value).subscribe(\r\n        (data) => {\r\n          if (data.DisplayMessage == \"Pin is not valid\") {\r\n            this.msg =\r\n              this.labelService.dsFuseManagementScreen.ThisPINisincorrect;\r\n            this.addFuseForm.controls.FusePin.setValue(\"\");\r\n          } else if (data.DisplayMessage == \"Record already exist!\") {\r\n            this.msg =\r\n              this.labelService.dsFuseManagementScreen.ThisFUSEisalreadypaired;\r\n          } else if (data.DisplayMessage == \"Fuse serial number is not valid\") {\r\n            this.msg =\r\n              this.labelService.dsFuseManagementScreen.InvalidFuseSerialNo;\r\n            this.addFuseForm.controls.FusePin.setValue(\"\");\r\n          } else {\r\n            this.getFuseList();\r\n            drawer.close();\r\n            this.showMsg(\r\n              this.labelService.dsFuseManagementScreen.Fuseaddedsuccessfully\r\n            );\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.error.DisplayMessage == \"Record already exist!\") {\r\n            this.msg =\r\n              this.labelService.dsFuseManagementScreen.ThisFUSEisalreadypaired;\r\n          } else if (\r\n            error.error.DisplayMessage == \"Fuse serial number is not valid\"\r\n          ) {\r\n            this.msg =\r\n              this.labelService.dsFuseManagementScreen.InvalidFuseSerialNo;\r\n            this.addFuseForm.controls.FusePin.setValue(\"\");\r\n          } else this.msg = this.labelService.dsFuseManagementScreen.Error;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  restrictSpace(event: any) {\r\n    console.log(event);\r\n    if (event.target.selectionStart == 0 && event.code == \"Space\") {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public updateActiveInactive(val: any, element: any) {\r\n    console.log(element, 'lll');\r\n\r\n    this.fuseElem = element;\r\n    const checkHandle = val.getAttribute(\"class\");\r\n    if (checkHandle.includes(\"handle\") === true) {\r\n      val = val.parentElement;\r\n    }\r\n    const currStatus = val.getAttribute(\"class\");\r\n\r\n    const checked: any = currStatus.includes(\"active\");\r\n    const msg = checked\r\n      ? this.labelService.dsFuseManagementScreen.FuseInactivateConfirmation\r\n      : this.labelService.dsFuseManagementScreen.FuseActivateConfirmation;\r\n\r\n    this.confirmationDialogService\r\n      .confirm(\r\n        \"NO_HEADER\",\r\n        msg,\r\n        this.labelService.dsFuseManagementScreen.Continue,\r\n        this.labelService.dsFuseManagementScreen.Cancel,\r\n        \"lg\"\r\n      )\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          if (checked) {\r\n            this.fuseEndDateStr = new Date();\r\n            const modalRef = this.modalService.open(this.fuseInactiveCalender, {\r\n              windowClass: \"calenderCls\",\r\n              centered: true,\r\n              size: \"sm\",\r\n              backdrop: true,\r\n            });\r\n            modalRef.componentInstance.allowOutSideClick = false;\r\n          } else {\r\n            this.fuseUpdate(checked);\r\n          }\r\n        } else {\r\n          val.setAttribute(\"class\", currStatus);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        val.setAttribute(\"class\", currStatus);\r\n      });\r\n  }\r\n  updaeFuseEndDateStr(ev) {\r\n    this.fuseEndDateStr = ev;\r\n  }\r\n  fuseUpdate(checked) {\r\n    this.fuseElem.IsActive = !checked;\r\n    this.fuseElem.ModifiedGuid =\r\n      this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n    this.fuseElem.userGuid = this.dataService.appData.authDetails[\"UserGuid\"];\r\n    //if (checked){\r\n    this.fuseElem.EndDateStr = moment(this.fuseEndDateStr).format(\r\n      \"MM-DD-YYYY\"\r\n    );\r\n    //}\r\n    this.fuseService.addUpdateFuse(this.fuseElem).subscribe({\r\n      next: () => {\r\n        if (checked) {\r\n          this.closeFuseToggleModal();\r\n          this.showMsg(\r\n            `${this.labelService.dsFuseManagementScreen.TheDevice}&nbsp;<b>${this.fuseElem.FuseSerialNo\r\n            }</b>&nbsp;${this.labelService.dsFuseManagementScreen.HasBeenAssignedToEnd}&nbsp;<b>\r\n            ${moment(this.fuseEndDateStr).format(\r\n              localStorage.DateTimeFormat || \"YYYY-MM-DD\"\r\n            )}</b>`,\r\n            this.labelService.dsFuseManagementScreen.Close\r\n          );\r\n        }\r\n        this.getFuseList();\r\n      },\r\n      error: () => {\r\n        this.showMsg(this.labelService.dsFuseManagementScreen.Error);\r\n      },\r\n    });\r\n  }\r\n\r\n  public showMsg(msg, btnOk = \"\", btnCancel = \"\") {\r\n    btnOk = btnOk || this.labelService.dsFuseManagementScreen.OK;\r\n    btnCancel = btnCancel || this.labelService.dsFuseManagementScreen.Cancel;\r\n    this.confirmationDialogService.confirm(\r\n      \"\",\r\n      msg,\r\n      btnOk,\r\n      btnCancel,\r\n      \"sm\",\r\n      true,\r\n      false\r\n    );\r\n    // .then((confirmed) => {\r\n    // })\r\n    // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.fb.group({\r\n      Id: dataItem.Id,\r\n      FuseSerialNo: [\r\n        dataItem.FuseSerialNo,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.maxLength(50),\r\n          Validators.pattern(\"[a-zA-Z0-9]+$\"),\r\n        ]),\r\n      ],\r\n      FusePin: [\r\n        dataItem.FusePin,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(\"[a-zA-Z0-9-]+$\"),\r\n        ]),\r\n      ],\r\n      CreatedGuid: this.headerService.loginUserGuid,\r\n      ModifiedGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"], // this.headerService.selectedBusinessId,\r\n      IsDeleted: dataItem.IsDeleted,\r\n    });\r\n  }\r\n\r\n  public createFormGroupref(dataItem: any): UntypedFormGroup {\r\n    return this.fb.group({\r\n      clinicId: [\r\n        dataItem.clinicId,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.maxLength(20),\r\n          Validators.pattern(\"[0-9]+$\"),\r\n        ]),\r\n      ],\r\n      name_1: [\r\n        dataItem.name_1,\r\n        Validators.compose([Validators.required, Validators.maxLength(20)]),\r\n      ],\r\n      address_1: [\r\n        dataItem.address_1,\r\n        Validators.compose([Validators.required, Validators.maxLength(20)]),\r\n      ],\r\n      zip: [\r\n        dataItem.zip,\r\n        Validators.compose([Validators.required, Validators.maxLength(10)]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.modalService.open(this.editModal, this.NgbModalOptions);\r\n  }\r\n  closeFuseToggleModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  addlistAccountpopup() {\r\n    this.updateDeside = false;\r\n    this.LISpopupTitle = this.labelService.dsFuseManagementScreen.AddAccount;\r\n    this.Lisfirstdetails = true;\r\n    this.cancelbutton = true;\r\n    this.nextbutton = true;\r\n    this.okbutton = false;\r\n    this.clinicLinked = false;\r\n    this.refLabform.reset();\r\n    this.filterName = \"\";\r\n    const ngbModalOptions: NgbModalOptions = {\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n    };\r\n    this.NgbModalOptions = ngbModalOptions;\r\n    this.modalService.open(this.editModal, ngbModalOptions);\r\n  }\r\n\r\n  public getClinicData() {\r\n    if (this.refLabform.get(\"clinicId\").value != null) {\r\n      this.fuseService\r\n        .getClinicDetails(\r\n          this.refLabform.get(\"clinicId\").value,\r\n          this.businessGUID\r\n        )\r\n        .subscribe(\r\n          (data) => {\r\n            this.reflabDetails = data.ResponseData;\r\n            this.status = data.StatusCode;\r\n            if (data.StatusCode == \"200\") {\r\n              this.refLabform = this.createFormGroupref(this.reflabDetails);\r\n              this.LisgetDetails = true;\r\n              this.Lisfirstdetails = false;\r\n              this.confirmbutton = true;\r\n              this.nextbutton = false;\r\n              this.deleteAccount = false;\r\n            }\r\n          },\r\n          (error) => {\r\n            if (\r\n              error.error.StatusCode == \"400\" ||\r\n              error.error.DisplayMessage == \"Record not found\"\r\n            ) {\r\n              this.cancelbutton = false;\r\n              this.nextbutton = false;\r\n              this.doesnotExist = true;\r\n              this.deleteAccount = false;\r\n              this.okbutton = true;\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  public closePopupall() {\r\n    if (!this.nextbutton) {\r\n      this.reflabDetails = this.prevRefLabDetails;\r\n      this.filterName = this.reflabDetails.clinic_id;\r\n    }\r\n\r\n    this.modalService.dismissAll();\r\n    this.refLabform.reset();\r\n    this.LisgetDetails = false;\r\n    this.confirmbutton = false;\r\n    this.LisgetDetails = false;\r\n    this.deleteAccount = false;\r\n    this.updateAccount = false;\r\n    this.Lisfirstdetails = false;\r\n    this.nextbutton = false;\r\n  }\r\n\r\n  public postClinicdetails() {\r\n    this.truevalue = \"true\";\r\n    this.isfalse = \"false\";\r\n    if (this.reflabDetails.is_zdx_clinic == this.truevalue) {\r\n      this.linkerror = true;\r\n    } else if (this.reflabDetails.is_active == this.isfalse) {\r\n      this.supporterror = true;\r\n    } else {\r\n      if (\r\n        this.reflabDetails.is_zdx_clinic == this.isfalse &&\r\n        this.reflabDetails.is_active == this.truevalue\r\n      ) {\r\n        const LinkClinic = {\r\n          BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"], // this.headerService.selectedBusinessId,\r\n          reflab_clinic_id: this.reflabDetails.clinic_id,\r\n          is_zdx_clinic: true,\r\n        };\r\n        this.fuseService.AddClinic(LinkClinic).subscribe(\r\n          (data) => {\r\n            if (data.StatusCode == \" 409\") {\r\n              this.linkerror = true;\r\n            } else {\r\n              this.getFuseList();\r\n              this.clinicLinked = true;\r\n              this.addLisButton = false;\r\n              this.editLisbutton = true;\r\n              this.dataService.appData.authDetails[\"IsLinkedRefLabClinic\"] =\r\n                true;\r\n              this.dataService.appData.authDetails[\"IsReflabActive\"] = true;\r\n              this.dataService.data.next(this.dataService.appData);\r\n            }\r\n          },\r\n          (error) => {\r\n            if (\r\n              error.error.StatusCode == \"302\" ||\r\n              error.error.DisplayMessage == \"Record already exist!\"\r\n            ) {\r\n              this.linkerror = true;\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    this.cancelbutton = false;\r\n    this.confirmbutton = false;\r\n    this.okbutton = true;\r\n  }\r\n\r\n  public okbuttonchg() {\r\n    if (this.linkerror == true) {\r\n      this.reflabDetails = this.prevRefLabDetails;\r\n      this.filterName = this.reflabDetails ? this.reflabDetails.clinic_id : \"\";\r\n    }\r\n    this.linkerror = false;\r\n    this.clinicLinked = false;\r\n    this.okbutton = false;\r\n    this.LisgetDetails = false;\r\n    this.cancelbutton = false;\r\n    this.doesnotExist = false;\r\n    this.nextbutton = false;\r\n    this.supporterror = false;\r\n    this.modalService.dismissAll();\r\n    if (this.delectedmsg) {\r\n      this.editLisbutton = false;\r\n      this.addLisButton = true;\r\n      this.delectedmsg = false;\r\n    }\r\n    if (this.updateDeside) {\r\n      this.editLisbutton = false;\r\n      this.addLisButton = true;\r\n    }\r\n  }\r\n\r\n  public editListaccount() {\r\n    this.modalService.open(this.editModal, this.NgbModalOptions);\r\n    this.LISpopupTitle = this.labelService.dsFuseManagementScreen.EditAccount;\r\n    if (this.reflabDetails == null) {\r\n      this.fuseService\r\n        .getClinicDetails(this.refID, this.businessGUID)\r\n        .subscribe((data) => {\r\n          this.reflabDetails = data.ResponseData;\r\n          this.refLabform = this.createFormGroupref(this.reflabDetails);\r\n          this.prevRefLabDetails = this.reflabDetails;\r\n        });\r\n    }\r\n    this.LisgetDetails = true;\r\n    this.okbutton = false;\r\n    this.cancelbutton = true;\r\n    this.deleteAccount = true;\r\n    this.updateAccount = true;\r\n    this.clinicLinked = false;\r\n    this.isconfirm = false;\r\n    this.confirmbutton = false;\r\n    this.delectedmsg = false;\r\n    this.Lisfirstdetails = false;\r\n  }\r\n\r\n  public deleteAccountdetails() {\r\n    if (\r\n      this.filterName == this.reflabDetails.clinic_id ||\r\n      this.filterName == undefined\r\n    ) {\r\n      this.deleteAccount = false;\r\n      this.updateAccount = false;\r\n      this.nextbutton = false;\r\n      this.isconfirm = true;\r\n    }\r\n  }\r\n\r\n  public deleteConfirm() {\r\n    const obj = {\r\n      Id: this.reflabDetails.clinic_id,\r\n    };\r\n    this.fuseService.DeleteClinic(obj).subscribe((data) => {\r\n      if (data.StatusCode == \"200\") {\r\n        this.dataService.appData.authDetails[\"IsLinkedRefLabClinic\"] = false;\r\n        this.dataService.appData.authDetails[\"IsReflabActive\"] = false;\r\n        this.dataService.appData.authDetails[\"RefLabClinicId\"] = \"\";\r\n\r\n        this.dataService.data.next(this.dataService.appData);\r\n        this.getFuseList();\r\n        this.filterName = \"\";\r\n        this.cancelbutton = false;\r\n        this.isconfirm = false;\r\n        this.delectedmsg = true;\r\n        this.okbutton = true;\r\n        this.addLisButton = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateClinicdetails() {\r\n    this.LISpopupTitle =\r\n      this.labelService.dsFuseManagementScreen.updatepopupTitle;\r\n    this.filterName = this.reflabDetails.clinic_id;\r\n    this.updateDeside = true;\r\n    this.updateAccount = false;\r\n    this.deleteAccount = true;\r\n    this.LisgetDetails = false;\r\n\r\n    this.addLisButton = false;\r\n    this.editLisbutton = true;\r\n    this.Lisfirstdetails = true;\r\n    this.nextbutton = true;\r\n  }\r\n\r\n  // Clinic logo File upload\r\n  getBusinessLog() {\r\n    this.fuseService.getBusinessLogo(this.businessGUID).subscribe(\r\n      (data: any) => {\r\n        if (data.StatusCode == \"200\") {\r\n          this.isEdit = data.ResponseData[\"LogoImage\"] !== null ? true : false;\r\n          this.imageBase64 = data.ResponseData.LogoImage;\r\n          this.displayLogoName = data.ResponseData.LogoName;\r\n          // deepcode ignore XSS: <Trusted resource>\r\n          this.displayLogo = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            this.imageBase64\r\n          );\r\n        } else {\r\n          this.isEdit = false;\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err.error.StatusCode == 500) this.isEdit = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  openLogoModal(str: string) {\r\n    if (str == \"addlogo\") {\r\n      this.modalService.open(this.addlogoModal, this.NgbModalOptions);\r\n    } else if (str == \"viewlogo\") {\r\n      this.modalService.open(this.viewlogoModal, this.NgbModalOptions);\r\n    } else if (str == \"editlogo\") {\r\n      this.modalService.open(this.editlogoModal, this.NgbModalOptions);\r\n    } else if (str == \"deletelogo\") {\r\n      this.modalService.open(this.deletelogoModal, this.NgbModalOptions);\r\n    }\r\n  }\r\n\r\n  readFile(file) {\r\n    if (file.length > 0) {\r\n      const files = file[0];\r\n\r\n      if (files.size > 2097152) {\r\n        this.fileError = true;\r\n        this.errorMsg =\r\n          this.labelService.dsFuseManagementScreen.FileSizeErrorMsg;\r\n        return false;\r\n      }\r\n      if (!this.acceptExtension.includes(files.type)) {\r\n        this.fileError = true;\r\n        this.errorMsg = this.labelService.dsFuseManagementScreen.FileErrorMsg;\r\n        return false;\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.onloadend = () => {\r\n        this.imageBase64 = fileReader.result.toString();\r\n      };\r\n      fileReader.readAsDataURL(files);\r\n      this.fileError = false;\r\n      this.fileName = files.name;\r\n    }\r\n  }\r\n\r\n  uploadLogo() {\r\n    const imgUpload = {\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.businessGUID,\r\n      LogoImage: this.imageBase64,\r\n      LogoName: this.fileName,\r\n      IsDeleted: false,\r\n    };\r\n    this.fuseService.addOrUpdateClinicLogo(imgUpload).subscribe({\r\n      next: (data) => {\r\n        if (data.StatusCode == \"200\") {\r\n          this.modaldismiss();\r\n          this.confirmationDialogService.confirmWithImgs(\r\n            \"\",\r\n            this.labelService.dsFuseManagementScreen.FileSuccessMsg,\r\n            \"OK\",\r\n            \"sm\",\r\n            true,\r\n            true,\r\n            false\r\n          );\r\n          this.getBusinessLog();\r\n        } else {\r\n          this.fileError = true;\r\n          this.errorMsg =\r\n            this.labelService.dsFuseManagementScreen.FileUnSuccessMsg;\r\n        }\r\n      },\r\n      error: () => {\r\n        this.fileError = true;\r\n        this.errorMsg =\r\n          this.labelService.dsFuseManagementScreen.FileUnSuccessMsg;\r\n      },\r\n    });\r\n  }\r\n\r\n  fileRemove() {\r\n    this.fileName = \"\";\r\n    this.fileError = false;\r\n    this.errorMsg = \"\";\r\n  }\r\n\r\n  modaldismiss() {\r\n    this.fileName = \"\";\r\n    this.fileError = false;\r\n    this.errorMsg = \"\";\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  DeleteLogo() {\r\n    const imgUpload = {\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.businessGUID,\r\n      LogoImage: this.imageBase64,\r\n      LogoName: this.displayLogoName,\r\n      IsDeleted: true,\r\n    };\r\n    this.fuseService.addOrUpdateClinicLogo(imgUpload).subscribe((data) => {\r\n      if (data.StatusCode == \"200\") {\r\n        this.getBusinessLog();\r\n        this.modalService.dismissAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleFlagGenerator(elem) {\r\n    if (elem.IsAssinged && !elem.IsActive) {\r\n      return false\r\n    }\r\n    const dups = this.businessDetails.FuseDetails.filter(x => x.FuseSerialNo === elem.FuseSerialNo)\r\n    dups.sort((a, b) => {\r\n      return Number(new Date(b.EndDate)) - Number(new Date(a.EndDate));\r\n    });\r\n    const active = dups.find(x => x.IsActive)\r\n    if (active && active.IsActive && active['FuseGuid'] != elem.FuseGuid) {\r\n      return false\r\n    }\r\n    if (!elem.EndDate || dups.length < 2 || dups[0]['FuseGuid'] == elem.FuseGuid) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <div id=\"content\" class=\"fuselist\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"ques-icon text-right\">\r\n      <section class=\"title-container\">\r\n        <span data-testid=\"clnc-msmt-title\" class=\"page-title\">{{ labelService.dsFuseManagementScreen.ClinicManagement }}</span>\r\n\r\n        <img class=\"qicon\" src=\"../../../assets/img/help-icon.svg\" [matTooltip]=\"labelService.dsSideMenuScreen.Help\"\r\n          alt=\"help-circle\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n          (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n\r\n      </section>\r\n    </div>\r\n    <div class=\"portal-outer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1\">\r\n          <mat-expansion-panel disabled=\"true\"  #mep=\"matExpansionPanel\"  expanded=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <p class=\"panel-header-text\">{{ labelService.dsUserProfileScreen.BusinessDetails }}\r\n              <img *ngIf=\"!isProfileEditable\" src=\"../../../../assets/img/edit@3x.png\" alt=\"img\" (click)=\"editProfile()\" width=\"22px\" class=\"pl-2\"/>\r\n            </p>\r\n            <div class=\"heading Hbtn headingone mb-0 text-right\">\r\n              <span  [ngClass]=\"{'toggle-accordion-icon' :mep.expanded == true}\">\r\n                <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\"  (click)=\"mep.expanded = !mep.expanded\" />\r\n            </span>\r\n              \r\n            </div>\r\n          </mat-expansion-panel-header>\r\n            <mat-card>\r\n            <div class=\"row col-lg-12\" [hidden]=\"isProfileEditable\">\r\n              <div class=\"row col-12\">\r\n                <span *ngIf=\"dsUserPreference.BusinessName\">{{ dsUserPreference.BusinessName }}, </span>\r\n                <span *ngIf=\"dsUserPreference.ZoetisAccountNumber\" class=\"pl-1 textup\">{{\r\n                  dsUserPreference.ZoetisAccountNumber\r\n                  }}, </span>\r\n              </div>\r\n              <div class=\"row col-12 mt-2\">\r\n                <span *ngIf=\"dsUserPreference.AddressLine1\">{{ dsUserPreference.AddressLine1}} <span\r\n                    *ngIf=\"!isJapanese\">,</span></span>\r\n                <span *ngIf=\"dsUserPreference.AddressLine2\" class=\"pl-1\">{{ dsUserPreference.AddressLine2 }}<span\r\n                    *ngIf=\"!isJapanese\">,</span> </span>\r\n                <span *ngIf=\"dsUserPreference.City && changeStateTxt\" class=\"pl-1\">{{ dsUserPreference.City }}<span\r\n                    *ngIf=\"!isJapanese\">,</span> </span>\r\n                <span *ngIf=\"dsUserPreference.State && hideState \" class=\"pl-1\">{{ dsUserPreference.State }}<span\r\n                    *ngIf=\"!isJapanese\">,</span> </span>\r\n                <span *ngIf=\"dsUserPreference.ZipCode\" class=\"pl-1\">{{ dsUserPreference.ZipCode }}<span\r\n                    *ngIf=\"!isJapanese\">,</span> </span>\r\n                <span *ngIf=\"dsUserPreference.CountryId\" class=\"pl-1\">{{ getCountryName(dsUserPreference.CountryId) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"row col-12 mt-2\">\r\n                <span *ngIf=\"dsUserPreference.BusinessPhoneNo\">\r\n                  <input type=\"tell\" id=\"BPhone\" matInput [value]=\"dsUserPreference.BusinessPhoneNo\" readonly />\r\n                </span>\r\n                <span *ngIf=\"dsUserPreference.ContactEmail\" class=\"pl-1\">\r\n                  {{ dsUserPreference.ContactEmail }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-edit editpart\" [hidden]=\"!isProfileEditable\">\r\n              <form novalidate [formGroup]=\"profileForm\" #formGroupDirective=\"ngForm\" class=\"w-100 profile_form \"\r\n                [ngClass]=\"{ 'view-mode': !isProfileEditable }\" (submit)=\"updateUserProfile()\">\r\n                <div class=\"row mr-0 ml-0 mb-0 mb-md-3 mb-lg-0\">\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{ labelService.dsUserProfileScreen.BusinessName\r\n                          }}<sup> *</sup> :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"labelService.dsUserProfileScreen.EnterBusinessName\"\r\n                            formControlName=\"BusinessName\" maxlength=\"255\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0 pr-2\">\r\n                        <label>{{\r\n                          labelService.dsUserProfileScreen\r\n                          .ZoetisAccountNo\r\n                          }} :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"labelService.dsUserProfileScreen.EnterZoetisNumber\"\r\n                            formControlName=\"ZoetisAccountNumber\" maxlength=\"100\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 col-xl-4 titleab mb-3 pr-3 pl-0\" [hidden]=\"!isUserTypeBusiness\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{\r\n                          labelService.dsUserProfileScreen.BusinessPhoneNo\r\n                          }}\r\n                          :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field class=\"W-100\" appearance=\"outline\" floatLabel=\"always\">\r\n                          <p class=\"m-0\" [hidden]=\"isProfileEditable && dsUserProfile.BusinessPhoneNo\">\r\n                          </p>\r\n\r\n                          <div [hidden]=\" !(dsUserProfile.BusinessPhoneNo || isProfileEditable ) \">\r\n                            <input type=\"tel\" id=\"businessPhone\" matInput formControlName=\"BusinessPhoneNo\"\r\n                              maxlength=\"15\" (keyup)=\"validateBusinessPhoneNo()\" />\r\n                          </div>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"row mr-0 ml-0 mb-0 mb-md-3 mb-lg-0\">\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{labelService.dsUserProfileScreen.ContactEmail}} :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"labelService.dsUserProfileScreen.EnterEmail\"\r\n                            formControlName=\"ContactEmail\" />\r\n                        </mat-form-field>\r\n                        <mat-error *ngIf=\"profileForm.get('ContactEmail').hasError('pattern')\">\r\n                          {{labelService.dsUserProfileScreen.InvalidEmail}}\r\n                        </mat-error>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{ labelService.dsUserProfileScreen.AddressLine1\r\n                          }}<sup> *</sup> :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"\r\n                          labelService.dsUserProfileScreen\r\n                            .EnterAddressLine1\r\n                        \" formControlName=\"AddressLine1\" maxlength=\"255\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{\r\n                          labelService.dsUserProfileScreen.AddressLine2\r\n                          }} :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field pr-2\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"\r\n                          isProfileEditable\r\n                            ? labelService.dsUserProfileScreen\r\n                                .EnterAddressLine2\r\n                            : ''\r\n                        \" formControlName=\"AddressLine2\" maxlength=\"255\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mr-0 ml-0 mb-0 mb-md-3 mb-lg-0\">\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0\" *ngIf=\"changeStateTxt && hideCity\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{ labelService.dsUserProfileScreen.City\r\n                          }}<sup> *</sup> :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" [placeholder]=\"\r\n                          labelService.dsUserProfileScreen.EnterCity\" formControlName=\"City\" matInput\r\n                            autocomplete=\"off\" maxlength=\"50\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ng-container *ngIf=\"hideState\">\r\n                    <div class=\"col-md-6 col-xl-4 titleab mb-3 pr-3 pl-0 drop_view\">\r\n                      <div class=\"row m-0\">\r\n                        <div class=\"full-w-div col-sm-6 p-0\">\r\n                          <label>{{ labelService.dsUserProfileScreen.State }}<sup\r\n                              *ngIf=\"dsUserProfile.CountryId !== '79'\"> *</sup> :</label>\r\n                        </div>\r\n                        <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field fusemat\">\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <mat-select formControlName=\"StateId\" autocomplete=\"off\">\r\n                              <mat-option *ngFor=\"let state of dsState\" [value]=\"state.Id\">{{ state.StateName }}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-container>\r\n                  <div class=\"col-md-6 col-xl-4 titleab mb-3 pr-3 pl-0\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{ labelService.dsUserProfileScreen.ZipCode }}<sup> *</sup> :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field pr-2\">\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput [placeholder]=\"labelService.dsUserProfileScreen.EnterZipCode\"\r\n                            formControlName=\"ZipCode\" maxlength=\"10\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 col-xl-4 mb-3 pr-3 pl-0 view-mode country\">\r\n                    <div class=\"row m-0\">\r\n                      <div class=\"full-w-div col-sm-6 p-0\">\r\n                        <label>{{\r\n                          labelService.dsUserProfileScreen.Country\r\n                          }}\r\n                          :</label>\r\n                      </div>\r\n                      <div class=\"full-w-div col-sm-6 p-0 mt-0 profile-field\">\r\n                        {{ getCountryName(dsUserPreference.CountryId) }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"d-flex mt-4 justify-content-center mt-4 w-100\">\r\n                  <button type=\"button\" mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\"\r\n                    (click)=\"cancelEditProfile()\">\r\n                    {{ labelService.dsUserProfileScreen.Cancel }}\r\n                  </button>\r\n                  <button type=\"submit\" mat-button class=\"addfuse \">\r\n                    {{ labelService.dsUserProfileScreen.Save }}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </mat-card>\r\n        </mat-expansion-panel>\r\n        </div>\r\n\r\n        <!-- Clinic Logo start -->\r\n        <div class=\"col-sm-12 pt-3 pl-1 pr-1\">\r\n          <!-- <mat-card> -->\r\n          <mat-expansion-panel disabled=\"true\" expanded=\"true\" #mep1=\"matExpansionPanel\">\r\n            <mat-expansion-panel-header>\r\n            <p class=\"panel-header-text\">{{labelService.dsFuseManagementScreen.ClinicLogo}}\r\n              <img *ngIf=\"isEdit\" src=\"../../../../assets/img/edit@3x.png\" alt=\"img\" (click)=\"openLogoModal('editlogo')\" width=\"22px\" class=\"pl-2\"/>\r\n            </p>\r\n            <div class=\"heading headingone text-right increases\">\r\n              <span  [ngClass]=\"{'toggle-accordion-icon' :mep1.expanded == true}\">\r\n                <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\"  (click)=\"mep1.expanded = !mep1.expanded\" />\r\n            </span>\r\n                <!-- <button type=\"button\" mat-raised-button class=\"addfuseDiff cncl-btn edit-btn\" *ngIf=\"isEdit\"\r\n                  (click)=\"openLogoModal('editlogo')\">\r\n                  <img src=\"../../../../assets/img/edit@3x.png\" alt=\"img\" />\r\n                  {{ labelService.dsUserProfileScreen.Edit }}\r\n                </button> -->\r\n            </div>\r\n          </mat-expansion-panel-header>\r\n           <span>\r\n                <button type=\"button\" mat-button class=\"addfuse addfuse1 btncheck\" (click)=\"openLogoModal('addlogo')\"\r\n                  *ngIf=\"!isEdit\">\r\n                  {{labelService.dsFuseManagementScreen.UploadClinicLogo}}\r\n                </button> \r\n            </span>\r\n\r\n            <ng-container *ngIf=\"isEdit\">\r\n              <div class=\"logo_container\">\r\n                <img class=\"pr-2\" src=\"../../../../assets/img/imgfile_icon.svg\" alt=\"imgfile_icon\" />\r\n                <strong class=\"text-center\">{{displayLogoName}}</strong>\r\n              </div>\r\n              <div class=\"text-center pt-4 clinicBtn\">\r\n                <button type=\"button\"\r\n                  (click)=\"openLogoModal('viewlogo')\">{{labelService.dsFuseManagementScreen.ViewLogo}}</button>\r\n              </div>\r\n            </ng-container>\r\n          </mat-expansion-panel>\r\n          <!-- </mat-card> -->\r\n        </div>\r\n        <!-- Clinic Logo End -->\r\n        <div class=\"col-sm-12 pt-3 pl-1 pr-1\" *ngIf=\"refLabService.insideUSCAuser\">\r\n          <!-- <mat-card > -->\r\n            <mat-expansion-panel disabled=\"true\" #mep2=\"matExpansionPanel\">\r\n             <mat-expansion-panel-header> \r\n            <p class=\"panel-header-text\">{{labelService.dsFuseManagementScreen.RefLabManagement}}</p>\r\n            <div class=\"heading headingone text-right headingone increases\">\r\n              <span  [ngClass]=\"{'toggle-accordion-icon' :mep2.expanded == true}\">\r\n                <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\"  (click)=\"mep2.expanded = !mep2.expanded\" />\r\n            </span>\r\n            </div>\r\n            </mat-expansion-panel-header>\r\n            \r\n\r\n            <div class=\"row col-lg-12 justify-content-between\">\r\n              <div>\r\n              <label class=\"mb-0 px-3\"><strong>{{labelService.dsFuseManagementScreen.RefLabId}} :</strong> </label>\r\n              <span class=\"span_font pr-3\"> {{ businessDetails.RefLabClinicId }}</span></div>\r\n              <div class=\"mb-0 text-right ml-4\">\r\n                <span *ngIf=\"!refID?.length\">\r\n                  <button [disabled]=\"!refLabService.insideUSCAuser\" type=\"button\" mat-button class=\"addfuse addfuse1\"\r\n                    (click)=\"addlistAccountpopup()\">\r\n                    {{ labelService.dsFuseManagementScreen.AddAccount }}\r\n                  </button>\r\n                </span>\r\n                <span *ngIf=\"refID?.length\">\r\n                  <button [disabled]=\"!refLabService.insideUSCAuser\" type=\"button\" mat-button\r\n                    class=\"addfuse addfuse1 editadd\" (click)=\"editListaccount()\">\r\n                    {{ labelService.dsFuseManagementScreen.EditAccount }}\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n          <!-- </mat-card> -->\r\n        </div>\r\n        \r\n        <div class=\"col-sm-12 mt-3 pl-1 pr-1\">\r\n          <mat-drawer-container class=\"example-container\">\r\n            <mat-drawer #drawer class=\"example-sidenav ml-4\" mode=\"side\" position=\"end\">\r\n              <mat-card class=\"rounded-0 p-0\" id=\"fuse-side\">\r\n                <form class=\"\r\n                    d-flex\r\n                    align-items-between\r\n                    justify-content-between\r\n                    fuse-container\r\n                    flex-column\r\n                  \" [formGroup]=\"addFuseForm\" #formGroupDirective=\"ngForm\" autocomplete=\"off\">\r\n                  <div class=\"w-100\">\r\n                    <div class=\"cardheader d-flex justify-content-between p-4\">\r\n                      <span class=\"heading\">{{\r\n                        labelService.dsFuseManagementScreen.AddFuse\r\n                        }}</span>\r\n                      <span>\r\n                        <img class=\"closefuse\" (click)=\"drawer.close()\"\r\n                          src=\"../../../../assets/img/cancel-button@2x.png\" alt=\"img\" />\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div class=\"p-4\">\r\n                      <div class=\"text-center mb-2 errormsg\" style=\"color: red\">\r\n                        {{ msg }}\r\n                      </div>\r\n                      <div class=\"form-label-group mt-2\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <input type=\"text\" matInput [placeholder]=\"\r\n                              labelService.dsFuseManagementScreen\r\n                                .EnterFuseSerialNo\r\n                            \" formControlName=\"FuseSerialNo\" maxlength=\"50\" required />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"form-label-group mb-2\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <input type=\"text\" matInput [placeholder]=\"\r\n                              labelService.dsFuseManagementScreen.EnterPin\r\n                            \" formControlName=\"FusePin\" maxlength=\"20\" required />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-center mb-4\">\r\n                    <button (click)=\"addUpdateFuse(drawer)\" mat-button class=\"addfuse\">\r\n                      {{ labelService.dsFuseManagementScreen.Add }}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </mat-card>\r\n            </mat-drawer>\r\n\r\n            \r\n              <mat-expansion-panel disabled=\"true\" #mep3 = \"matExpansionPanel\">\r\n               <mat-expansion-panel-header>\r\n              <p class=\"panel-header-text\">{{labelService.dsFuseManagementScreen.FuseManagement}}</p>\r\n              <div class=\"heading headingone headingtwo text-right\">\r\n                <span  [ngClass]=\"{'toggle-accordion-icon' :mep3.expanded == true}\">\r\n                  <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\"  (click)=\"mep3.expanded = !mep3.expanded\" />\r\n              </span>\r\n              </div>\r\n            </mat-expansion-panel-header>\r\n            <div class=\"heading Hbtn mb-0 text-right ml-4\">\r\n              <span *ngIf=\"!drawer.opened\" class=\"text-right\">\r\n                <button type=\"button\" mat-button class=\"addfuse addfuse1 addcon\" (click)=\"openDrawer(drawer)\">\r\n                  {{ labelService.dsFuseManagementScreen.AddFuse }}\r\n                </button>\r\n              </span>\r\n            </div>\r\n              <div class=\"fuse-outer fuse-part pt-4\">\r\n                <table mat-table [dataSource]=\"dataSource\" summary=\"\" matSort>\r\n                  <ng-container matColumnDef=\"FuseSerialNo\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                      {{ labelService.dsFuseManagementScreen.FuseSerialNo }}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsFuseManagementScreen.FuseSerialNo}}</span>\r\n                      {{ element.FuseSerialNo }}\r\n                    </td>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"StartDateStr\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                      {{ labelService.dsFuseManagementScreen.StartDate }}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsFuseManagementScreen.StartDate}}</span>\r\n                      {{ element.StartDateStr }}\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"EndDateStr\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                      {{ labelService.dsFuseManagementScreen.EndDate }}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsFuseManagementScreen.EndDate}}</span>\r\n                      {{ element.EndDateStr }}\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\" \">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                      {{ labelService.dsFuseManagementScreen.Action }}\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\" id=\"status-toggle\">\r\n                      <span class=\"textTtl d-none\">{{labelService.dsFuseManagementScreen.Action}}</span>\r\n                      <button type=\"button\" class=\"btn btn-toggle\" [attr.data-inactive]=\"\r\n                            labelService.dsFuseManagementScreen.Inactive\r\n                          \" [attr.data-active]=\"\r\n                            labelService.dsFuseManagementScreen.Active\r\n                          \" [class.active]=\"element.IsActive\" *ngIf=\"element.shouldShow\"\r\n                        (click)=\"updateActiveInactive($event.target, element)\" data-toggle=\"button\" aria-pressed=\"false\"\r\n                        autocomplete=\"off\">\r\n                        <div class=\"handle\"></div>\r\n                      </button>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                </table>\r\n\r\n                <tbody class=\"norecord\" *ngIf=\"dataSource === null || dataSource.data.length === 0\">\r\n                  <tr>\r\n                    <td>\r\n                      {{ labelService.dsFuseManagementScreen.Norecordsfound }}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <mat-paginator [pageSize]=\"10\" _intl.itemsPerPageLabel=\"\" [hidePageSize]=\"true\" showFirstLastButtons\r\n                  class=\"mat-paginator-sticky\"></mat-paginator>\r\n              </div>\r\n            </mat-expansion-panel>\r\n          \r\n          </mat-drawer-container>\r\n        </div>\r\n\r\n        <!-- PIMs Integration starts-->\r\n        <div class=\"col-sm-12 mt-3 pl-1 pr-1\" *ngIf=\"isClinicAdmin\">\r\n          <app-pims-management></app-pims-management>\r\n        </div>\r\n        <!-- PIMs Integration END -->\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #editModal let-modal backdrop=\"static\">\r\n      <!-- Add LIS Account -->\r\n      <div class=\"modal-header text-center\">\r\n        <h4 class=\"modal-title w-100\" id=\"modal-basic-title\">\r\n          {{ LISpopupTitle }}\r\n        </h4>\r\n      </div>\r\n\r\n      <div class=\"modal-body px-5 pt-3\">\r\n        <form [formGroup]=\"refLabform\">\r\n          <div class=\"form-group\">\r\n            <div *ngIf=\"Lisfirstdetails\">\r\n              <label for=\"dateOfBirth\">{{labelService.dsFuseManagementScreen.SAPIDLISID}}</label>\r\n              <div class=\"input-group\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input class=\"form-control\" matInput [(ngModel)]=\"filterName\" formControlName=\"clinicId\"\r\n                    placeholder=\"Enter SAP ID/LIS ID\" maxlength=\"20\" />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <!-- next section start-->\r\n            <div class=\"d-flex justify-content-between fusepart mb-3\" *ngIf=\"LisgetDetails\">\r\n              <div class=\"d-flex flex-column fuse-block\">\r\n                <div class=\"fuse-label1\">{{labelService.dsFuseManagementScreen.ClinicName}}</div>\r\n                <div class=\"fuse-text\">{{ reflabDetails.name_1 }}</div>\r\n              </div>\r\n              <div class=\"d-flex flex-column fuse-block\">\r\n                <div class=\"fuse-label1\">{{labelService.dsFuseManagementScreen.Address}}</div>\r\n                <div class=\"fuse-text\">{{ reflabDetails.address_1 }} {{ reflabDetails.address_2 }}\r\n                  {{ reflabDetails.city }} {{ reflabDetails.state }}\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex flex-column fuse-block\">\r\n                <div class=\"fuse-label1\">{{labelService.dsFuseManagementScreen.Zipcode}}</div>\r\n                <div class=\"fuse-text\">{{ reflabDetails.zip }}</div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"doesnotExist\" class=\"msg\">\r\n              {{labelService.dsFuseManagementScreen.IdExist}}\r\n              <!-- The Reference Lab Clinic ID you entered does not exist -->\r\n            </div>\r\n            <div *ngIf=\"clinicLinked\" class=\"msg\">\r\n              {{labelService.dsFuseManagementScreen.CliniclinkedSuccessfully}}\r\n              <!-- Clinic linked Successfully -->\r\n            </div>\r\n            <div *ngIf=\"isconfirm\" class=\"msg\">\r\n              {{labelService.dsFuseManagementScreen.WantToDeleteAccount}}\r\n              <!-- Are you sure want to delete this account? -->\r\n            </div>\r\n            <div *ngIf=\"delectedmsg\" class=\"msg\">\r\n              {{labelService.dsFuseManagementScreen.AccountDeletedSuccessfully}}\r\n              <!-- Account Deleted Successfully -->\r\n            </div>\r\n            <div *ngIf=\"linkerror\" class=\"msg\">\r\n              {{ labelService.dsFuseManagementScreen.linkidError }}\r\n            </div>\r\n            <div *ngIf=\"supporterror\" class=\"msg\">\r\n              {{ labelService.dsFuseManagementScreen.supportError }}\r\n            </div>\r\n            <div *ngIf=\"connectionerror\" class=\"msg\">\r\n              {{ labelService.dsFuseManagementScreen.connectionError }}\r\n            </div>\r\n            <!-- <span class=\"custom-error\">{{allErrors}}</span> -->\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"modal-footer row mt-1 justify-content-center updateBtn\">\r\n        <button type=\"button\" class=\"cancel-btn mr-1\" mat-raised-button color=\"primary\" (click)=\"closePopupall()\"\r\n          *ngIf=\"cancelbutton\">\r\n          {{labelService.dsFuseManagementScreen.Cancel}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"getClinicData()\"\r\n          *ngIf=\"nextbutton\">\r\n          {{labelService.dsFuseManagementScreen.Next}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"postClinicdetails()\"\r\n          *ngIf=\"confirmbutton\">\r\n          {{labelService.dsFuseManagementScreen.Confirm}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"okbuttonchg()\"\r\n          *ngIf=\"okbutton\">\r\n          {{labelService.dsFuseManagementScreen.OK}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"deleteAccountdetails()\"\r\n          *ngIf=\"deleteAccount\">\r\n          {{labelService.dsFuseManagementScreen.DeleteAccount}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"updateClinicdetails()\"\r\n          *ngIf=\"updateAccount\">\r\n          {{labelService.dsFuseManagementScreen.UpdateAccount}}\r\n        </button>\r\n        <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"deleteConfirm()\"\r\n          *ngIf=\"isconfirm\">\r\n          {{labelService.dsFuseManagementScreen.Confirm}}\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Clinic Logo Modal Add  -->\r\n    <ng-template #addLogModal let-modal backdrop=\"static\">\r\n      <div class=\"d-flex log-head\">\r\n        <h5 class=\"float-left w-100 mt-2 ml-2\">\r\n          {{isEdit ? labelService.dsFuseManagementScreen.EditClinicLogo :\r\n          labelService.dsFuseManagementScreen.UploadClinicLogo }}\r\n        </h5>\r\n        <span class=\"float-right mt-3 mr-2\" type=\"button\" (click)=\" modaldismiss()\">\r\n          <img src=\"../../../../assets/img/x-icon.svg\" alt=\"x-icon\">\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-body px-3 pt-3\">\r\n        <div class=\"errorcon\" *ngIf=\"fileError\">\r\n          <mat-card class=\"errorcard\">\r\n            <div>\r\n              <img src=\"../../../../assets/img/Alert_icon.svg\" alt=\"Alert_icon\">\r\n              <span> {{errorMsg}} </span>\r\n            </div>\r\n            <img src=\"../../../../assets/img/Cross_Icon.svg\" (click)=\"fileRemove()\" alt=\"Cross_Icon\" />\r\n          </mat-card>\r\n        </div>\r\n        <div class=\" d-flex justify-content-center align-items-center dumimg  mt-4\"\r\n          [ngClass]=\"fileError ? 'error-logo' : 'container'\" appDnd (fileDropped)=\"readFile($event)\">\r\n          <ng-container *ngIf=\"fileName ===''\">\r\n            <input type=\"file\" accept=\"{{acceptExtension}}\" title=\" \" id=\"inputFile\"\r\n              (change)=\"readFile($event.target.files)\" />\r\n            <div class=\"row contpart\">\r\n              <div class=\"col-2 mr-4\">\r\n                <img src=\"../../../../assets/img/File-Icon.svg\" alt=\"file\">\r\n              </div>\r\n              <div class=\"col-9 text-left\">\r\n                <strong>{{labelService.dsFuseManagementScreen.UploadDndMsg}}</strong>\r\n                <br>\r\n                <span>{{labelService.dsFuseManagementScreen.FileSizeMsg}}</span>\r\n                <br>\r\n                <span>{{labelService.dsFuseManagementScreen.FileFormatMsg}}</span>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <div class=\"row filepart\" *ngIf=\"fileName !==''\">\r\n            <div>\r\n              <img src=\"../../../../assets/img/imgfile_icon.svg\" alt=\"imgfile_icon\" />\r\n              <span class=\"px-4\">{{fileName}}</span>\r\n              <img class=\"pl-4\" src=\"../../../../assets/img/x-icon.svg\" (click)=\"fileRemove()\" alt=\"x-icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer row mt-2 justify-content-center  modalupdate\"\r\n        [ngClass]=\"(fileName !=='') ? 'enUpdateBtn' :'updateBtn' \">\r\n        <button class=\"\" type=\"button\" (click)=\"uploadLogo()\"\r\n          [disabled]=\"fileName !=='' ? false:true\">{{labelService.dsFuseManagementScreen.Upload}}</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #ViewLogModal let-modal backdrop=\"static\">\r\n      <div class=\"d-flex log-head\">\r\n        <h5 class=\"float-left w-100 mt-3 ml-2\">\r\n          {{labelService.dsFuseManagementScreen.PreviewLogo}}\r\n        </h5>\r\n        <span class=\"float-right mt-3 mr-2\" type=\"button\" (click)=\"modalService.dismissAll()\">\r\n          <img src=\"../../../../assets/img/x-icon.svg\" alt=\"x-icon\">\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-body text-center px-5 pt-3 frlog \">\r\n        <img class=\"justify-content-center mt-3 checkImg \" [src]=\"displayLogo\" alt=\"preview\">\r\n      </div>\r\n      <div class=\"modal-footer row mt-1 justify-content-center updateBtn\">\r\n        <button class=\"btndel\" type=\"button\"\r\n          (click)=\"modalService.dismissAll()\">{{labelService.dsFuseManagementScreen.Close}}</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #editLogModal let-modal backdrop=\"static\">\r\n      <div class=\"d-flex log-head\">\r\n        <h5 class=\"float-left w-100 mt-3 ml-2\">\r\n          {{labelService.dsFuseManagementScreen.EditClinicLogo}}\r\n        </h5>\r\n        <span class=\"float-right mt-3 mr-2\" type=\"button\" (click)=\"modalService.dismissAll()\">\r\n          <img src=\"../../../../assets/img/x-icon.svg\" alt=\"x-icon\">\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-body text-center px-5 pt-3\">\r\n        <img class=\"justify-content-center mt-3 checkImg\" [src]=\"displayLogo\" alt=\"preview\">\r\n      </div>\r\n      <div class=\"modal-footer row mt-1 justify-content-center updateBtn\">\r\n        <button class=\"pr-3\" type=\"button\" class=\"replaceBtn\"\r\n          (click)=\"modalService.dismissAll();openLogoModal('addlogo')\">{{labelService.dsFuseManagementScreen.ReplaceLogo}}</button>\r\n        <button class=\"btndel\" type=\"button\"\r\n          (click)=\"modalService.dismissAll();openLogoModal('deletelogo')\">{{labelService.dsFuseManagementScreen.Delete}}</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #deleteLogo let-modal backdrop=\"static\">\r\n      <div class=\"d-flex log-head justify-content-end\">\r\n        <span class=\"float-right mt-3 mr-2\" type=\"button\" (click)=\"modalService.dismissAll()\">\r\n          <img src=\"../../../../assets/img/x-icon.svg\" alt=\"x-icon\">\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-body text-center px-5 pt-3 d-flex justify-content-center align-items-center\">\r\n        <p class=\"ptext\">{{labelService.dsFuseManagementScreen.DeleteMsg}}</p>\r\n      </div>\r\n      <div class=\"modal-footer row mt-1 justify-content-center updateBtn\">\r\n        <button type=\"button\" class=\" pr-3 replaceBtn btnadd\" (click)=\"DeleteLogo()\">\r\n          {{labelService.dsFuseManagementScreen.Yes}}</button>\r\n        <button class=\"btndel\" type=\"button\"\r\n          (click)=\"modalService.dismissAll()\">{{labelService.dsFuseManagementScreen.No}}</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #fuseInactiveCalender let-modal backdrop=\"static\">\r\n      <div class=\"d-flex\">\r\n        <p class=\"float-left w-100 mt-4 ml-4\">\r\n          {{ labelService.dsFuseManagementScreen.OnWhatDateInactive }}\r\n        </p>\r\n      </div>\r\n      <div class=\"modal-body text-center pl-3 pr-3 mt-0 pt-0\">\r\n \r\n          <p class=\"p-0 m-0 mb-3\"><span>{{ labelService.dsFuseManagementScreen.TodaysDate }}: </span> &nbsp; &nbsp; <span style=\"padding: 7px 20px !important;\" class=\"addfuse\" mat-raised-button>{{ dateFormat }}</span></p>\r\n   \r\n        <mat-card class=\"border border-default rounded-lg p-0 m-0\" style=\"border: 1px solid #b5b5b5 !important\">\r\n          <mat-calendar [minDate]=\"fuseElem.StDate\" [maxDate]=\"maxDate\" [selected]=\"fuseEndDateStr\" (selectedChange)=\"updaeFuseEndDateStr($event)\"></mat-calendar>\r\n        </mat-card>\r\n      </div>\r\n      <div class=\"modal-footer row justify-content-center\">\r\n        <button type=\"button\" mat-raised-button class=\"cncl-btn\" color=\"warn\" (click)=\"closeFuseToggleModal()\">\r\n          {{ labelService.dsFuseManagementScreen.Cancel }}\r\n        </button>\r\n        <button type=\"button\" mat-raised-button class=\"btn btn-sm addfuse ml-2\" (click)=\"fuseUpdate(true)\">{{ labelService.dsFuseManagementScreen.Submit }}</button>\r\n      </div>\r\n    </ng-template>","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n  constructor(text, _document) {\n    this._document = _document;\n    const textarea = this._textarea = this._document.createElement('textarea');\n    const styles = textarea.style;\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    // The element needs to be inserted into the fullscreen container, if the page\n    // is in fullscreen mode, otherwise the browser won't execute the copy command.\n    (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n  }\n  /** Finishes copying the text. */\n  copy() {\n    const textarea = this._textarea;\n    let successful = false;\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement;\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n    return successful;\n  }\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n  constructor(document) {\n    this._document = document;\n  }\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text) {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n    return successful;\n  }\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text) {\n    return new PendingCopy(text, this._document);\n  }\n  static {\n    this.ɵfac = function Clipboard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Clipboard)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Clipboard,\n      factory: Clipboard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Clipboard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n  constructor(_clipboard, _ngZone, config) {\n    this._clipboard = _clipboard;\n    this._ngZone = _ngZone;\n    /** Content to be copied. */\n    this.text = '';\n    /**\n     * How many times to attempt to copy the text. This may be necessary for longer text, because\n     * the browser needs time to fill an intermediate textarea element and copy the content.\n     */\n    this.attempts = 1;\n    /**\n     * Emits when some text is copied to the clipboard. The\n     * emitted value indicates whether copying was successful.\n     */\n    this.copied = new EventEmitter();\n    /** Copies that are currently being attempted. */\n    this._pending = new Set();\n    if (config && config.attempts != null) {\n      this.attempts = config.attempts;\n    }\n  }\n  /** Copies the current text to the clipboard. */\n  copy(attempts = this.attempts) {\n    if (attempts > 1) {\n      let remainingAttempts = attempts;\n      const pending = this._clipboard.beginCopy(this.text);\n      this._pending.add(pending);\n      const attempt = () => {\n        const successful = pending.copy();\n        if (!successful && --remainingAttempts && !this._destroyed) {\n          // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n          this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n        } else {\n          this._currentTimeout = null;\n          this._pending.delete(pending);\n          pending.destroy();\n          this.copied.emit(successful);\n        }\n      };\n      attempt();\n    } else {\n      this.copied.emit(this._clipboard.copy(this.text));\n    }\n  }\n  ngOnDestroy() {\n    if (this._currentTimeout) {\n      clearTimeout(this._currentTimeout);\n    }\n    this._pending.forEach(copy => copy.destroy());\n    this._pending.clear();\n    this._destroyed = true;\n  }\n  static {\n    this.ɵfac = function CdkCopyToClipboard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkCopyToClipboard)(i0.ɵɵdirectiveInject(Clipboard), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(CDK_COPY_TO_CLIPBOARD_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCopyToClipboard,\n      selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]],\n      hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() {\n            return ctx.copy();\n          });\n        }\n      },\n      inputs: {\n        text: [0, \"cdkCopyToClipboard\", \"text\"],\n        attempts: [0, \"cdkCopyToClipboardAttempts\", \"attempts\"]\n      },\n      outputs: {\n        copied: \"cdkCopyToClipboardCopied\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCopyToClipboard]',\n      host: {\n        '(click)': 'copy()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Clipboard\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n      }]\n    }];\n  }, {\n    text: [{\n      type: Input,\n      args: ['cdkCopyToClipboard']\n    }],\n    attempts: [{\n      type: Input,\n      args: ['cdkCopyToClipboardAttempts']\n    }],\n    copied: [{\n      type: Output,\n      args: ['cdkCopyToClipboardCopied']\n    }]\n  });\n})();\nclass ClipboardModule {\n  static {\n    this.ɵfac = function ClipboardModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClipboardModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ClipboardModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClipboardModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CdkCopyToClipboard],\n      exports: [CdkCopyToClipboard]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { Component, OnInit, ViewChild, TemplateRef, Renderer2, OnDestroy, AfterViewInit, AfterViewChecked } from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { FuseService } from 'src/app/services/fuse.service';\r\nimport { LabelService } from '../../services/label.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DataService } from '../../services/data.sevice';\r\n// import { MatPaginator } from '@angular/material/paginator';\r\nimport { MatLegacyPaginator as MatPaginator } from \"@angular/material/legacy-paginator\";\r\nimport { ConfirmationDialogService } from '../confirmation-dialog/confirmation-dialog.service';\r\nimport { PIMSDetails } from 'src/app/models/fuse';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\n\r\n@Component({\r\n  selector: 'app-pims-management',\r\n  templateUrl: './pims-management.component.html',\r\n  styleUrls: ['./pims-management.component.css']\r\n})\r\nexport class PimsManagementComponent implements OnInit, OnDestroy {\r\n  @ViewChild('mep4', { static: true }) exp: MatExpansionPanel;\r\n  displayedColumns: string[] = [\r\n    \"proxyPartnerId\",\r\n    \"Id\",\r\n    \"Status\",\r\n    \"Last Updated\",\r\n    \"Action\",\r\n  ];\r\n  ddPImslist: any;\r\n  pimsDataSource = new MatTableDataSource<any>();\r\n  public NgbModalOptions: any = {\r\n    windowClass: 'pims-modal',\r\n    centered: true,\r\n    backdrop: 'static',\r\n\r\n  };\r\n  @ViewChild('successModal') successModal!: TemplateRef<any>;\r\n  @ViewChild('failureModal') failureModal!: TemplateRef<any>;\r\n  @ViewChild('pimsremove') PimsRemoveModal!: TemplateRef<any>;\r\n  @ViewChild('drawer1') drawer1\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  public pimsOtp: null;\r\n  public copySuccess: boolean = false;\r\n  selectedPims: any;\r\n  isPimsActive: boolean = true;\r\n  private uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\n  pimsForm: UntypedFormGroup;\r\n  @ViewChild(\"formGroupDirective\", { static: true })\r\n  private formGroupDirective: FormGroupDirective;\r\n  display: string;\r\n  constructor(\r\n    public fuseService: FuseService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    private modalService: NgbModal,\r\n    private clipboard: Clipboard,\r\n    private renderer: Renderer2,\r\n    public confirmationDialogService: ConfirmationDialogService, private fb: UntypedFormBuilder, public commonService: CommonService,) {\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.getPimsScreenLabel();\r\n      this.labelService.bindFuseManagementLabel();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getddPimsList();\r\n    this.assignPimsHistoryList();\r\n    this.pimsForm = this.createPimsFormGroup(new PIMSDetails());\r\n  };\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.commonService.clinicNavigation.subscribe((data) => {\r\n        if (data) {\r\n          this.exp.open()\r\n          this.assignPimsHistoryList();\r\n          document.getElementById('mExpansion').scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n      })\r\n    }, 2000)\r\n\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.getPimsScreenLabel();\r\n    });\r\n  };\r\n\r\n  createPimsFormGroup(data: any) {\r\n    return this.fb.group({\r\n      proxyPartnerId: [data.proxyPartnerId, Validators.required],\r\n      proxyClientId: [data.proxyClientId, Validators.compose([Validators.required, Validators.pattern(this.uuidPattern)])]\r\n    })\r\n  }\r\n  createForm() {\r\n    this.pimsForm = new FormGroup({\r\n      pimsPartner: new FormControl('', Validators.compose([Validators.required])),\r\n      clientId: new FormControl('', Validators.compose([Validators.required, Validators.pattern(this.uuidPattern)]))\r\n    })\r\n  }\r\n  public openDrawer(drawer) {\r\n    this.formGroupDirective.resetForm();\r\n    drawer.open();\r\n    this.pimsForm = this.createPimsFormGroup(new PIMSDetails())\r\n    console.log(this.pimsDataSource?.data)\r\n  }\r\n\r\n  // PIMs list for dropdown\r\n  getddPimsList() {\r\n    this.fuseService.getPimsList().subscribe(res => {\r\n      this.ddPImslist = res.ResponseData;\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    //  this.isPimsActive = this.pimsDataSource.data.some(x => x.proxyPartnerId == this.pimsForm.controls['proxyPartnerId'].value  &&  x.ClientId == this.pimsForm.controls['proxyClientId'].value);\r\n    //   if(this.isPimsActive) return this.openModal('pimsadd')\r\n    this.fuseService.addPims(this.pimsForm.value).subscribe(res => {\r\n      debugger\r\n      if (res.StatusCode == 200 && res.DisplayMessage == 'Success') {\r\n        if(res.ResponseData.Status == null){\r\n        this.pimsOtp = res.ResponseData.Otp;\r\n        this.display = res?.ResponseData?.OtpExpiryInMin;\r\n        this.pimsForm.reset();\r\n        this.openModal('successModal');\r\n        this.drawer1.close();\r\n        this.assignPimsHistoryList();\r\n        }else if(res?.ResponseData?.Status == 'active'){\r\n          this.messagePopup(res?.ResponseData?.Message);\r\n        }\r\n      } else {\r\n        this.openModal('failureModal');\r\n        this.assignPimsHistoryList();\r\n      }\r\n    }, err => {\r\n      this.openModal('failureModal');\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  openModal(modal, otherData?) {\r\n    if (modal == 'pimsremove') {\r\n      const modal = this.modalService.open(this.PimsRemoveModal, this.NgbModalOptions);\r\n      this.selectedPims = otherData\r\n    } else if (modal == 'failureModal') {\r\n      this.modalService.open(this.failureModal, this.NgbModalOptions)\r\n    } else if (modal == 'pimsadd') {\r\n      this.messagePopup(this.labelService.dsPimsScreen.IsActiveMsg)\r\n    } else if (modal == 'successModal') {\r\n      this.modalService.open(this.successModal, this.NgbModalOptions)\r\n    }\r\n    // const modalRef = this.modalService.open(modal, {\r\n    //   windowClass: 'pims-modal',    \r\n    //   centered: true,\r\n    //   backdrop: 'static',\r\n    // });\r\n    // modalRef.result.then(\r\n    //   (result) => console.log(`Closed with: ${result}`),\r\n    //   (reason) => console.log(`Dismissed with: ${reason}`)\r\n    // );\r\n  }\r\n\r\n  copyToClipboard(otpElement: any) {\r\n    const text = otpElement.innerText.trim();\r\n    const isCopied = this.clipboard.copy(text);\r\n    if (isCopied) {\r\n      this.copySuccess = true;\r\n      setTimeout(() => (this.copySuccess = false), 2000); // Hide message after 2 seconds\r\n    }\r\n  }\r\n\r\n  //Method to show history of PIMs list data\r\n\r\n  assignPimsHistoryList() {\r\n    let Bguid = this.dataService.appData.authDetails['BusinessGuid']?.toUpperCase();\r\n    let Obj = { BusinessGuid: Bguid }\r\n    this.fuseService.getAssignPimsList(Obj).subscribe(data => {\r\n      if (data.DisplayMessage == \"Success\") {\r\n\r\n        this.isPimsActive = data.ResponseData?.some(x => ['Pending', 'Active'].includes(x?.Status));\r\n\r\n        let activeKeys = new Set();\r\n        // Collect keys with active status\r\n        data.ResponseData.forEach(item => {\r\n          if (item.Status === \"Active\") {\r\n            activeKeys.add(`${item.ClientId}_${item.proxyPartnerId}`);\r\n          }\r\n        });\r\n        // Map through the data to update statuses\r\n        data.ResponseData = data.ResponseData.map(item => {\r\n          const key = `${item.ClientId}_${item.proxyPartnerId}`;\r\n          if (activeKeys.has(key) && item.Status !== \"Active\") {\r\n            return { ...item, Status: \"Expired\" };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        this.pimsDataSource = new MatTableDataSource<any>(data.ResponseData);\r\n        this.pimsDataSource.paginator = this.paginator;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  cvetLink() {\r\n    const aTag = document.createElement('a');\r\n    aTag.href = \"https://zdxpoc-api.mobileprogramming.net/\";\r\n    aTag.target = '_blank';\r\n    aTag.click();\r\n  }\r\n\r\n  //Remove Pims integeration\r\n  removePIMs(Id) {\r\n    this.modalService.dismissAll();\r\n    this.fuseService.removePims({ \"ZdxIntegrationId\": Id }).subscribe(res => {\r\n      if (res.DisplayMessage == \"Success\") {\r\n        this.messagePopup(this.labelService.dsPimsScreen.deletesuccessMsg);\r\n        this.assignPimsHistoryList();\r\n      } else {\r\n        this.messagePopup(this.labelService.dsPimsScreen.failureMsg)\r\n      }\r\n    }, error => {\r\n      this.messagePopup(this.labelService.dsPimsScreen.failureMsg)\r\n    })\r\n  }\r\n\r\n  messagePopup(msg) {\r\n    this.confirmationDialogService\r\n      .confirm(\r\n        \"\",\r\n        msg,\r\n        this.labelService.dsUserProfileScreen.OK,\r\n        this.labelService.dsUserProfileScreen.Cancel,\r\n        \"sm\",\r\n        true,\r\n        false\r\n      )\r\n      .then((confirmed) => {\r\n        this.modalService.dismissAll();\r\n        // this.confirmationDialogService.dismiss();\r\n        // if(!this.isPimsActive)\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error...\");\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.commonService.clinicNavigation.next(false);\r\n  }\r\n} \r\n","<mat-drawer-container class=\"example-container\" style=\"min-height: 350px; margin-bottom: 20px;\" id=\"mExpansion\">\r\n  <mat-drawer #drawer1 class=\"example-sidenav ml-4\" mode=\"side\" position=\"end\">\r\n    <mat-card class=\"rounded-0 p-0\" id=\"fuse-side\">\r\n      <div class=\"w-100\">\r\n        <div class=\"cardheader d-flex justify-content-between p-4\">\r\n          <span class=\"heading\">{{labelService.dsPimsScreen.AddIntegration}}</span>\r\n          <span>\r\n            <img class=\"closefuse\" src=\"../../../../assets/img/cancel-button@2x.png\" (click)=\"drawer1.close()\"\r\n              alt=\"img\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"p-4\">\r\n          <!-- <div class=\"text-center mb-2 errormsg\" style=\"color: red\"> </div> -->\r\n          <form [formGroup]=\"pimsForm\"   #formGroupDirective=\"ngForm\" autocomplete=\"off\">\r\n            <div class=\"form-label-group mt-2\">\r\n              <mat-form-field class=\"width-set\" appearance=\"outline\" floatLabel=\"always\" class=\"w-100\">\r\n                <!-- <mat-label>Select an integration</mat-label> -->\r\n                <mat-select placeholder=\"{{labelService.dsPimsScreen.CvetPlaceholder}}\" name=\"pimsPartner\" formControlName=\"proxyPartnerId\" required>\r\n                  <ng-container *ngFor=\"let Pims of ddPImslist\">\r\n                    <mat-option [value]=\"Pims.proxyPartnerId\">\r\n                      {{Pims.proxyPartnerId}}\r\n                    </mat-option>\r\n                  </ng-container>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-label-group mb-2\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input type=\"text\" name=\"proxyClientId\" formControlName=\"proxyClientId\" matInput placeholder=\"{{labelService.dsPimsScreen.EnterClientId}}\" required />\r\n              </mat-form-field>\r\n              <p class=\"text-left errormsg\" style=\"color: red\"  *ngIf=\"pimsForm.get('proxyClientId')?.errors?.['pattern'] && pimsForm.get('proxyClientId')?.touched\">\r\n                {{labelService.dsPimsScreen.IncorrectClientId}}   \r\n              </p>\r\n            </div>\r\n            <div class=\"d-flex justify-content-center mb-4 pms-part\">\r\n              <button type=\"button\" mat-button class=\"add-PIMS addfuse\" [disabled]=\"!pimsForm.valid\" [ngClass]=\"{disablebtn:!pimsForm.valid}\" (click)=\"onSubmit()\">\r\n                {{ labelService.dsFuseManagementScreen.Add }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </mat-drawer>\r\n\r\n \r\n    <mat-expansion-panel disabled=\"true\"  #mep4 = \"matExpansionPanel\">\r\n      <mat-expansion-panel-header class=\"lastprt\">\r\n        <p class=\"panel-header-text\">{{labelService.dsPimsScreen.PimsManagement}}</p>\r\n        <div  class=\"headingone heading text-right\">\r\n          <span  [ngClass]=\"{'toggle-accordion-icon' :mep4.expanded == true}\">\r\n           <img src=\"../../../assets/img/updropdwn.png\" alt=\"img\" class=\"updropdwn\"  (click)=\"mep4.expanded = !mep4.expanded\" />\r\n          </span>\r\n        </div>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"heading Hbtn mb-0 text-right ml-4\">\r\n      \r\n        <span *ngIf=\"!drawer1.opened\" class=\"text-right\">\r\n          <!-- [disabled] =\"isPimsActive?.Status != 'Cancelled'\" [disabled] =\"isPimsActive\"-->\r\n          <button type=\"button\"   style=\"margin-top: 28px;\" mat-button class=\"addfuse addfuse1 addcon\" (click)=\"isPimsActive? openModal('pimsadd'):openDrawer(drawer1)\">\r\n            {{labelService.dsPimsScreen.AddIntegration}}\r\n          </button>\r\n        </span>\r\n      </div>\r\n    <div class=\"fuse-outer fus-section fuse-part pt-4\">\r\n      <table mat-table summary=\"\" matSort [dataSource]=\"pimsDataSource\">\r\n        <ng-container matColumnDef=\"proxyPartnerId\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{labelService.dsPimsScreen.Pims}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{element.proxyPartnerId}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{labelService.dsPimsScreen.ProxyClientId}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <span class=\"textTtl d-none\">Proxy Client Id</span>\r\n              {{element.ClientId}}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Status\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{labelService.dsPimsScreen.Status}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <span class=\"textTtl d-none\">Status</span>\r\n             {{element.Status}}\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"Information\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            {{labelService.dsPimsScreen.Information}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n           \r\n          </td>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"Last Updated\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            {{labelService.dsPimsScreen.LastUpdated}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <!-- {{element.CreatedAt |localDate :'dt'}} -->\r\n            {{element.CreatedAtStr}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Action\">\r\n          <th  class=\"tBody\" mat-header-cell *matHeaderCellDef>\r\n            {{labelService.dsPimsScreen.Action}}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\" id=\"status-toggle\">\r\n            <span class=\"textTtl d-none\">{{labelService.dsPimsScreen.Action}}</span>\r\n            <!-- <ng-container  *ngIf=\"element.Status == 'Active'\" >\r\n              <span [ngStyle]=\"{'color': !element.Status == 'Active' ? 'black' : 'grey'}\">\r\n               Inactive\r\n              </span>\r\n              <mat-slide-toggle>\r\n                <span [ngStyle]=\"{'color': element.Status == 'Active' ? 'black' : 'grey'}\">\r\n                  Active\r\n                </span>\r\n              </mat-slide-toggle>\r\n            </ng-container> -->\r\n            <ng-container *ngIf=\"element.Status != 'Cancelled'\">\r\n               <span style=\"padding-right: 23px;\" (click)=\"openModal('pimsremove',element)\">\r\n                 <img src=\"../../../assets/img/delet icon.svg\" matTooltip=\"{{labelService.dsFuseManagementScreen.Delete}}\" matTooltipPosition=\"below\">\r\n               </span>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      </table>\r\n      <tbody class=\"norecord\"  *ngIf=\"pimsDataSource === null || pimsDataSource?.data?.length === 0\">\r\n        <tr>\r\n          <td>\r\n            {{ labelService.dsFuseManagementScreen.Norecordsfound }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <mat-paginator [pageSize]=\"10\" _intl.itemsPerPageLabel=\"\" [hidePageSize]=\"true\" showFirstLastButtons\r\n        class=\"mat-paginator-sticky\"></mat-paginator>\r\n    </div>\r\n    </mat-expansion-panel>\r\n\r\n</mat-drawer-container>\r\n\r\n<!-- page modals -->\r\n<!-- Success modal -->\r\n<ng-template #successModal let-modal>\r\n  <div class=\"modal-body\">\r\n    <p class=\"text-center\"><strong>{{labelService.dsPimsScreen.IntegrationMsg}}</strong></p>\r\n    <section class=\"modal-box\" style=\"text-align: center;\">\r\n      <p> {{labelService.dsPimsScreen.describeMsg}} <span>(PIMS partner)</span> </p>\r\n      <div class=\"clipbox\">\r\n        <p>\r\n          <strong #otptext>{{pimsOtp}}</strong>\r\n          <a href=\"javascript:void(0)\" (click)=\"copyToClipboard(otptext)\">\r\n            <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </p>\r\n        <span *ngIf=\"copySuccess\" class=\"text-success\">{{labelService.dsPimsScreen.textCopy}}</span>\r\n      </div>\r\n      <p>{{labelService.dsPimsScreen.youHave}} <strong>{{display}}</strong> {{labelService.dsPimsScreen.minuteTxt}}</p>\r\n    </section>\r\n  </div>\r\n  <div class=\"text-center\" style=\"margin: 0px 0px 20px 0px;\">\r\n    <button type=\"button\" class=\"mat-button mat-button-base addfuse\" style=\"margin-right: 25px;\"\r\n      (click)=\"modal.close('Save click')\">{{labelService.dsFuseManagementScreen.Close}}</button>\r\n    <!-- <button type=\"button\" class=\"mat-button mat-button-base addfuse\" (click)=\"cvetLink()\">{{labelService.dsPimsScreen.LinkAvailableMsg}}</button> -->\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- Failure Modal -->\r\n<ng-template #failureModal let-modal>\r\n  <div class=\"modal-body\">\r\n    <p class=\"text-center\"> <strong>{{labelService.dsPimsScreen.CvetFailed}}</strong> </p>\r\n    <section class=\"modal-box failure\">\r\n      <div>\r\n        <img src=\"../../../assets/img/danger-icon.svg\" alt=\"\">\r\n      </div>\r\n      <div style=\"padding: 0px 14px;\">\r\n        <strong> {{labelService.dsPimsScreen.FailureDetails}} </strong>\r\n        <br> {{labelService.dsPimsScreen.failureMsg}}\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <div class=\"text-center\" style=\"margin: 0px 0px 20px 0px;\">\r\n    <button type=\"button\" class=\"mat-button mat-button-base addfuse\" (click)=\"modal.close('Save click')\">{{labelService.dsFuseManagementScreen.Close}}</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- Remove Integration  popup-->\r\n<ng-template #pimsremove let-modal>\r\n  <!-- Add LIS Account -->\r\n  <div class=\"modal-header text-center\">\r\n    <h4 class=\"modal-title w-100\" id=\"modal-basic-title\">\r\n      {{labelService.dsPimsScreen.deletePims}}\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalService.dismissAll()\">\r\n      <span (click)=\"modalService.dismissAll()\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body px-5 pt-3\">\r\n         <div class=\"d-flex justify-content-center\"><p>{{labelService.dsPimsScreen.DeleteConfirmMsg}}</p></div>\r\n        <!-- next section start-->\r\n        <div class=\"d-flex justify-content-center\">\r\n          <div class=\"d-flex flex-column fuse-block mr-3\">\r\n            <div class=\"fuse-label1\">{{labelService.dsPimsScreen.PimsId}}</div>\r\n            <div class=\"fuse-text\">{{selectedPims.proxyPartnerId}}</div>\r\n          </div>\r\n          <div class=\"d-flex flex-column fuse-block\">\r\n            <div class=\"fuse-label1\">{{labelService.dsPimsScreen.Status}}</div>\r\n            <div class=\"fuse-text\">{{selectedPims.Status}}</div>\r\n          </div>\r\n        </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer row justify-content-center updateBtn\">\r\n    <button type=\"button\" class=\"cancel-btn mr-3\" mat-raised-button color=\"primary\" (click)=\"modalService.dismissAll()\">\r\n      {{labelService.dsFuseManagementScreen.Cancel}}\r\n    </button>\r\n    <button type=\"button\" class=\"save-change mr-1\" mat-raised-button color=\"accent\" (click)=\"removePIMs(selectedPims.id)\">\r\n      {{labelService.dsFuseManagementScreen.Delete}}\r\n    </button>\r\n  </div>\r\n</ng-template>","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent  {\r\n  panelOpenState = false;\r\n  // constructor() { }\r\n\r\n  // ngOnInit() {\r\n  // }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div>\r\n            <mat-accordion>\r\n              <mat-expansion-panel id=\"profile\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title> Profile </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"d-flex flex-wrap view-mode\">\r\n                  <div class=\"col\">\r\n                    <label>Title :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <mat-select>\r\n                        <mat-option value=\"All\">MR</mat-option>\r\n                        <mat-option> MISS</mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>First Name :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput value=\"Manoj Raghav\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Last Name :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Suffix:</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <mat-select>\r\n                        <mat-option value=\"All\">MR</mat-option>\r\n                        <mat-option> MISS</mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Email :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Phone No. :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col\">\r\n                    <label>Country :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <mat-select>\r\n                        <mat-option value=\"All\">MR</mat-option>\r\n                        <mat-option> MISS</mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Business Name:</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Address Line 1 :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>Address Line 2 :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>City :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label>State :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <mat-select>\r\n                        <mat-option value=\"All\">MR</mat-option>\r\n                        <mat-option> MISS</mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                        <mat-option> adasd </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col\">\r\n                    <label>Zip Code :</label>\r\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                      <input type=\"text\" matInput />\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col\">\r\n                    &nbsp;\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    &nbsp;\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex mt-4 justify-content-center mt-4\">\r\n                  <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\">Cancel</button>\r\n                  <button mat-raised-button color=\"warn\">Save</button>\r\n                </div>\r\n\r\n              </mat-expansion-panel>\r\n\r\n              <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title> Security </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n\r\n                <!-- <div class=\"d-flex\">\r\n                  <div class=\"col p-0 pl-1\">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Language</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput />\r\n                      </mat-form-field>    \r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n                <div class=\"d-flex\">\r\n                  <div class=\"col  \">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Reset Password</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput />\r\n                      </mat-form-field>\r\n\r\n                      <button mat-raised-button color=\"warn\">Send</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col d-flex\">\r\n                    &nbsp;\r\n                  </div>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                  <div class=\"col\">\r\n                    <div class=\"alert alert-dark alert-dismissible fade show\" role=\"alert\">\r\n                      You should check in on some of those fields below.\r\n                      <img src=\"../../../assets/img/cancel-button@2x.png\" alt=\"cancel-button\" data-dismiss=\"alert\"\r\n                        aria-label=\"Close\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </mat-expansion-panel>\r\n\r\n              <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title> Preferences </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n\r\n                <div class=\"d-flex\">\r\n                  <div class=\"col  \">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Language</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <mat-select>\r\n                          <mat-option value=\"All\">MR</mat-option>\r\n                          <mat-option> MISS</mat-option>\r\n                          <mat-option> adasd </mat-option>\r\n                          <mat-option> adasd </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n\r\n                      <button mat-raised-button color=\"warn\">Send</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col d-flex\">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input pl-5\">\r\n                      <label for=\"\" class=\"mb-0\">Notifications:</label>\r\n                      <div id=\"status-toggle\">\r\n                        <button type=\"button\" class=\"btn btn-toggle\" data-toggle=\"button\" aria-pressed=\"false\"\r\n                          autocomplete=\"off\">\r\n                          <div class=\"handle\"></div>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"d-flex mt-4 justify-content-center mt-4\">\r\n                  <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\">Cancel</button>\r\n                  <button mat-raised-button color=\"warn\">Save</button>\r\n                </div>\r\n              </mat-expansion-panel>\r\n\r\n              <!-- <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title> Support </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n\r\n                <div class=\"d-flex\">\r\n                  <div class=\"col p-0 pl-1\">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Name</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput />\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col p-0 \">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Email</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput />\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"d-flex mt-2 prdct-desc\">\r\n                  <div class=\"col p-0 pl-1\">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0\">Problem Description</label>\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput />\r\n                        <textarea matInput></textarea>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                   \r\n                </div>\r\n                <div class=\"d-flex mt-4 justify-content-center mt-4\">\r\n                  <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\">Reset</button>\r\n                  <button mat-raised-button color=\"warn\">Submit</button>\r\n                </div>\r\n              </mat-expansion-panel> -->\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LabelService } from '../../../services/label.service';\r\nimport { UserDetails } from '../../../models/user';\r\nimport { HeaderService } from '../../../services/header.service';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, FormGroupDirective } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-user-support',\r\n  templateUrl: './user-support.component.html',\r\n  styleUrls: ['./user-support.component.css']\r\n})\r\nexport class UserSupportComponent implements OnInit {\r\n\r\n  public supportForm: UntypedFormGroup;\r\n  public dsUserSupprtInfo = new UserDetails();\r\n  public helpLineNumber = \"\";\r\n  @ViewChild('formGroupDirective', { static: true }) private formGroupDirective: FormGroupDirective;\r\n\r\n  constructor(public labelService: LabelService, private formBuilder: UntypedFormBuilder, public userService: UserService,\r\n    public headerService: HeaderService, public confirmationDialogService: ConfirmationDialogService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindUserSupportLabel();\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindUserSupportLabel();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dsUserSupprtInfo = new UserDetails();\r\n    this.supportForm = this.createFormGroup(new UserDetails());\r\n    this.getUserSupportDetails();\r\n  }\r\n\r\n  public getUserSupportDetails() {\r\n\r\n    this.userService.getUserSettingDetails(this.headerService.loginUserGuid, localStorage.businessGuid).subscribe({next:(data) => {\r\n      this.dsUserSupprtInfo = data.ResponseData;\r\n      this.helpLineNumber = data.ResponseData.HelpLineNumber;\r\n      this.supportForm = this.createFormGroup(this.dsUserSupprtInfo);\r\n    }, error:() => {\r\n      this.dsUserSupprtInfo = null;\r\n    }});\r\n  }\r\n\r\n  public reset() {\r\n    this.dsUserSupprtInfo.ProblemDesc = null;\r\n    this.formGroupDirective.resetForm();\r\n    this.supportForm = this.createFormGroup(this.dsUserSupprtInfo);\r\n\r\n  }\r\n\r\n  public clearProblemDesc() {\r\n    this.supportForm.get(\"ProblemDesc\").setValidators([Validators.maxLength(500)]);\r\n    this.supportForm.controls[\"ProblemDesc\"].setValue(null);\r\n  }\r\n\r\n  public onFocusProblemDesc() {\r\n    this.supportForm.get(\"ProblemDesc\").setValidators([Validators.required, Validators.maxLength(500)]);\r\n  }\r\n\r\n  public onFocusOutProblemDesc() {\r\n    if (this.supportForm.controls[\"ProblemDesc\"].value == null || this.supportForm.controls[\"ProblemDesc\"].value == \"\")\r\n      this.supportForm.get(\"ProblemDesc\").setErrors({ required: true });\r\n  }\r\n\r\n  public submitUserSupport() {\r\n\r\n    if (this.supportForm.controls[\"ProblemDesc\"].value != null && this.supportForm.controls[\"ProblemDesc\"].value != \"\") {\r\n      if (this.supportForm.status == \"VALID\") {\r\n\r\n        this.dsUserSupprtInfo.ProblemDesc = this.supportForm.controls[\"ProblemDesc\"].value;\r\n        this.dsUserSupprtInfo[\"LanguageId\"] = this.labelService.selectedLanguage;\r\n        this.userService.submitUserSupport(this.dsUserSupprtInfo).subscribe({next:() => {\r\n          this.reset();\r\n          this.showMsg(this.labelService.dsUserSupportScreen.SubmittedSuccessfully);\r\n        }, error:() => {\r\n\r\n          this.showMsg(this.labelService.dsUserSupportScreen.Error);\r\n        }});\r\n      }\r\n    }\r\n    else {\r\n      this.supportForm.get(\"ProblemDesc\").setErrors({ required: true });\r\n    }\r\n\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserSupportScreen.OK, this.labelService.dsUserSupportScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      //   if (confirmed) { \r\n      //   }\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      \"Name\": dataItem.FirstName + \" \" + dataItem.LastName,\r\n      'Email': dataItem.Email,\r\n      'ProblemDesc': [dataItem.ProblemDesc, Validators.compose([Validators.required, Validators.maxLength(500)])],\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"row\" id=\"support\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div>\r\n            <mat-accordion multi>\r\n\r\n              <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title data-testid=\"cu-title\"> {{labelService.dsUserSupportScreen.CallUs}} </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n\r\n                <div class=\"d-flex mt-2 prdct-desc col-sm-12\">\r\n                  <div class=\"col p-0 pl-1\">\r\n                    <div class=\"d-flex align-items-center nobtm-pad s-input c-input\">\r\n                      <label for=\"\" class=\"mb-0 s-label\">{{labelService.dsUserSupportScreen.HelplineNo}}</label>\r\n                      &nbsp; {{helpLineNumber}}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </mat-expansion-panel>\r\n\r\n              <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title> {{labelService.dsUserSupportScreen.ContactUs}} </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <form [formGroup]=\"supportForm\" #formGroupDirective=\"ngForm\" autocomplete=\"off\">\r\n                  <div class=\"d-flex col-sm-12\">\r\n                    <div class=\"col p-0 pl-1\">\r\n                      <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                        <label for=\"\" class=\"mb-0\">{{labelService.dsUserSupportScreen.Name}}</label>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput formControlName=\"Name\" readonly />\r\n                        </mat-form-field>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col p-0 \">\r\n                      <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                        <label for=\"\" class=\"mb-0 text-center\">{{labelService.dsUserSupportScreen.Email}}</label>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <input type=\"text\" matInput formControlName=\"Email\" readonly />\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"d-flex mt-2 prdct-desc col-sm-12\">\r\n                    <div class=\"col p-0 pl-1\">\r\n                      <div class=\"d-flex align-items-center nobtm-pad s-input \">\r\n                        <label for=\"\" class=\"mb-0\">{{labelService.dsUserSupportScreen.ProblemDescription}}</label>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                          <textarea matInput formControlName=\"ProblemDesc\" required maxlength=\"500\"\r\n                            (focus)=\"onFocusProblemDesc()\" (focusout)=\"onFocusOutProblemDesc()\"\r\n                            [placeholder]=\"labelService.dsUserSupportScreen.EnterProblemDescription\"></textarea>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"d-flex mt-4 justify-content-center mt-4 col-sm-12\">\r\n                    <!-- <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\" (click) = \"clearProblemDesc()\">{{labelService.dsUserSupportScreen.Reset}}</button> -->\r\n                    <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\"\r\n                      routerLink=\"/dashboard\">{{labelService.dsUserSupportScreen.Cancel}}</button>\r\n                    <button mat-raised-button color=\"warn\"\r\n                      (click)=\"submitUserSupport()\">{{labelService.dsUserSupportScreen.Submit}}</button>\r\n                  </div>\r\n                </form>\r\n\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CommonService } from '../../services/common.service';\r\nimport { LabelService } from '../../services/label.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertMessageComponent } from '../../components/alert-message/alert-message.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataService } from '../../services';\r\ndeclare let $: any;\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit, OnDestroy {\r\n\r\n  public apiUrl: string;\r\n  public dsFAQs: any[] = [];\r\n  panelOpenState = false;\r\n  public isBackOfficeUser: boolean;\r\n\r\n  constructor(public commonService: CommonService, public dataService: DataService, public labelService: LabelService, private title: Title, private activatedRoute: ActivatedRoute, private router: Router, private modalService: NgbModal) {\r\n    this.title.setTitle('ZoetisDx Help');\r\n    this.apiUrl = ('https:' == document.location.protocol ? 'https://' : 'http://') + location.host + '/#/enduserlicenseagreement';\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindHelpLabel();\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindHelpLabel();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('alert-popup') == 'true') {\r\n      this.modalService.open(AlertMessageComponent, {\r\n        centered: true,\r\n        backdrop: 'static',\r\n        scrollable: false\r\n      });\r\n    }\r\n    this.commonService.getFAQs(this.labelService.selectedLanguage, this.labelService.userCountryId).subscribe(data => {\r\n      this.dsFAQs = data.ResponseData;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle('ZoetisDx');\r\n  }\r\n\r\n  public bindQAnsPanel() {\r\n    let strHTML = \"\";\r\n    this.dsFAQs[0].AnswerDetails.forEach(element => {\r\n      strHTML += \"<mat-expansion-panel expanded >\";\r\n      strHTML += \" <mat-expansion-panel-header ><mat-panel-title>\";\r\n      strHTML += this.dsFAQs[0].Faq;\r\n      strHTML += \" </mat-panel-title></mat-expansion-panel-header>\";\r\n      strHTML += \" <div class='d-flex mt-2 prdct-desc col-sm-12'><div class='col p-0 pl-1'><div class='d-flex align-items-center nobtm-pad s-input c-input'>\";\r\n      strHTML += element.Answer;\r\n      strHTML += \" </div></div></div>\";\r\n      strHTML += \" </mat-expansion-panel>\";\r\n    });\r\n\r\n    $(\"mat-accordion\").empty();\r\n    $(\"mat-accordion\").append(strHTML)\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"help_part\">\r\n    <!-- *ngIf=\"!isBackOfficeUser\" -->\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"outer\">\r\n      <div class=\"row\" id=\"help\">\r\n        <app-faq></app-faq>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonService } from '../../services/common.service';\r\nimport { LabelService } from '../../services/label.service';\r\nimport { EnmCountry } from '../../shared/constants/enum';\r\nimport { ConfirmationDialogService } from '../confirmation-dialog/confirmation-dialog.service';\r\n@Component({\r\n  selector: 'app-end-user-license-agreement',\r\n  templateUrl: './end-user-license-agreement.component.html',\r\n  styleUrls: ['./end-user-license-agreement.component.css']\r\n})\r\nexport class EndUserLicenseAgreementComponent implements OnInit {\r\n\r\n  public dsEndUserLicenseAgreement: any[] = [];\r\n  public agreementText = '';\r\n  panelOpenState = false;\r\n  public userCountryId: number = localStorage.userCountryId != undefined ? Number(localStorage.userCountryId) : EnmCountry.UnitedStates;\r\n  public languageList: any[];\r\n  public slectedLangId: number;\r\n\r\n  constructor(public commonService: CommonService, public labelService: LabelService, private activatedRoute: ActivatedRoute, private router: Router, private confirmationDialogService: ConfirmationDialogService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindEndUserLicenseAgreementLabel();\r\n    }\r\n    this.getLanguage();\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindEndUserLicenseAgreementLabel();\r\n    });\r\n  }\r\n\r\n  public getLanguage() {\r\n    this.commonService.getLanguageDetails().subscribe(data => {\r\n      this.languageList = data.ResponseData;\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n  }\r\n\r\n  public onChangeLanguage(e) {\r\n    this.slectedLangId = e.value\r\n    this.router.navigate(['/enduserlicenseagreement/' + this.slectedLangId]);\r\n    this.getULA(this.slectedLangId)\r\n\r\n  }\r\n\r\n  public getULA(langId) {\r\n    this.commonService.getEndUserLicenseAgreement(langId, this.userCountryId).subscribe({next:(data) => {\r\n      this.dsEndUserLicenseAgreement = data.ResponseData;\r\n      this.agreementText = data.ResponseData.length > 0 && data.ResponseData[0] && data.ResponseData[0].AgreementText ? data.ResponseData[0].AgreementText : '';\r\n    }, error:() => {\r\n      this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsFuseManagementScreen.AddRefLabAccountRespErrorMessage, this.labelService.dsPatientInfoScreen.Ok, \"\", \"sm\", true, false);\r\n    }});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.slectedLangId = Number(params['languageId']);\r\n      const countryId = params['countryId'];\r\n      if (countryId) {\r\n        this.userCountryId = Number(countryId);\r\n      }\r\n      this.getULA(this.slectedLangId);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"signin-outer\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-100\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4 eula-part\">\r\n          <div class=\"card-body\">\r\n\r\n            <div style=\"text-align: right;\" class=\"log-part\">\r\n              <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                <mat-select autocomplete=\"off\" [(value)]=\"slectedLangId\" (selectionChange)=\"onChangeLanguage($event)\">\r\n                  <mat-option *ngFor=\"let language of languageList\" [value]=\"language.Id\">\r\n                    {{ language.Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"text-center mb-2 l-part\">\r\n              <img routerLink=\"/login\" src=\"../../../assets/img/logo-login@2x.png\" alt=\"img\" />\r\n            </div>\r\n            <div *ngIf=\"agreementText\" [innerHTML]=\"agreementText\"></div>\r\n            <div style=\"min-height: 250px; text-align: center; margin-top: 15%\" *ngIf=\"agreementText === ''\">\r\n              <p>Data Not Found</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { LabelService } from '../../../services/label.service';\r\nimport { RotorDetails } from '../../../models/user';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { CreditModel } from '../../../models/model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { HeaderService } from '../../../services/header.service';\r\nimport { DataService } from '../../../services/data.sevice';\r\n@Component({\r\n  selector: 'app-rotor-credit',\r\n  templateUrl: './rotor-credit.component.html',\r\n  styleUrls: ['./rotor-credit.component.css'],\r\n  providers: [DatePipe]\r\n})\r\nexport class RotorCreditComponent implements OnInit {\r\n\r\n  public rotorForm: UntypedFormGroup;\r\n  public rotorDetails: RotorDetails[];\r\n  public specieslist: any[] = [];\r\n  public SampleType: any[] = [];\r\n  public profileNameList: any[] = [];\r\n  public dateError: boolean;\r\n  maxDate = new Date();\r\n  imageData: any;\r\n  public img: any;\r\n\r\n  constructor(private fb: UntypedFormBuilder, public labelService: LabelService, public headerService: HeaderService, private datePipe: DatePipe, public router: Router, public commonService: CommonService, private modalService: NgbModal, public confirmationDialogService: ConfirmationDialogService, private data: DataService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindPatientListLabel();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.rotorForm = this.createFormGroup(new CreditModel);\r\n    this.getDropdownData();\r\n    this.data.msgRoot.subscribe(data => {\r\n      this.data = data;\r\n      this.imageData = data;\r\n    })\r\n    this.getRororImagesData();\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindRotorManagementLabel();\r\n    });\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.fb.group({\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      ZoetisAccountNumber: [dataItem.ZoetisAccountNumber, Validators.maxLength(50)],\r\n      DateOfIssue: [dataItem.DateOfIssue, Validators.required],\r\n      MessageOnScreen: [dataItem.MessageOnScreen, Validators.maxLength(500)],\r\n      Code: [dataItem.Code, Validators.maxLength(50)],\r\n      InstrumentSerialNumber: [dataItem.InstrumentSerialNumber, Validators.maxLength(50)],\r\n      LotNumber: [dataItem.LotNumber, Validators.maxLength(50)],\r\n      PatientSpecies: [dataItem.PatientSpecies, Validators.required],\r\n      SampleType: [dataItem.SampleType, Validators.required],\r\n      ProfileName: [dataItem.ProfileName, Validators.required],\r\n      Notes: [dataItem.Notes, Validators.maxLength(500)],\r\n    })\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsRotorManagementScreen.OkLabel, this.labelService.dsUserManagementScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  rotorCreditRequest() {\r\n    const formatDate = this.datePipe.transform(this.rotorForm.get('DateOfIssue').value, 'yyyy-MM-dd');\r\n    const reqObj = {\r\n      UserId: this.headerService.loginUserGuid,\r\n      ZoetisAccountNumber: this.rotorForm.get('ZoetisAccountNumber').value,\r\n      DateOfIssue: formatDate,\r\n      MessageOnScreen: this.rotorForm.get('MessageOnScreen').value,\r\n      Code: this.rotorForm.get('Code').value,\r\n      InstrumentSerialNumber: this.rotorForm.get('InstrumentSerialNumber').value,\r\n      LotNumber: this.rotorForm.get('LotNumber').value,\r\n      PatientSpecies: this.rotorForm.get('PatientSpecies').value,\r\n      SampleType: this.rotorForm.get('SampleType').value,\r\n      ProfileName: this.rotorForm.get('ProfileName').value,\r\n      RotorCancellationReport: this.imageData,\r\n      Notes: this.rotorForm.get('Notes').value,\r\n\r\n    }\r\n\r\n    if (this.rotorForm.status == \"VALID\" && this.dateError && this.rotorForm != null && this.rotorForm != undefined) {\r\n      this.commonService.addCreditDetails(reqObj).subscribe(() => {\r\n        this.getDropdownData();\r\n        this.modalService.dismissAll();\r\n\r\n        this.router.navigate(['/rotor-firstScreen']);\r\n        this.dateError = false;\r\n        this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsRotorManagementScreen.DataSubmittedsuccessfully, this.labelService.dsRotorManagementScreen.OkLabel, \"Cancel\", \"sm\", true, false)\r\n          // .then((confirmed) => {\r\n          // })\r\n          // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n      });\r\n    }\r\n    else if (this.rotorForm.status == \"INVALID\") {\r\n      this.showMsg(this.labelService.dsRotorManagementScreen.PleaseEnterMandatoryFields);\r\n    }\r\n    else if (this.dateError) {\r\n      this.showMsg(this.labelService.dsRotorManagementScreen.DateProvided30DaysagoError);\r\n      this.dateError = true;\r\n    } else {\r\n      this.showMsg(this.labelService.dsRotorManagementScreen.PleaseEnterMandatoryFields);\r\n      this.rotorForm.enable();\r\n      this.dateError = true;\r\n    }\r\n  }\r\n\r\n  public getRororImagesData() {\r\n    this.commonService.getRotorImages(this.labelService.selectedLanguage).subscribe(data => {\r\n      this.img = data.ResponseData[0].RImage;\r\n    });\r\n  }\r\n\r\n  getDropdownData() {\r\n    this.commonService.getrotorDetails().subscribe(data => {\r\n      this.specieslist = data.ResponseData.RotorSpeciesList;\r\n      this.SampleType = data.ResponseData.RotorSampleTypeList;\r\n      this.profileNameList = data.ResponseData.RotorProfileNameList;\r\n    });\r\n  }\r\n\r\n  public checkDate(val) {\r\n    const selectedDate = new Date(val);\r\n    const today = new Date();\r\n    const targetDate = new Date();\r\n    targetDate.setDate(today.getDate() - 31);\r\n    targetDate.setHours(0);\r\n    targetDate.setMinutes(0);\r\n    targetDate.setSeconds(0);\r\n\r\n    if (targetDate < selectedDate) {\r\n      this.dateError = false;\r\n    } else if (val != undefined && val != null) {\r\n      this.dateError = true;\r\n      this.showMsg(this.labelService.dsRotorManagementScreen.DateProvided30DaysagoError);\r\n    } else if (val === undefined) {\r\n      this.dateError = true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"outer\">\r\n      <div class=\"row\" id=\"rotor\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div class=\"roto-outer\">\r\n            <mat-accordion multi>\r\n              <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title data-testid=\"rc-title\">{{labelService.dsRotorManagementScreen.RotorCreditRequestForm}}</mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"step-2\">\r\n                  <p class=\"text col-sm-12\">{{labelService.dsRotorManagementScreen.Step2FillouttheFormbelow}}</p>\r\n                  <div class=\"d-flex justify-content-center pt-4 pb-4 col-sm-12\"><img [src]=\"img\" alt=\"img\" /></div>\r\n                  <p class=\"col-sm-12 text\">{{labelService.dsRotorManagementScreen.rcrDisclaimer}}</p>\r\n                  <p class=\"col-sm-12 text\" style=\"color: red;\">{{labelService.dsRotorManagementScreen.requiredField}}\r\n                  </p>\r\n                  <form [formGroup]=\"rotorForm\" autocomplete=\"off\">\r\n                    <div class=\"d-flex col-sm-12\">\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\"\r\n                            class=\"mb-0\">{{labelService.dsRotorManagementScreen.ZoetisAccountNumber}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input type=\"text\" matInput autocomplete=\"off\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.AccNumPrefill\"\r\n                              formControlName=\"ZoetisAccountNumber\" maxlength=\"20\" />\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block issuedate\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.DateOfIssue}}</label>\r\n                          <mat-form-field appearance=\"outline\" [ngClass]=\"{'mat-form-field-invalid': dateError}\"\r\n                            floatLabel=\"always\">\r\n                            <input matInput [matDatepicker]=\"startDate\" disabled\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.DatePrefill\" readonly\r\n                              formControlName=\"DateOfIssue\" [max]=maxDate (ngModelChange)=\"checkDate($event)\"\r\n                              required />\r\n                            <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #startDate disabled=\"false\"></mat-datepicker>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-error *ngIf=\"dateError\"\r\n                      style=\"padding-left: 64%;\">{{labelService.dsRotorManagementScreen.DateProvided30DaysagoError}}</mat-error>\r\n\r\n                    <div class=\"d-flex col-sm-12 mt-3\">\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-top nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.MessageonScreen}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <textarea matInput maxlength=\"500\" formControlName=\"MessageOnScreen\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.MessageScreenPrefill\"></textarea>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex col-sm-12 mt-3\">\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.Code}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"Code\" maxlength=\"50\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.CodePrefill\" required />\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\"\r\n                            class=\"mb-0\">{{labelService.dsRotorManagementScreen.InstrumentSerialNumber}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input type=\"text\" matInput formControlName=\"InstrumentSerialNumber\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.InstrumentSerialNumberPrefill\"\r\n                              maxlength=\"50\" required />\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.LotNumber}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <input type=\"text\" matInput formControlName=\"LotNumber\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.LotNumberPrefill\" maxlength=\"50\"\r\n                              required />\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex col-sm-12 mt-3\">\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.PatientSpecies}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <mat-select formControlName=\"PatientSpecies\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.PatientSpeciesPrefill\" required>\r\n                              <mat-option *ngFor=\"let Species of specieslist\" [value]=\"Species.SpeciesId\">\r\n                                {{Species.SpeciesName}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.SampleType}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <mat-select formControlName=\"SampleType\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.SelectSamplePrefill\">\r\n                              <mat-option *ngFor=\"let sampleType of SampleType\" [value]=\"sampleType.SampleTypeId\">\r\n                                {{sampleType.SampleTypeName}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-center nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.ProfileName}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <mat-select formControlName=\"ProfileName\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.SelectProfilePrefill\" required>\r\n                              <mat-option *ngFor=\"let profileList of profileNameList\" [value]=\"profileList.ProfileId\">\r\n                                {{profileList.ProfileName}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex col-sm-12 mt-3\">\r\n                      <div class=\"col p-0 pl-1\">\r\n                        <div class=\"d-flex align-items-top nobtm-pad s-input email-block\">\r\n                          <label for=\"\" class=\"mb-0\">{{labelService.dsRotorManagementScreen.Notes}}</label>\r\n                          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                            <textarea matInput maxlength=\"500\"\r\n                              [placeholder]=\"labelService.dsRotorManagementScreen.NotePrefill\"\r\n                              formControlName=\"Notes\"></textarea>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"para col-sm-12 mt-5\">\r\n                      <h5>{{labelService.dsRotorManagementScreen.eligibilityCredit}}</h5>\r\n                      <p>{{labelService.dsRotorManagementScreen.eligibilityCreditDesc}}</p>\r\n                    </div>\r\n\r\n                    <div class=\"para col-sm-12\">\r\n                      <h5>{{labelService.dsRotorManagementScreen.additionalSupport}}</h5>\r\n                      <p>{{labelService.dsRotorManagementScreen.additionalSupportDesc}}</p>\r\n                    </div>\r\n                    <!-- <div class=\"d-flex justify-content-center\">\r\n                    <img src=\"../../../assets/img/rotor-img.jpg\">\r\n                  </div> -->\r\n                    <div class=\"d-flex mt-4 justify-content-center mt-4 col-sm-12\">\r\n                      <button mat-raised-button class=\"mr-3 cncl-btn\" color=\"warn\"\r\n                        routerLink=\"/rotor-firstScreen\">{{labelService.dsRotorManagementScreen.Cancel}}</button>\r\n                      <button mat-raised-button color=\"warn\"\r\n                        (click)=\"rotorCreditRequest()\">{{labelService.dsRotorManagementScreen.Submit}}</button>\r\n                    </div>\r\n                  </form>\r\n\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LabelService } from '../../../services/label.service';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { CreditFirstModel } from '../../../models/model';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DataService } from '../../../services/data.sevice';\r\n@Component({\r\n  selector: 'app-rotor-credit-first-screen',\r\n  templateUrl: './rotor-credit-first-screen.component.html',\r\n  styleUrls: ['./rotor-credit-first-screen.component.css']\r\n})\r\nexport class RotorCreditFirstScreenComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\r\n  fileAttr = '';\r\n  public uploadError = false;\r\n  public fileLimitError = false;\r\n  public allowedTypesError = false;\r\n  public imageError: any;\r\n  fileData: any;\r\n  public rotorFirstForm: UntypedFormGroup;\r\n  isImageSaved: boolean;\r\n  cardImageBase64: string;\r\n\r\n  constructor(public labelService: LabelService, private fb: UntypedFormBuilder, private router: Router, public confirmationDialogService: ConfirmationDialogService, private data: DataService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindRotorManagementLabel();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.rotorFirstForm = this.createFormGroup(new CreditFirstModel);\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData.RotorCreditScreen;\r\n      this.labelService.bindRotorManagementLabel();\r\n    });\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.fb.group({\r\n      uploadReport: [dataItem.uploadReport, Validators.required],\r\n    })\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsRotorManagementScreen.OkLabel, this.labelService.dsUserManagementScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  rotorFirstScreenRequest() {\r\n    if (this.rotorFirstForm.status == \"VALID\") {\r\n      this.router.navigateByUrl('/rotor');\r\n    }\r\n    else {\r\n      if (this.rotorFirstForm.status == \"INVALID\") {\r\n        this.showMsg(this.labelService.dsRotorManagementScreen.UploadrotorCancellationError);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  uploadFileEvt(fileInput: any) {\r\n    this.imageError = null;\r\n\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n      this.fileAttr = '';\r\n      this.fileData = fileInput.target.files[0].type;\r\n      Array.from(fileInput.target.files).forEach((file: File) => {\r\n        if (fileInput.target.files[0].size < 5000000) {\r\n\r\n          if (this.fileData == \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || this.fileData == \"application/pdf\" ||\r\n            this.fileData == \"application/msword\" || this.fileData == \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\r\n            this.fileData == \"image/jpeg\" || this.fileData == \"image/jpg\" || this.fileData == \"image/png\" || this.fileData == \"image/bmp\") {\r\n            this.fileAttr += file.name + '';\r\n            this.allowedTypesError = false;\r\n            this.fileLimitError = false;\r\n          }\r\n          else {\r\n            this.fileLimitError = false;\r\n            this.allowedTypesError = true;\r\n            this.rotorFirstForm.controls['uploadReport'].setErrors({ 'incorrect': true });\r\n          }\r\n        }\r\n        else {\r\n          if (fileInput.target.files[0].size > 5000000) {\r\n\r\n            this.allowedTypesError = false;\r\n            this.fileLimitError = true;\r\n            this.rotorFirstForm.controls['uploadReport'].setErrors({ 'incorrect': true });\r\n          }\r\n        }\r\n      });\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e: any) => {\r\n        const image = new Image();\r\n        image.src = e.target.result;\r\n        this.data.msgRoot.next(e.target.result);\r\n\r\n      };\r\n      reader.readAsDataURL(fileInput.target.files[0]);\r\n    }\r\n    else {\r\n      this.fileAttr = '';\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"outer\">\r\n      <div class=\"row\" id=\"rotor1\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div class=\"roto-outer\">\r\n            <mat-accordion multi>\r\n              <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n                <mat-expansion-panel-header class=\"cursor-rem\">\r\n                  <mat-panel-title data-testid=\"rcf-title\">{{labelService.dsRotorManagementScreen.RotorCreditRequestForm}}</mat-panel-title>\r\n\r\n                </mat-expansion-panel-header>\r\n                <div class=\"step-1 mb-5 col-sm-12\">\r\n                  <p class=\"text head\">\r\n                    {{labelService.dsRotorManagementScreen.RequestingRotorCreditEasy}}\r\n                  </p>\r\n                  <p class=\"text\">{{labelService.dsRotorManagementScreen.FindYourErrorReport}}</p>\r\n                  <ul class=\"text rotor-list\">\r\n                    <li>{{labelService.dsRotorManagementScreen.HomeScreenSelect}}<img\r\n                        src=\"../../../assets/img/folder.png\" class=\"ml-4\" alt=\"folder\"> </li>\r\n                    <li>{{labelService.dsRotorManagementScreen.Select}}\r\n                      <button class=\"ml-4 rotor-btn\"\r\n                        color=\"warn\">{{labelService.dsRotorManagementScreen.Search}}</button>\r\n                    </li>\r\n                    <li class=\"d-flex  \"><span>{{labelService.dsRotorManagementScreen.VS2errorreports}}</span>\r\n                      <span class=\"d-flex flex-column\">\r\n                        <button class=\"ml-4 rotor-btn\"\r\n                          color=\"warn\">{{labelService.dsRotorManagementScreen.PatientControlID}}</button>\r\n                        <button class=\"ml-4 rotor-btn mt-4 mb-4\"\r\n                          color=\"warn\">{{labelService.dsRotorManagementScreen.Date}}</button>\r\n                        <button class=\"ml-4 rotor-btn\"\r\n                          color=\"warn\">{{labelService.dsRotorManagementScreen.Patients}}</button>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <div>{{labelService.dsRotorManagementScreen.Errorreportanduploadhere}}</div>\r\n                      <form [formGroup]=\"rotorFirstForm\" autocomplete=\"off\">\r\n\r\n                        <mat-form-field class=\"mt-0\" appearance=\"outline\" class=\"form-fieldCust\"\r\n                          [ngClass]=\"{'mat-form-field-invalid': uploadError}\">\r\n                          <div>\r\n                            <mat-toolbar>\r\n                              <input matInput [(ngModel)]=\"fileAttr\" [ngModelOptions]=\"{standalone: true}\" #fileInput\r\n                                readonly name=\"name\" color=\"warn\"\r\n                                [placeholder]=\"this.labelService.dsRotorManagementScreen.UploadRotorCancellationReportLabel\"\r\n                                required />\r\n                              <mat-icon matSuffix><img class=\"rotor_img\" src=\"../../../../assets/img/export@2x.png\"\r\n                                  alt=\"export\"></mat-icon>\r\n                            </mat-toolbar>\r\n                            <input type=\"file\" #fileInput id=\"uploadFile\" formControlName=\"uploadReport\"\r\n                              (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\r\n                              accept=\".jpg,.jpeg,.png,image/bmp,.pdf,.doc,.docx\" color=\"warn\" required />\r\n                          </div>\r\n                        </mat-form-field>\r\n                        <div>\r\n                          <mat-error *ngIf=\"uploadError\"\r\n                            class=\"dateErrorAdj\">{{labelService.dsRotorManagementScreen.UploadrotorCancellationError}}</mat-error>\r\n                        </div>\r\n                        <div>\r\n                          <mat-error *ngIf=\"fileLimitError\"\r\n                            class=\"dateErrorAdj\">{{labelService.dsRotorManagementScreen.FileLimitError}}</mat-error>\r\n                        </div>\r\n                        <div>\r\n                          <mat-error *ngIf=\"allowedTypesError\"\r\n                            class=\"dateErrorAdj\">{{labelService.dsRotorManagementScreen.allowedTypesError}}</mat-error>\r\n                        </div>\r\n                      </form>\r\n                    </li>\r\n                  </ul>\r\n                  <div class=\"d-flex mt-4 justify-content-center mt-4 col-sm-12\">\r\n                    <button mat-raised-button class=\"mr-3 cncl-btn\" color=\"warn\"\r\n                      routerLink=\"/dashboard\">{{labelService.dsRotorManagementScreen.Cancel}}</button>\r\n                    <button mat-raised-button color=\"warn\"\r\n                      (click)=\"rotorFirstScreenRequest()\">{{labelService.dsRotorManagementScreen.Next}}</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { RefLabService } from './../../../services/ref-lab.service';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService, HeaderService, PatientService, LabelService, SidefilterService, DataService } from '../../../services';\r\nimport { SideFilter } from '../../../models/side-filter';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { Subject } from 'rxjs';\r\nimport { MatLegacyDialogRef as MatDialogRef, MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\n@Component({\r\n  selector: 'app-merge-patient',\r\n  templateUrl: './merge-patient.component.html',\r\n  styleUrls: ['./merge-patient.component.css']\r\n})\r\nexport class MergePatientComponent implements OnInit {\r\n\r\n  businessGuid: any;\r\n  displayedColumns = ['select', 'PatientId', 'PatientName', 'OwnerName', 'SpeciesName', 'BreedName', 'GenderName', 'Dob'];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  followPatientList: any[] = [];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public isBackOfficeUser: boolean;\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 15;\r\n  end: number = this.limit + this.start;\r\n  selectedRowIndex: number = null;\r\n  public viewSection = 'SelectPatient';\r\n  selectedPatients = new SelectionModel<any>(true, []);\r\n  primaryPatient = null;\r\n  mergeDialogId = null;\r\n  mergeSuccessDialogId = null;\r\n  userQuestionUpdate = new Subject<string>();\r\n  consoleMessages: any;\r\n  searchText = '';\r\n  cloneResults: any = null;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MergePatientComponent>,\r\n    public commonService: CommonService,\r\n    public headerService: HeaderService,\r\n    public router: Router,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    public dialog: MatDialog,\r\n    private refLabService: RefLabService\r\n  ) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindMergePatientLabel();\r\n    }\r\n    this.businessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.PageNo = 1;\r\n    this.sidefilterService.filter.PageSize = 60;\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged())\r\n      .subscribe(value => {\r\n        this.sidefilterService.filter.SearchText = value;\r\n        this.sidefilterService.filter.PageNo = 1;\r\n        this.dataSource = new MatTableDataSource<any>([]);\r\n        this.getPatientList(this.sidefilterService.filter);\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPatientList(this.sidefilterService.filter);\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindMergePatientLabel();\r\n    });\r\n  }\r\n\r\n  clearSearch() {\r\n    this.searchText = '';\r\n    this.userQuestionUpdate.next(this.searchText)\r\n  }\r\n\r\n  public selectSection(section) {\r\n    if (this.selectedPatients.selected.length < 2) {\r\n      this.showMsg(this.labelService.dsMergePatientScreen.SelectAtleastTwoPatient + '.'); return false;\r\n    } else if ((this.viewSection == 'PrimaryPatient' || this.viewSection == 'SelectPatient') && !this.primaryPatient && section == 'MergePatient') {\r\n      this.showMsg(this.labelService.dsMergePatientScreen.PleaseSelectPrimary + '.'); return false;\r\n    }\r\n\r\n    if (section == 'SelectPatient') {\r\n      if (this.cloneResults) {\r\n        this.dataSource = this.cloneResults;\r\n        this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    }\r\n\r\n    if (this.viewSection == 'SelectPatient') {\r\n      this.cloneResults = this.dataSource;\r\n      this.dataSource = new MatTableDataSource<any>(this.selectedPatients.selected);\r\n      this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n      this.dataSource.sort = this.sort;\r\n      this.primaryPatient = null;\r\n    }\r\n    this.viewSection = section;\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    if (msg == undefined || msg == null || msg == \"\")\r\n      msg = this.labelService.dsPatientInfoScreen.CanceledTest;\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsPatientInfoScreen.Ok, '', \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.router.navigateByUrl('/patient/info')\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  getSearchVal(val) {\r\n    if (val && val.trim().length) {\r\n      const params = {\r\n        BusinessGuid: localStorage.businessGuid,\r\n        Filter: val\r\n      }\r\n      this.refLabService.PatientOwnerDDLList(params).subscribe(data => {\r\n        this.dataSource = new MatTableDataSource<any>(data.ResponseData.PatientOwner);\r\n        this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    } else {\r\n      this.getPatientList(this.sidefilterService.filter);\r\n    }\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight\r\n    const tableScrollHeight = e.target.scrollHeight\r\n    const scrollLocation = e.target.scrollTop;\r\n\r\n    /**  If the user has scrolled within 200px of the bottom, add more data */\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      this.isLoadMore = true;\r\n      this.sidefilterService.filter.PageNo++;\r\n      this.sidefilterService.filter.PageSize = 60;\r\n      this.getPatientList(this.sidefilterService.filter);\r\n    }\r\n  }\r\n\r\n  public getPatientList(event) {\r\n    event.UserGuid = this.headerService.loginUserGuid;\r\n    event.LanguageId = this.labelService.selectedLanguage;\r\n    event.IsBackOfficeUser = this.isBackOfficeUser;\r\n\r\n    if (event.IsApplyFilter) {\r\n      this.sidefilterService.filter.PageNo = event.PageNo;\r\n    }\r\n    if (event.PageNo == 1) {\r\n      this.originData = [];\r\n    }\r\n\r\n    this.commonService.getPatientList(event).subscribe({next:(data) => {\r\n      if (this.viewSection == 'SelectPatient') {\r\n        if (event.PageNo == 1) {\r\n          if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n            this.originData = data.ResponseData.PatientList;\r\n          } else {\r\n            this.originData = [];\r\n          }\r\n        } else {\r\n          if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n            this.originData = this.originData.concat(data.ResponseData.PatientList);\r\n          }\r\n        }\r\n        if (data.ResponseData.PatientList != null && this.originData.length < 60) {\r\n          event.PageNo += 1;\r\n          this.sidefilterService.filter.PageNo = event.PageNo;\r\n          this.getPatientList(this.sidefilterService.filter);\r\n        }\r\n        if (this.originData.length > 0) {\r\n\r\n          if (this.originData.length > 0 && this.isLoadMore) {\r\n            this.isLoadMore = false;\r\n          } else {\r\n            // this.scrolltoTop(null);\r\n          }\r\n\r\n          this.dataSource = new MatTableDataSource<any>(this.originData);\r\n          this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        } else {\r\n          this.dataSource.data = [];\r\n        }\r\n      }\r\n\r\n    }, error:() => {\r\n      this.dataSource.data = [];\r\n    }});\r\n  }\r\n\r\n  isSelected(row) {\r\n    return this.selectedPatients.selected.find(v => v.ZDXPatientId == row.ZDXPatientId)\r\n  }\r\n\r\n  public onDataSort() {\r\n    // this.scrolltoTop(null);\r\n  }\r\n\r\n  // public scrolltoTop(topVal) {\r\n  //   /** const scrollabe = document.getElementById('patient-list-scrollabe');\r\n  //    * scrollabe.scrollTop = topVal;\r\n  //    */\r\n  // }\r\n\r\n  public navigateToInfoPage(element) {\r\n\r\n    this.patientService.showPataientInfo(element, this.sidefilterService.filter, this.sidefilterService.filter.PageNo, null, null);\r\n  }\r\n\r\n  @ViewChild('mergeDialog', { static: true }) mergeDialog: TemplateRef<any>;\r\n  @ViewChild('mergeSuccessDialog', { static: true }) mergeSuccessDialog: TemplateRef<any>;\r\n\r\n\r\n  mergePatient() {\r\n    const dialog = this.dialog.open(this.mergeDialog, {\r\n      width: '300px'\r\n    });\r\n    this.mergeDialogId = dialog.id\r\n  }\r\n\r\n  doMerge() {\r\n\r\n    const req = {\r\n      primaryPatientId: this.primaryPatient.ZDXPatientId,\r\n      childPatientIds: [],\r\n      BusinessGuid: this.businessGuid,\r\n      UserGuid: this.dataService.appData.authDetails['UserGuid']\r\n    }\r\n\r\n    this.selectedPatients.selected.forEach(v => {\r\n      if (v.ZDXPatientId != req.primaryPatientId) {\r\n        req.childPatientIds.push(v.ZDXPatientId)\r\n      }\r\n    });\r\n\r\n\r\n\r\n    this.patientService.mergePatient(req).subscribe({next:() => {\r\n      this.dialog.getDialogById(this.mergeDialogId).close();\r\n      const dialog = this.dialog.open(this.mergeSuccessDialog, {\r\n        width: '300px'\r\n      });\r\n\r\n      this.mergeSuccessDialogId = dialog.id;\r\n\r\n      dialog.afterClosed().subscribe(() => {\r\n        this.dialogRef.close(this.primaryPatient);\r\n      })\r\n    }, error:() => {\r\n      this.showMsg(this.labelService.dsMergePatientScreen.OppsiMergePatient);\r\n    }})\r\n\r\n  }\r\n\r\n  getTxtClass(PatientId) {\r\n    return (this.viewSection == 'MergePatient' && PatientId == this.primaryPatient.ZDXPatientId) ? 'font-weight-bold' : '';\r\n  }\r\n\r\n}\r\n","<h4 mat-dialog-title>\r\n    <mat-toolbar role=\"toolbar\" class=\"task-header\">\r\n        <span class=\"dialogttl\" data-testid=\"mp-title\"> {{ labelService.dsMergePatientScreen.MergePatient.replace('nts', 'nt') }} </span>\r\n    </mat-toolbar>\r\n</h4>\r\n<div mat-dialog-content>\r\n    <div class=\"row rowpart\">\r\n        <div class=\"{{ viewSection === 'SelectPatient' ? 'col-8' : 'col-8' }} nopad\">\r\n            <h6 class=\"txtpart\" *ngIf=\"viewSection === 'PrimaryPatient'\"><strong>{{\r\n                    labelService.dsMergePatientScreen.StepOneHeading }}</strong>\r\n            </h6>\r\n            <h6 class=\"txtpart\" *ngIf=\"viewSection === 'MergePatient'\"><strong>{{\r\n                    labelService.dsMergePatientScreen.YouHaveSelected }} {{\r\n                    primaryPatient?.PatientId }} {{ labelService.dsMergePatientScreen.AsPrimaryPatient }}. {{\r\n                    labelService.dsMergePatientScreen.StepThreeMessage }}</strong></h6>\r\n            <div class=\"input-group\" id=\"adv-search\" *ngIf=\"viewSection === 'SelectPatient'\">\r\n                <div class=\"d-flex w-100\">\r\n                    <mat-form-field class=\"example-form-field\" appearance=\"outline\" floatLabel=\"always\" class=\"w-100 \">\r\n                        <input matInput type=\"text\" [(ngModel)]=\"searchText\" [placeholder]=\"\r\n                    labelService.dsHeaderScreen.SearchPatientNameID\r\n                  \" (ngModelChange)=\"userQuestionUpdate.next($event)\" />\r\n                        <span matPrefix><img src=\"../../../../assets/img/search-icon.png\" alt=\"\" />\r\n                        </span>\r\n                        <button (click)=\"clearSearch()\" mat-button *ngIf=\"searchText\" matSuffix mat-icon-button\r\n                            aria-label=\"Clear\">\r\n                            <mat-icon>close</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-4 number-tab\">\r\n\r\n            <div class=\"md-stepper-horizontal orange pb-4\">\r\n                <div\r\n                    class=\"md-step {{  ['SelectPatient', 'PrimaryPatient', 'MergePatient'].indexOf(viewSection) !== -1 ? 'active' : '' }}\">\r\n                    <div class=\"md-step-circle\" (click)=\"selectSection('SelectPatient')\"><span>1</span></div>\r\n                    <div class=\"md-step-bar-left\"></div>\r\n                    <div class=\"md-step-bar-right\"></div>\r\n                </div>\r\n                <div\r\n                    class=\"md-step {{  ['PrimaryPatient', 'MergePatient'].indexOf(viewSection) !== -1 ? 'active' : '' }}\">\r\n                    <div class=\"md-step-circle\" (click)=\"selectSection('PrimaryPatient')\"><span>2</span></div>\r\n                    <div class=\"md-step-bar-left\"></div>\r\n                    <div class=\"md-step-bar-right\"></div>\r\n                </div>\r\n                <div class=\"md-step {{ viewSection === 'MergePatient' ? 'active' : '' }}\">\r\n                    <div class=\"md-step-circle\" (click)=\"selectSection('MergePatient')\"><span>3</span></div>\r\n                    <div class=\"md-step-bar-left\"></div>\r\n                    <div class=\"md-step-bar-right\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <h6 class=\"labelpart\" *ngIf=\"viewSection === 'SelectPatient'\">\r\n        <strong>{{ labelService.dsMergePatientScreen.SelectPatientMerge }}</strong>\r\n    </h6>\r\n    <div class=\"example-container pt-0\" id=\"patient-list-scrollabe\" (scroll)=\"onTableScroll($event)\">\r\n        <table class=\"patient-table\" mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onDataSort()\"\r\n            summary=\"\">\r\n            <ng-container matColumnDef=\"select\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    &nbsp;\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let row; let i = index;\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                        (change)=\"$event ? selectedPatients.toggle(row) : null\" [checked]=\"isSelected(row)\"\r\n                        *ngIf=\"viewSection === 'SelectPatient'\">\r\n                    </mat-checkbox>\r\n                    <mat-radio-group [(ngModel)]=\"primaryPatient\" *ngIf=\"viewSection === 'PrimaryPatient'\">\r\n                        <mat-radio-button (click)=\"$event.stopPropagation()\" name=\"primaryPatient\" [value]=\"row\">\r\n                        </mat-radio-button>\r\n                    </mat-radio-group>\r\n\r\n                    <div *ngIf=\"viewSection === 'MergePatient' && row.ZDXPatientId === primaryPatient.ZDXPatientId\">\r\n                        <input id=\"radio-1\" class=\"radio-custom\" name=\"radio-group\" type=\"radio\" disabled\r\n                            [checked]=\"true\">\r\n                        <label for=\"radio-1\" class=\"radio-custom-label\"></label>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"PatientId\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{labelService.dsPatientInfoScreen.PatientID}}</th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.PatientID}}</span>\r\n                    {{element.PatientId}}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"PatientName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{labelService.dsPatientInfoScreen.PatientName}}</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.PatientName}}</span>\r\n                    {{ element.PatientName }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"OwnerName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{labelService.dsPatientInfoScreen.OwnerName}}</th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.OwnerName}}</span> {{\r\n                    element.OwnerName }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"SpeciesName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{labelService.dsPatientInfoScreen.Species}}</th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.Species}}</span> {{\r\n                    element.SpeciesName || element.Species }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"BreedName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsPatientInfoScreen.Breed}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.Breed}}</span> {{ element.BreedName\r\n                    || element.Breed\r\n                    }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"GenderName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsPatientInfoScreen.Sex}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.Sex}}</span> {{ element.GenderName\r\n                    || element.Gender\r\n                    }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Dob\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{labelService.dsPatientInfoScreen.Age}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\" [class]=\"getTxtClass(element.ZDXPatientId)\">\r\n                    <span class=\"textTtl d-none\">{{labelService.dsPatientInfoScreen.Age}}</span> {{ element.Dob ||\r\n                    element.Age }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"> </tr>\r\n        </table>\r\n\r\n        <tbody class=\" norecord\" *ngIf=\"dataSource.data.length === 0\">\r\n            <tr>\r\n                <td>{{labelService.dsPatientInfoScreen.Norecordsfound}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </div>\r\n    <ng-template #mergeDialog>\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header mgp\">\r\n                <h4 class=\"modal-title\"></h4>\r\n\r\n            </div>\r\n            <div class=\"modal-body text-center confirm-modal cpart confirmpart\">\r\n                <div class=\"warning-icon text-center\">\r\n                    <img style=\"height: 60px;\" src=\"./assets/img/warning.png\" alt=\"\">\r\n                </div>\r\n                <div class=\"msg\" style=\"color: #ed1f1f;\"><strong>{{\r\n                        labelService.dsMergePatientScreen.ActionNotReversable\r\n                        }}.</strong></div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <button class=\"cncl-btn mr-2\" mat-button (click)=\"dialog.closeAll()\">{{\r\n                    labelService.dsMergePatientScreen.Cancel }}</button>\r\n                <button class=\"refbtn ml-2\" mat-button cdkFocusInitial (click)=\"doMerge()\">{{\r\n                    labelService.dsMergePatientScreen.MergePatient.replace('nts', 'nt') }}</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #mergeSuccessDialog>\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header mgp\">\r\n                <h4 class=\"modal-title\"></h4>\r\n\r\n            </div>\r\n            <div class=\"modal-body text-center confirm-modal cpart confirmpart\">\r\n                <div class=\"warning-icon text-center\">\r\n                    <img style=\"height: 60px;\" src=\"./assets/img/success.png\" alt=\"\">\r\n                </div>\r\n                <div class=\"msg\" style=\"color: #32a94f;\"><strong>{{\r\n                        labelService.dsMergePatientScreen.PatientMergeSuccess\r\n                        }}.</strong></div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <button class=\"btn save-change\" type=\"button\"\r\n                    (click)=\"dialog.getDialogById(mergeSuccessDialogId).close()\">{{ labelService.dsDashboardScreen.Ok\r\n                    }}</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<div mat-dialog-actions class=\"d-flex justify-content-center align-items-center\">\r\n    <button *ngIf=\"viewSection === 'SelectPatient'\" class=\"cncl-btn\" mat-button (click)=\"dialogRef.close()\">{{\r\n        labelService.dsMergePatientScreen.Cancel }}</button>\r\n    <button *ngIf=\"viewSection === 'PrimaryPatient'\" class=\"cncl-btn\" mat-button\r\n        (click)=\"selectSection('SelectPatient')\">{{ labelService.dsMergePatientScreen.Back }}</button>\r\n    <button *ngIf=\"viewSection === 'MergePatient'\" class=\"cncl-btn\" mat-button\r\n        (click)=\"selectSection('PrimaryPatient')\">{{ labelService.dsMergePatientScreen.Back }}</button>\r\n    <button class=\"refbtn\" mat-button cdkFocusInitial (click)=\"selectSection('PrimaryPatient')\"\r\n        *ngIf=\"viewSection === 'SelectPatient'\">{{ labelService.dsMergePatientScreen.Continue }}</button>\r\n    <button class=\"refbtn\" mat-button cdkFocusInitial (click)=\"selectSection('MergePatient')\"\r\n        *ngIf=\"viewSection === 'PrimaryPatient'\">{{ labelService.dsMergePatientScreen.Confirm }}</button>\r\n    <button class=\"refbtn\" mat-button cdkFocusInitial (click)=\"mergePatient()\" *ngIf=\"viewSection === 'MergePatient'\">{{\r\n        labelService.dsMergePatientScreen.MergePatient.replace('nts', 'nt') }}</button>\r\n</div>","import { Component, Input, OnChanges,SimpleChanges} from '@angular/core';\r\n@Component({\r\n  selector: 'app-patient-info-tests',\r\n  templateUrl: './patient-info-tests.component.html',\r\n  styleUrls: ['./patient-info-tests.component.css']\r\n})\r\nexport class PatientInfoTestsComponent implements OnChanges {\r\n\r\n  @Input() Parent: any;\r\n\r\n  IsApplyFilter:boolean=false;\r\n  // constructor(){}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(changes)\r\n    this.IsApplyFilter=changes.Parent.currentValue.sidefilterService.filter.IsApplyFilter;\r\n  }\r\n\r\n}\r\n","<div class=\"example-container pt-0 patientInfo\" [ngClass]=\"!Parent?.isConsultantUser ? '' : 'egpart' \"\r\n  id=\"patientinfoTbl-scrollabe\" (scroll)=\"Parent.onTableScroll($event)\">\r\n\r\n  <table mat-table [dataSource]=\"Parent?.dataSource\" matSort class=\"patient-table patientinfo\" summary=\"\">\r\n    <!-- <ng-container matColumnDef=\"PatientName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{Parent.labelService.dsPatientListScreen.PatientName}}</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span class=\"bluetext\">\r\n          {{ element.PatientName }}\r\n        </span>\r\n\r\n      </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"ViewedFlag\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{Parent.labelService.dsSideFilterScreen.Status}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" [ngClass]=\"{\r\n                          completed: element.AnalysisStatusId === 1,\r\n                          cancelled: element.AnalysisStatusId === 2,\r\n                          pending: element.AnalysisStatusId === 3 }\">\r\n        <ng-container *ngIf=\"element.AnalysisStatusId === 1\">\r\n          <span (click)=\"Parent.markAs(element, 'READ', element)\"\r\n            title=\"{{ Parent.labelService.dsAnaysisResultsScreen.MarkAsViewed }}\"\r\n            class=\"float-left new-status-border mr-2\" *ngIf=\"element.ViewedFlag === false\">{{\r\n            Parent.labelService.dsAnaysisResultsScreen.new\r\n            }}\r\n          </span>\r\n          <span (click)=\"Parent.markAs(element, 'UNREAD', element)\"\r\n            title=\"{{ Parent.labelService.dsAnaysisResultsScreen.MarkAsNew }}\"\r\n            class=\"float-left viewed-status-border mr-2\" *ngIf=\"element.ViewedFlag === true\">{{\r\n            Parent.labelService.dsAnaysisResultsScreen.Viewed }}\r\n          </span>\r\n        </ng-container>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\" \" *ngIf=\"!Parent?.isConsultantUser\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{Parent.labelService.dsAnaysisResultsScreen.Select}}\r\n        <div class=\"d-flex align-items-center chk-list\" *ngIf=\"false\">\r\n          <mat-checkbox class=\"example-margin\" [checked]=\"Parent.IsAllSelected\" (change)=\"Parent.selectAll($event);\">\r\n          </mat-checkbox>\r\n          <span>{{Parent.labelService.dsPatientInfoScreen.All}}</span>\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <mat-checkbox class=\"example-margin patientcheck clickable\"\r\n          [disabled]=\"element.AnalysisStatusName !== 'Completed'\" [checked]=\"element.IsReadyForPrint\"\r\n          (change)=\"Parent.selectSingleCheckbox($event, element)\">\r\n        </mat-checkbox>\r\n        <!-- <mat-checkbox class=\"example-margin\" [disabled] = \"element.AnalysisStatusName != 'Completed'\"\r\n          [(ngModel)]=\"element.IsReadyForPrint\"\r\n          (change)=\"Parent.selectSingleCheckbox($event, element);countCheckbox($event, element)\"> </mat-checkbox> -->\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"DateReceivedStr\">\r\n      <th mat-header-cell *matHeaderCellDef>{{Parent.labelService.dsPatientInfoScreen.DateAndTime}}</th>\r\n      <ng-container *ngIf=\"Parent?.isConsultantUser\">\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\" [ngClass]=\"{\r\n                            completed: element.AnalysisStatusId === 1,\r\n                            cancelled: element.AnalysisStatusId === 2,\r\n                            pending: element.AnalysisStatusId === 3 }\">\r\n          <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.DateAndTime}}</span><span class=\"pdate\"\r\n            [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\"> {{\r\n            element.DateReceivedStr }}</span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"!Parent?.isConsultantUser\">\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n          <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.DateAndTime}}</span><span class=\"pdate\"\r\n            [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\"> {{\r\n            element.DateReceivedStr }}</span>\r\n        </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"DateReceivedStr\">\r\n          <th mat-header-cell *matHeaderCellDef>{{Parent.labelService.dsPatientInfoScreen.DateAndTime}}</th>\r\n          <td mat-cell *matCellDef=>\r\n            <span class=\"pdate\"> {{ element.DateReceived | localDate }}</span>\r\n          </td>\r\n        </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"physician_name\">\r\n      <th mat-header-cell *matHeaderCellDef>{{Parent.labelService.dsPatientInfoScreen.DVMName}}</th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n        <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.DVMName}}</span> <span\r\n          [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\">{{\r\n          element.PhysicianName }}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"CategoryName\">\r\n          <th mat-header-cell *matHeaderCellDef>{{Parent.labelService.dsPatientInfoScreen.Analyzer}}</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n            <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.Analyzer}}</span> {{ element.AnalyzerDisplayName }}\r\n          </td>\r\n        </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"AnalysisSourceName\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{Parent.labelService.dsPatientInfoScreen.AnalysisSource}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n        <!-- <span class=\"cardimg\">\r\n              <img *ngIf=\"element.AnalysisSourceId==1\" src=\"./assets/img/poc-icon@2x.png\" class=\"mr-2\"\r\n                height=\"16\" />\r\n              <img *ngIf=\"element.AnalysisSourceId==2\" src=\"./assets/img/lab-icon@2x.png\" class=\"mr-2\"\r\n                height=\"16\" />\r\n                <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.AnalysisSource}}</span> {{element.AnalyzerDisplayName}}\r\n            </span> -->\r\n        <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.AnalysisSource}}</span>\r\n        <span [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\">{{element.AnalyzerDisplayName}}</span>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"AnalysisTypeName\">\r\n      <th mat-header-cell *matHeaderCellDef>{{Parent.labelService.dsPatientInfoScreen.AnalysisType}}</th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n        <span class=\"textTtl d-none\">{{Parent.labelService.dsPatientInfoScreen.AnalysisType}}</span>\r\n\r\n        <div style=\"display: block; float: left;\" [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\">{{\r\n          element.AnalysisTypeName\r\n          }} &nbsp; </div>\r\n        <div style=\"display: block;\" title=\"{{ Parent.labelService.dsAnaysisResultsScreen[element.StatusName] }}\"\r\n          style=\"cursor: pointer; float: left !important;\"\r\n          *ngIf=\"element.SourceType === 'ReferenceLab' && Parent.commonService.ACPText(element)\"\r\n          class=\"float-left statusCode {{ Parent.commonService.ACPStatusCodeShow(element.StatusCode) }}\">{{\r\n          Parent.commonService.ACPStatusCodeShow(element.StatusCode) }}</div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"AccessionId\">\r\n      <th mat-header-cell *matHeaderCellDef>{{Parent.labelService?.dsPatientInfoScreen.AccessionID}}</th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"Parent.onRowClick(i, element)\">\r\n        <span class=\"textTtl d-none\">{{Parent?.labelService.dsPatientInfoScreen.AccessionID}}</span> <span\r\n          [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\">{{\r\n          element.AccessionNumber }}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"Parent?.displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: Parent?.displayedColumns\" [ngClass]=\"{\r\n                        completed: row.AnalysisStatusId === 1,\r\n                        cancelled: row.AnalysisStatusId === 2,\r\n                        pending: row.AnalysisStatusId === 3 }\"></tr>\r\n  </table>\r\n\r\n  <tbody class=\" norecord\" *ngIf=\"(Parent?.dataSource === null || Parent?.dataSource.data.length === 0)\">\r\n    <tr>\r\n      <div *ngIf=\"Parent?.sidefilterService?.filter?.IsApplyFilter==false\">\r\n        {{Parent?.labelService.dsPatientInfoScreen.Norecordsfound}}.</div>\r\n      <div *ngIf=\"Parent?.sidefilterService?.filter?.IsApplyFilter==true\">\r\n        {{Parent?.labelService.dsPatientInfoScreen.NorecordsfoundByFilter}}.</div>\r\n    </tr>\r\n  </tbody>\r\n  <!-- <mat-paginator [pageSize]='10' _intl.itemsPerPageLabel=\"\" [hidePageSize]=\"true\" showFirstLastButtons class=\"mat-paginator-sticky\"></mat-paginator> -->\r\n</div>","import { Component, Input } from \"@angular/core\";\r\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\r\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HomePageScreen } from \"src/app/models\";\r\nimport { LabelService } from \"src/app/services\";\r\n\r\n@Component({\r\n  selector: \"app-pdf-modal\",\r\n  template: `\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">{{label.Report}}</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <button class=\"pull-right dwnBtn\" (click)=\"downloadPdfFromBase64()\">\r\n      <span style=\"cursor: default;\">\r\n        <img src=\"../../../../assets/img/download.png\" alt=\"\" />\r\n        <a style=\"vertical-align: middle;\">{{label.Download}}</a>\r\n      </span>\r\n    </button>\r\n    <br>\r\n    <div class=\"modal-body\">\r\n      <pdf-viewer\r\n        *ngIf=\"pdfBase64\"\r\n        [src]=\"pdfBase64\"\r\n        [render-text]=\"true\"\r\n        [show-all]=\"true\"\r\n        [autoresize]=\"true\"\r\n        [show-borders]=\"false\"\r\n        style=\"width: 100% !important;max-width: 100% !important; height: 500px; margin-top: 10px;\"\r\n      ></pdf-viewer>\r\n    </div>\r\n  `,\r\n  styleUrls: [\"./pdf-modal.component.css\"],\r\n})\r\nexport class PdfModalComponent {\r\n  @Input() pdfBase64: string | null = null;\r\n  pdfSrc: SafeResourceUrl | null = null;\r\n  public label: HomePageScreen;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public activeModal: NgbActiveModal,\r\n    private labelService:LabelService,\r\n  ) {\r\n    this.label = this.labelService.dsHomePageScreen;\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.getHomePageScreenLabel();\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getHomePageScreenLabel();\r\n      });\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    // if (this.pdfBase64) {\r\n    //   this.pdfSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n    //     this.pdfBase64\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.close();\r\n  }\r\n\r\n  public downloadPdfFromBase64(fileName = \"document.pdf\") {\r\n    if (!this.pdfBase64) {\r\n      throw new Error(\"Missing base64 data for PDF download\");\r\n    }\r\n    const link = document.createElement(\"a\");\r\n    const href = this.pdfBase64;\r\n    const sanitizedFilename = fileName.replace(/[^\\w\\s\\.-]/g, \"\"); // Allow letters, numbers, spaces, ., and -\r\n    link.href = href;\r\n    link.download = sanitizedFilename;\r\n    link.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from \"@angular/material/legacy-dialog\";\r\nimport { CommonService, DataService, LabelService } from \"src/app/services\";\r\n\r\n@Component({\r\n  selector: \"app-consultation-details\",\r\n  templateUrl: \"./consultation-details.component.html\",\r\n  styleUrls: [\"./consultation-details.component.css\"],\r\n})\r\nexport class ConsultationDetailsComponent implements OnInit {\r\n  consultantName:string\r\n  constructor(\r\n    private modalRef: MatDialogRef<ConsultationDetailsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dataService: DataService,\r\n    private commonService: CommonService,\r\n    public labelService:LabelService\r\n  ) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    }\r\n  }\r\n  \r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLabelDetails();\r\n    this.consultantName = (this.data?.Consultant_Fname || this.data?.Consultant_Lname)? this.data?.Consultant_Fname+\" \"+this.data?.Consultant_Lname : \"NA\"\r\n    // this.getconsultationAppointmentReportView(\r\n    //   this.data.BookedAppointmentID\r\n    // ).subscribe({\r\n    //   next: (res: any) => {\r\n    //     console.log('');\r\n    //   },\r\n    //   error: (error: any) => {\r\n    //     console.log(error);\r\n    //   },\r\n    // });\r\n  }\r\n\r\n  getconsultationAppointmentReportView(appointment_id: string) {\r\n    const payload = {\r\n      BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"],\r\n      UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n      AppointmentId: appointment_id,\r\n    };\r\n\r\n    return this.commonService.ConsultationAppointmentReportView(payload);\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalRef.close();\r\n  }\r\n\r\n  formatTxt(str:string){\r\n    if(str)\r\n      return str.replace(/\\n/g,\"<br>\")\r\n  }\r\n}\r\n","<h4 mat-dialog-title class=\"title-containers\">\r\n  <mat-toolbar role=\"toolbar\" class=\"task-header\">\r\n    <span class=\"dialogttl\" data-testid=\"mp-title\">\r\n      <span *ngIf=\"(data.IsVideoCall || data.IsAudioCall); else elseBlock\">\r\n        {{ labelService.dsPatientInfoScreen.ConsultationAppWith | titlecase }}\r\n        {{data.Consultant_Fname || data.Consultant_Lname ? data.Consultant_Fname + \" \" + data.Consultant_Lname : \"NA\"}}\r\n      </span>\r\n      <ng-template #elseBlock>\r\n        <!-- EmailConsultation -->\r\n        {{ labelService.dsPatientInfoScreen.EmailConsultation }}\r\n      </ng-template>\r\n    </span>\r\n  </mat-toolbar>\r\n  <button type=\"button\" class=\"close body-close\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</h4>\r\n<div class=\"sched-top row py-2 mt-2 mx-3 pl-0\">\r\n  <div class=\"col-sm-4 col-md-4 innerPart\">\r\n    <p class=\"col-form-label_heading\">\r\n      {{ labelService.dsPatientInfoScreen.Specialty }}:\r\n    </p>\r\n    <p class=\"edit_grp_txt2\">{{ data.Speciality?data.Speciality:'NA' }}</p>\r\n  </div>\r\n  <div class=\"col-sm-4 col-md-4 innerPart\">\r\n    <p class=\"col-form-label_heading\">\r\n      {{ labelService.dsPatientInfoScreen.PreferredLanguage }}:\r\n    </p>\r\n    <p class=\"edit_grp_txt2\">{{ data.Langauge?data.Langauge:'NA' }}</p>\r\n  </div>\r\n  <div class=\"col-sm-4 col-md-4 innerPart\">\r\n    <p class=\"col-form-label_heading\">Status:</p>\r\n    <p class=\"edit_grp_txt2\" *ngIf=\"data.StatusID==1\">\r\n      <span [ngStyle]=\"{'color': data.StatusID==1 ? 'orange' : ''}\">\r\n        <!-- Pending -->\r\n        {{ labelService.dsPatientInfoScreen.Pending }}\r\n      </span>\r\n    </p>\r\n    <p class=\"edit_grp_txt2\" *ngIf=\"data.StatusID==2\">\r\n      <span [ngStyle]=\"{'color': data.StatusID==2 ? 'green' : ''}\">\r\n        <!-- Completed -->\r\n        {{ labelService.dsPatientInfoScreen.Completed }}\r\n      </span>\r\n    </p>\r\n    <p class=\"edit_grp_txt2\" *ngIf=\"data.StatusID==3\">\r\n      <span [ngStyle]=\"{'color': data.StatusID==3 ? 'red' : ''}\">\r\n        <!-- Canceled -->\r\n        {{ labelService.dsPatientInfoScreen.Canceled }}\r\n      </span>\r\n    </p>\r\n    <p class=\"edit_grp_txt2\" *ngIf=\"!data.StatusID\">\r\n      <!-- NA  -->\r\n      {{ labelService.dsPatientInfoScreen.NA }}\r\n    </p>\r\n  </div>\r\n</div>\r\n<div mat-dialog-content class=\"fixed-modal modal-part mx-3\">\r\n  <div class=\"container-fluid ng-star-inserted mat-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-lg-4 col-xl-4\">\r\n            <p class=\"col-form-label_heading ng-star-inserted\">\r\n              {{ !(data.IsVideoCall || data.IsAudioCall)? labelService.dsPatientInfoScreen.DateRequested :labelService.dsPatientInfoScreen.AppointmentTIme }}\r\n              <!-- Date Requested -->\r\n              <!-- {{ labelService.dsPatientInfoScreen.DateRequested }} -->\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">\r\n              {{ data.ConvertedDateTimeWithTimeZone |localDate : 'dt'}}\r\n            </p>\r\n          </div>\r\n          <div class=\"col-12 col-lg-4 col-xl-4 zoomTxt\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.Mode }}\r\n              <span  class=\"edit_grp_txt2 ng-star-inserted\"\r\n            *ngIf=\"data.IsVideoCall || data.IsAudioCall\">\r\n              &nbsp;&nbsp;{{ labelService.dsPatientInfoScreen.JoinZoom\r\n              }}<span class=\"ng-star-inserted\"\r\n                > ({{\r\n                  data.IsAudioCall\r\n                    ? labelService.dsPatientInfoScreen.Audio\r\n                    : labelService.dsPatientInfoScreen.Video\r\n                }})\r\n              </span>\r\n            </span>\r\n            </p>\r\n           \r\n            <!-- <p\r\n              class=\"edit_grp_txt2 ng-star-inserted\"\r\n              *ngIf=\"data.IsVideoCall || data.IsAudioCall\"\r\n            >\r\n              <img\r\n                src=\"../../../../assets/img/zcs/zoom.png\"\r\n                alt=\"\"\r\n                class=\"float-left\"\r\n              />\r\n              &nbsp;&nbsp;{{ labelService.dsPatientInfoScreen.JoinZoom\r\n              }}<span class=\"ng-star-inserted\" *ngIf=\"data.StatusID !== 2\"\r\n                >({{\r\n                  data.IsAudioCall\r\n                    ? labelService.dsPatientInfoScreen.Audio\r\n                    : labelService.dsPatientInfoScreen.Video\r\n                }})\r\n              </span>\r\n              <br />\r\n              <a\r\n                *ngIf=\"data.StatusID !== 2\"\r\n                target=\"_blank\"\r\n                class=\"zoom-a ng-star-inserted\"\r\n                href=\"{{ data.GuestUrl }}\"\r\n                >{{ labelService.dsPatientInfoScreen.Zoom }}</a\r\n              >\r\n            </p> -->\r\n            <p *ngIf=\"(data.IsVideoCall || data.IsAudioCall) && data.StatusID == 1\">\r\n              <a [target]=\"data.StatusID==1 ?'_blank' : ''\" class=\"zoompart\"\r\n                [href]=\"data.StatusID==1 ? 'https://zoom.us/j/91012021686?pwd=YK6DCINBQGbpWOV40goDlwnFdBFVo0.1':'javascript:void(0)'\">\r\n                <!-- // Join Zoom  -->\r\n                <!-- {{ labelService.dsPatientInfoScreen.JoinZoom }} -->\r\n                  {{labelService?.dsHomePageScreen.JoinMeeting}}\r\n                <span class=\"ml-2\"><img src=\"../../../../assets/img/vicon.svg\" alt=\"\" width=\"19px\" /></span>\r\n              </a>\r\n            </p>\r\n            <p class=\"edit_grp_txt2 ng-star-inserted\" *ngIf=\"!(data.IsVideoCall || data.IsAudioCall)\">\r\n              <img src=\"../../../../../assets/img/zcs/email_res.png\" alt=\"\" class=\"float-left\" />\r\n              <span class=\"edit_grp_txt3 ml-2\">\r\n                {{ labelService.dsPatientInfoScreen.EmailResp }}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div class=\"col-12 col-lg-4 col-xl-4 ng-star-inserted\">\r\n            <p class=\"col-form-label_heading\" *ngIf=\"data.IsVideoCall || data.IsAudioCall\">\r\n              {{ labelService.dsPatientInfoScreen.ZoomDetail }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\" *ngIf=\"data.IsVideoCall || data.IsAudioCall\">\r\n              {{ labelService.dsPatientInfoScreen.ID }}:\r\n              <span>{{ data.ZoomId }}</span><br />\r\n              {{ labelService.dsPatientInfoScreen.Passcode }}:\r\n              <span>{{ data.ZoomPasscode }}</span>\r\n            </p>\r\n\r\n            <p class=\"col-form-label_heading\" *ngIf=\"!(data.IsVideoCall || data.IsAudioCall)\">\r\n              {{ labelService.dsPatientInfoScreen.Consultant }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\" *ngIf=\"!(data.IsVideoCall || data.IsAudioCall)\">\r\n              <span>{{data.Consultant_Fname || data.Consultant_Lname ? data.Consultant_Fname + \" \" + data.Consultant_Lname : \"NA\"}}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <!---->\r\n        </div>\r\n        <!-----new data added start-->\r\n        <div class=\"doctor-detail d-flex justify-content-between mt-2\">\r\n          <div class=\"doct-inner\">\r\n            <div class=\"d-flex justify-content-start align-items-center\">\r\n              <p class=\"col-form-label_heading pt-0\">Doctor:</p>\r\n              <p class=\"edit_grp_txt2\">{{data.DoctorName}} </p>\r\n            </div>\r\n            <div class=\"d-flex justify-content-start align-items-center doc-border w-100\">\r\n              <!-- <p class=\"edit_grp_txt2\">{{data.Degree}}</p>\r\n              , -->\r\n              <p class=\"edit_grp_txt2\">{{data.DoctorEmail}},</p>\r\n              \r\n              <p class=\"edit_grp_txt2\">{{data.DoctorPhoneNo}}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"doct-inner\">\r\n            <div class=\"d-flex justify-content-start align-items-center\">\r\n              <p class=\"col-form-label_heading pt-0\">Clinic:</p>\r\n              <p class=\"edit_grp_txt2\"> {{data.ClinicName}}</p>\r\n            </div>\r\n            <div class=\"d-flex justify-content-start align-items-center doc-border w-100\">\r\n              <p class=\"edit_grp_txt2\">{{data.ClinicCountry}},</p>\r\n               <p class=\"edit_grp_txt2\">{{data.ClinicState }},</p>\r\n               <p class=\"edit_grp_txt2\">{{data.ClinicCity}},</p>\r\n               <p class=\"edit_grp_txt2\">{{data.ClinicZipCode}}</p>\r\n              <!-- , <p class=\"edit_grp_txt2\">T9N 0A1</p> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"doctor-detail my-3\">\r\n          <div class=\"doct-inner-part\">\r\n            <div class=\"d-flex justify-content-start align-items-center\">\r\n              <div class=\"d-flex justify-content-start align-items-center w-50\">\r\n                <p class=\"col-form-label_heading pt-0\">\r\n                  <!-- Patient: -->\r\n                  {{ labelService.dsPatientInfoScreen.Patient }}:\r\n                </p>\r\n                <p class=\"edit_grp_txt2\">{{data.PatientName}} - {{data.PatientId}}</p>\r\n              </div>\r\n              <div class=\"d-flex justify-content-start align-items-center w-50 pl-2\">\r\n                <p class=\"col-form-label_heading pt-0\">Owner:</p>\r\n                <p class=\"edit_grp_txt2\">{{data.OwnerName}}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-start align-items-center doc-border w-100\">\r\n              <p class=\"edit_grp_txt2\">{{ data.Species }},</p>\r\n              \r\n              <p class=\"edit_grp_txt2\">{{ data.BreedName }},</p>\r\n              \r\n              <p class=\"edit_grp_txt2\">{{ data.PatientSex }}, </p>\r\n              \r\n              <p class=\"edit_grp_txt2\">{{ data.PatientAge }},</p>\r\n              \r\n              <p class=\"edit_grp_txt2\">{{data.PatientWeight}} {{data.WeightUnit}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"prev d-flex justify-content-start mb-2\">\r\n          <p class=\"pr-2\">\r\n             // Previous consults:\r\n            {{ labelService.dsPatientInfoScreen.PreviousConsults }}:\r\n          </p>\r\n          <span class=\"edit_grp_txt2\"> {{\r\n            data.IsPreviousConsultation\r\n            ? labelService.dsPatientInfoScreen.Yes\r\n            : data.consultationCount > 1\r\n            ? labelService.dsPatientInfoScreen.Yes\r\n            : labelService.dsPatientInfoScreen.No\r\n            }}</span>\r\n        </div> -->\r\n        <!-- <div class=\"col-12 mt-2\">\r\n          <p class=\"col-form-label_heading\">\r\n            {{ labelService.dsPatientInfoScreen.PreviousConsultation }}\r\n          </p>\r\n          <p class=\"edit_grp_txt2\">\r\n            {{\r\n            data.IsPreviousConsultation\r\n            ? \"Yes\"\r\n            : data.consultationCount > 1\r\n            ? \"Yes\"\r\n            : \"No\"\r\n            }}\r\n          </p>\r\n        </div> -->\r\n        <!-----new data added end-->\r\n        <!-- <div class=\"row mt-2\">\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.PatientsName }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.PatientName }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.PatientID }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.PatientId }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.OwnerName }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.OwnerName }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.Breed }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.BreedName }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.Species }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.Species }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.ClinicName }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.ClinicName }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.DoctorName }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.DoctorName }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.DoctorEmail }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.DoctorEmail }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.ContactPhone }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.DoctorPhoneNo }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.PatientSex }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.PatientSex }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.PatientAge }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\">{{ data.PatientAge }}</p>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.PatientWeight }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\" *ngIf=\"data.PatientWeight\">\r\n              {{ data.PatientWeight }} {{ data.WeightUnit }}\r\n            </p>\r\n          </div>\r\n        </div> -->\r\n\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-12 mb-3\">\r\n            <p class=\"col-form-label_heading\">\r\n              <!-- Case Summary: -->\r\n              {{labelService.dsPatientInfoScreen.CaseSummary}}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\"  [innerHTML]=\"formatTxt(data.AdditionalComments)\">\r\n              \r\n            </p>\r\n          </div>\r\n          <div class=\"col-12 mb-2\" *ngIf=\"data.TopicOfDisscussion\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.ClinicalQuestion?.replace(\"Clinical Question (s)\",\"Clinical Question(s)\") }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\" [innerHTML]=\"formatTxt(data.TopicOfDisscussion)\"></p>\r\n          </div>\r\n          <!-- <div class=\"col-12 mt-2\" *ngIf=\"data.AdditionalComments\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.AdditionalComment }}\r\n            </p>\r\n            <p class=\"edit_grp_txt2\" [innerHTML]=\"data.AdditionalComments\"></p>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"row mt-2\" *ngIf=\"data.ApptDocAttachment.length\">\r\n          <div class=\"col-12\">\r\n            <p class=\"col-form-label_heading\">\r\n              {{ labelService.dsPatientInfoScreen.AttachedDoc }}\r\n            </p>\r\n            <p *ngFor=\"let attachment of data.ApptDocAttachment\" class=\"mt-2 file_circle\">\r\n              <a download=\"{{ attachment.AttachmentFileName }}\" target=\"_blank\" href=\"{{ attachment.ImageBase64 }}\"><img\r\n                  src=\"../../../../assets/img/zcs/pdf.png\" alt=\"\" />\r\n                {{ attachment.AttachmentFileName }}</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n  <button type=\"button\" class=\"btn save-change SaveBtn\" (click)=\"closeModal()\">\r\n    {{ labelService.dsPatientInfoScreen.Close }}\r\n  </button>\r\n</mat-dialog-actions>","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatLegacyDialog as MatDialog, MatLegacyDialogRef as MatDialogRef } from \"@angular/material/legacy-dialog\";\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from \"@angular/material/legacy-table\";\r\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonService, DataService, LabelService, PatientService } from \"src/app/services\";\r\nimport { PdfModalComponent } from \"src/app/shared/pdf-modal/pdf-modal.component\";\r\nimport { ConsultationDetailsComponent } from \"./consultation-details/consultation-details.component\";\r\nimport { ConsultationReportComponent } from \"./consultation-report/consultation-report.component\";\r\n@Component({\r\n  selector: \"app-consultation-list\",\r\n  templateUrl: \"./consultation-list.component.html\",\r\n  styleUrls: [\"./consultation-list.component.css\"],\r\n})\r\nexport class ConsultationListComponent implements OnChanges, OnInit {\r\n  @Input() Parent: any;\r\n  @Input() consultations = [];\r\n  dataSource = new MatTableDataSource<any>();\r\n  displayedColumns = [\r\n    \" \",\r\n    \"ConvertedDateTimeWithTimeZone\",\r\n    \"DoctorName\",\r\n    \"Mode\",\r\n    \"ReportAttachment\",\r\n    \"Report\",\r\n    \"Action\",\r\n  ];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private commonService: CommonService,\r\n    private dataService: DataService,\r\n    private modalService: NgbModal,\r\n    public labelService: LabelService,\r\n    private patientService: PatientService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getLabelDetails();\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    });\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes && changes.consultations) {\r\n      // .split(/(?<=^[^ ]+) /)\r\n      this.consultations.map(\r\n        (x) => (x.DataTimeArr = x.ConvertedDateTimeWithTimeZone?.split(\"(\")[0].trim())\r\n      );\r\n      console.log(this.consultations)\r\n      this.dataSource = new MatTableDataSource<any>(this.consultations);\r\n    }\r\n  }\r\n\r\n  viewDetails(elem) {\r\n    elem.consultationCount = this.consultations.length\r\n    this.dialog.open(ConsultationDetailsComponent, {\r\n      width: \"50%\",\r\n      data: elem,\r\n      disableClose: true\r\n    });\r\n  }\r\n  openReport(elem) {\r\n    // this.dialog.open(ConsultationReportComponent, {\r\n    //   width: '45%',\r\n    //   data: elem\r\n    // })\r\n\r\n    this.getconsultationAppointmentReportView(\r\n      elem.BookedAppointmentID\r\n    ).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        // this.base64ToPdf(res?.ResponseData?.ImageBase64, 'output.pdf');\r\n        this.openPdfModal(res?.ResponseData?.ImageBase64);\r\n      },\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  openPdfModal(base64String: SafeResourceUrl) {\r\n    const modalRef = this.modalService.open(PdfModalComponent, {\r\n      size: \"lg\",\r\n      windowClass: \"my-class\",\r\n    });\r\n    modalRef.componentInstance.pdfBase64 = base64String;\r\n  }\r\n\r\n  getconsultationAppointmentReportView(appointment_id: string) {\r\n    const payload = {\r\n      BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"],\r\n      UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n      AppointmentId: appointment_id,\r\n      ZDXPatientId: this.patientService.patientDetails?.ZDXPatientId\r\n    };\r\n\r\n    return this.commonService.ConsultationAppointmentReportView(payload);\r\n  }\r\n\r\n  formatTxt(str:string){\r\n    if(str)\r\n      return str.replace(/\\n/g,\"<br>\")\r\n  }\r\n}\r\n","<div class=\"w-100\">\r\n  <div class=\"example-container pt-0 w-100\" id=\"patientinfoTbl-scrollabe\">\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"patient-table w-100\" summary=\"\" multiTemplateDataRows>\r\n\r\n      <ng-container matColumnDef=\" \">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"{\r\n                pending:\r\n                element.StatusID === 1,\r\n                completed:\r\n                element.StatusID === 2,\r\n                cancelled:\r\n                element.StatusID === 3\r\n              }\">\r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"ConvertedDateTimeWithTimeZone\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.Date }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" >\r\n          <p class=\"p-0 m-0\"> {{ element.DataTimeArr |localDate}} </p>\r\n          <!-- <p class=\"p-0 m-0\"> {{ element.DataTimeArr[1] }} </p> -->\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DoctorName\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.consultantSpecialty }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" >\r\n          <p class=\"p-0 m-0\">{{ element.Consultant_Fname }} {{ element.Consultant_Lname }}</p>\r\n          <p class=\"p-0 m-0\" *ngIf=\"element.Speciality\">({{ element.Speciality }})</p>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"Mode\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.Mode }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" >\r\n          <span>\r\n            <img src=\"../../../../assets/img/zcs/video.png\" alt=\"\" *ngIf=\"element.IsVideoCall\">\r\n            <img src=\"../../../../assets/img/zcs/mic.png\" alt=\"\" *ngIf=\"element.IsAudioCall\">\r\n            <img src=\"../../../../assets/img/zcs/mail.png\" alt=\"\" *ngIf=\"!element.IsAudioCall && !element.IsVideoCall\">\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"ReportAttachment\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.ConsultCommAndReport }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\"  class=\"p-2\">\r\n          <p *ngFor=\"let attachment of element.ApptDocAttachment\">\r\n            <a  download=\"{{ attachment.AttachmentFileName }}\" target=\"_blank\"\r\n              href=\"{{ attachment.ImageBase64 }}\"><img\r\n                src=\"../../../../assets/img/zcs/pdf.png\" alt=\"\"> {{ attachment.AttachmentFileName }}</a>\r\n          </p>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"Report\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.Report }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" >\r\n          <span *ngIf=\"element.StatusID === 2 && element.ApptDocAttachment.length\" class=\"pointer\"\r\n            (click)=\"openReport(element)\">\r\n            <i class=\"fa fa-file-o fileIcon\"></i></span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"Action\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ labelService.dsPatientInfoScreen.Action }}</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index;\" >\r\n          <img src=\"../../../../assets/img/zcs/eye_icon.png\" alt=\"\" class=\"pointer\" (click)=\"viewDetails(element)\">\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"expandedDetail\" class=\"expanded-detail\">\r\n        <td mat-cell td *matCellDef=\"let element; let i = dataIndex;\" [attr.colspan]=\"displayedColumns.length\" class=\"expanded-detail\">\r\n          <b>{{ labelService.dsPatientInfoScreen.ClinicalQuestion }}</b>\r\n          <p [innerHTML]=\"formatTxt(element.TopicOfDisscussion)\"></p>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" style=\"cursor: pointer;\"></tr>\r\n\r\n      <!-- <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = dataIndex;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"true\"></tr> -->\r\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\" [hidden]=\"!row.TopicOfDisscussion\"></tr>\r\n    </table>\r\n\r\n    <tbody class=\" norecord\" *ngIf=\"(dataSource === null || dataSource.data.length === 0)\">\r\n      <tr>\r\n        <td>{{Parent.labelService.dsPatientInfoScreen.Norecordsfound}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </div>\r\n\r\n</div>","\r\nimport { MergePatientComponent } from './../merge-patient/merge-patient.component';\r\nimport { RefLabService } from './../../../services/ref-lab.service';\r\nimport { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService, HeaderService, LabelService, PatientService, CommonService, SidefilterService, EncrDecrService } from 'src/app/services';\r\nimport { ConfirmationDialogService } from 'src/app/components/confirmation-dialog/confirmation-dialog.service';\r\nimport { PatientInfo, DownloadMultipleAnalysisResult, AnalysisDetails } from 'src/app/models/patient';\r\nimport { SideFilter } from 'src/app/models/side-filter';\r\nimport { EnmNotificationSetting, EnmAnalysisStatus } from 'src/app/shared/constants/enum';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RefLabGuard } from 'src/app/guards';\r\nimport { SpinnerVisibilityService } from 'ng-http-loader';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\n@Component({\r\n  selector: 'app-patient-info',\r\n  templateUrl: './patient-info.component.html',\r\n  styleUrls: ['./patient-info.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PatientInfoComponent implements OnInit, OnDestroy {\r\n\r\n  downloadMultipleAnalysisResult: DownloadMultipleAnalysisResult;\r\n  analysisDetails: AnalysisDetails;\r\n  filterData = [];\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 100;\r\n  counter = 0;\r\n  end: number = this.limit + this.start;\r\n  public patientInfo: any;\r\n  filter: SideFilter;\r\n  displayedColumns = ['ViewedFlag', 'DateReceivedStr', 'physician_name', 'AnalysisSourceName', 'AnalysisTypeName', 'AccessionId', ' '];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  IsAllSelected = false;\r\n  showPrintIcon = false;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public canceledAnalysisStatusId = EnmAnalysisStatus.Canceled;\r\n  selectedBusinessId: number;\r\n  businessGuid: any;\r\n  public isBackOfficeUser: boolean;\r\n  public isConsultantUser: boolean;\r\n  public pataientId: any;\r\n  public patient: any = {};\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  public helpObj: any;\r\n  consultSec = false;\r\n  consultations = [];\r\n\r\n  public FromDateLabel: Date;\r\n  public ToDateLabel: Date;\r\n\r\n  constructor(public commonService: CommonService,\r\n    public patientService: PatientService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    public labelService: LabelService,\r\n    public headerService: HeaderService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    private EncrDecr: EncrDecrService,\r\n    public dialog: MatDialog,\r\n    public refLabService: RefLabService,\r\n    public refLabGuard: RefLabGuard,\r\n    private spinner: SpinnerVisibilityService) {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.businessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.pataientId = this.route.snapshot.paramMap.get('pataientId')\r\n    if (this.isConsultantUser) {\r\n      this.displayedColumns = ['ViewedFlag', 'DateReceivedStr', 'physician_name', 'AnalysisSourceName', 'AnalysisTypeName', 'AccessionId'];\r\n    }\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    }\r\n    this.patientInfo = new PatientInfo();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.PatientId = this.pataientId ? this.pataientId : this.patientService.patientDetails?.PatientId;\r\n    this.sidefilterService.filter.LanguageId = this.labelService.selectedLanguage;\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n\r\n    this.FromDateLabel = new Date(this.commonService.twoYearBeforeFromToday);\r\n    this.ToDateLabel = this.commonService.today;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.dsPatientInfoScreen.PatientInfo}`);\r\n    if (!this.dataService.appData.authDetails['IsLinkedRefLabClinic'])\r\n      this.sidefilterService.filter['AnalysisSourceId'] = 1;\r\n    this.refLabGuard.canActivate(null, null, false);\r\n    const countryId = (this.dataService.appData.authDetails['BackOfficeFlag'] && this.bckBusinessInfo && this.bckBusinessInfo['BCountryId']) ? this.bckBusinessInfo['BCountryId'] : localStorage.getItem('userCountryId');\r\n    this.refLabService.insideUSCAuser = [31, 40].indexOf(parseInt(countryId)) === -1 ? false : true;\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      (params.pi && params.zpi) ? this.getPatientInfo(params.pi, params.zpi) : this.getPatientInfo();\r\n    })\r\n\r\n    this.closeFilterRegister();\r\n    this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == 'Patient-Information');\r\n    let timezoneId = this.dataService.appData.authDetails['TimeZoneId']\r\n    // if (this.dataService.appData.userDropDownList != undefined && this.dataService.appData.userDropDownList != null) {\r\n    //   const timezoneObj = this.dataService.appData.userDropDownList.TimeZonesList.find(x => x.WebTimeZone != null && x.WebTimeZone.toLowerCase().indexOf(Intl.DateTimeFormat().resolvedOptions().timeZone.toLowerCase()) >= 0);\r\n    //   if (timezoneObj != undefined) {\r\n    //     timezoneId = timezoneObj.Id;\r\n    //   }\r\n    // }\r\n    this.commonService.ConsultationAppointmentDetailView({\r\n      BusinessGuid: this.businessGuid,\r\n      UserGuid: this.dataService.appData.authDetails['UserGuid'],\r\n      PatientId: this.pataientId || this.patientService.patientDetails?.PatientId,\r\n      TimezoneId: timezoneId,\r\n      ZDXPatientId: this.patientService.patientDetails?.ZDXPatientId\r\n    }).subscribe(resp => {\r\n      this.consultations = resp.ResponseData?.ReportView || [];\r\n      // if (this.consultations) {\r\n      //   this.consultations.map(ele => {\r\n      //     for (let key in ele) {\r\n      //       if (ele[key] === null || ele[key] === \"\") {\r\n      //         ele[key] = 'NA';\r\n      //       }\r\n      //     }\r\n      //     return ele;\r\n      //   })\r\n      // }\r\n    })\r\n  }\r\n\r\n  getPatientOwnerInfo() {\r\n    const params = {\r\n      BusinessGuid: localStorage.businessGuid,\r\n      Filter: this.pataientId ? this.pataientId : this.patientService.patientDetails.PatientId\r\n    }\r\n    this.refLabService.PatientOwnerDDLList(params).subscribe(data => {\r\n      this.patient = data.ResponseData.PatientOwner.find(x => x.PatientId == this.patientService.patientDetails.PatientId);\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle('ZoetisDx');\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindPatientInfoLabel();\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    });\r\n  }\r\n\r\n  public scrolltoTop(topVal) {\r\n    const scrollabe = document.getElementById('patientinfoTbl-scrollabe');\r\n    scrollabe.scrollTop = topVal;\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight;\r\n    const tableScrollHeight = e.target.scrollHeight;\r\n    const scrollLocation = e.target.scrollTop;\r\n\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      this.isLoadMore = true;\r\n      this.sidefilterService.filter.PageNo++;\r\n      this.sidefilterService.filter.PageSize = 60;\r\n      this.getPatientInfo();\r\n    }\r\n  }\r\n\r\n  navToOrderPage() {\r\n    if (!this.refLabGuard.IsLinkedRefLabClinic) {\r\n      const msg = this.labelService.dsSideMenuScreen.ConsultationRestrictionPopupMsg;\r\n      this.confirmationDialogService.confirm(\"Alert\", msg, 'Ok', \"Cancel\", \"sm\", true, false);\r\n      return false;\r\n    }\r\n    this.router.navigate(['/refLab/createOrder'], { queryParams: { id: this.patientInfo.PatientId } });\r\n  }\r\n\r\n  public getPatientInfo(pi?, zpi?) {\r\n    // debugger\r\n    // if (this.dataService.pageState?.PatientInfo?.requestParams?.['FromDate']) {\r\n    //   this.sidefilterService.FromDate = this.dataService.pageState.PatientInfo.requestParams['FromDate'];\r\n    // }\r\n    // if (this.dataService.pageState?.PatientInfo?.requestParams?.['ToDate']) {\r\n    //   this.sidefilterService.ToDate = this.dataService.pageState.PatientInfo.requestParams['ToDate'];\r\n    // }\r\n    this.FromDateLabel = this.sidefilterService.FromDate;\r\n    this.ToDateLabel = this.sidefilterService.ToDate;\r\n\r\n    this.sidefilterService.filter['IsPatientInfo'] = true;\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    this.sidefilterService.filter.IsExactFilter = true;\r\n    this.sidefilterService.filter.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n    this.sidefilterService.filter.PatientId = pi || this.patientService.patientDetails.PatientId;\r\n    this.sidefilterService.filter.ZDXPatientInfoId = zpi || this.patientService.patientDetails.ZDXPatientId;\r\n    if (this.sidefilterService.filter.PageNo == 1) {\r\n      this.counter = 0;\r\n      this.originData = [];\r\n    }\r\n\r\n    this.dataService.pageState.PatientInfo.requestParams = this.sidefilterService.filter;\r\n    this.dataService.appState.updatedFilterRequest = this.sidefilterService.filter;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n\r\n    const params = Object.assign({}, this.sidefilterService.filter);\r\n\r\n    if (params.FromDate) {\r\n      params.FromDate = params.FromDate != null ? this.commonService.getMomentFromDateTime(params.FromDate) : null;\r\n    }\r\n    if (params.ToDate) {\r\n      params.ToDate = params.ToDate != null ? this.commonService.getMomentToDateTime(params.ToDate) : null;\r\n    }\r\n\r\n    this.patientService.getPatientInfo(params).subscribe({\r\n      next: (data) => {\r\n        if (this.sidefilterService.filter.PageNo == 1) {\r\n          if (data.ResponseData.DashboardPatientList != null && data.ResponseData.DashboardPatientList.length > 0) {\r\n            this.originData = data.ResponseData.DashboardPatientList[0].Details;\r\n            this.patientInfo = data.ResponseData.DashboardPatientList[0];\r\n          } else {\r\n            this.originData = [];\r\n            this.dataSource = new MatTableDataSource<any>(this.originData);\r\n          }\r\n        } else {\r\n          if (data.ResponseData.DashboardPatientList != null && data.ResponseData.DashboardPatientList.length > 0) {\r\n            this.originData = this.originData.concat(data.ResponseData.DashboardPatientList[0].Details);\r\n          }\r\n        }\r\n\r\n        if (data.ResponseData.DashboardPatientList && data.ResponseData.DashboardPatientList.length > 0) {\r\n          this.patientInfo = data.ResponseData.DashboardPatientList[0];\r\n          this.patient = data.ResponseData.DashboardPatientList[0];\r\n\r\n          this.originData = this.originData.map((item, index) => {\r\n            if (item.PhysicianName && item.PhysicianName.trim() == \"None\") {\r\n              item.PhysicianName = this.labelService.dsAnaysisResultsScreen.none;\r\n            }\r\n            if (item.DAPAnalyzerType == 'vetscan-ltf') {\r\n              item.AnalyzerDisplayName = item.AnalyzerDisplayName + '+';\r\n            }\r\n            return item;\r\n          })\r\n\r\n          if (this.originData.length > 0 && this.isLoadMore) {\r\n            this.isLoadMore = false;\r\n          } else {\r\n            this.scrolltoTop(null);\r\n          }\r\n\r\n          this.createAlysisTypeList(this.originData);\r\n\r\n          this.dataService.pageState.PatientInfo.resultsList = this.originData;\r\n          this.dataService.page.next(this.dataService.pageState);\r\n\r\n          this.dataSource = new MatTableDataSource<any>(this.originData);\r\n          this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n          this.dataSource.sort = this.sort;\r\n          this.bindDVMDDL();\r\n        }\r\n      }, error: () => {\r\n        this.originData = [];\r\n        this.dataSource.data = [];\r\n        this.sidefilterService.filter.DVMName = \"\";\r\n        this.sidefilterService.dsDVM = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public createAlysisTypeList(tblData) {\r\n    let tempArry = [];\r\n    tblData.forEach(ele => {\r\n      if (!tempArry.find(item => ele?.AnalysisTypeName == item.analysisTypeName)) {\r\n        const obj = {\r\n          sourceType: ele?.SourceType,\r\n          analyzerDisplayName: ele?.AnalyzerDisplayName,\r\n          analysisTypeName: ele?.AnalysisTypeName,\r\n        }\r\n        tempArry.push(obj);\r\n      }\r\n    });\r\n    // if (this.dataService.appState.analysisTypeList <= tempArry) {\r\n    this.dataService.appState.analysisTypeList = tempArry;\r\n    // }\r\n    this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  public bindDVMDDL() {\r\n\r\n    this.sidefilterService.dsDVM = [];\r\n    if (this.originData != null) {\r\n      const arrDVM = [];\r\n      let noDVMText = \"\";\r\n      this.originData.forEach(subEle => {\r\n        if (subEle.PhysicianName && !arrDVM.includes(subEle.PhysicianName)) {\r\n          if (subEle.PhysicianName == 'None') {\r\n            noDVMText = subEle.PhysicianName;\r\n          } else {\r\n            arrDVM.push(subEle.PhysicianName.trim());\r\n            this.sidefilterService.dsDVM.push(subEle.PhysicianName.trim());\r\n          }\r\n        }\r\n      })\r\n        ;\r\n      this.sidefilterService.dsDVM = this.commonService.arraySortByAscendingOrders(arrDVM);\r\n      if (noDVMText) {\r\n        this.sidefilterService.dsDVM.splice(0, 0, noDVMText);\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectAll(e) {\r\n    this.IsAllSelected = e.checked;\r\n    this.showPrintIcon = e.checked;\r\n    this.dataSource.data.forEach(element => {\r\n      if (element.AnalysisStatusName == \"Completed\")\r\n        element.IsReadyForPrint = e.checked;\r\n    });\r\n  }\r\n\r\n  public onDataSort(e) {\r\n    this.dataService.pageState.PatientInfo.sortState = e;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.scrolltoTop(null);\r\n  }\r\n\r\n  public onRowClick(rowIndex, ele) {\r\n    if (ele.AnalysisStatusId == this.canceledAnalysisStatusId) {\r\n      this.showMsg(ele.CancelComment)\r\n    } else if (ele.AnalysisStatusId == EnmAnalysisStatus.Pending) {\r\n      this.showMsg(this.labelService.dsPatientInfoScreen.pendingAlertMessage, true)\r\n    } else {\r\n\r\n      this.dataService.appState.selectedResult.element = this.patientService.patientDetails;\r\n      this.dataService.appState.selectedResult.subElement = ele;\r\n      this.dataService.state.next(this.dataService.appState);\r\n\r\n      this.dataService.pageState.PatientInfo.selectedRow = rowIndex;\r\n      this.dataService.pageState.PatientInfo.requestParams = this.sidefilterService.filter;\r\n      this.dataService.pageState.PatientInfo.resultsList = this.originData;\r\n      this.dataService.appState.selectedResult.element.Details = this.originData; // use for maintain patient history list on result details page\r\n      this.dataService.page.next(this.dataService.pageState);\r\n      this.markAs(ele, 'READ');\r\n      this.patientService.showPataientTestResult(this.patientService.patientDetails, ele, null, this.sidefilterService.filter, null, null)\r\n    }\r\n  }\r\n\r\n  public selectSingleCheckbox(e, selecteItem) {\r\n    selecteItem.IsReadyForPrint = e.checked;\r\n    if (e.checked) {\r\n      this.showPrintIcon = true;\r\n      const allSelected = this.dataSource.data.find(x => !(x.IsReadyForPrint) && x.AnalysisStatusName == \"Completed\");\r\n      if (allSelected == undefined)\r\n        this.IsAllSelected = true;\r\n      else\r\n        this.IsAllSelected = false;\r\n    }\r\n    else {\r\n      this.IsAllSelected = false;\r\n      const checkboxSelected = this.dataSource.data.find(x => x.IsReadyForPrint && x.AnalysisStatusName == \"Completed\");\r\n      if (checkboxSelected == undefined)\r\n        this.showPrintIcon = false;\r\n    }\r\n    this.countCheckbox(e, selecteItem)\r\n  }\r\n\r\n  public countCheckbox(event, selectedItem) {\r\n    if (event.checked === true) {\r\n      this.counter++\r\n      if (this.counter > 5) {\r\n        this.confirmationDialogService.confirm(\"\", this.labelService.dsPatientInfoScreen.CheckBoxExceed, this.labelService.dsPatientInfoScreen.Ok, \"\", \"sm\", true, false)\r\n          .then((confirmed) => {\r\n            if (confirmed) {\r\n              this.counter--;\r\n              selectedItem.IsReadyForPrint = false;\r\n            }\r\n          })\r\n      }\r\n    }\r\n    if (event.checked === false) {\r\n      this.counter--;\r\n    }\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.FromDate = null;\r\n    this.sidefilterService.filter.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisStatusId = 0;\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisSourceId = this.dataService.appData.authDetails['IsLinkedRefLabClinic'] ? 0 : 1;\r\n  }\r\n\r\n  public downloadAnalysisResults() {\r\n    this.downloadMultipleAnalysisResult = new DownloadMultipleAnalysisResult();\r\n    this.downloadMultipleAnalysisResult.PatientId = this.patientService.patientDetails.PatientId;\r\n    this.downloadMultipleAnalysisResult.LanguageId = this.labelService.selectedLanguage;\r\n    this.downloadMultipleAnalysisResult.BusinessGuid = this.businessGuid;\r\n    this.downloadMultipleAnalysisResult.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.downloadMultipleAnalysisResult.Pageno = this.sidefilterService.filter.PageNo;\r\n    this.downloadMultipleAnalysisResult.Pagesize = 60;\r\n    this.downloadMultipleAnalysisResult.IsBackOfficeUser = this.isBackOfficeUser;\r\n\r\n    this.downloadMultipleAnalysisResult.MultipleTestRequest = [];\r\n    this.dataSource.data.forEach(ele => {\r\n      if (ele.IsReadyForPrint && ele.AnalysisStatusName == \"Completed\") {\r\n        this.analysisDetails = new AnalysisDetails();\r\n        this.analysisDetails.AnalysisTypeId = ele.AnalysisTypeId;\r\n        this.analysisDetails.PresentDate = ele.DateReceivedStr;\r\n        this.analysisDetails.TemplateId = ele.TemplateId;\r\n        this.analysisDetails.AccessionId = ele.AccessionNumber;\r\n        this.analysisDetails.PanelId = ele.PanelId;\r\n        this.analysisDetails.SourceType = ele.SourceType;\r\n        this.analysisDetails['PhysicianName'] = ele.PhysicianName;\r\n        this.downloadMultipleAnalysisResult.MultipleTestRequest.push(this.analysisDetails);\r\n      }\r\n    });\r\n    this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsPatientInfoScreen.DocumentCreatingMessage, this.labelService.dsPatientInfoScreen.Dismiss, \"\", \"sm\", true, false);\r\n    this.patientService.downloadMultipleAnalysisResult(this.downloadMultipleAnalysisResult).subscribe({\r\n      next: (res) => {\r\n        const fileName = this.patientService.patientDetails.PatientName;\r\n        this.savePdfFile(res, fileName);\r\n      }, error: () => {\r\n        this.confirmationDialogService.dismiss();\r\n        this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsPatientInfoScreen.ErrorOccur, '', this.labelService.dsPatientInfoScreen.Ok, \"sm\", false, true);\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 100)\r\n\r\n  }\r\n\r\n  savePdfFile(res, fileName) {\r\n\r\n    this.commonService.pdfDownloading.next({\r\n      data: res,\r\n      fileName: fileName\r\n    });\r\n    return false;\r\n  }\r\n\r\n  onToggleFollowPatient(e) {\r\n    if (this.headerService.notificationSettingId == EnmNotificationSetting.FollowPatients) {\r\n      this.onOffFollowPatient(e.checked);\r\n    } else {\r\n      const msg = this.labelService.dsPatientInfoScreen.ConfirmMessage;\r\n      this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsPatientInfoScreen.Updatepreferences, this.labelService.dsPatientInfoScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.dataService.appState.admin.profilePageSelectedAccordion = 1;\r\n            this.dataService.state.next(this.dataService.appState);\r\n            this.router.navigateByUrl('/user/account');\r\n          } else {\r\n            this.patientService.patientDetails.IsFollowedPatient = !this.patientService.patientDetails.IsFollowedPatient;\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  public onOffFollowPatient(toggleValue) {\r\n    const params = {\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.businessGuid,\r\n      PatientId: this.patientService.patientDetails.PatientId,\r\n      FuseSerialNo: this.patientService.patientDetails.fuse_serial_number,\r\n      IsActive: toggleValue\r\n    }\r\n    this.patientService.onOffFollowPatient(params).subscribe({\r\n      next: () => {\r\n        this.patientService.patientDetails.IsFollowedPatient = toggleValue;\r\n        localStorage.setItem('patientDetails', JSON.stringify(this.patientService.patientDetails));\r\n      }, error: (err) => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      }\r\n    });\r\n  }\r\n\r\n  public showMsg(cancelComment, force = false) {\r\n    /*\r\n    cancelComment may be:-\r\n    1) user.cancelled : The user canceled the process.\r\n    2) 11 : Test cancelled by user\r\n    3) X : Order cannot be done, order cancelled\r\n    */\r\n    if (!force) {\r\n      if (cancelComment && /user.cancelled/.test(cancelComment)) {\r\n        cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessage;\r\n      } else if (cancelComment && /11 :/.test(cancelComment)) {\r\n        cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessage11;\r\n      } else if (cancelComment && /X :/.test(cancelComment)) {\r\n        cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessageX;\r\n      } else {\r\n        cancelComment = this.labelService.dsPatientInfoScreen.CanceledTest;\r\n        // cancelComment = cancelComment ? cancelComment : this.labelService.dsPatientInfoScreen.CanceledTest;\r\n      }\r\n    }\r\n    this.confirmationDialogService.confirm(\"\", cancelComment, this.labelService.dsPatientInfoScreen.Ok, '', \"sm\", true, false)\r\n    // .then((confirmed) => {\r\n    // }).catch(() => console.log('User dismissed the dialog'));\r\n  }\r\n\r\n  public goToConsultation(e) {\r\n    // // if (this.isBackOfficeUser) {\r\n    console.log(this.patientInfo)\r\n    e.stopPropagation();\r\n    this.dataService.appData.prevUrl = \"dashboard\";\r\n    this.dataService.data.next(this.dataService.appData);\r\n    const authDetails = this.dataService.appData.authDetails;\r\n    const emailId = this.bckBusinessInfo ? this.bckBusinessInfo['EmailId'] : \"\";\r\n    const doctorName = this.patientInfo.Details.length > 0 && this.patientInfo.Details[0].PhysicianName ? this.patientInfo.Details[0].PhysicianName : '';\r\n    let urlStr = \"email=\" + authDetails['Email']\r\n      + \"&bkoClinicEmail=\" + emailId\r\n      + \"&token=\" + JSON.parse(localStorage.authDetails).access_token\r\n      + \"&refresh_token=\" + JSON.parse(localStorage.authDetails).refresh_token\r\n      + \"&deviceId=\" + (localStorage.UIGuid)\r\n      + \"&BusinessGuid=\" + JSON.parse(localStorage.authDetails).BusinessGuid\r\n      + \"&clinicname=\" + authDetails['BusinessName']\r\n      + \"&clinicphone=\" + authDetails['BusinessPhoneNo']\r\n      + \"&doctorname=\" + doctorName\r\n      + \"&patientId=\" + this.patientInfo.PatientId\r\n      + \"&patientName=\" + this.patientInfo.PatientName\r\n      + \"&species=\" + this.patientInfo.SpeciesName\r\n      + \"&breed=\" + this.patientInfo.BreedName\r\n      + \"&ownerName=\" + this.patientInfo.OwnerName\r\n      + \"&accessionId=\" + ''\r\n      + \"&gender=\" + this.patientInfo.Gender\r\n      + \"&age=\" + this.patientInfo.Dob\r\n      + \"&ZDXPatientId=\" +  this.patientInfo.ZDXPatientId\r\n      + \"&OwnerFirstName=\" +  this.patientInfo.OwnerFirstName\r\n      + \"&OwnerLastName=\" +  this.patientInfo.OwnerLastName\r\n      + \"&FirstName=\" +  this.patientInfo.FirstName\r\n      + \"&LastName=\" +  this.patientInfo.LastName\r\n      + \"&BirthDate=\"+ this.patientInfo.BirthDate\r\n      + \"&timeZoneId=\" + this.commonService.tzSelectMethod().timeZoneId\r\n      + \"&timeZoneName=\" + this.commonService.tzSelectMethod().timeZoneName\r\n      + \"&Isbackoffice=\" + JSON.parse(localStorage.authDetails).BackOfficeFlag\r\n      + '&backUrl=' + location.href\r\n      + \"&isNewInternal=\" + this.commonService.isnewUrlRedirection()\r\n      + \"&TimeFormatId=\" + this.dataService.appData.authDetails['TimeFormatId']\r\n      + \"&TimeZoneId=\" + this.dataService.appData.authDetails['TimeZoneId']\r\n      + \"&DateFormatId=\" + this.dataService.appData.authDetails['DateFormatId']\r\n      + \"&ZDxUrl=\" + this.commonService.getZDxUrl();\r\n    urlStr = this.EncrDecr.encrypt(urlStr);\r\n    if (this.headerService.isNRP) {\r\n      this.commonService.getRedirectionKey({ \"ValueString\": urlStr }).subscribe(res => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + res.ResponseData;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.getEncryptDetail({ toEncryptStr: urlStr }).subscribe(data => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + data.ResponseData.encryptedKey;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n\r\n    // // }\r\n\r\n  }\r\n\r\n  closeFilterRegister() {\r\n    this.commonService.closeFilterForPatient.subscribe(ev => {\r\n      if (ev) {\r\n        this.drawer.close()\r\n      }\r\n    })\r\n  }\r\n\r\n  initiateMergePatient() {\r\n    const dialog = this.dialog.open(MergePatientComponent, {\r\n      width: '75%'\r\n    });\r\n\r\n    dialog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.patientService.showPataientInfo(data, null, null, null, null);\r\n        this.router.navigateByUrl('/patient', { skipLocationChange: true }).then(() => {\r\n          this.router.navigateByUrl('patient/info');\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  public markAs(elem, as) {\r\n    if (this.commonService.isInternalUsers()) {\r\n      const req = {\r\n        BusinessGuid: this.businessGuid,\r\n        UserGuid: this.dataService.appData.authDetails['UserGuid'],\r\n        ObjResultTagModel: [\r\n          {\r\n            Source: elem.SourceType,\r\n            ResultIds: elem.RecID,\r\n            Tag: as\r\n          }]\r\n      };\r\n      this.commonService.UpdateResultTag(req).subscribe({\r\n        next: () => {\r\n          elem.ViewedFlag = as == 'READ';\r\n\r\n          if (this.dataService.pageState.dashboard.resultsList && this.dataService.pageState.dashboard.resultsList.length) {\r\n            const element = this.dataService.pageState.dashboard.resultsList.find(x => x.ZDXPatientId == this.patient.ZDXPatientId);\r\n            if (element) {\r\n              const subElm = element.Details.find(y => y.RecID == elem.RecID);\r\n              subElm.ViewedFlag = as == 'READ';\r\n            }\r\n\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  goback() {\r\n    if (this.isConsultantUser) {\r\n      this.router.navigate([\"/patient/lists\"])\r\n    } else {\r\n      this.commonService.goBackFromPatientInfo()\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n    <mat-drawer-container class=\"example-container1 ptnprt\" hasBackdrop=\"true\">\r\n      <mat-drawer #drawer class=\"example-sidenav sidefilter right-filter\" mode=\"over\" position=\"end\">\r\n        <app-sidefilter (outFilterBy)='getPatientInfo()'></app-sidefilter>\r\n      </mat-drawer>\r\n\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n        <div class=\"left-block {{ consultSec ? 'f-w-100' : '' }}\">\r\n          <section class=\"title-container m-cont icon-cont\">\r\n            <a href=\"javascript:void(0)\" (click)=\"goback()\" routerLinkActive=\"router-link-active\"\r\n              class=\"back-btn\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n            <span class=\"page-title\" data-testid=\"pi-title\">{{labelService.dsPatientInfoScreen.PatientInfo}}</span>\r\n\r\n            <img class=\"iconquestion\" src=\"../../../assets/img/help-icon.svg\"\r\n              matTooltip=\"{{labelService.dsSideMenuScreen.Help}}\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n              alt=\"help-circle\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n\r\n          </section>\r\n          <div class=\"mobile-header\">\r\n            <div class=\"m-header d-flex justify-content-between align-items-center\">\r\n              <div class=\"m-back\"><a href=\"javascript:void(0)\" (click)=\"commonService.goBack()\"\r\n                  class=\"back-btn\">{{labelService.dsPatientInfoScreen.Back}}</a></div>\r\n              <div class=\"m-title\">{{labelService.dsPatientInfoScreen.PatientInfo}}</div>\r\n              <div class=\"m-filter\">\r\n                <span class=\"ipadfiler  align-items-center pr-2\">\r\n                  <button type=\"button\" class=\"pr-0 \" mat-button (click)=\"drawer.toggle()\">\r\n                    <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"\" class=\"filtericon\" />\r\n                  </button>\r\n                  <img class=\"qpart qicon\" src=\"../../../assets/img/help-circle.svg\"\r\n                    [matTooltip]=\"labelService.dsSideMenuScreen.Help\" alt=\"help-circle\" matTooltipPosition=\"below\"\r\n                    matTooltipClass=\"below\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!------mobile header end-->\r\n          <section class=\"custom-card newprt\">\r\n            <div class=\"conpart\" style=\"padding: 14px 28px;\">\r\n              <div class=\"row\">\r\n                <span class=\"col head1 headtitle\">\r\n                  {{labelService.dsPatientInfoScreen.Patient}}\r\n                </span>\r\n                <div class=\"d-flex justify-content-end btnpoint\">\r\n                  <ng-container *ngIf=\"!isConsultantUser\">\r\n                    <button (click)=\"initiateMergePatient()\">{{labelService.dsPatientInfoScreen.MergePatients}}</button>\r\n                    <button type=\"button\" class=\"ml-4 editBtn edit-btn\" routerLink=\"/patient/info/edit\"><img alt=\"edit\"\r\n                        class=\"rounded-0\"\r\n                        src=\"../../../../assets/img/edit-button@2x.png\">{{labelService.dsPatientInfoScreen.Edit}}</button>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3 col-md-4 justify-content-end d-flex d-md-none pr-0\">\r\n                <span class=\"ipadfiler  align-items-center pr-2\">\r\n                  <button type=\"button\" class=\"pr-0 \" mat-button (click)=\"drawer.toggle()\">\r\n                    <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"filterIcon\">\r\n                    <em class=\"filtertxt\">{{ labelService.dsSideFilterScreen.FILTERS }}</em>\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row m-0 justify-content-start d-print-none\">\r\n              <div class=\"col-md-6 col-lg-3\">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.PatientID}}: </span>\r\n                  <span class=\"col text-left\">\r\n                    {{patient.PatientId }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 mt-md-0\">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.PatientName}}: </span><span\r\n                    class=\"col text-left\">\r\n                    {{patient.PatientName}}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 mt-lg-0\">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.OwnerName}}:</span><span\r\n                    class=\"col text-left\">\r\n                    {{patient.OwnerName }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 mt-lg-0\">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Species}}: </span><span\r\n                    class=\"col text-left\">\r\n                    {{patient.SpeciesName}}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 \">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Breed}}: </span><span\r\n                    class=\"col text-left\">\r\n                    {{patient.BreedName}}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 \">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Age}}:</span><span\r\n                    class=\"col text-left\">\r\n                    {{ patient.Dob }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-lg-3 mt-3 \">\r\n                <div class=\"col1\">\r\n                  <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Sex}}:</span><span\r\n                    class=\"col text-left\">\r\n                    {{patient.Gender}}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-center refbtn\" style=\"padding: 14px 0px;\"\r\n              *ngIf=\"refLabService.insideUSCAuser && !isConsultantUser\">\r\n              <button\r\n                (click)=\"navToOrderPage()\">{{labelService.dsPatientInfoScreen.CreateANewReferenceLabOrder}}</button>\r\n            </div>\r\n          </section>\r\n          <div class=\"col-12 mb-2 mt-3\">\r\n            <span>\r\n              <span class=\"section-text pr-2 {{ !consultSec ? 'text-dark' : '' }}\">\r\n                {{ labelService.dsPatientInfoScreen.PatientResults }}\r\n              </span>\r\n              <mat-slide-toggle [(ngModel)]=\"consultSec\"></mat-slide-toggle>\r\n              <span class=\"section-text pl-2 {{ consultSec ? 'text-dark' : '' }}\">\r\n                {{labelService.dsPatientInfoScreen.Consults}}  <span *ngIf=\"consultations.length\">({{ consultations.length }})</span>\r\n              </span>\r\n            </span>\r\n          </div>\r\n          <mat-card class=\"p-0 tablecont\">\r\n            <div class=\"mt-0\">\r\n              <div class=\"row m-0 align-items-center justify-content-end\">\r\n                <div class=\"selectOne pr-0 select-max-w py-4\" *ngIf=\"!isConsultantUser && !consultSec\">\r\n                  <p class=\"mb-0 mt-1 text-center font-weight-bolder labeltxt\">\r\n                    <span>{{labelService.dsPatientInfoScreen.MsgToCheckResults}} </span>\r\n                  </p>\r\n                </div>\r\n                <div class=\"selectTwo d-flex head1 justify-content-end pt-2 pl-3 pr-3 mb-2 align-items-center toprow\">\r\n\r\n                  <div class=\"col justify-content-end d-flex consultancy-print pr-0 align-items-center\">\r\n                    <ng-container *ngIf=\"!isConsultantUser\">\r\n                      <span *ngIf=\"!isBackOfficeUser\"\r\n                        ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.ConsultationRequest}}\">\r\n                        <img src=\"./assets/img/Consutlation.svg\" alt=\"\" class=\"c-point\"\r\n                          (click)=\"goToConsultation($event)\"></span>\r\n                      <span ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.Print}}\" class=\"svimg\"> <img\r\n                          src=\"./assets/img/print.svg\" alt=\"\" *ngIf=\"!showPrintIcon && !consultSec\"></span>\r\n                      <span ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.Print}}\" class=\"svimg\"> <img\r\n                          src=\"./assets/img/print.svg\" alt=\"\" (click)=\"downloadAnalysisResults()\" class=\"c-point\"\r\n                          *ngIf=\"showPrintIcon && !consultSec\"> </span>\r\n                    </ng-container>\r\n                  </div>\r\n\r\n                  <div class=\"col-3 col-md-4 justify-content-end d-flex d-md-none pr-0\" *ngIf=\"!consultSec\">\r\n\r\n                    <span class=\"ipadfiler  align-items-center pr-2\">\r\n                      <button type=\"button\" class=\"pr-0 \" mat-button (click)=\"drawer.toggle()\">\r\n                        <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"filterIcon\">\r\n                        <em class=\"filtertxt\">{{ labelService.dsSideFilterScreen.FILTERS }}</em>\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p class=\"pr-4\" style=\"text-align: right;\">\r\n                <span *ngIf=\"!consultSec\">\r\n                  <!-- Showing results for -->\r\n                  {{labelService.dsPatientInfoScreen.ShowingResultDated}}\r\n                  <span style=\"font-weight: bold;\">\r\n                    {{commonService.getMomentFromatedDate(this.FromDateLabel)}}\r\n                  </span>\r\n                  {{labelService.dsPatientInfoScreen.To}}\r\n                  <span style=\"font-weight: bold;\">\r\n                    {{commonService.getMomentFromatedDate(this.ToDateLabel) }}\r\n                  </span>\r\n                </span>\r\n              </p>\r\n              <span class=\"d-flex filterp\" *ngIf=\"!consultSec\">\r\n                <span class=\"ipadfiler  align-items-center pr-2\"> <button type=\"button\" class=\"pr-0 \" mat-button\r\n                    (click)=\"drawer.toggle()\">\r\n                    <img src=\"../../../assets/img/filterIcon@2x.png\" alt=\"filterIcon\">\r\n                    <em class=\"filtertxt\">{{ labelService.dsSideFilterScreen.FILTERS }}</em>\r\n                  </button>\r\n                </span>\r\n              </span>\r\n              <div class=\"p-0 m-0 cust-postion\">\r\n                <div>\r\n                  <app-patient-info-tests [Parent]=\"this\" *ngIf=\"!consultSec\"></app-patient-info-tests>\r\n                  <app-consultation-list [Parent]=\"this\" [consultations]=\"consultations\"\r\n                    *ngIf=\"consultSec\"></app-consultation-list>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"right-filter pl-0\" *ngIf=\"!consultSec\">\r\n          <app-sidefilter (outFilterBy)='getPatientInfo()'></app-sidefilter>\r\n        </div>\r\n      </div>\r\n    </mat-drawer-container>\r\n  </div>\r\n</div>\r\n\r\n<iframe id=\"print-frame\" style=\"display: none\" title=\"\"></iframe>","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { DataService, HeaderService, LabelService, PatientService, CommonService, SidefilterService, EncrDecrService } from \"../../../services\";\r\nimport { ConfirmationDialogService } from \"../../../components/confirmation-dialog/confirmation-dialog.service\";\r\nimport { DownloadMultipleAnalysisResult, AnalysisDetails } from \"../../../models/patient\";\r\nimport { SideFilter } from \"../../../models/side-filter\";\r\nimport { EnmNotificationSetting, EnmAnalysisStatus } from \"../../../shared/constants/enum\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from \"@angular/material/legacy-table\";\r\nimport { switchMap } from \"rxjs/operators\";\r\n@Component({\r\n  selector: \"app-consult-patient-info\",\r\n  templateUrl: \"./consult-patient-info.component.html\",\r\n  styleUrls: [\"./consult-patient-info.component.css\"],\r\n})\r\nexport class ConsultPatientInfoComponent implements OnInit, OnDestroy {\r\n\r\n  downloadMultipleAnalysisResult: DownloadMultipleAnalysisResult;\r\n  analysisDetails: AnalysisDetails;\r\n  filterData = [];\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 100;\r\n  counter = 0;\r\n  end: number = this.limit + this.start;\r\n  public patientInfo: any;\r\n  filter: SideFilter;\r\n  displayedColumns = [\r\n    \" \",\r\n    \"DateReceivedStr\",\r\n    \"physician_name\",\r\n    \"CategoryName\",\r\n    \"AnalysisTypeName\",\r\n    \"AnalysisSourceName\",\r\n  ];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  IsAllSelected = false;\r\n  showPrintIcon = false;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public canceledAnalysisStatusId = EnmAnalysisStatus.Canceled;\r\n  selectedBusinessId: number;\r\n  businessGuid: any;\r\n  public isBackOfficeUser: boolean;\r\n  public isConsultantUser: boolean;\r\n  public pataientId: any;\r\n  public zdxPatientId: any;\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem(\"bckBusinessInfo\"));\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public patientService: PatientService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    public labelService: LabelService,\r\n    public headerService: HeaderService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    private EncrDecr: EncrDecrService) {\r\n    this.title.setTitle(\"ZoetisDx Patient Info\");\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.isBackOfficeUser =\r\n      this.dataService.appData.authDetails[\"BackOfficeFlag\"];\r\n    this.isConsultantUser =\r\n      this.dataService.appData.authDetails[\"IsConsultantUser\"];\r\n    this.businessGuid = this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n    this.pataientId = this.route.snapshot.paramMap.get(\"pataientId\");\r\n    this.zdxPatientId = this.route.snapshot.paramMap.get(\"zdxPatientId\");\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindPatientInfoLabel();\r\n    }\r\n\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.PatientId = this.pataientId;\r\n    if (this.zdxPatientId != \"null\")\r\n      this.sidefilterService.filter.ZDXPatientInfoId = this.zdxPatientId;\r\n    this.sidefilterService.filter.LanguageId =\r\n      this.labelService.selectedLanguage;\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    console.log(\"gdg\", typeof this.zdxPatientId)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPatientInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle(\"ZoetisDx\");\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.bindPatientInfoLabel();\r\n      });\r\n  }\r\n\r\n  public getPatientInfo() {\r\n    this.sidefilterService.filter['IsPatientInfo'] = true;\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    this.sidefilterService.filter.IsExactFilter = true;\r\n    this.sidefilterService.filter.BusinessGuid =\r\n      this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n    this.sidefilterService.filter.UserGuid =\r\n      this.dataService.appData.authDetails[\"UserGuid\"];\r\n    this.sidefilterService.filter.PatientId = this.pataientId;\r\n    this.sidefilterService.filter.IsBackOfficeUser =\r\n      this.isConsultantUser || this.isBackOfficeUser ? true : false;\r\n    if (this.sidefilterService.filter.PageNo == 1) {\r\n      this.counter = 0;\r\n      this.originData = [];\r\n    }\r\n\r\n    this.patientService.getPatientInfo(this.sidefilterService.filter).pipe(\r\n      switchMap((data) => {\r\n        const zdxPatientId = data.ResponseData.DashboardPatientList[0].ZDXPatientId\r\n        this.sidefilterService.filter.ZDXPatientInfoId = zdxPatientId\r\n        // if(this.zdxPatientId ==\"null\")\r\n        return this.patientService.getPatientInfo(this.sidefilterService.filter)\r\n      })\r\n    ).subscribe(\r\n      {\r\n        next: (data) => {\r\n          if (this.sidefilterService.filter.PageNo == 1) {\r\n            if (\r\n              data.ResponseData.DashboardPatientList != null &&\r\n              data.ResponseData.DashboardPatientList.length > 0\r\n            ) {\r\n              this.originData = data.ResponseData.DashboardPatientList[0].Details;\r\n            } else {\r\n              this.originData = [];\r\n            }\r\n          } else {\r\n            if (\r\n              data.ResponseData.DashboardPatientList != null &&\r\n              data.ResponseData.DashboardPatientList.length > 0\r\n            ) {\r\n              this.originData = this.originData.concat(\r\n                data.ResponseData.DashboardPatientList[0].Details\r\n              );\r\n            }\r\n          }\r\n\r\n          if (this.originData.length > 0) {\r\n            this.patientInfo = data.ResponseData.DashboardPatientList[0];\r\n\r\n            this.originData = this.originData.map((item) => {\r\n              if (item.PhysicianName && item.PhysicianName.trim() == \"None\") {\r\n                item.PhysicianName =\r\n                  this.labelService.dsAnaysisResultsScreen.none;\r\n              }\r\n              return item;\r\n            });\r\n\r\n            this.dataService.appState.analysisTypeList = [];\r\n            this.originData.forEach((ele) => {\r\n              if (\r\n                !this.dataService.appState.analysisTypeList.includes(\r\n                  ele.AnalysisTypeName\r\n                )\r\n              ) {\r\n                this.dataService.appState.analysisTypeList.push(\r\n                  ele.AnalysisTypeName\r\n                );\r\n              }\r\n            });\r\n            this.dataService.state.next(this.dataService.appState);\r\n\r\n            this.dataSource = new MatTableDataSource<any>(this.originData);\r\n            this.dataSource.sortingDataAccessor =\r\n              this.commonService.sortingDataAccessor;\r\n            this.dataSource.sort = this.sort;\r\n            this.bindDVMDDL();\r\n          } else {\r\n            this.dataSource.data = [];\r\n          }\r\n        },\r\n        error: () => {\r\n          this.originData = [];\r\n          this.dataSource.data = [];\r\n          this.sidefilterService.filter.DVMName = \"\";\r\n          this.sidefilterService.dsDVM = [];\r\n        }\r\n      });\r\n  }\r\n\r\n  public bindDVMDDL() {\r\n    this.sidefilterService.dsDVM = [];\r\n    if (this.originData != null) {\r\n      const arrDVM = [];\r\n      let noDVMText = \"\";\r\n      this.originData.forEach((subEle) => {\r\n        if (subEle.PhysicianName && !arrDVM.includes(subEle.PhysicianName)) {\r\n          if (subEle.PhysicianName == \"None\") {\r\n            noDVMText = subEle.PhysicianName;\r\n          } else {\r\n            arrDVM.push(subEle.PhysicianName.trim());\r\n            this.sidefilterService.dsDVM.push(subEle.PhysicianName.trim());\r\n          }\r\n        }\r\n      });\r\n      this.sidefilterService.dsDVM =\r\n        this.commonService.arraySortByAscendingOrders(arrDVM);\r\n      if (noDVMText) {\r\n        this.sidefilterService.dsDVM.splice(0, 0, noDVMText);\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectAll(e) {\r\n    this.IsAllSelected = e.checked;\r\n    this.showPrintIcon = e.checked;\r\n    this.dataSource.data.forEach((element) => {\r\n      if (element.AnalysisStatusName == \"Completed\")\r\n        element.IsReadyForPrint = e.checked;\r\n    });\r\n  }\r\n\r\n  public onDataSort(e) {\r\n    this.dataService.pageState.PatientInfo.sortState = e;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n  }\r\n\r\n  public onRowClick(rowIndex, ele) {\r\n    if (ele.AnalysisStatusId == this.canceledAnalysisStatusId) {\r\n      this.showMsg(ele.CancelComment);\r\n    } else if (ele.AnalysisStatusId == EnmAnalysisStatus.Pending) {\r\n      this.showMsg(this.labelService.dsPatientInfoScreen.pendingAlertMessage)\r\n    } else {\r\n      this.dataService.pageState.PatientInfo.selectedRow = rowIndex;\r\n      this.dataService.pageState.PatientInfo.requestParams =\r\n        this.sidefilterService.filter;\r\n      this.dataService.pageState.PatientInfo.resultsList = this.originData;\r\n      this.dataService.page.next(this.dataService.pageState);\r\n      if (this.dataService && this.dataService.appState) {\r\n        this.dataService.appState.selectedResult.element = this.patientInfo;\r\n        this.dataService.appState.selectedResult.subElement = ele;\r\n        this.dataService.state.next(this.dataService.appState);\r\n      }\r\n      this.patientService.showPataientTestResult(\r\n        this.patientInfo,\r\n        ele,\r\n        null,\r\n        this.sidefilterService.filter,\r\n        null,\r\n        null\r\n      );\r\n    }\r\n  }\r\n\r\n  public selectSingleCheckbox(e, selecteItem) {\r\n    selecteItem.IsReadyForPrint = e.checked;\r\n    if (e.checked) {\r\n      this.showPrintIcon = true;\r\n      const allSelected = this.dataSource.data.find(\r\n        (x) => !x.IsReadyForPrint && x.AnalysisStatusName == \"Completed\"\r\n      );\r\n      if (allSelected == undefined) this.IsAllSelected = true;\r\n      else this.IsAllSelected = false;\r\n    } else {\r\n      this.IsAllSelected = false;\r\n      const checkboxSelected = this.dataSource.data.find(\r\n        (x) => x.IsReadyForPrint && x.AnalysisStatusName == \"Completed\"\r\n      );\r\n      if (checkboxSelected == undefined) this.showPrintIcon = false;\r\n    }\r\n    this.countCheckbox(e, selecteItem);\r\n  }\r\n\r\n  public countCheckbox(event, selectedItem) {\r\n    if (event.checked === true) {\r\n      this.counter++;\r\n      if (this.counter > 5) {\r\n        this.confirmationDialogService\r\n          .confirm(\r\n            \"\",\r\n            this.labelService.dsPatientInfoScreen.CheckBoxExceed,\r\n            this.labelService.dsPatientInfoScreen.Ok,\r\n            \"\",\r\n            \"sm\",\r\n            true,\r\n            false\r\n          )\r\n          .then((confirmed) => {\r\n            if (confirmed) {\r\n              this.counter--;\r\n              selectedItem.IsReadyForPrint = false;\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (event.checked === false) {\r\n      this.counter--;\r\n    }\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.FromDate = null;\r\n    this.sidefilterService.filter.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisStatusId = 0;\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.ToDate = null;\r\n  }\r\n\r\n  public downloadAnalysisResults() {\r\n    this.downloadMultipleAnalysisResult = new DownloadMultipleAnalysisResult();\r\n    this.downloadMultipleAnalysisResult.PatientId =\r\n      this.patientInfo.Details.PatientId;\r\n    this.downloadMultipleAnalysisResult.LanguageId =\r\n      this.labelService.selectedLanguage;\r\n    this.downloadMultipleAnalysisResult.BusinessGuid = this.businessGuid;\r\n    this.downloadMultipleAnalysisResult.UserGuid =\r\n      this.dataService.appData.authDetails[\"UserGuid\"];\r\n    this.downloadMultipleAnalysisResult.Pageno =\r\n      this.sidefilterService.filter.PageNo;\r\n    this.downloadMultipleAnalysisResult.Pagesize = 60;\r\n    this.downloadMultipleAnalysisResult.IsBackOfficeUser =\r\n      this.isConsultantUser || this.isBackOfficeUser ? true : false;\r\n\r\n    this.downloadMultipleAnalysisResult.MultipleTestRequest = [];\r\n    this.dataSource.data.forEach((ele) => {\r\n      if (ele.IsReadyForPrint && ele.AnalysisStatusName == \"Completed\") {\r\n        this.analysisDetails = new AnalysisDetails();\r\n        this.analysisDetails.AnalysisTypeId = ele.AnalysisTypeId;\r\n        this.analysisDetails.AccessionId = ele.AccessionNumber;\r\n        this.analysisDetails.PanelId = ele.PanelId;\r\n        this.analysisDetails.SourceType = ele.SourceType;\r\n        this.analysisDetails.PresentDate = ele.DateReceivedStr;\r\n        this.analysisDetails.TemplateId = ele.TemplateId;\r\n        this.downloadMultipleAnalysisResult.MultipleTestRequest.push(\r\n          this.analysisDetails\r\n        );\r\n      }\r\n    });\r\n\r\n    this.patientService\r\n      .downloadMultipleAnalysisResult(this.downloadMultipleAnalysisResult)\r\n      .subscribe((res) => {\r\n        const fileName = this.patientInfo.Details.PatientName;\r\n        this.savePdfFile(res, fileName);\r\n      });\r\n  }\r\n\r\n  savePdfFile(res, fileName) {\r\n    const blob = new Blob([res], { type: \"application/pdf\" });\r\n\r\n    /** For Firefox  */\r\n    if (navigator.userAgent.indexOf(\"Safari\") != -1) {\r\n      const objectURL = URL.createObjectURL(blob);\r\n      const iframe: any = <HTMLIFrameElement>(\r\n        document.querySelector(\"#print-frame\")\r\n      );\r\n      iframe.src = objectURL;\r\n      setTimeout(function () {\r\n        iframe.contentWindow.print();\r\n      }, 1000);\r\n    } else {\r\n      fileName =\r\n        fileName +\r\n        new Date().toLocaleString().replace(\",\", \"\").split(\" \").join(\"_\") +\r\n        \".pdf\";\r\n      if (window.navigator && window.navigator[\"msSaveOrOpenBlob\"]) {\r\n        window.navigator[\"msSaveOrOpenBlob\"](blob, fileName);\r\n      } else {\r\n        saveAs(res, fileName);\r\n      }\r\n    }\r\n  }\r\n\r\n  onToggleFollowPatient(e) {\r\n    if (\r\n      this.headerService.notificationSettingId ==\r\n      EnmNotificationSetting.FollowPatients\r\n    ) {\r\n      this.onOffFollowPatient(e.checked);\r\n    } else {\r\n      const msg = this.labelService.dsPatientInfoScreen.ConfirmMessage;\r\n      this.confirmationDialogService\r\n        .confirm(\r\n          \"\",\r\n          msg,\r\n          this.labelService.dsPatientInfoScreen.Updatepreferences,\r\n          this.labelService.dsPatientInfoScreen.Cancel\r\n        )\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.dataService.appState.admin.profilePageSelectedAccordion = 1;\r\n            this.dataService.state.next(this.dataService.appState);\r\n            this.router.navigateByUrl(\"/user/account\");\r\n          } else {\r\n            this.patientInfo.Details.IsFollowedPatient =\r\n              !this.patientInfo.Details.IsFollowedPatient;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  public onOffFollowPatient(toggleValue) {\r\n    const params = {\r\n      UserGuid: this.headerService.loginUserGuid,\r\n      BusinessGuid: this.businessGuid,\r\n      PatientId: this.patientInfo.PatientId,\r\n      FuseSerialNo: this.patientInfo.fuse_serial_number,\r\n      IsActive: toggleValue,\r\n    };\r\n    this.patientService.onOffFollowPatient(params).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        this.patientInfo.patientDetails.IsFollowedPatient = toggleValue;\r\n        localStorage.setItem(\r\n          \"patientDetails\",\r\n          JSON.stringify(this.patientInfo.patientDetails)\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(JSON.stringify(err));\r\n      }\r\n    );\r\n  }\r\n\r\n  public showMsg(cancelComment) {\r\n    /*\r\n    cancelComment may be:-\r\n    1) user.cancelled : The user canceled the process.\r\n    2) 11 : Test cancelled by user\r\n    3) X : Order cannot be done, order cancelled\r\n    */\r\n    if (cancelComment && /user.cancelled/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessage;\r\n    } else if (cancelComment && /11 :/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessage11;\r\n    } else if (cancelComment && /X :/.test(cancelComment)) {\r\n      cancelComment = this.labelService.dsPatientInfoScreen.CanceledTestMessageX;\r\n    } else {\r\n      // cancelComment = this.labelService.dsPatientInfoScreen.CanceledTest;\r\n      cancelComment = cancelComment ? cancelComment : this.labelService.dsPatientInfoScreen.CanceledTest;\r\n    }\r\n\r\n    this.confirmationDialogService.confirm(\"\", cancelComment, this.labelService.dsPatientInfoScreen.Ok, \"\", \"sm\", true, false)\r\n    // .then((confirmed) => {\r\n    // }).catch(() => console.log(\"User dismissed the dialog\"));\r\n  }\r\n\r\n  public goToConsultation(e) {\r\n    e.stopPropagation();\r\n\r\n    this.dataService.appData.prevUrl = \"dashboard\";\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    const authDetails = this.dataService.appData.authDetails;\r\n    const emailId = this.bckBusinessInfo ? this.bckBusinessInfo[\"EmailId\"] : \"\";\r\n    const doctorName =\r\n      this.patientInfo.Details.length > 0 &&\r\n        this.patientInfo.Details[0].PhysicianName\r\n        ? this.patientInfo.Details[0].PhysicianName\r\n        : \"\";\r\n    let urlStr =\r\n      \"email=\" +\r\n      authDetails[\"Email\"] +\r\n      \"&bkoClinicEmail=\" +\r\n      emailId +\r\n      \"&token=\" +\r\n      JSON.parse(localStorage.authDetails).access_token +\r\n      \"&refresh_token=\" +\r\n      JSON.parse(localStorage.authDetails).refresh_token +\r\n      \"&deviceId=\" +\r\n      localStorage.UIGuid +\r\n      \"&BusinessGuid=\" +\r\n      JSON.parse(localStorage.authDetails).BusinessGuid +\r\n      \"&clinicname=\" +\r\n      authDetails[\"BusinessName\"] +\r\n      \"&clinicphone=\" +\r\n      authDetails[\"BusinessPhoneNo\"] +\r\n      \"&doctorname=\" +\r\n      doctorName +\r\n      \"&patientId=\" +\r\n      this.patientInfo.PatientId +\r\n      \"&patientName=\" +\r\n      this.patientInfo.PatientName +\r\n      \"&species=\" +\r\n      this.patientInfo.SpeciesName +\r\n      \"&breed=\" +\r\n      this.patientInfo.BreedName +\r\n      \"&ownerName=\" +\r\n      this.patientInfo.OwnerName +\r\n      \"&accessionId=\" +\r\n      \"\" +\r\n      \"&gender=\" +\r\n      this.patientInfo.Gender +\r\n      \"&age=\" +\r\n      this.patientInfo.Dob +\r\n      \"&Isbackoffice=\" +\r\n      JSON.parse(localStorage.authDetails).BackOfficeFlag +\r\n      \"&backUrl=\" +\r\n      location.href\r\n      + \"&isNewInternal=\" + this.commonService.isnewUrlRedirection();\r\n\r\n    urlStr = this.EncrDecr.encrypt(urlStr);\r\n    if (this.headerService.isNRP) {\r\n      this.commonService.getRedirectionKey({ ValueString: urlStr }).subscribe(\r\n        (data) => {\r\n          window.location.href =\r\n            environment.ZCSUrl +\r\n            \"#/user/consultation-request?ref=\" +\r\n            data.ResponseData;\r\n        },\r\n        (err) => {\r\n          console.log(JSON.stringify(err));\r\n        }\r\n      );\r\n    } else {\r\n      this.commonService.getEncryptDetail({ toEncryptStr: urlStr }).subscribe(\r\n        (res) => {\r\n          window.location.href =\r\n            environment.ZCSUrl +\r\n            \"#/user/consultation-request?ref=\" +\r\n            res.ResponseData.encryptedKey;\r\n        },\r\n        (err) => {\r\n          console.log(JSON.stringify(err));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public backToConsultant() {\r\n    if (localStorage.locationBackFromInfo && localStorage.locationBackFromInfo == '1') {\r\n      this.router.navigateByUrl('/patient/list')\r\n      return\r\n    }\r\n    const consultRedr = localStorage.getItem(\"rediretionDetails\");\r\n    const consultEmailWithRid =\r\n      consultRedr.split(\"emailWithConsultantResourceGrpId=\")[1] != undefined\r\n        ? consultRedr\r\n          .split(\"emailWithConsultantResourceGrpId=\")[1]\r\n          .split(\"&\")[0]\r\n        : null;\r\n    const emailWithConsultant =\r\n      consultRedr.split(\"emailWithConsultant=\")[1] != undefined\r\n        ? consultRedr.split(\"emailWithConsultant=\")[1].split(\"&\")[0]\r\n        : null;\r\n\r\n    const urlStr =\r\n      \"email=\" +\r\n      JSON.parse(localStorage.authDetails).Email +\r\n      \"&token=\" +\r\n      JSON.parse(localStorage.authDetails).access_token +\r\n      \"&refresh_token=\" +\r\n      JSON.parse(localStorage.authDetails).refresh_token +\r\n      \"&deviceId=\" +\r\n      localStorage.UIGuid +\r\n      \"&emailWithConsultantResourceGrpId=\" +\r\n      consultEmailWithRid +\r\n      \"&emailWithConsultant=\" +\r\n      emailWithConsultant\r\n      + \"&isNewInternal=\" + this.commonService.isnewUrlRedirection()\r\n      + \"&TimeFormatId=\" + this.dataService.appData.authDetails['TimeFormatId']\r\n      + \"&TimeZoneId=\" + this.dataService.appData.authDetails['TimeZoneId']\r\n      + \"&DateFormatId=\" + this.dataService.appData.authDetails['DateFormatId'];\r\n    const encryptedUrlStr = this.EncrDecr.encrypt(urlStr);\r\n    const backUrl = this.dataService.appState.consultationBackUrl;\r\n\r\n    this.commonService\r\n      .getRedirectionKey({ ValueString: encryptedUrlStr })\r\n      .subscribe(\r\n        (data) => {\r\n          this.checkFlagAndRedirect(backUrl, data);\r\n        },\r\n        (err) => {\r\n          console.log(JSON.stringify(err));\r\n        }\r\n      );\r\n  }\r\n\r\n  checkFlagAndRedirect(backUrl, data) {\r\n    if (!this.commonService.isConsultReportRequestPending) {\r\n      window.location.href = backUrl + \"?ref=\" + data.ResponseData;\r\n    } else {\r\n      window.setTimeout(() => {\r\n        this.checkFlagAndRedirect(backUrl, data);\r\n      }, 100);\r\n    }\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n\r\n        <div class=\"page-content resizepage\">\r\n          <mat-card class=\"p-0\">\r\n            <div class=\"mt-0\">\r\n              <div class=\"d-flex head1 justify-content-between pl-3 pr-3 mb-3 align-items-center toprow\">\r\n                <span class=\"d-flex justify-content-between align-items-center \">\r\n                  <a class=\"backlink\" (click)=\"backToConsultant()\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n                </span>\r\n                <div class=\"d-flex justify-content-start align-items-center w-75\">\r\n                  <h5 class=\"heading d-flex justify-content-between align-items-center w-100\">\r\n                    <span class=\"justify-content-between align-items-center text-left centerHead\">\r\n                      {{labelService.dsPatientInfoScreen.PatientInfo}}\r\n                    </span>\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"topHead\">\r\n              <!-- <div class=\"d-flex  head1 justify-content-between pt-3 pl-3 pr-3 mb-2 align-items-center toprow\">\r\n                <span class=\"d-flex justify-content-between align-items-center \">\r\n                  <a class=\"backlink\" (click)=\"backToConsultant()\">{{labelService.dsPatientInfoScreen.Back}}</a>\r\n                </span>\r\n                <div class=\"d-flex justify-content-start align-items-center w-75\">\r\n                  <h5 class=\"heading d-flex justify-content-between align-items-center w-100\">\r\n                    <span class=\"justify-content-between align-items-center w-100 text-left\">\r\n                      {{labelService.dsPatientInfoScreen.PatientInfo}}\r\n                    </span>\r\n                  </h5>\r\n                </div>\r\n              </div> -->\r\n              <div class=\"patientHead w-100 px-3\">\r\n                <p>Patient</p>\r\n              </div>\r\n              <div class=\"row col-sm-12 justify-content-start d-print-none\" *ngIf=\"patientInfo\">\r\n                <div class=\"col-sm-3\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.PatientID}}: </span>\r\n                    <span class=\"col text-left\">\r\n                      {{patientInfo.PatientId ? patientInfo.PatientId : \"---\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.PatientName}}: </span><span\r\n                      class=\"col text-left\">\r\n                      {{patientInfo.PatientName ? patientInfo.PatientName: \"---\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.OwnerName}}:</span><span\r\n                      class=\"col text-left\">\r\n                      {{patientInfo.OwnerName ? patientInfo.OwnerName : \"---\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Species}}: </span><span\r\n                      class=\"col text-left\">\r\n                      {{patientInfo.SpeciesName ? patientInfo.SpeciesName : \"---\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3 mt-3 d-flex align-items-center\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Breed}}: </span><span\r\n                      class=\"col text-left\">\r\n                      {{patientInfo.BreedName ? patientInfo.BreedName : \"---\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3 mt-3 d-flex align-items-center\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Age}}:</span><span\r\n                      class=\"col text-left\">\r\n                      {{\r\n                      patientInfo.Dob ? patientInfo.Dob : \"N/A\"\r\n                      }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3 mt-3 d-flex align-items-center\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">{{labelService.dsPatientInfoScreen.Sex}}:</span><span\r\n                      class=\"col text-left\">\r\n                      {{patientInfo.Gender ? patientInfo.Gender : \"N/A\"}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-3 mt-3 d-flex align-items-center follow_patient\" *ngIf=\"!isConsultantUser\">\r\n                  <div class=\"col1\">\r\n                    <span class=\"col pl-0 head1\">\r\n                      {{labelService.dsPatientInfoScreen.FollowPatient}}\r\n                    </span>\r\n                    <span class=\"col text-left\">\r\n                      <mat-slide-toggle class=\"slide-toggle\" color=\"primary\" [(ngModel)]=\"patientInfo.IsFollowedPatient\"\r\n                        (change)=\"onToggleFollowPatient($event)\">\r\n                      </mat-slide-toggle>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"belowpart\">\r\n              <p class=\"mb-0 mt-4 head1 col-sm-12\">\r\n                {{labelService.dsPatientInfoScreen.MsgToCheckResults}} {{counter}}/5\r\n              </p>\r\n              <div class=\"p-0 pt-2 cust-postion\">\r\n                <div>\r\n                  <div class=\"example-container pt-0\" id=\"patientinfoTbl-scrollabe\">\r\n\r\n                    <table mat-table [dataSource]=\"dataSource\" matSort class=\"patient-table\" summary=\"\">\r\n\r\n                      <ng-container matColumnDef=\" \">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                          <div class=\"d-flex align-items-center chk-list\" *ngIf=\"false\">\r\n                            <mat-checkbox class=\"example-margin\" [checked]=\"IsAllSelected\"\r\n                              (change)=\"selectAll($event);\">\r\n                            </mat-checkbox>\r\n                            <span>{{labelService.dsPatientInfoScreen.All}}</span>\r\n                          </div>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngClass]=\"{\r\n                                completed:\r\n                                element.AnalysisStatusId === 1,\r\n                                cancelled:\r\n                                element.AnalysisStatusId === 2,\r\n                                pending:\r\n                                element.AnalysisStatusId === 3\r\n                              }\">\r\n\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"DateReceivedStr\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{labelService.dsPatientInfoScreen.DateAndTime}}</th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"onRowClick(i, element)\">\r\n                          <span class=\"pdate\"> {{ element.DateReceivedStr }}</span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"physician_name\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{labelService.dsPatientInfoScreen.DVMName}}</th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"onRowClick(i, element)\">\r\n                          {{ element.PhysicianName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"CategoryName\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{labelService.dsPatientInfoScreen.Analyzer}}</th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"onRowClick(i, element)\">\r\n                          {{ element.AnalyzerDisplayName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"AnalysisTypeName\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{labelService.dsPatientInfoScreen.AnalysisType}}</th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"onRowClick(i, element)\">\r\n                          {{ element.AnalysisTypeName }}\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"AnalysisSourceName\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                          {{labelService.dsPatientInfoScreen.AnalysisSource}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element; let i = index;\" (click)=\"onRowClick(i, element)\">\r\n                          <span class=\"cardimg\">\r\n                            <img *ngIf=\"element.AnalysisSourceId===1\" src=\"./assets/img/poc-icon@2x.png\" alt=\"img\"\r\n                              class=\"mr-2\" height=\"16\" />\r\n                            <img *ngIf=\"element.AnalysisSourceId===2\" src=\"./assets/img/lab-icon@2x.png\" alt=\"img\"\r\n                              class=\"mr-2\" height=\"16\" />\r\n                            {{element.AnalysisSourceName}}\r\n                          </span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" style=\"cursor: pointer;\"></tr>\r\n                    </table>\r\n\r\n                    <tbody class=\" norecord\" *ngIf=\"(dataSource === null || dataSource.data.length === 0)\">\r\n                      <tr>\r\n                        <td>{{labelService.dsPatientInfoScreen.Norecordsfound}}.</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </mat-drawer-container>\r\n\r\n    <div style=\"position: fixed;left: 50%; bottom: 30px;transform: translate(-50%, 0);\" *ngIf=\"commonService?.consultationReport()\">\r\n      <app-floating-consult-report></app-floating-consult-report>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, Validators, UntypedFormBuilder } from '@angular/forms';\r\nimport { LoginSinUpIntermediate } from '../../models/user';\r\nimport { LabelService, DataService } from '../../services';\r\nimport { CommonService } from '../../services';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login-regis-intermediate',\r\n  templateUrl: './login-regis-intermediate.component.html',\r\n  styleUrls: ['./login-regis-intermediate.component.css']\r\n})\r\nexport class LoginRegisIntermediateComponent implements OnInit {\r\n\r\n  public dsCountry: any[] = [];\r\n  public loginSignUpIntemediateForm: UntypedFormGroup;\r\n  constructor(private formBuilder: UntypedFormBuilder, public router: Router, public commonService: CommonService, public labelService: LabelService, public dataService: DataService) {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindLoginSignUpIntermediateLabel();\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindLoginSignUpIntermediateLabel();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginSignUpIntemediateForm = this.createFormGroup(new LoginSinUpIntermediate());\r\n    this.commonService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, null).subscribe(data => {\r\n      this.dsCountry = data.ResponseData.CountryDetails;\r\n      this.dataService.appState.CountryList = data.ResponseData.CountryDetails;\r\n      this.dataService.state.next(this.dataService.appState);\r\n    });\r\n  }\r\n\r\n  public next() {\r\n    if (this.loginSignUpIntemediateForm.status == \"VALID\") {\r\n      localStorage.setItem('userCountryId', this.loginSignUpIntemediateForm.controls[\"CountryId\"].value);\r\n      this.labelService.userCountryId = this.loginSignUpIntemediateForm.controls[\"CountryId\"].value;\r\n      this.dataService.appData.masterData.userCountryId = this.loginSignUpIntemediateForm.controls[\"CountryId\"].value;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.router.navigateByUrl('/register');\r\n    }\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      'CountryId': [dataItem.CountryId, Validators.required],\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"signin-outer\">\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-75\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n\r\n          <div class=\"card-body\">\r\n\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"login\" />\r\n            </div>\r\n            <form class=\"form-signin\" [formGroup]=\"loginSignUpIntemediateForm\" #formGroupDirective=\"ngForm\"\r\n              autocomplete=\"off\" (keyup.enter)=\"next()\">\r\n              <div class=\"form-label-group mb-2 mt-4\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select [placeholder]=\"labelService.dsLoginSignUpIntermediateScreen.SelectCountry\"\r\n                    formControlName=\"CountryId\" autocomplete=\"off\" required>\r\n                    <mat-option *ngFor=\"let country of dsCountry\" [value]=\"country.Id\">\r\n                      {{ country.CountryName }}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"d-flex align-items-center justify-content-center  \">\r\n                <button class=\"btn btn1 btn-lg btn-primary btn-block  mr-2 \" mat-raised-button color=\"warn\"\r\n                  routerLink=\"/login\">{{labelService.dsLoginSignUpIntermediateScreen.ReturntoLogin}}</button>\r\n                <button class=\"btn btn-lg btn-primary btn-block\" mat-raised-button color=\"warn\"\r\n                  (click)=\"next()\">{{labelService.dsLoginSignUpIntermediateScreen.Next}}</button>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, FormGroupDirective, UntypedFormGroup } from '@angular/forms';\r\nimport { UserDetails, ResetSignalRequest } from '../../../models/user';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { EnmUserType, EnmNotificationSetting, EnmCountry } from '../../../shared/constants/enum';\r\nimport { SidemenuService } from '../../../services/sidemenu.service';\r\nimport { BusineesDetails } from '../../../models/fuse';\r\nimport { FuseService } from '../../../services/fuse.service';\r\nimport { LabelService, UserService, HeaderService, DataService, CommonService } from '../../../services'\r\nimport intlTelInput from 'intl-tel-input';\r\ndeclare let intlTelInputGlobals;\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.component.html',\r\n  styleUrls: ['./account-settings.component.css']\r\n})\r\nexport class AccountSettingsComponent implements OnInit,AfterViewInit,OnDestroy {\r\n\r\n  public businessDetails: BusineesDetails;\r\n  panelOpenState = false;\r\n  public isProfileEditable = false;\r\n  public isPreferenceEditable = false;\r\n  public dsUserProfile: any = {};\r\n  public dsUserPreference: UserDetails;\r\n  public resetSignalRequest: ResetSignalRequest;\r\n  public isUserTypeBusiness = false;\r\n  public resetReqMsg = \"\";\r\n  public profileEmail = \"\";\r\n  public securityEmail = \"\";\r\n  public profileForm: UntypedFormGroup;\r\n  public selectedAccordion: number;\r\n  public dsState: any[] = [];\r\n  public providerData: any[] = [];\r\n  public phoneInput: HTMLInputElement;\r\n  public iti: any;\r\n  public businessPhoneITI: any;\r\n  public countryData = intlTelInputGlobals.getCountryData();\r\n  public dateFormateList = ['MM/DD/YY', 'DD/MM/YY'];\r\n  public selectedDateFormate: string;\r\n  public timeFormateList = [{ value: true, text: 'On (23:59)' }, { value: false, text: 'Off (11:59 AM/PM)' }];\r\n  public selectedTimeFormate = this.dataService.appState.date.is24Hours;\r\n  public dsLanguage: any[] = [];\r\n  @ViewChild('formGroupDirective', { static: true }) private formGroupDirective: FormGroupDirective;\r\n  isNumberValue = true;\r\n  combinedata: any;\r\n  inclinicdata: any;\r\n  clinicFullname: any;\r\n  refID: string;\r\n  public selectedMarket: number;\r\n\r\n  constructor(public userService: UserService, public fuseService: FuseService, public headerService: HeaderService, public sidemenuService: SidemenuService,\r\n    private formBuilder: UntypedFormBuilder, public confirmationDialogService: ConfirmationDialogService,\r\n    public labelService: LabelService, public dataService: DataService, public commonService: CommonService) {\r\n\r\n    this.selectedDateFormate = this.dataService.appState.date.selectedDateFormate;\r\n    this.selectedAccordion = this.dataService.appState.admin.profilePageSelectedAccordion;\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails(false, false);\r\n    } else {\r\n      this.labelService.bindUserProfileLabel();\r\n    }\r\n\r\n    this.selectedMarket = localStorage.userCountryId != undefined ? parseInt(localStorage.userCountryId) : EnmCountry.UnitedStates;\r\n  }\r\n\r\n  public onChangeDateFormate(e) {\r\n    this.selectedDateFormate = e.value;\r\n    this.dataService.appState.date.selectedDateFormate = e.value;\r\n    this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  public onChangeTimeFormate(e) {\r\n    this.selectedTimeFormate = e.value;\r\n    this.dataService.appState.date.is24Hours = e.value;\r\n    this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  public getUserDDLDetails(prefixId) {\r\n    this.userService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, prefixId).subscribe(data => {\r\n      this.userService.dsCountry = data.ResponseData.CountryDetails;\r\n      this.userService.dsTitle = data.ResponseData.TitleDetails;\r\n      this.userService.dsSuffix = data.ResponseData.SuffixDetails;\r\n      this.userService.dsLanguage = data.ResponseData.LanguageDetails;\r\n      this.userService.dsNotification = data.ResponseData.NotificationSettingsValue;\r\n      this.getUserSetting();\r\n    });\r\n  }\r\n  public getUserTitleDetails(prefixId) {\r\n    this.userService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, prefixId).subscribe(data => {\r\n      this.userService.dsTitle = data.ResponseData.TitleDetails;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dsUserPreference = new UserDetails();\r\n    this.profileForm = this.createFormGroup(new UserDetails());\r\n\r\n    this.getUserDDLDetails(null);\r\n    this.GetProviderDetails();\r\n    this.getUserSetting();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.dataService.appState.admin.profilePageSelectedAccordion = 1;\r\n    // this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    for (let i = 0; i < this.countryData.length; i++) {\r\n      const country = this.countryData[i];\r\n      country.name = '';\r\n    }\r\n    this.phoneInput = <HTMLInputElement>document.querySelector(\"#phone\");\r\n    const phoneInput = <HTMLInputElement>document.querySelector(\"#businessPhone\");\r\n    setTimeout(() => {\r\n      this.iti = intlTelInput(this.phoneInput, {\r\n        preferredCountries: ['us', \"ca\", 'mx'],\r\n        separateDialCode: true,\r\n        utilsScript: \"assets/intl-tel-input/js/utils.js\",\r\n      });\r\n      this.businessPhoneITI = intlTelInput(phoneInput, {\r\n        preferredCountries: ['us', \"ca\", 'mx'],\r\n        separateDialCode: true,\r\n        utilsScript: \"assets/intl-tel-input/js/utils.js\",\r\n      });\r\n    }, 2500)\r\n\r\n  }\r\n\r\n  public reIti() {\r\n    const phoneNo = this.dsUserProfile.PhoneNo;\r\n    const businessPhoneNo = this.dsUserProfile.BusinessPhoneNo;\r\n    if (phoneNo) this.iti.setNumber(phoneNo);\r\n    if (businessPhoneNo) this.businessPhoneITI.setNumber(businessPhoneNo);\r\n  }\r\n\r\n  onSelectCountryCode(e) {\r\n    if (e.target.id == 'businessPhone') {\r\n      this.profileForm.controls['BusinessPhoneNo'].setValue('');\r\n    } else {\r\n      this.profileForm.controls['PhoneNo'].setValue('');\r\n    }\r\n  }\r\n\r\n  public validatePhoneNo() {\r\n    this.profileForm.controls['PhoneNo'].setValue(this.profileForm.controls['PhoneNo'].value.replace(/[^0-9-+ ]*/g, ''));\r\n    const PhoneNo = this.iti.getNumber().trim()\r\n    // const errorMap = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\r\n    if (PhoneNo) {\r\n      if (this.iti.isValidNumber()) {\r\n        // console.log('Valid');\r\n      } else {\r\n        // const errorCode = this.iti.getValidationError();\r\n        this.iti.getValidationError();\r\n        this.profileForm.controls['PhoneNo'].setErrors({ 'incorrect': true });\r\n        this.profileForm.status['invalid'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public validateBusinessPhoneNo() {\r\n    this.profileForm.controls['BusinessPhoneNo'].setValue(this.profileForm.controls['BusinessPhoneNo'].value.replace(/[^0-9-+ ]*/g, ''));\r\n    const BusinessPhoneNo = this.businessPhoneITI.getNumber().trim()\r\n    // const errorMap = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\r\n    if (BusinessPhoneNo) {\r\n      if (this.businessPhoneITI.isValidNumber()) {\r\n        // console.log('Valid');\r\n      } else {\r\n        // const errorCode = this.businessPhoneITI.getValidationError();\r\n        this.businessPhoneITI.getValidationError();\r\n        this.profileForm.controls['BusinessPhoneNo'].setErrors({ 'incorrect': true });\r\n        this.profileForm.status['invalid'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getLabelDetails(isUpdateChild, forceApiCall) {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage, forceApiCall).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindUserProfileLabel();\r\n      if (isUpdateChild) {\r\n        this.labelService.bindSideMenuLabel();\r\n        this.labelService.bindHeaderLabel();\r\n        this.showMsg(this.labelService.dsUserProfileScreen.UserPreferenceUpdatedSuccessfully);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLanguageName(langId) {\r\n    if (langId != undefined && this.userService.dsLanguage.length)\r\n      return this.userService.dsLanguage.find(x => x.Id == langId).Name;\r\n    else\r\n      return \"\";\r\n  }\r\n\r\n  public getUserSetting() {\r\n    this.userService.getUserSettingDetails(this.headerService.loginUserGuid, localStorage.businessGuid).subscribe(data => {\r\n      this.userService.originalUserProfileData = data.ResponseData;\r\n\r\n      this.commonService.getLanguageDetails().subscribe(data => {\r\n        // this.dsLanguage = data.ResponseData.filter(ele =>\r\n        //   ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == this.userService.originalUserProfileData.CountryId)\r\n        // );\r\n\r\n        this.dsLanguage = data.ResponseData.filter(ele =>\r\n          ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == this.selectedMarket)\r\n        );\r\n\r\n        this.sortLanguage()\r\n\r\n      })\r\n\r\n      if (this.userService.originalUserProfileData.FollowPatient == undefined || this.userService.originalUserProfileData.FollowPatient == null)\r\n        this.userService.originalUserProfileData.FollowPatient = EnmNotificationSetting.AllClinicResults;\r\n      this.getUserTitleDetails(this.userService.originalUserProfileData.PrefixTypeId);\r\n      this.setDataSource();\r\n    });\r\n\r\n  }\r\n\r\n  public sortLanguage() {\r\n    const selectedMarket = this.selectedMarket;\r\n    if (this.dsLanguage.length > 1) {\r\n      this.dsLanguage.forEach(function (ele) {\r\n        const gigyaLan = ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == selectedMarket);\r\n        if (gigyaLan != undefined) {\r\n          ele.SeqNumber = gigyaLan.SeqNumber;\r\n        }\r\n      });\r\n    }\r\n    this.dsLanguage.sort((a, b) => a.SeqNumber - b.SeqNumber);\r\n  }\r\n\r\n  public setDataSource() {\r\n    this.profileForm = this.createFormGroup(this.dsUserProfile);\r\n    this.dsUserProfile = Object.assign({}, this.userService.originalUserProfileData);\r\n    Object.assign(this.dsUserPreference, this.userService.originalUserProfileData);\r\n    this.securityEmail = this.userService.originalUserProfileData.Email;\r\n    this.profileEmail = this.userService.originalUserProfileData.Email;\r\n    this.isNumberValue = this.dsUserProfile.PhoneNo ? true : false;\r\n    if (this.dsUserProfile.UserTypeId == EnmUserType.Business) {\r\n      this.isUserTypeBusiness = true;\r\n      if (this.userService.dsCountry.length) {\r\n        this.dsState = this.userService.dsCountry.find(x => x.Id == this.dsUserProfile.CountryId).StateDetails;\r\n        this.profileForm.controls['StateId'].setValue(this.dsUserProfile.StateId);\r\n      }\r\n    }\r\n    else {\r\n      this.isUserTypeBusiness = false;\r\n    }\r\n\r\n    this.reIti();\r\n  }\r\n\r\n  public onCountryChange() {\r\n    this.dsState = this.userService.dsCountry.find(x => x.Id == this.profileForm.controls['CountryId'].value).StateDetails;\r\n  }\r\n\r\n  public updateOnOffNotification(val: any) {\r\n    const checkHandle = val.getAttribute('class');\r\n    if (checkHandle.includes('handle') === true) {\r\n      val = val.parentElement;\r\n    }\r\n    const currStatus = val.getAttribute('class');\r\n\r\n    const checked: any = currStatus.includes('active');\r\n    const msg = checked ? this.labelService.dsUserProfileScreen.UserOffNotificationConfirmationMsg : this.labelService.dsUserProfileScreen.UserOnNotificationConfirmationMsg\r\n\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserProfileScreen.Yes, this.labelService.dsUserProfileScreen.No)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n\r\n          if (checked)\r\n            this.dsUserPreference[\"IsNotification\"] = false;\r\n          else\r\n            this.dsUserPreference[\"IsNotification\"] = true;\r\n        }\r\n        else {\r\n          val.setAttribute('class', currStatus);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        val.setAttribute('class', currStatus);\r\n        console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)')\r\n      });\r\n\r\n  }\r\n\r\n  private editProfile() {\r\n    this.isProfileEditable = true;\r\n    this.profileForm.patchValue(this.dsUserProfile);\r\n  }\r\n\r\n  private cancelEditProfile() {\r\n    this.isProfileEditable = false;\r\n    this.profileForm.patchValue(this.dsUserProfile);\r\n    this.iti.setNumber(this.dsUserProfile.PhoneNo);\r\n    this.businessPhoneITI.setNumber(this.dsUserProfile.BusinessPhoneNo);\r\n    this.reIti();\r\n  }\r\n\r\n  public PostDoctorMgtDetails() {\r\n    const providerDetails = {\r\n      ReflabProviderId: this.profileForm.controls['RefLabProviderId'].value,\r\n      ClinicProviderId: this.profileForm.controls['ClinicProviderId'].value,\r\n      FirstName: \"\",\r\n      LastName: \"\",\r\n      BusinessGuid: localStorage.businessGuid,\r\n      UserGuid: this.headerService.loginUserGuid\r\n    }\r\n\r\n    {\r\n      this.commonService.postProviderDetails(providerDetails).subscribe(data => {\r\n\r\n        if (data.StatusCode == \"302\") {\r\n          this.showMsg(this.labelService.dsUserProfileScreen.ContactClinicAdmin);\r\n          this.isPreferenceEditable = false;\r\n          this.getUserSetting();\r\n        } else if (data.StatusCode == \"200\") {\r\n          this.showMsg(this.labelService.dsUserProfileScreen.UserProfileUpdatedSuccessfully);\r\n          this.isPreferenceEditable = false;\r\n          this.getUserSetting();\r\n        }\r\n        else {\r\n          this.showMsg(\"Record not found\");\r\n        }\r\n\r\n      }, err => { \r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n       });\r\n    }\r\n\r\n  }\r\n\r\n  public GetProviderDetails() {\r\n    this.commonService.GetProviderList(localStorage.businessGuid).subscribe(data => {\r\n      this.providerData = data.ResponseData.Provider;\r\n      this.inclinicdata = data.ResponseData.Physician;\r\n      if (data.ResponseData.Physician && data.ResponseData.Physician.length) {\r\n        this.clinicFullname = data.ResponseData.Physician[0]['PhysicianIdName'];\r\n      }\r\n    });\r\n  }\r\n\r\n  public editPreference() {\r\n    this.isPreferenceEditable = true;\r\n\r\n    this.dsUserPreference = this.userService.originalUserProfileData;\r\n    this.profileForm = this.createFormGroup(this.dsUserProfile);\r\n    this.profileForm.get(\"RefLabProviderId\").patchValue(this.dsUserProfile.SelectedRefLabProviderId);\r\n    this.profileForm.get(\"ClinicProviderId\").patchValue(this.dsUserProfile.SelectedInClinicProviderId);\r\n  }\r\n\r\n  public cancelEditPreference() {\r\n    this.isPreferenceEditable = false;\r\n    this.dsUserPreference[\"LanguageId\"] = this.userService.originalUserProfileData.LanguageId;\r\n    this.dsUserPreference[\"IsNotification\"] = this.userService.originalUserProfileData.IsNotification;\r\n    this.dsUserPreference[\"FollowPatient\"] = this.userService.originalUserProfileData.FollowPatient;\r\n\r\n  }\r\n\r\n  public updateUserPreference() {\r\n    this.dsUserPreference.UserRelationGuid = this.headerService.loginUserGuid;\r\n    if (this.userService.originalUserProfileData.LanguageId != this.dsUserPreference[\"LanguageId\"] && this.userService.originalUserProfileData.FollowPatient == this.dsUserPreference[\"FollowPatient\"]) {\r\n      const selectedLangName = \"'\" + this.getLanguageName(this.dsUserPreference[\"LanguageId\"]) + \"'\";\r\n      const confMsg = this.labelService.dsUserProfileScreen.UserLanguageChangeConfirmationMsg.replace(\"@@\", selectedLangName);\r\n      this.confirmationDialogService.confirm(\"\", confMsg, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.updatePreferences();\r\n          }\r\n        })\r\n        .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n\r\n    }\r\n    else if (this.userService.originalUserProfileData.LanguageId == this.dsUserPreference[\"LanguageId\"] && this.userService.originalUserProfileData.FollowPatient != this.dsUserPreference[\"FollowPatient\"] && this.dsUserPreference[\"FollowPatient\"] == EnmNotificationSetting.FollowPatients) {\r\n      this.confirmationDialogService.confirm(\"\", this.labelService.dsUserProfileScreen.FollowPatientNotification, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.updatePreferences();\r\n          }\r\n        })\r\n        .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n\r\n    }\r\n    else {\r\n      this.updatePreferences();\r\n    }\r\n\r\n  }\r\n\r\n  public updatePreferences() {\r\n    this.userService.updateUserPreference(this.dsUserPreference).subscribe({next:() => {\r\n      localStorage.setItem('languageId', this.dsUserPreference[\"LanguageId\"].toString());\r\n      this.dataService.appData.masterData.languageId = this.dsUserPreference[\"LanguageId\"].toString();\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      localStorage.setItem('notificationSettingId', this.dsUserPreference[\"FollowPatient\"].toString());\r\n      this.headerService.notificationSettingId = this.dsUserPreference[\"FollowPatient\"];\r\n      this.labelService.selectedLanguage = this.dsUserPreference[\"LanguageId\"];\r\n      this.getLabelDetails(true, true);\r\n\r\n      this.getUserDDLDetails(this.dsUserPreference.PrefixTypeId);\r\n      this.isPreferenceEditable = false;\r\n      // this.headerService.getNotification(this.labelService.selectedLanguage);\r\n      this.sidemenuService.getSideMenu(this.headerService.userTypeId, this.labelService.selectedLanguage, this.labelService.userCountryId, false);\r\n    }, error:() => {\r\n\r\n      this.showMsg(this.labelService.dsUserProfileScreen.Error);\r\n    }});\r\n  }\r\n\r\n  public resetUserSecurityRequest() {\r\n    this.resetSignalRequest = new ResetSignalRequest();\r\n    this.resetSignalRequest.Email = this.userService.originalUserProfileData.Email;\r\n    this.resetSignalRequest.LanguageId = this.labelService.selectedLanguage;\r\n    this.userService.resetSignalRequest(this.resetSignalRequest).subscribe({next:() => {\r\n      this.resetReqMsg = this.labelService.dsUserProfileScreen.ResetSignalRequset;\r\n    }, error:() => {\r\n      this.resetReqMsg = this.labelService.dsUserProfileScreen.Error;\r\n    }});\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel, \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.reIti();\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n\r\n  }\r\n\r\n  public validateNumber() {\r\n    this.profileForm.controls['PhoneNo'].setValue(this.profileForm.controls['PhoneNo'].value.replace(/[^0-9-+ ]*/g, ''));\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      \"Id\": dataItem.Id,\r\n      'PrefixTypeId': dataItem.PrefixTypeId,\r\n      'RefLabProviderId': [dataItem.RefLabProviderId],\r\n      'ClinicProviderId': [dataItem.ClinicProviderId],\r\n      'UserRelationGuid': this.headerService.loginUserGuid,\r\n      'BusinessGuid': this.headerService.businessGuid,\r\n      'CreatedGuid': dataItem.CreatedGuid,\r\n      'UserTypeId': dataItem.UserTypeId,\r\n      'UserGuid': dataItem.UserGuid,\r\n      'UserRelationId': dataItem.UserRelationId,\r\n      'CreatedAt': dataItem.CreatedAt,\r\n      'StateId': dataItem.StateId,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n  <div id=\"content\" class=\"account\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div id=\"profile\">\r\n            <mat-accordion>\r\n              <app-preferences [dsLanguage]=\"dsLanguage\"> </app-preferences>\r\n              <mat-expansion-panel\r\n                *ngIf=\"dsUserProfile.UserTypeId === 1 || dsUserProfile.UserTypeId === 2 || dsUserProfile.UserTypeId === 35\"\r\n                [expanded]=\"selectedAccordion===2\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title\r\n                    class=\"text-center text-sm-left d-block\">{{labelService.dsUserProfileScreen.DoctorIDManagement}}</mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <form [formGroup]=\"profileForm\" class=\"profileForm1\">\r\n                  <div class=\"row m-0\" [ngClass]=\"{'view-mode':!isPreferenceEditable }\">\r\n                    <div class=\"col-12 mb-3  \">\r\n                      <div class=\"edit-pref-display edit-align-items nobtm-pad s-input\">\r\n                        <label for=\"\" class=\"mb-0 noti_label\"> {{labelService.dsUserProfileScreen.RefLabProviderID ?\r\n                          labelService.dsUserProfileScreen.RefLabProviderID : \"N/A\"}} :</label>\r\n                        <label for=\"\" class=\"mb-0 lang_label\"\r\n                          *ngIf=\"!isPreferenceEditable\">{{dsUserProfile.RefLabProviderId ?\r\n                          dsUserProfile.RefLabProviderId : labelService.dsUserProfileScreen.None}}</label>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\" *ngIf=\"isPreferenceEditable\"\r\n                          class=\"width-set\">\r\n\r\n                          <mat-select autocomplete=\"off\" formControlName=\"RefLabProviderId\"\r\n                            [placeholder]=\"labelService.dsUserProfileScreen.None\">\r\n\r\n                            <mat-option value=\"\">\r\n                              {{labelService.dsUserProfileScreen.None}}\r\n                            </mat-option>\r\n                            <mat-option *ngFor=\"let provider of providerData\" [value]=\"provider.Id\">\r\n\r\n                              {{provider.ProviderIdName}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                      <div class=\"edit-pref-display edit-align-items nobtm-pad s-input\">\r\n                        <label for=\"\" class=\"mb-0 noti_label\">\r\n\r\n                          {{labelService.dsUserProfileScreen.InClinicProviderID}} :\r\n                        </label>\r\n                        <label for=\"\" class=\"mb-0 lang_label\"\r\n                          *ngIf=\"!isPreferenceEditable\">{{dsUserProfile.InClinicProviderId ?\r\n                          dsUserProfile.InClinicProviderId : labelService.dsUserProfileScreen.None}}</label>\r\n                        <mat-form-field appearance=\"outline\" floatLabel=\"always\" *ngIf=\"isPreferenceEditable\"\r\n                          class=\"width-set\">\r\n\r\n                          <mat-select autocomplete=\"off\" formControlName=\"ClinicProviderId\"\r\n                            [placeholder]=\"labelService.dsUserProfileScreen.Select\">\r\n                            <mat-option value=\"\">\r\n                              {{labelService.dsUserProfileScreen.None}}\r\n                            </mat-option>\r\n                            <mat-option *ngFor=\"let clinic of inclinicdata\" [value]=\"clinic.Id\">\r\n                              {{clinic.PhysicianIdName}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </form>\r\n                <div class=\"d-flex mt-4 justify-content-center mt-4\">\r\n                  <button mat-raised-button class=\"mr-2 cncl-btn edit-btn\" color=\"warn\" *ngIf=\"!isPreferenceEditable\"\r\n                    (click)=\"editPreference()\"><img src=\"../../../../assets/img/edit@3x.png\" alt=\"\">\r\n                    {{labelService.dsUserProfileScreen.Edit}}</button>\r\n                  <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\" *ngIf=\"isPreferenceEditable\"\r\n                    (click)=\"cancelEditPreference()\">{{labelService.dsUserProfileScreen.Cancel}}</button>\r\n                  <button mat-raised-button color=\"warn\" *ngIf=\"isPreferenceEditable\"\r\n                    (click)=\"PostDoctorMgtDetails()\">{{labelService.dsUserProfileScreen.Save}}</button>\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, FormGroupDirective, UntypedFormGroup } from '@angular/forms';\r\nimport { UserDetails, ResetSignalRequest } from '../../../models/user';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { EnmUserType, EnmNotificationSetting, EnmCountry } from '../../../shared/constants/enum';\r\nimport { SidemenuService } from '../../../services/sidemenu.service';\r\nimport { LabelService, UserService, HeaderService, DataService, CommonService } from '../../../services';\r\ndeclare let $: any;\r\n@Component({\r\n  selector: 'app-preferences',\r\n  templateUrl: './preferences.component.html',\r\n  styleUrls: ['./preferences.component.css']\r\n})\r\nexport class PreferencesComponent implements OnInit, OnDestroy {\r\n\r\n  panelOpenState = false;\r\n  public isProfileEditable = false;\r\n  public isPreferenceEditable = false;\r\n  public dsUserProfile: any = {};\r\n  public dsUserPreference: UserDetails;\r\n  public resetSignalRequest: ResetSignalRequest;\r\n  public isUserTypeBusiness = false;\r\n  public resetReqMsg = \"\";\r\n  public profileEmail = \"\";\r\n  public securityEmail = \"\";\r\n  public profileForm: UntypedFormGroup;\r\n  public selectedAccordion: number;\r\n  public dsState: any[] = [];\r\n  public timeZoneList: any[] = [];\r\n  public dateFormateList: any[] = [];\r\n  public selectedDateFormate: string;\r\n  public timeFormateList: any[] = [];\r\n  public selectedTimeFormate = this.dataService.appState.date.is24Hours;\r\n  public userId: number = localStorage.authDetails ?JSON.parse(localStorage.authDetails).Id:undefined;\r\n  public UserGuid: number = localStorage.authDetails ?JSON.parse(localStorage.authDetails).UserGuid:undefined;\r\n  public userStatusId = 0;\r\n  public userTypeId = 0;\r\n\r\n  @ViewChild('formGroupDirective', { static: true }) private formGroupDirective: FormGroupDirective;\r\n  isNumberValue = true;\r\n  dsUserList: any;\r\n  public IsLinkedRefLabClinic: boolean;\r\n  userTypeIdfor: boolean;\r\n  public notificationSettingLIst: any[];\r\n  @Input() dsLanguage: any[] = [];\r\n\r\n  constructor(public userService: UserService, public commonService: CommonService, public headerService: HeaderService, public sidemenuService: SidemenuService,\r\n    private formBuilder: UntypedFormBuilder, public confirmationDialogService: ConfirmationDialogService,\r\n    public labelService: LabelService, public dataService: DataService) {\r\n    this.IsLinkedRefLabClinic = this.dataService.appData.authDetails['IsLinkedRefLabClinic'];\r\n    this.userTypeIdfor = this.dataService.appData.authDetails['UserTypeId'];\r\n    this.selectedAccordion = this.dataService.appState.admin.profilePageSelectedAccordion;\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails(false, false);\r\n    } else {\r\n      this.labelService.bindUserProfileLabel();\r\n    }\r\n  }\r\n\r\n  public onChangeDateFormate() {\r\n    if (this.userService.originalUserProfileData.TimeZoneId != this.dsUserPreference[\"TimeZoneId\"]) {\r\n      const confmsg = this.labelService.dsUserProfileScreen.UserTimeZoneChangeConfirmationMsg;\r\n      this.confirmationDialogService.confirm(\"\", confmsg, this.labelService.dsUserProfileScreen.Confirm, this.labelService.dsUserProfileScreen.Cancel)\r\n        .then((confirmed) => {\r\n            confirmed? null:this.dsUserPreference[\"TimeZoneId\"] = this.userService.originalUserProfileData.TimeZoneId;\r\n          // if (confirmed) {\r\n          // }\r\n          // else {\r\n          //   this.dsUserPreference[\"TimeZoneId\"] = this.userService.originalUserProfileData.TimeZoneId;\r\n          // }\r\n        })\r\n        .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n    }\r\n  }\r\n\r\n  public onChangeTimeFormate(e) {\r\n    this.selectedTimeFormate = e.value;\r\n  }\r\n\r\n  public getUserDDLDetails(prefixId) {\r\n    // const lang = langId || this.labelService.selectedLanguage;\r\n    this.userService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, prefixId).subscribe(data => {\r\n      this.timeZoneList = data.ResponseData.TimeZonesList;\r\n      this.userService.dsLanguage = data.ResponseData.LanguageDetails;\r\n      this.dateFormateList = data.ResponseData.DateFormatList;\r\n      this.dateFormateList.forEach((e) => {\r\n        if (e['Id'] == this.dsUserPreference.DateFormatId) {\r\n          localStorage.setItem('DateTimeFormat',e['ExactDateTime'].replace(/(?<!y)y(?!y)/g, 'YY').toUpperCase( ));\r\n        }\r\n      })\r\n      this.timeFormateList = data.ResponseData.TimeFormatList;\r\n      this.userService.dsNotification = data.ResponseData.NotificationSettingsValue;\r\n\r\n      this.notificationSettingLIst = data.ResponseData.NotificationSettingsValue.filter(item => {\r\n        if (this.dataService.appData.authDetails['UserTypeId'] == EnmUserType.Business || this.dataService.appData.authDetails['UserTypeId'] == EnmUserType.DVM) {\r\n          return item;\r\n        } else {\r\n          return item.Id == 1 || item.Id == 3;\r\n        }\r\n      });\r\n      this.getUserSetting();\r\n      //}\r\n    });\r\n  }\r\n\r\n  public getUserTitleDetails(prefixId) {\r\n    this.userService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, prefixId).subscribe(data => {\r\n      this.userService.dsTitle = data.ResponseData.TitleDetails;\r\n    });\r\n  }\r\n\r\n  //guid updated\r\n  public getUserList() {\r\n    this.commonService.getUserList(this.headerService.loginUserGuid, localStorage.businessGuid, this.userStatusId > 0 ? this.userStatusId : null, this.userTypeId > 0 ? this.userTypeId : null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.dsUserList = data.ResponseData;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dsUserPreference = new UserDetails();\r\n    this.profileForm = this.createFormGroup(new UserDetails());\r\n    this.getUserDDLDetails(null);\r\n    this.getUserList();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.dataService.appState.admin.profilePageSelectedAccordion = 1;\r\n    // this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  public getLabelDetails(isUpdateChild, showUpdateMsg = true, forceApiCall = false) {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage, forceApiCall).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.dataService.appData.labels = data.ResponseData;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.labelService.bindUserProfileLabel();\r\n      if (isUpdateChild) {\r\n        this.labelService.bindSideMenuLabel();\r\n        this.labelService.bindHeaderLabel();\r\n        if (showUpdateMsg) this.showMsg(this.labelService.dsUserProfileScreen.UserPreferenceUpdatedSuccessfully);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLanguageName(langId) {\r\n    if (langId != undefined && this.userService.dsLanguage.length)\r\n      return this.userService.dsLanguage.find(x => x.Id == langId).Name;\r\n    else\r\n      return null;\r\n  }\r\n\r\n  public getNotificationSettingName(FollowPatientId) {\r\n    if ((FollowPatientId != undefined || FollowPatientId != null || FollowPatientId != 0) && this.userService.dsNotification.length && FollowPatientId != 3)\r\n      return this.userService.dsNotification.find(x => x.Id == FollowPatientId).SettingsValue;\r\n    else\r\n      return \"\";\r\n  }\r\n\r\n  public getUserSetting() {\r\n    this.userService.getUserSettingDetails(this.headerService.loginUserGuid, localStorage.businessGuid).subscribe({next:(data) => {\r\n      this.userService.originalUserProfileData = data.ResponseData;\r\n      if (this.userService.originalUserProfileData.FollowPatient == undefined || this.userService.originalUserProfileData.FollowPatient == null)\r\n        this.userService.originalUserProfileData.FollowPatient = EnmNotificationSetting.AllClinicResults;\r\n      this.getUserTitleDetails(this.userService.originalUserProfileData.PrefixTypeId);\r\n      this.setDataSource();\r\n    }, error:() => {\r\n      this.userService.originalUserProfileData = null;\r\n      this.dsUserProfile = null;\r\n      this.dsUserPreference = null;\r\n      this.profileEmail = \"\";\r\n      this.securityEmail = \"\";\r\n      this.isUserTypeBusiness = false;\r\n    }});\r\n  }\r\n\r\n  public setDataSource() {\r\n    this.profileForm = this.createFormGroup(this.dsUserProfile);\r\n    \r\n    this.userService.originalUserProfileData['DateFormatName']=this.dateFormateList.find(e =>e['Id'] == this.userService.originalUserProfileData['DateFormatId']).DateTimeFormat\r\n    this.dsUserProfile = Object.assign({}, this.userService.originalUserProfileData);\r\n    Object.assign(this.dsUserPreference, this.userService.originalUserProfileData);\r\n    if (!this.dsUserPreference.TimeZoneId) {\r\n      this.dsUserPreference.TimeZoneId = 11;\r\n      this.updatePreferences(false);\r\n      this.getUserSetting();\r\n      return false;\r\n    }\r\n    this.dsUserPreference.TimeZoneNameWithUTCOffset = this.timeZoneList.find(x => x.Id == this.dsUserPreference.TimeZoneId).TimeZoneNameWithUTCOffset;\r\n    this.securityEmail = this.userService.originalUserProfileData.Email;\r\n    this.profileEmail = this.userService.originalUserProfileData.Email;\r\n    this.isNumberValue = this.dsUserProfile.PhoneNo ? true : false;\r\n    if (this.dsUserProfile.UserTypeId == EnmUserType.Business) {\r\n      this.isUserTypeBusiness = true;\r\n      if (this.userService.dsCountry.length) {\r\n        this.dsState = this.userService.dsCountry.find(x => x.Id == this.dsUserProfile.CountryId).StateDetails;\r\n        this.profileForm.controls['StateId'].setValue(this.dsUserProfile.StateId);\r\n      }\r\n    }\r\n    else {\r\n      this.isUserTypeBusiness = false;\r\n    }\r\n\r\n  }\r\n\r\n  public editPreference() {\r\n    this.isPreferenceEditable = true;\r\n  }\r\n\r\n  public cancelEditPreference() {\r\n    this.isPreferenceEditable = false;\r\n    this.dsUserPreference[\"LanguageId\"] = this.userService.originalUserProfileData.LanguageId;\r\n    this.dsUserPreference[\"IsNotification\"] = this.userService.originalUserProfileData.IsNotification;\r\n    this.dsUserPreference[\"FollowPatient\"] = this.userService.originalUserProfileData.FollowPatient;\r\n    this.dsUserPreference[\"TimeZoneNameWithUTCOffset\"] = this.userService.originalUserProfileData.TimeZoneNameWithUTCOffset;\r\n    // this.dsUserPreference[\"DateFormatName\"] = this.userService.originalUserProfileData.DateFormatName;\r\n    this.dsUserPreference[\"DateFormatName\"] = this.dateFormateList.find(e =>e['Id'] == this.userService.originalUserProfileData['DateFormatId']).DateTimeFormat;\r\n    this.dsUserPreference[\"TimeFormatName\"] = this.userService.originalUserProfileData.TimeFormatName;\r\n    this.dsUserPreference[\"TimeZoneId\"] = this.userService.originalUserProfileData.TimeZoneId;\r\n    this.dsUserPreference[\"DateFormatId\"] = this.userService.originalUserProfileData.DateFormatId;\r\n    this.dsUserPreference[\"TimeFormatId\"] = this.userService.originalUserProfileData.TimeFormatId;\r\n  }\r\n\r\n  public updateUserPreference() {\r\n    this.dsUserPreference ['DateFormatName']=this.dateFormateList.find(e =>e['Id'] == this.dsUserPreference.DateFormatId).DateTimeFormat\r\n    if (this.userService.originalUserProfileData.LanguageId != this.dsUserPreference[\"LanguageId\"] && this.userService.originalUserProfileData.FollowPatient == this.dsUserPreference[\"FollowPatient\"]) {\r\n      const selectedLangName = \"'\" + this.getLanguageName(this.dsUserPreference[\"LanguageId\"]) + \"'\";\r\n      const confMsg = this.labelService.dsUserProfileScreen.UserLanguageChangeConfirmationMsg.replace(\"@@\", selectedLangName);\r\n      this.confirmationDialogService.confirm(\"\", confMsg, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.updatePreferences();\r\n          }\r\n        })\r\n        .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n    }\r\n\r\n    else if (this.userService.originalUserProfileData.LanguageId == this.dsUserPreference[\"LanguageId\"] && this.userService.originalUserProfileData.FollowPatient != this.dsUserPreference[\"FollowPatient\"] && this.dsUserPreference[\"FollowPatient\"] == EnmNotificationSetting.FollowPatients) {\r\n      this.confirmationDialogService.confirm(\"\", this.labelService.dsUserProfileScreen.FollowPatientNotification, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel)\r\n        .then((confirmed) => {\r\n          if (confirmed) {\r\n            this.updatePreferences();\r\n          }\r\n        })\r\n        .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n    }\r\n    else {\r\n      this.updatePreferences();\r\n    }\r\n\r\n  }\r\n\r\n  public updatePreferences(showUpdateMsg = true) {\r\n    this.userService.updateUserPreference(this.dsUserPreference).subscribe({next:() => {\r\n\r\n      this.dataService.appData.authDetails['LanguageId'] = this.dsUserPreference.LanguageId;\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      const selectedMarket = localStorage.userCountryId != undefined ? parseInt(localStorage.userCountryId) : EnmCountry.UnitedStates;\r\n      let langCode = '';\r\n      this.labelService.selectedLanguage = this.dsUserPreference[\"LanguageId\"];\r\n      this.getLabelDetails(true, showUpdateMsg, true);\r\n      const gigyaLanguage = this.dsLanguage.find(x => x.Id == this.labelService.selectedLanguage).GigyaLanguageCode;\r\n      if (gigyaLanguage != undefined && gigyaLanguage != null && gigyaLanguage.length > 0) {\r\n        langCode = gigyaLanguage.find(x => x.GMarketID == selectedMarket) != undefined ? gigyaLanguage.find(x => x.GMarketID == selectedMarket).GigyaLangCode : this.dsLanguage.find(x => x.Id == this.labelService.selectedLanguage).Code;\r\n      }\r\n      else {\r\n        langCode = this.dsLanguage.find(x => x.Id == this.labelService.selectedLanguage).Code;\r\n      }\r\n\r\n      localStorage.setItem('langCode', langCode);\r\n      this.dataService.appData.masterData.langCode = langCode;\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      localStorage.setItem('languageId', this.labelService.selectedLanguage.toString());\r\n      this.dataService.appData.masterData.languageId = this.labelService.selectedLanguage.toString();\r\n      this.dataService.data.next(this.dataService.appData);\r\n\r\n      this.dataService.appData.authDetails['DateFormatId'] = this.dsUserPreference.DateFormatId.toString();\r\n      this.dateFormateList.forEach((e) => {\r\n        if (e['Id'] == this.dsUserPreference.DateFormatId) {\r\n          this.dsUserPreference ['DateFormatName']= e['DateTimeFormat']\r\n          localStorage.setItem('DateTimeFormat',e['ExactDateTime'].replace(/(?<!y)y(?!y)/g, 'YY').toUpperCase( ));\r\n        }\r\n      })\r\n\r\n      this.dataService.appData.authDetails['TimeZoneId'] = this.dsUserPreference[\"TimeZoneId\"];\r\n      this.dataService.appData.authDetails['TimeFormatId'] = this.selectedTimeFormate ? this.selectedTimeFormate : this.dsUserPreference.TimeFormatId;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      localStorage.setItem('notificationSettingId', this.dsUserPreference[\"FollowPatient\"].toString());\r\n      this.headerService.notificationSettingId = this.dsUserPreference[\"FollowPatient\"];\r\n      this.getUserDDLDetails(this.dsUserPreference.PrefixTypeId);\r\n      this.isPreferenceEditable = false;\r\n      this.sidemenuService.getSideMenu(this.headerService.userTypeId, this.labelService.selectedLanguage, this.labelService.userCountryId, false);\r\n\r\n      if ($(\"#widget\")[0] != undefined)\r\n        $(\"#widget\")[0].remove();\r\n      this.headerService.isProfileReload = true;\r\n      this.headerService.isChangePwdReload = true;\r\n      try {\r\n        let enGenderList: any; let enSpeciesList: any;\r\n        this.commonService.getFilterDDLDetails(1).subscribe(res => {\r\n          enGenderList = res.ResponseData['GenderList']\r\n          enSpeciesList = res.ResponseData['SpeciesList']\r\n        }, err => {\r\n          console.log(JSON.stringify(err));\r\n          this.commonService.showCommonToastrError();\r\n        });\r\n        const langId = this.dataService.appData.authDetails['LanguageId'];\r\n        if (langId) {\r\n          this.commonService.getFilterDDLDetails(langId).subscribe(res => {\r\n            res.ResponseData['enGenderList'] = enGenderList\r\n            res.ResponseData['enSpeciesList'] = enSpeciesList\r\n            this.dataService.appData.filterDropDownList = res.ResponseData;\r\n            this.dataService.data.next(this.dataService.appData);\r\n          }, err => {\r\n            console.log(JSON.stringify(err));\r\n            this.commonService.showCommonToastrError();\r\n          });\r\n        }\r\n      } catch (err) {\r\n        this.showMsg(this.labelService.dsUserProfileScreen.Error);\r\n      }\r\n    }, error:() => {\r\n      this.showMsg(this.labelService.dsUserProfileScreen.Error);\r\n    }});\r\n  }\r\n\r\n  public resetUserSecurityRequest() {\r\n    this.resetSignalRequest = new ResetSignalRequest();\r\n    this.resetSignalRequest.Email = this.userService.originalUserProfileData.Email;\r\n    this.resetSignalRequest.LanguageId = this.labelService.selectedLanguage;\r\n    this.userService.resetSignalRequest(this.resetSignalRequest).subscribe({next:() => {\r\n      this.resetReqMsg = this.labelService.dsUserProfileScreen.ResetSignalRequset;\r\n    }, error:() => {\r\n      this.resetReqMsg = this.labelService.dsUserProfileScreen.Error;\r\n    }});\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel, \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          //\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      'BusinessGuid': this.headerService.businessGuid,\r\n      'CreatedGuid': this.headerService.businessGuid,\r\n      'UserTypeId': dataItem.UserTypeId,\r\n      'UserGuid': this.headerService.loginUserGuid,\r\n      'UserRelationGuid': dataItem.UserRelationGuid,\r\n      'CreatedAt': dataItem.CreatedAt,\r\n      'StateId': dataItem.StateId,\r\n    });\r\n  }\r\n  \r\n}\r\n","<mat-expansion-panel [expanded]=\"selectedAccordion===1\">\r\n  <mat-expansion-panel-header class=\"cursor-rem\">\r\n    <mat-panel-title data-testid=\"pr-title\" class=\"text-center text-sm-left d-block\">{{labelService.dsUserProfileScreen.Preferences}}\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n  <div class=\"preferences profileForm1\">\r\n    <div class=\"d-flex\" [ngClass]=\"{'view-mode':!isPreferenceEditable }\">\r\n      <div class=\"col pr-3 pl-3 prefinput\">\r\n        <div class=\"edit-pref-display align-items-center nobtm-pad s-input\">\r\n          <label for=\"\" class=\"mb-0 noti_label\">{{labelService.dsUserProfileScreen.Language}} : </label>\r\n          <label for=\"\" class=\"mb-0 lang_label\"\r\n            *ngIf=\"!isPreferenceEditable\">{{getLanguageName(dsUserPreference.LanguageId)}}</label>\r\n          <mat-form-field class=\"width-set\" appearance=\"outline\" floatLabel=\"always\" *ngIf=\"isPreferenceEditable\">\r\n            <mat-select autocomplete=\"off\" [(ngModel)]=\"dsUserPreference.LanguageId\"\r\n              (selectionChange)=\"reloadDDL($event)\">\r\n              <mat-option *ngFor=\"let language of dsLanguage\" [value]=\"language.Id\">\r\n                {{ language.Name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--=========== Date formate DDN ===========-->\r\n    <div class=\"d-flex mt-4\" [ngClass]=\"{'view-mode':!isPreferenceEditable }\">\r\n      <div class=\"col pr-3 pl-3 \">\r\n        <div class=\"edit-pref-display align-items-start nobtm-pad s-input\">\r\n          <label for=\"\" class=\"mb-0 noti_label\">{{labelService.dsUserProfileScreen.TimeZone}} : </label>\r\n          <label for=\"\" class=\"mb-0 lang_label timeSet\"\r\n            *ngIf=\"!isPreferenceEditable\">{{dsUserPreference.TimeZoneNameWithUTCOffset}}\r\n          </label>\r\n          <mat-form-field class=\"width-set\" appearance=\"outline\" floatLabel=\"always\" *ngIf=\"isPreferenceEditable\">\r\n            <mat-select autocomplete=\"off\" (selectionChange)=\"onChangeDateFormate()\"\r\n              [(ngModel)]=\"dsUserPreference.TimeZoneId\">\r\n              <mat-option *ngFor=\"let timeZone of timeZoneList\" [value]=\"timeZone.Id\">\r\n                {{ timeZone.TimeZoneNameWithUTCOffset }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--=========== Time formate selection ===========-->\r\n    <div class=\"d-flex mt-4\" [ngClass]=\"{'view-mode':!isPreferenceEditable }\">\r\n      <div class=\"col pr-3 pl-3 \">\r\n        <div class=\"dFormt nobtm-pad s-input\">\r\n          <div class=\"edit-pref-display\">\r\n            <label for=\"\" class=\"mb-0 noti_label\">{{labelService.dsUserProfileScreen.DateFormat}} : </label>\r\n            <label for=\"\" class=\"mb-0 lang_label lSet\" *ngIf=\"!isPreferenceEditable\">{{dsUserPreference.DateFormatName}}\r\n            </label>\r\n            <mat-form-field class=\"width-set formSet\" appearance=\"outline\" floatLabel=\"always\"\r\n              *ngIf=\"isPreferenceEditable\">\r\n              <mat-select autocomplete=\"off\" [(ngModel)]=\"dsUserPreference.DateFormatId\">\r\n                <mat-option *ngFor=\"let dateFormate of dateFormateList\" [value]=\"dateFormate.Id\">\r\n                  {{ dateFormate.DateTimeFormat }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"edit-pref-display mt-4 hour-time-label-align\">\r\n            <label for=\"\" class=\"mb-0 noti_label timeZ\">{{labelService.dsUserProfileScreen.TimeFormat}} : </label>\r\n            <span class=\"span_font\" for=\"\" *ngIf=\"!isPreferenceEditable\">{{dsUserPreference.TimeFormatName | uppercase }}</span>\r\n            <mat-radio-group class=\"d-flex flex-row radio_btn hour-time-radio-d\"\r\n              [(ngModel)]=\"dsUserPreference.TimeFormatId\" *ngIf=\"isPreferenceEditable\">\r\n              <div class=\"d-flex justify-content-between mb-0 mr-4 hour-time-margin\"\r\n                *ngFor=\"let timeZone of timeFormateList\">\r\n                <mat-radio-button class=\"example-margin\" [value]=\"timeZone.Id\" (change)=\"onChangeTimeFormate($event)\">\r\n                  {{timeZone.DateTimeFormat  | uppercase}}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex mt-4\" [ngClass]=\"{'view-mode':!isPreferenceEditable }\">\r\n      <div class=\"col pr-3 pl-3 \">\r\n\r\n        <div class=\"edit-pref-display align-items-center notify-label-align nobtm-pad s-input\">\r\n          <label for=\"\" class=\"mb-0 noti_label\">{{labelService.dsUserProfileScreen.Notifications}} :\r\n          </label>\r\n          <span class=\"span_font\" for=\"\"\r\n            *ngIf=\"!isPreferenceEditable && dsUserPreference.FollowPatient\">{{getNotificationSettingName(dsUserPreference.FollowPatient)}}</span>\r\n\r\n          <mat-radio-group class=\"d-flex flex-row radio_btn notify-radio-d\" [(ngModel)]=\"dsUserPreference.FollowPatient\"\r\n            *ngIf=\"isPreferenceEditable\">\r\n            <div class=\"d-flex justify-content-between mb-0 mr-4\" *ngFor=\"let noti of notificationSettingLIst\">\r\n              <mat-radio-button class=\"example-margin radio-margin\" [value]=\"noti.Id\">\r\n                {{noti.SettingsValue}}\r\n              </mat-radio-button>\r\n            </div>\r\n          </mat-radio-group>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"d-flex mt-4 justify-content-center mt-4\">\r\n    <button mat-raised-button class=\"mr-2 cncl-btn edit-btn\" color=\"warn\" *ngIf=\"!isPreferenceEditable\"\r\n      (click)=\"editPreference()\"><img src=\"../../../../assets/img/edit@3x.png\" alt=\"\">\r\n      {{labelService.dsUserProfileScreen.Edit}}</button>\r\n    <button mat-raised-button class=\"mr-2 cncl-btn\" color=\"warn\" *ngIf=\"isPreferenceEditable\"\r\n      (click)=\"cancelEditPreference()\">{{labelService.dsUserProfileScreen.Cancel}}</button>\r\n    <button mat-raised-button color=\"warn\" *ngIf=\"isPreferenceEditable\"\r\n      (click)=\"updateUserPreference()\">{{labelService.dsUserProfileScreen.Save}}</button>\r\n  </div>\r\n</mat-expansion-panel>","import { Renderer2, Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ScriptLoaderService {\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) { }\r\n\r\n  /**\r\n   * Append the JS tag to the Document Body.\r\n   * @param renderer The Angular Renderer\r\n   * @param src The path to the script\r\n   * @returns the script element\r\n   */\r\n\r\n  public loadJsScript(renderer: Renderer2, src: string): HTMLScriptElement {\r\n    const script = renderer.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = src;\r\n    script.src = src;\r\n    renderer.appendChild(this.document.body, script);\r\n    return script;\r\n  }\r\n\r\n  public loadDynamicJsScript(id: string, src: string): HTMLScriptElement {   \r\n    const node = document.createElement('script');\r\n    node.src = src;\r\n    node.type = 'text/javascript';\r\n    node.async = false;\r\n    node.id = id;\r\n    document.head.appendChild(node);\r\n    return node;\r\n  }\r\n}\r\n","import { Component, OnInit, Renderer2, Inject, AfterViewInit, OnDestroy, NgZone, Sanitizer, SecurityContext } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService, LabelService, SidemenuService, HeaderService, DataService } from '../../services';\r\nimport { EnmCountry, EnmLanguage, EnmUserType, EnmDefaultTimezone } from '../../shared/constants/enum';\r\nimport { UserAuth, GigyaUserRegisInfo, TimeZone } from '../../models/model';\r\nimport { ConfirmationDialogService } from '../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DomSanitizer, Title } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Helper } from '../../shared/helpers/helpers';\r\nimport { Subject } from 'rxjs';\r\nimport { get } from 'scriptjs';\r\nimport { ScriptLoaderService } from 'src/app/services/script-loader.service';\r\ndeclare var gigya: any;\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-gigya-login',\r\n  templateUrl: './gigya-login.component.html',\r\n  styleUrls: ['./gigya-login.component.css']\r\n})\r\nexport class GigyaLoginComponent extends Helper implements OnInit, OnDestroy {\r\n  public dsGigyaMarket: any[] = [];\r\n  public originalDataLanguages: any[] = [];\r\n  public dsLanguage: any[] = [];\r\n  public selectedMarket: number;\r\n  public showWidget = 'market';\r\n  public screen = \"\";\r\n  public userAuth: UserAuth;\r\n  public userDetails: GigyaUserRegisInfo;\r\n  public msg = \"\";\r\n  public betaUser = \"Thank you for your participation in our ZoetisDx.com version 1.2 beta. We appreciate your participation and look forward to serving your diagnostics needs in the future. If you bookmarked or saved the beta.zoetisdx.com site, please remember to update your bookmark to point to ZoetisDx.com\";\r\n  public includeValues: any;\r\n  public defultTimezone: any;\r\n  public helpObj: any;\r\n  apiKey = localStorage.APIKey != undefined ? localStorage.APIKey : \"\";\r\n  langCode = localStorage.langCode != undefined ? localStorage.langCode : \"\";\r\n  langCodeForScreenSet = this.langCode.split(\"-\")[0].toLowerCase();\r\n  showLoginFormLoader = true;\r\n  private _$destroy = new Subject()\r\n  private isCacheValid = false;\r\n  private dataCenter = 'us1.gigya.com';\r\n  public externalAssetsLoaded = false;\r\n  public market = (localStorage.market && localStorage.market != 'undefined') ? JSON.parse(localStorage.market) : {};\r\n  public gigyaScriptId = 'gigyaLib';\r\n  public alreadyShownError = false;\r\n  public gigyaListenerAdded = false;\r\n  constructor(iconRegistry: MatIconRegistry, public commonService: CommonService, public labelService: LabelService, public headerService: HeaderService, public sidemenuService: SidemenuService, public dataService: DataService, public confirmationDialogService: ConfirmationDialogService, public router: Router, private _renderer2: Renderer2,\r\n    @Inject(DOCUMENT) private _document: Document, private title: Title, private renderer: Renderer2, private scriptLoader: ScriptLoaderService, private zone: NgZone, private sanitizer: DomSanitizer) {\r\n    super()\r\n    if (!this.checkAssestUpdateFlag()) {\r\n      this.doAssestUpdateOn()\r\n    }\r\n  }\r\n\r\n  // ===============gigya========================\r\n  loginParams = {\r\n    screenSet: this.langCodeForScreenSet == \"us\" ? \"RegistrationLogin_US\" : \"RegistrationLogin\",\r\n    startScreen: \"gigya-login-screen\",\r\n    lang: this.langCode,\r\n    containerID: \"loginContainer\",\r\n    onError: (ev) => { this.errorHandler(ev) },\r\n    onBeforeSubmit: (ev) => { this.formCheck(ev) },\r\n    onAfterSubmit: (ev) => { this.afterFormSubmit(ev) },\r\n    //onBeforeScreenLoad: () => this.showLoginFormLoader = true,\r\n    //onAfterScreenLoad: () => this.showLoginFormLoader = false,\r\n  };\r\n\r\n  businessProfileParams = {\r\n    screenSet: this.langCodeForScreenSet == \"us\" ? \"RegistrationLogin_US\" : \"RegistrationLogin\",\r\n    // startScreen: \"gigya-forgot-password-screen\"\r\n    startScreen: \"gigya-profile-admin-update-screen\",\r\n    //startScreen: \"gigya-profile-update-screen\",\r\n    lang: this.langCode,\r\n    containerID: \"loginContainer\",\r\n    onError: (ev) => { this.errorHandler(ev) },\r\n    onBeforeSubmit: (ev) => { this.formCheck(ev) },\r\n    //onSubmit: this.formSubmit,\r\n    onAfterSubmit: (ev) => { this.afterFormSubmit(ev) }\r\n  };\r\n\r\n  standardProfileParams = {\r\n    screenSet: this.langCodeForScreenSet == \"us\" ? \"RegistrationLogin_US\" : \"RegistrationLogin\",\r\n    startScreen: \"gigya-profile-update-screen\",\r\n    lang: this.langCode,\r\n    containerID: \"loginContainer\",\r\n    onError: (ev) => { this.errorHandler(ev) },\r\n    onBeforeSubmit: (ev) => { this.formCheck(ev) },\r\n    //onSubmit: this.formSubmit,\r\n    onAfterSubmit: (ev) => { this.afterFormSubmit(ev) }\r\n  };\r\n\r\n  logoutParams = {\r\n    \"UID\": \"A-Valid-User-UID\"\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.initialMarketSelection()\r\n    this.commonService.clearBkoSession();\r\n    this.commonService.getUserDDLDetails(EnmLanguage.English, EnmCountry.UnitedStates, null).subscribe(res => {\r\n      this.dataService.appData.userDropDownList = res.ResponseData;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.validateCacheData();\r\n      this.title.setTitle(\"ZoetisDx\")\r\n      this.getLabelDetails(this.labelService.selectedLanguage);\r\n      if (this.isCacheValid && localStorage.showLoginView == 'true') {\r\n        this.toggleScreen('login');\r\n      } else {\r\n        this.toggleScreen('market');\r\n      }\r\n\r\n      this.dataService.data.subscribe(data => {\r\n        this.helpObj = data.helpTopics.find(e => e.HelpTopic == \"Getting-Started\");\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  public initialMarketSelection() {\r\n    if (localStorage.userCountryId) {\r\n      this.selectedMarket = parseInt(localStorage.userCountryId)\r\n      return\r\n    }\r\n    let locale = navigator.language.toLowerCase().split('-');\r\n    let Id = 0;\r\n    if (locale.length > 1 && this.dataService.appData.userDropDownList.CountryDetails) {\r\n      const country = this.dataService.appData.userDropDownList.CountryDetails.find((ele) => ele.CountryCode.toLowerCase() == locale[1]);\r\n      if (country) {\r\n        Id = country.Id\r\n      }\r\n    }\r\n    else if (locale.length == 1) {\r\n      const language = this.dataService.appData.userDropDownList.LanguageDetails.filter((ele: any) => ele.Code.toLowerCase() == locale[0])\r\n      if (language.length != 0) {\r\n        const hasKey = 'HelpLangCode' in language[0];\r\n        if (hasKey) {\r\n          locale = language[0].HelpLangCode.toLowerCase().split('-')\r\n          if (locale.length > 1) {\r\n            const country = this.dataService.appData.userDropDownList.CountryDetails.filter((ele) => ele.CountryCode.toLowerCase() == locale[1]);\r\n            if (country.length != 0) {\r\n              Id = country[0].Id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.selectedMarket = Id != 0 ? Id : EnmCountry.UnitedStates;\r\n  }\r\n\r\n  public validateCacheData() {\r\n    if (localStorage.showLoginView == 'true' && localStorage.getItem('market') == 'undefined') {\r\n      localStorage.removeItem('showLoginView')\r\n      localStorage.removeItem('market')\r\n      this.clearGigyaFootPrint(true)\r\n    }\r\n    const APIKey = localStorage.getItem('APIKey')\r\n    const langCode = localStorage.getItem('langCode')\r\n    const languageId = localStorage.getItem('languageId')\r\n    const market = localStorage.getItem('market')\r\n    if (APIKey && langCode && languageId && market) {\r\n      this.isCacheValid = true;\r\n      this.market = JSON.parse(market);\r\n      this.selectedMarket = this.market.ID\r\n      this.labelService.selectedLanguage = Number(languageId)\r\n      this.labelService.userCountryId = this.selectedMarket\r\n      this.langCode = langCode;\r\n      this.apiKey = APIKey;\r\n    } else {\r\n      this.initialMarketSelection();\r\n    }\r\n  }\r\n\r\n  public extractApiKeyAndSave() {\r\n    this.market = this.dsGigyaMarket.find(x => x.ID == this.selectedMarket) != undefined ? this.dsGigyaMarket.find(x => x.ID == this.selectedMarket) : null;\r\n    if (!this.market) {\r\n      this.market = this.dsGigyaMarket[0]\r\n      this.selectedMarket = this.market.ID\r\n    }\r\n    this.apiKey = this.market.Key\r\n    this.dataCenter = this.market.DataCenter\r\n    localStorage.setItem('dataCenter', this.dataCenter)\r\n    localStorage.setItem('APIKey', this.apiKey)\r\n    localStorage.setItem('market', JSON.stringify(this.market))\r\n    this.dataService.appData.masterData.APIKey = this.apiKey;\r\n    this.dataService.data.next(this.dataService.appData);\r\n  }\r\n\r\n  private getGigyaMarkets(reloadGigya = false, resetSelectedLanguage = false) {\r\n\r\n    this.commonService.getGigyaMarketDetailsByLang(this.labelService.selectedLanguage).subscribe(data => {\r\n      this.dsGigyaMarket = data.ResponseData;\r\n      this.dataService.appData.markets = this.dsGigyaMarket\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.extractApiKeyAndSave();\r\n      this.getLanguages(reloadGigya, resetSelectedLanguage);\r\n    });\r\n  }\r\n\r\n  public getLanguages(reloadGigya = false, resetSelectedLanguage = false) {\r\n    this.commonService.getLanguageDetails().subscribe(data => {\r\n      this.originalDataLanguages = data.ResponseData;\r\n      this.dataService.appData.languages = this.originalDataLanguages\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.sortLanguage();\r\n      this.setLanguage(resetSelectedLanguage);\r\n      this.loadGigyaCdn(reloadGigya).onload = () => {\r\n        this.loadGigyaWidget();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public sortLanguage() {\r\n\r\n    const selectedMarket = this.selectedMarket;\r\n    this.dsLanguage = this.originalDataLanguages.filter(ele =>\r\n      ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == this.selectedMarket)\r\n    );\r\n    if (this.dsLanguage.length > 1) {\r\n      this.dsLanguage.forEach(function (ele) {\r\n        const gigyaLan = ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == selectedMarket);\r\n        if (gigyaLan != undefined) {\r\n          ele.SeqNumber = gigyaLan.SeqNumber;\r\n        }\r\n      });\r\n    }\r\n    this.dsLanguage.sort((a, b) => a.SeqNumber - b.SeqNumber);\r\n  }\r\n\r\n  public setLanguage(resetSelectedLanguage = false) {\r\n    let lang\r\n    if (resetSelectedLanguage || !this.labelService.selectedLanguage) {\r\n      lang = this.dsLanguage[0]\r\n      this.labelService.selectedLanguage = lang.Id;\r\n    } else if(this.labelService.selectedLanguage) {\r\n      const check1  = this.dsLanguage.find(x => x.Id == this.labelService.selectedLanguage)\r\n      const check2 = this.dsLanguage.find(x => \r\n        x.GigyaLanguageCode.find(y => y.GMarketID == this.selectedMarket)\r\n      )\r\n      lang = check1 || check2\r\n    } else {\r\n      lang = this.dsLanguage.find(x => \r\n        x.GigyaLanguageCode.find(y => y.GMarketID == this.selectedMarket)\r\n      )\r\n    }\r\n    this.langCode = lang.GigyaLanguageCode.find(subEle => subEle.GMarketID == this.selectedMarket).GigyaLangCode;\r\n    this.langCodeForScreenSet = this.langCode.split(\"-\")[0].toLowerCase();\r\n    this.labelService.selectedLanguage = lang.Id\r\n    this.getLabelDetails(this.labelService.selectedLanguage.toString());\r\n    localStorage.setItem('langCode', this.langCode);\r\n    this.dataService.appData.masterData.langCode = this.langCode;\r\n    localStorage.setItem('languageId', this.labelService.selectedLanguage.toString());\r\n    this.dataService.appData.masterData.languageId = this.labelService.selectedLanguage.toString();\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.doAssestUpdateOff();\r\n  }\r\n\r\n  public onChangeGigayMarket() {\r\n\r\n    this.doAssestUpdateOn();\r\n    localStorage.setItem('userCountryId', this.selectedMarket.toString());\r\n    this.dataService.appData.masterData.userCountryId = this.selectedMarket.toString();\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.dsLanguage = this.originalDataLanguages.filter(ele =>\r\n      ele.GigyaLanguageCode.find(subEle => subEle.GMarketID == this.selectedMarket)\r\n    );\r\n    this.labelService.selectedLanguage = this.dsLanguage != undefined ? this.dsLanguage[0].Id : EnmLanguage.English;\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['login']);\r\n      this.getGigyaMarkets(true, true);\r\n    });\r\n    //this.getGigyaMarkets(true);\r\n  }\r\n\r\n  public onChangeLanguage() {\r\n    this.doAssestUpdateOn();\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['login']);\r\n      this.getGigyaMarkets(true);\r\n    });\r\n    //this.getGigyaMarkets(true);\r\n  }\r\n\r\n  public toggleScreen(screen, justSwitch = false) {\r\n    this.showWidget = screen;\r\n    if (this.showWidget == 'login') {\r\n      localStorage.setItem('showLoginView', 'true')\r\n      if (justSwitch) {\r\n        this.loadGigyaWidget();\r\n      } else {\r\n        this.loadGigyaCdn().onload = () => {\r\n          this.loadGigyaWidget();\r\n        }\r\n      }\r\n\r\n    }\r\n    if (this.showWidget == 'market') {\r\n      localStorage.setItem('showLoginView', 'false')\r\n      this.getGigyaMarkets(!!justSwitch);\r\n    }\r\n  }\r\n\r\n  public getLabelDetails(selectedLangId) {\r\n    this.labelService.getLabelDetails(null, selectedLangId).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.dataService.appData.labels = data.ResponseData;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      this.labelService.bindLoginLabel();\r\n      this.labelService.bindSideMenuLabel();\r\n      this.labelService.bindHeaderLabel();\r\n      this.labelService.getHomePageScreenLabel();\r\n    });\r\n  }\r\n\r\n  public getGigyaCdnUrl() {\r\n    return \"https://cdns.gigya.com/js/gigya.js?apikey=\" + this.apiKey + \"&lang=\" + this.langCode;\r\n    //return \"https://cdns.\" + this.dataCenter + \"/js/gigya.js?apikey=\" + this.apiKey + \"&lang=\" + this.langCode;\r\n  }\r\n\r\n  public loadGigyaCdn(reload = false) {\r\n\r\n    if (reload) {\r\n      this.clearGigyaFootPrint();\r\n    }\r\n    //this.scriptLoader.loadDynamicJsScript('gigyaUILIb', 'https://cdns.gigya.com/js/gigya.services.plugins.base.min.js?services=gigya.services.accounts.plugins.screenSet&lang='+this.langCode+'&version=latest')\r\n    // deepcode ignore XSS: <Trusted resource>\r\n    const url = this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, this.sanitizer.bypassSecurityTrustResourceUrl(this.getGigyaCdnUrl()))\r\n    return this.scriptLoader.loadDynamicJsScript(this.gigyaScriptId, url);\r\n  }\r\n\r\n  public clearGigyaFootPrint(includingStorage = false) {\r\n    const rmvScript = document.getElementById(this.gigyaScriptId);\r\n    //const rmvScript1 = document.getElementById('gigyaUILIb');\r\n    if (typeof gigya != \"undefined\") {\r\n      gigya.resetAPIDomain()\r\n      gigya.__initialized = false //gigya = undefined;\r\n      this.gigyaListenerAdded = false;\r\n    }\r\n    if (rmvScript != null) {\r\n      document.head.removeChild(rmvScript);\r\n      //localStorage.removeItem(`${this.apiKey}_gig`)\r\n      //var cookies = document.cookie.split(\"; \");\r\n      // for (var c = 0; c < cookies.length; c++) {\r\n      //   var d = window.location.hostname.split(\".\");\r\n      //   while (d.length > 0) {\r\n      //     var cookieBase = encodeURIComponent(cookies[c].split(\";\")[0].split(\"=\")[0]) + '=; expires=Thu, 01-Jan-1970 00:00:01 GMT; domain=' + d.join('.') + ' ;path=';\r\n      //     var p = location.pathname.split('/');\r\n      //     document.cookie = cookieBase + '/';\r\n      //     while (p.length > 0) {\r\n      //       document.cookie = cookieBase + p.join('/');\r\n      //       p.pop();\r\n      //     };\r\n      //     d.shift();\r\n      //   }\r\n      // }\r\n    }\r\n    // if(rmvScript1){\r\n    //   document.head.removeChild(rmvScript1)\r\n    // }\r\n    if (includingStorage) {\r\n      localStorage.clear()\r\n      sessionStorage.clear()\r\n      this.doAssestUpdateOn()\r\n    }\r\n  }\r\n\r\n  public loadGigyaWidget() {\r\n    if (typeof gigya !== \"undefined\") {\r\n      if (localStorage.showDebugUI) gigya.showDebugUI()\r\n      // gigya.localInfo.baseDomain = 'zoetisdx.com'\r\n      // gigya.localInfo.pageDomain = 'staging.zoetisdx.com'\r\n      // gigya.partnerSettings.plugins.apiDomain = 'eiamus.zoetisdx.com'\r\n      // console.log(gigya.partnerSettings.plugins)\r\n      //gigya.resetAPIDomain()\r\n      //console.log(gigya.partnerSettings.plugins)\r\n      //gigya._.__pluginsCoreLoaded = true\r\n      this.showLoginFormLoader = true;\r\n      this.loginParams.lang = this.langCode\r\n      this.loginParams.screenSet = this.langCodeForScreenSet == \"us\" ? \"RegistrationLogin_US\" : \"RegistrationLogin\",\r\n        this.zone.run(() => {\r\n          this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n            this.router.navigate(['login']);\r\n            gigya.accounts.showScreenSet(this.loginParams);\r\n            if (!this.gigyaListenerAdded) {\r\n\r\n              gigya.socialize.addEventHandlers({\r\n                onLogin: (ev) => { this.onLogin(ev) }\r\n              })\r\n              this.gigyaListenerAdded = true\r\n            }\r\n          });\r\n        });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public onLogin(eventObj) {\r\n    if (this.screen != \"gigya-register-screen\" && this.screen != \"gigya-signup-screen\" && this.screen != \"\") {\r\n      this.getLogin(eventObj);\r\n    }\r\n  }\r\n\r\n  public getLogin(eventObj) {\r\n    this.validateCacheData()\r\n    const internlUser = localStorage['rememberedUser']\r\n    this.userAuth = new UserAuth();\r\n    this.userAuth.User = eventObj.user.email;\r\n    this.userAuth.GigyaUID = eventObj.user.UID;\r\n    this.userAuth.LanguageId = this.labelService.selectedLanguage;\r\n    localStorage.setItem('rememberedUser', internlUser)\r\n    this.commonService.loginAuth(this.userAuth).subscribe(data => {\r\n      const dateTime = Date.now()\r\n      localStorage.setItem('lastAction', dateTime.toString());\r\n      localStorage.setItem('lastRefresh', dateTime.toString());\r\n      const dateFormatList = this.dataService.appData.userDropDownList['DateFormatList']\r\n      if (dateFormatList && dateFormatList.length) {\r\n        this.afterLoginSetup(dateFormatList, data)\r\n      } else {\r\n        this.commonService.getUserDDLDetails(EnmLanguage.English, EnmCountry.UnitedStates, null, true).subscribe(res => {\r\n          this.dataService.appData.userDropDownList = res.ResponseData;\r\n          this.dataService.data.next(this.dataService.appData);\r\n          const dateFormatList = this.dataService.appData.userDropDownList['DateFormatList']\r\n          this.afterLoginSetup(dateFormatList, data)\r\n        })\r\n      }\r\n\r\n    }, error => {\r\n      if (error.error == \"not_exist\" || error.error == \"invalid_grant\") {\r\n        this.confirmationDialogService.confirm(\"\", this.labelService.dsLoginScreen.ContinueToCreateClinicAdmin, this.labelService.dsLoginScreen.Continue, this.labelService.dsLoginScreen.Cancel, \"sm\", true, true)\r\n          .then((confirmed) => {\r\n            if (confirmed) {\r\n              gigya.accounts.showScreenSet(this.standardProfileParams);\r\n            }\r\n          })\r\n          .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n      }\r\n      else if (error.error == \"terms_not_accepted\") {\r\n        gigya.accounts.showScreenSet(this.standardProfileParams);\r\n      }\r\n\r\n      else if (error.error == \"not_verified\") {\r\n        this.msg = this.labelService.dsLoginScreen.Emailnotvalidated;  //this.dsLoginScreen.Emailnotvalidated;\r\n        this.showMsg(this.msg);\r\n      }\r\n      else if (error.error == \"not_active\") {\r\n        this.msg = this.labelService.dsLoginScreen.UserNotActive; //this.dsLoginScreen.UserNotActive;\r\n        this.showMsg(this.msg);\r\n      }\r\n      else if (error.error == \"beta end date has passed\") {\r\n        this.includeValues = this.betaUser + '\\n';\r\n        this.showMsg(this.includeValues);\r\n        this.commonService.callMethodOfSecondComponent('signIn');\r\n      }\r\n      else {\r\n        this.msg = this.labelService.dsLoginScreen.LoginFailed; //this.dsLoginScreen.LoginFailed;\r\n        this.showMsg(this.msg);\r\n      }\r\n    })\r\n  }\r\n\r\n  public afterLoginSetup(dateFormatList, data) {\r\n    dateFormatList.forEach((e) => {\r\n      if (e['Id'] == data[\"DateFormatId\"]) {\r\n        localStorage.setItem('DateTimeFormat', e['ExactDateTime'].replace(/(?<!y)y(?!y)/g, 'YY').toUpperCase());\r\n      }\r\n    })\r\n    this.dataService.appData.authDetails = data;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.headerService.setAuthSession(data);\r\n    this.commonService.firebase.analytics().logEvent('login', { user_email: data.Email });\r\n    this.commonService.isAlertModelDefaultOpen = true;\r\n    // debugger\r\n    if (data.TimeFormatId == undefined || data.TimeFormatId == null || data.TimeZoneId == null || data.TimeZoneId == \"\") {\r\n      this.defultTimezone = null;\r\n      // const timezoneName = \"\";\r\n      let timezoneId = null;\r\n      let dateFormatId = null;\r\n      let timeFormatId = null;\r\n      if (this.dataService.appData.userDropDownList != undefined && this.dataService.appData.userDropDownList != null) {\r\n        const timezoneObj = this.dataService.appData.userDropDownList.TimeZonesList.find(x => x.WebTimeZone != null && x.WebTimeZone.toLowerCase().indexOf(Intl.DateTimeFormat().resolvedOptions().timeZone.toLowerCase()) >= 0);\r\n        if (timezoneObj != undefined)\r\n          timezoneId = timezoneObj.Id;\r\n        else\r\n          timezoneId = EnmDefaultTimezone.EST;\r\n      }\r\n      else {\r\n        timezoneId = EnmDefaultTimezone.EST;\r\n      }\r\n      dateFormatId = (data.DateFormatId != undefined && data.DateFormatId != null && data.DateFormatId != \"null\" && data.DateFormatId != \"\") ? parseInt(data.DateFormatId) : this.commonService.getDateFormatId(data.CountryId);\r\n      dateFormatList.forEach((e) => {\r\n        if (e['Id'] == dateFormatId) {\r\n          // localStorage.setItem('DateTimeFormat', e['DateTimeFormat'].split(\"-\").join(\"/\"))\r\n          // localStorage.setItem('DateTimeFormat', e['ExactDateTime'].replace(\"MM/dd/y\", \"MM/dd/yy\").replace(\"dd/MM/y\", \"dd/MM/yy\").toUpperCase());\r\n          localStorage.setItem('DateTimeFormat', e['ExactDateTime'].replace(/(?<!y)y(?!y)/g, 'YY').toUpperCase());\r\n        }\r\n      })\r\n      timeFormatId = (data.TimeFormatId != undefined && data.TimeFormatId != null && data.TimeFormatId != \"null\" && data.TimeFormatId != \"\") ? parseInt(data.TimeFormatId) : this.commonService.getTimeFormatId(data.CountryId);\r\n      const timezonedetails = new TimeZone();\r\n      timezonedetails.TimeZoneId = timezoneId;\r\n      timezonedetails.DateFormatId = dateFormatId;\r\n      timezonedetails.TimeFormatId = timeFormatId;\r\n      timezonedetails.UserGuid = data.UserGuid;\r\n      timezonedetails.BusinessGuid = data.BusinessGuid;\r\n      debugger\r\n      this.commonService.addUpdateTimeZone(timezonedetails).subscribe({\r\n        next: () => {\r\n          data.DateFormatId = dateFormatId.toString();\r\n          data.TimeFormatId = timeFormatId.toString();\r\n          data.TimeZoneId = timezoneId.toString();\r\n          this.dataService.appData.authDetails = data;\r\n          this.dataService.data.next(this.dataService.appData);\r\n          debugger\r\n          this.sidemenuService.getSideMenu(data.UserTypeId, this.labelService.selectedLanguage, this.labelService.userCountryId, true);\r\n        }, error: () => {\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.sidemenuService.getSideMenu(data.UserTypeId, this.labelService.selectedLanguage, this.labelService.userCountryId, true);\r\n    }\r\n  }\r\n\r\n  public errorHandler(eventObj) {\r\n    if (this.alreadyShownError) return\r\n    if (this.screen && this.screen != \"gigya-login-screen\") {\r\n      this.showMsg(eventObj.errorMessage);\r\n    } else if (this.showWidget == 'login' && eventObj.errorCode == '500001') {\r\n      if (window.location.hostname == 'localhost') {\r\n        //this.showMsg(eventObj.errorMessage, true);\r\n      } else {\r\n        gigya.resetAPIDomain()\r\n        this.loadGigyaWidget()\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public formCheck(eventObj) {\r\n    this.screen = eventObj.screen;\r\n    if (this.screen == \"gigya-register-screen\" || this.screen == \"gigya-signup-screen\" || this.screen == \"gigya-profile-admin-update-screen\" || this.screen == \"gigya-profile-update-screen\") {\r\n      this.userDetails = new GigyaUserRegisInfo();\r\n      if (eventObj.formData[\"profile.phones.number\"] != undefined)\r\n        this.userDetails.PhoneNo = eventObj.formData[\"profile.phones.number\"];\r\n      if (eventObj.formData[\"profile.address\"] != undefined)\r\n        this.userDetails.AddressLine1 = eventObj.formData[\"profile.address\"];\r\n      this.userDetails.CountryId = this.selectedMarket;\r\n      this.userDetails.LanguageId = this.labelService.selectedLanguage;\r\n    }\r\n    else {\r\n      this.userDetails = new GigyaUserRegisInfo();\r\n    }\r\n\r\n    // provided by gigya team to handle the address custom validation for US markets only\r\n    let formid = '#gigya-register-form';\r\n    if (eventObj.screen === 'gigya-profile-update-screen' || eventObj.screen === 'gigya-complete-registration-screen') {\r\n      formid = '#gigya-profile-form';\r\n    }\r\n\r\n    if ($(formid + ' .error-msg').is(':visible') == true || $(formid + ' .terms-agree').hasClass('gigya-termsEula-error') == true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public afterFormSubmit(eventObj) {\r\n    this.screen = eventObj.screen;\r\n    if (eventObj.screen == \"gigya-register-screen\" || this.screen == \"gigya-signup-screen\" || eventObj.screen == \"gigya-complete-registration-screen\") {\r\n      this.addUpdateBusinessUser(eventObj, true);\r\n      this.commonService.firebase.analytics().logEvent('signed_up', { user_email: eventObj.profile.email });\r\n    }\r\n\r\n    if (eventObj.screen == \"gigya-profile-update-screen\" || eventObj.screen == \"gigya-profile-admin-update-screen\") {\r\n      this.addUpdateBusinessUser(eventObj, false);\r\n    }\r\n  }\r\n\r\n  public addUpdateBusinessUser(eventObj, isRegis) {\r\n    this.userDetails.Title = eventObj.data.prefix;\r\n    this.userDetails.FirstName = eventObj.profile.firstName;\r\n    this.userDetails.LastName = eventObj.profile.lastName;\r\n    this.userDetails.Suffix = eventObj.data.suffix;\r\n\r\n    if (eventObj.data.sapCustomerId != undefined || eventObj.data.accountId != undefined) // For US coming sapCustomerId And for Mexico it is coming as accountId\r\n      this.userDetails.ZoetisAccountNumber = eventObj.data.sapCustomerId != undefined ? eventObj.data.sapCustomerId : eventObj.data.accountId;\r\n    if (eventObj.data.mdmAccountId != undefined) {\r\n      this.userDetails.NarcId = eventObj.data.mdmAccountId;\r\n    }\r\n    this.userDetails.BusinessName = eventObj.data.businessName;\r\n    this.userDetails.AddressLine2 = eventObj.data.address_2;\r\n    this.userDetails.City = eventObj.profile.city;\r\n    this.userDetails.State = this.selectedMarket == EnmCountry.Turkey ? eventObj.profile.city : eventObj.data.province;\r\n    this.userDetails.ZipCode = eventObj.profile.zip;\r\n    this.userDetails.GigyaUID = eventObj.response.UID;\r\n    this.userDetails.Email = eventObj.profile.email;\r\n\r\n    this.userDetails.UserTypeId = EnmUserType.Business;\r\n\r\n    if (this.userDetails.GigyaUID != undefined) {\r\n      this.commonService.addUpdateGigyaUser(this.userDetails).subscribe({\r\n        next: () => {\r\n          if (!isRegis) {\r\n            this.confirmationDialogService.confirm(\"\", this.labelService.dsLoginScreen.UserProfileUpdated, this.labelService.dsLoginScreen.OK, this.labelService.dsLoginScreen.Cancel, \"sm\", true, true)\r\n              .then((confirmed) => {\r\n                if (confirmed) {\r\n                  this.loadGigyaWidget()\r\n                }\r\n              })\r\n              .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n\r\n          }\r\n          else {\r\n            this.headerService.userName = this.userDetails.FirstName;\r\n            localStorage.setItem(\"userName\", this.headerService.userName);\r\n          }\r\n        }, error: () => {\r\n          if (!isRegis)\r\n            this.showRegisterMsg(this.labelService.dsLoginScreen.UserProfileUpdated + \".\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public addUpdateStandardUser(eventObj) {\r\n    this.userDetails = new GigyaUserRegisInfo();\r\n    this.userDetails.Title = eventObj.data.prefix;\r\n    this.userDetails.FirstName = eventObj.profile.firstName;\r\n    this.userDetails.LastName = eventObj.profile.lastName;\r\n    this.userDetails.Suffix = eventObj.data.suffix;\r\n    this.userDetails.GigyaUID = eventObj.response.UID;\r\n    this.userDetails.Email = eventObj.profile.email;\r\n    this.userDetails.UserTypeId = EnmUserType.DVM;\r\n\r\n    if (this.userDetails.GigyaUID != undefined) {\r\n      this.commonService.addUpdateGigyaUser(this.userDetails).subscribe({\r\n        next: () => {\r\n          this.showRegisterMsg(this.labelService.dsLoginScreen.UserProfileUpdated);\r\n        }, error: () => {\r\n          this.showRegisterMsg(this.labelService.dsLoginScreen.UserProfileUpdated + \".\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public showRegisterMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsLoginScreen.OK, \"\", \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.loadGigyaWidget()\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public showMsg(msg, reload = false) {\r\n    this.alreadyShownError = true;\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsLoginScreen.OK, this.labelService.dsLoginScreen.Cancel, \"sm\", true, false)\r\n      .then(() => {\r\n        this.alreadyShownError = false;\r\n        if (reload) {\r\n          this.clearGigyaFootPrint(true)\r\n          this.toggleScreen('market')\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public installZdxApp() {\r\n    if (navigator.userAgent.match(/Android/i)) {\r\n      window.location.href = 'https://play.app.goo.gl/?link=https://play.google.com/store/apps/details?id=com.zoetis.moose';\r\n    } else if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\r\n      window.location.href = 'itms-apps://apps.apple.com/us/app/zoetisdx/id1545264353';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._$destroy.next(true)\r\n  }\r\n}\r\n","<!-- <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n       <script type=\"text/javascript\" src=\"https://cdns.gigya.com/js/gigya.js?apikey=3_-OIS70xuY2Nd6HMw_KvlOvjgLUg0hXzUlb1UDUtQyKAs8kCE07vHo5hyEJTCzyO_\"></script> -->\r\n<div class=\"login-section\">\r\n  <div class=\"rightlang\" [hidden]=\"showWidget == 'login'\">\r\n    <img src=\"../../../../assets/img/ipadimg.png\" loading=\"lazy\" alt=\"backgroundImage\" />\r\n  </div>\r\n  <div class=\"signin-outer signincont\" [hidden]=\"showWidget == 'login'\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center flex-column align-items-center\">\r\n        <div class=\"col-sm-7\">\r\n          <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n            <div class=\"card-body\">\r\n              <div class=\"text-center mb-2\">\r\n                <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"login\" />\r\n              </div>\r\n\r\n              <!-- <form class=\"form-widget\" [formGroup]=\"widgerAuthForm\" autocomplete=\"off\" (keyup.enter)=\"login()\"> -->\r\n              <div class=\"form-label-group\">\r\n                <div class=\"d-flex align-items-center justify-content-center flex-column\">\r\n                  <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100\">\r\n                    <mat-select autocomplete=\"off\" [(ngModel)]=\"selectedMarket\" id=\"ddlMkt\"\r\n                      (selectionChange)=\"onChangeGigayMarket()\">\r\n                      <mat-option *ngFor=\"let market of dsGigyaMarket\" [value]=\"market.ID\">\r\n                        {{ market.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100\">\r\n                    <mat-select autocomplete=\"off\" [(ngModel)]=\"labelService.selectedLanguage\" id=\"ddlLang\"\r\n                      (selectionChange)=\"onChangeLanguage()\">\r\n                      <mat-option *ngFor=\"let language of dsLanguage\" [value]=\"language.Id\">\r\n                        {{ language.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n                  <button id=\"btnShowLogin\" class=\"btn btn-lg btn-primary btn-block w-100\" mat-raised-button\r\n                    color=\"warn\" (click)=\"toggleScreen('login', true)\">\r\n                    {{ labelService.dsLoginScreen.Login }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <!-- </form> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card-signin\" [hidden]=\"showWidget == 'market'\">\r\n  <div class=\"glog text-right\">\r\n    <div>\r\n      {{ labelService.dsLoginScreen.Country }}:\r\n      {{ market?.Name }}\r\n    </div>\r\n    <div>\r\n      <a (click)=\"toggleScreen('market', true)\" style=\"cursor: pointer; color: blue\">{{\r\n        labelService.dsLoginScreen.ChangeCountry\r\n        }}</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"head1 mobgigya\" style=\"margin-top: 15px; margin-left: 12px; position: absolute; width: 97%\">\r\n    <span>\r\n      {{ labelService.dsLoginScreen.NewZdx }}\r\n    </span>\r\n    <a class=\"backlink\" (click)=\"commonService.onlineHelp(helpObj.PageID)\"\r\n      matTooltip=\"{{ labelService.dsSideMenuScreen.Help }}\">{{ labelService.dsLoginScreen.GetMsg }}</a>\r\n  </div>\r\n\r\n  <div class=\"all-ban\">\r\n    <div class=\"ban_section d-flex justify-content-between align-items-center\">\r\n      <div class=\"ban_part1\">\r\n        <img class=\"logoicon1 ml-0\" src=\"../../../../assets/img/logo-header@2x.png\" alt=\"img\" />\r\n      </div>\r\n      <div class=\"ban_part2\">\r\n        <p>Diagnostic results at your fingertips</p>\r\n        <p>Open in the ZoetisDx app</p>\r\n      </div>\r\n      <div class=\"ban_part3\" (click)=\"installZdxApp()\">\r\n        <p>OPEN</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"login-section\">\r\n    <!-- <button id=\"btnShowLogin\" class=\"btn btn-lg btn-primary btn-block w-100\" mat-raised-button\r\n    color=\"warn\" (click)=\"toggleScreen('login')\" style=\"position: absolute; width: 100px; right: 20%;\">\r\n    {{ labelService.dsLoginScreen.Login }}\r\n  </button> -->\r\n    <!-- <div class=\"loadercont\" *ngIf=\"showLoginFormLoader\">\r\n      <div class=\"gigya-loader\"></div>\r\n    </div> -->\r\n    <div class=\"rightpart\">\r\n      <img src=\"../../../../assets/img/ipadimg.png\" loading=\"lazy\" alt=\"backgroundImage\" />\r\n    </div>\r\n    <!-- <div class=\"login-alert-box\" *ngIf=\"selectedMarket == 40\">\r\n      <div class=\"d-flex newpart\">\r\n        <i class=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n        <span>\r\n          On 12/9 ZoetisDx is enabling enhanced login security including two-factor authentication.\r\n          <br>\r\n          <a href=\"https://help.zoetisdx.com/zoetisdx/en-us/login-help.htm \" target=\"_blank\">Read our Login Help\r\n            page</a>\r\n        </span>\r\n      </div>\r\n    </div> -->\r\n    <!-- <div id=\"fullLoaderCont\"> -->\r\n    <div id=\"loginContainer\"></div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { UserDetails, ResetSignalRequest } from '../../../models/user';\r\nimport { ConfirmationDialogService } from '../../confirmation-dialog/confirmation-dialog.service';\r\nimport { SidemenuService } from '../../../services/sidemenu.service';\r\nimport { LabelService, UserService, HeaderService, DataService } from '../../../services'\r\n@Component({\r\n  selector: 'app-security',\r\n  templateUrl: './security.component.html',\r\n  styleUrls: ['./security.component.css']\r\n})\r\nexport class SecurityComponent implements OnInit {\r\n\r\n  public dsUserProfile: UserDetails;\r\n  public resetSignalRequest: ResetSignalRequest;\r\n  public isUserTypeBusiness = false;\r\n  public resetReqMsg = \"\";\r\n  public securityEmail = \"\";\r\n  public profileForm: UntypedFormGroup;\r\n  public selectedAccordion: number;\r\n  public dsState: any[] = [];\r\n  public isConsultantUser: boolean;\r\n  public businessGUID: string;\r\n\r\n  constructor(public userService: UserService, public headerService: HeaderService, public sidemenuService: SidemenuService,\r\n    private formBuilder: UntypedFormBuilder, public confirmationDialogService: ConfirmationDialogService,\r\n    public labelService: LabelService, public dataService: DataService) {\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.businessGUID = this.isConsultantUser ? null : this.dataService.appData.authDetails['BusinessGuid'];\r\n\r\n    this.selectedAccordion = this.dataService.appState.admin.profilePageSelectedAccordion;\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails(false);\r\n    } else {\r\n      this.labelService.bindUserProfileLabel();\r\n    }\r\n  }\r\n\r\n  public getUserDDLDetails(prefixId) {\r\n    this.userService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, prefixId).subscribe(data => {\r\n      this.userService.dsLanguage = data.ResponseData.LanguageDetails;\r\n      this.userService.dsNotification = data.ResponseData.NotificationSettingsValue;\r\n      this.getUserSetting();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isConsultantUser) {\r\n      this.securityEmail = this.dataService.appData.authDetails['Email']\r\n    } else {\r\n      this.getUserDDLDetails(null);\r\n    }\r\n  }\r\n\r\n  public getLabelDetails(isUpdateChild) {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindUserProfileLabel();\r\n      if (isUpdateChild) {\r\n        this.labelService.bindSideMenuLabel();\r\n        this.labelService.bindHeaderLabel();\r\n        this.showMsg(this.labelService.dsUserProfileScreen.UserPreferenceUpdatedSuccessfully);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLanguageName(langId) {\r\n    if (langId != undefined && this.userService.dsLanguage.length)\r\n      return this.userService.dsLanguage.find(x => x.Id == langId).Name;\r\n    else\r\n      return \"\";\r\n  }\r\n\r\n  public getUserSetting() {\r\n    this.userService.getUserSettingDetails(this.headerService.loginUserGuid, this.businessGUID).subscribe({next:(data) => {\r\n      this.userService.originalUserProfileData = data.ResponseData;\r\n      this.securityEmail = this.userService.originalUserProfileData.Email;\r\n    }, error:() => {\r\n      this.securityEmail = \"\";\r\n    }});\r\n  }\r\n\r\n  public resetUserSecurityRequest() {\r\n    this.resetSignalRequest = new ResetSignalRequest();\r\n    this.resetSignalRequest.Email = this.isConsultantUser ? this.securityEmail : this.userService.originalUserProfileData.Email;\r\n    this.resetSignalRequest.LanguageId = this.labelService.selectedLanguage;\r\n    this.userService.resetSignalRequest(this.resetSignalRequest).subscribe({next:(data) => {\r\n      if (data.StatusCode == 200) {\r\n        this.resetReqMsg = this.labelService.dsUserProfileScreen.ResetSignalRequset;\r\n      } else {\r\n        this.resetReqMsg = this.labelService.dsUserProfileScreen.Error;\r\n      }\r\n\r\n    }, error:() => {\r\n      this.resetReqMsg = this.labelService.dsUserProfileScreen.Error;\r\n    }});\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsUserProfileScreen.OK, this.labelService.dsUserProfileScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      //   if (confirmed) {\r\n      //   }\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"mobileText\">\r\n        <p class=\"mb-0\">{{labelService.dsUserProfileScreen.Security}}</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <div id=\"profile\">\r\n            <mat-accordion>\r\n              <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n                <mat-expansion-panel-header class=\"cursor-rem\">\r\n                  <mat-panel-title> {{labelService.dsUserProfileScreen.Security}} </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"d-flex\">\r\n                  <div class=\"email-block col\">\r\n                    <div class=\"d-flex align-items-center flex-wrap nobtm-pad s-input\">\r\n                      <label for=\"\" class=\"mb-0 mr-4\">{{labelService.dsUserProfileScreen.ChangePassword}}</label>\r\n                      <mat-form-field class=\"passtext\" appearance=\"outline\" floatLabel=\"always\">\r\n                        <input type=\"text\" matInput [ngModel]=\"securityEmail\" readonly />\r\n                      </mat-form-field>\r\n\r\n                      <button mat-raised-button color=\"warn\"\r\n                        (click)=\"resetUserSecurityRequest()\">{{labelService.dsUserProfileScreen.Send}}</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col d-flex\">\r\n                    &nbsp;\r\n                  </div>\r\n                </div>\r\n                <div class=\"d-flex mt-3\">\r\n                  <div class=\"col\">\r\n                    <div class=\"alert alert-dark alert-dismissible fade show\" role=\"alert\" *ngIf=\"resetReqMsg !== ''\">\r\n                      {{resetReqMsg}}\r\n                      <img src=\"../../../assets/img/cancel-button@2x.png\" alt=\"\" data-dismiss=\"alert\"\r\n                        aria-label=\"Close\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GigyaUserRegisInfo } from '../../../models/model';\r\nimport { EnmUserType } from '../../../shared/constants/enum';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { ConfirmationDialogService } from '../../../components/confirmation-dialog/confirmation-dialog.service';\r\ndeclare let gigya: any;\r\ndeclare let $: any;\r\nlet thisObj: any;\r\n\r\n@Component({\r\n  selector: 'app-gigya-reset',\r\n  templateUrl: './gigya-reset.component.html',\r\n  styleUrls: ['./gigya-reset.component.css']\r\n})\r\nexport class GigyaResetComponent implements OnInit {\r\n\r\n  apiKey = \"\";  //\"3_-OIS70xuY2Nd6HMw_KvlOvjgLUg0hXzUlb1UDUtQyKAs8kCE07vHo5hyEJTCzyO_\";\r\n  langCode = \"\";\r\n  langCodeForScreenSet = \"\";\r\n  isProspect = false;\r\n  public userDetails: GigyaUserRegisInfo;\r\n\r\n  constructor(public commonService: CommonService, public confirmationDialogService: ConfirmationDialogService, public router: Router,) {\r\n    if (this.router.url.indexOf(\"?apiKey=\") != -1) {\r\n      this.apiKey = (this.router.url.trim().split('?apiKey=')[1] != undefined ? this.router.url.trim().split('?apiKey=')[1].split(\"&\")[0] : \"\");\r\n      this.langCode = (this.router.url.trim().split('&lang=')[1] != undefined ? this.router.url.trim().split('&lang=')[1].split(\"&\")[0] : \"\");\r\n      this.isProspect = (this.router.url.trim().split('&isprospect=')[1] != undefined ? ((this.router.url.trim().split('&isprospect=')[1].split(\"&\")[0]).toString() == \"true\") : false);\r\n      this.langCodeForScreenSet = this.langCode != \"undefined\" ? this.langCode.split(\"-\")[0].toLowerCase() : \"\";\r\n      const widgetScript = document.createElement(\"script\");\r\n      widgetScript.type = \"text/javascript\";\r\n      widgetScript.id = \"widget\";\r\n      widgetScript.src = \"https://cdns.gigya.com/js/gigya.js?apikey=\" + this.apiKey + \"&lang=\" + this.langCode; // + \"&lang=es\";\r\n      document.head.appendChild(widgetScript);\r\n    }\r\n    else {\r\n      const widgetScript = document.createElement(\"script\");\r\n      widgetScript.type = \"text/javascript\";\r\n      widgetScript.id = \"widget\";\r\n      widgetScript.src = \"https://cdns.gigya.com/js/gigya.js?apikey=\" + this.apiKey + \"&lang=\" + this.langCode; // + \"&lang=es\";\r\n      document.head.appendChild(widgetScript);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    //   setTimeout(function () {\r\n    //   thisObj = this;\r\n    //   $(document).ready(function () {\r\n    //       $(\"a\").click(thisObj.loadWidget());\r\n    //       $(\"a\").hide();\r\n    //   });\r\n    // }, 1000);\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      // thisObj = this;\r\n      $(\"a\").click(this.loadWidget());\r\n      $(\"a\").hide();\r\n    }, 1000);\r\n  }\r\n\r\n  public loadWidget() {\r\n    if (typeof gigya !== \"undefined\") {\r\n      const params = {\r\n        screenSet: (this.langCodeForScreenSet == \"us\" && this.isProspect == false) ? \"RegistrationLogin_US\" : \"RegistrationLogin\",\r\n        // startScreen: \"gigya-register-screen\", gigya-forgot-password-screen\r\n        startScreen: \"gigya-reset-password-screen\",\r\n        lang: this.langCode,\r\n        containerID: \"gigyaContainer\",\r\n        onError: this.errorHandler,\r\n        onBeforeSubmit: this.formCheck,\r\n        //onSubmit: this.formSubmit,\r\n        onAfterSubmit: this.afterFormSubmit,\r\n        //onBeforeScreenLoad: this.beforeScreenLoad,\r\n        // onAfterScreenLoad: this.afterScreenLoad,\r\n      };\r\n      gigya.accounts.showScreenSet(params);\r\n\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  public errorHandler(eventObj) {\r\n    //thisObj.showMsg(eventObj.errorMessage);\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  public formCheck(eventObj) {\r\n    //For checking formfields\r\n  }\r\n\r\n  public afterFormSubmit(eventObj) {\r\n    if (eventObj.screen == \"gigya-profile-update-screen\") {\r\n      this.addUpdateUser(eventObj);\r\n    }\r\n  }\r\n\r\n  public addUpdateUser(eventObj) {\r\n    this.userDetails = new GigyaUserRegisInfo();\r\n    this.userDetails.Title = eventObj.data.prefix;\r\n    this.userDetails.FirstName = eventObj.profile.firstName;\r\n    this.userDetails.LastName = eventObj.profile.lastName;\r\n    this.userDetails.Suffix = eventObj.data.suffix;\r\n\r\n    // this.userDetails.BusinessName =  eventObj.data.businessName;\r\n    // this.userDetails.AddressLine2 = eventObj.data.address_2;\r\n    // this.userDetails.City = eventObj.profile.city; \r\n    // this.userDetails.State =  eventObj.data.province;\r\n    // this.userDetails.ZipCode = eventObj.profile.zip;\r\n\r\n    this.userDetails.GigyaUID = eventObj.response.UID;\r\n    this.userDetails.Email = eventObj.profile.email;\r\n\r\n    this.userDetails.UserTypeId = EnmUserType.DVM;\r\n\r\n    //   console.log(\"UpdateDetails\");\r\n    // console.log(this.userDetails);\r\n\r\n    if (this.userDetails.GigyaUID != undefined) {\r\n      this.commonService.addUpdateGigyaUser(this.userDetails).subscribe({\r\n        next: () => {\r\n          this.showRegisterMsg(\"User profile updated successfully.\");\r\n        }, error: () => {\r\n          this.showRegisterMsg(\"User profile updated successfully\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public showRegisterMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, \"OK\", \"\", \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n      })\r\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n}\r\n","<div id=\"gigyaContainer\">\r\n\r\n</div>\r\n<a id=\"clk\" (click)=\"loadWidget()\" hidden></a>\r\n\r\n<!-- <script type=\"text/javascript\" src=\"https://cdns.gigya.com/js/gigya.js?apikey=3_-OIS70xuY2Nd6HMw_KvlOvjgLUg0hXzUlb1UDUtQyKAs8kCE07vHo5hyEJTCzyO_\"></script> -->\r\n\r\n<!-- <script>\r\n    function onGigyaServiceReady() {\r\n\r\n      gigya.accounts.showScreenSet({\r\n        screenSet: \"RegistrationLogin\",\r\n        startScreen: \"gigya-reset-password-screen\",\r\n        containerID: \"gigyaContainer\"\r\n      });\r\n    }\r\n</script> -->","import { Component, OnInit, Renderer2 } from \"@angular/core\";\r\nimport { GigyaUserRegisInfo } from \"../../../models/model\";\r\nimport { CommonService, HeaderService, LabelService } from \"../../../services\";\r\nimport { ConfirmationDialogService } from \"../../confirmation-dialog/confirmation-dialog.service\";\r\nimport { ScriptLoaderService } from \"../../../services/script-loader.service\";\r\ndeclare let gigya: any;\r\nlet thisObj: any;\r\n\r\n@Component({\r\n  selector: \"app-gigya-user-profile\",\r\n  templateUrl: \"./gigya-user-profile.component.html\",\r\n  styleUrls: [\"./gigya-user-profile.component.css\"],\r\n})\r\nexport class GigyaUserProfileComponent implements OnInit {\r\n\r\n  public userDetails: GigyaUserRegisInfo;\r\n  apiKey = localStorage.APIKey != undefined ? localStorage.APIKey : \"\";\r\n  langCode = localStorage.langCode != undefined ? localStorage.langCode : \"\";\r\n  langCodeForScreenSet =\r\n    localStorage.langCode != undefined\r\n      ? localStorage.langCode.split(\"-\")[0].toLowerCase()\r\n      : \"\";\r\n\r\n  params = {\r\n    screenSet:\r\n      this.langCodeForScreenSet == \"us\"\r\n        ? \"RegistrationLogin_US\"\r\n        : \"RegistrationLogin\",\r\n    // startScreen: \"gigya-forgot-password-screen\"\r\n    // startScreen: \"gigya-profile-screen\",\r\n    startScreen: \"gigya-profile-update-screen\",\r\n    containerID: \"gigyaContainer\",\r\n    lang: this.langCode,\r\n    onError: this.errorHandler,\r\n    onBeforeSubmit: this.formCheck,\r\n    //onSubmit: this.formSubmit,\r\n    onAfterSubmit: this.afterFormSubmit,\r\n  };\r\n\r\n  paramsClinicAdmin = {\r\n    screenSet: \"RegistrationLogin_US\",\r\n    // startScreen: \"gigya-forgot-password-screen\"\r\n    //startScreen: \"gigya-profile-update-screen\",\r\n    startScreen: \"gigya-profile-admin-update-screen\",\r\n    containerID: \"gigyaContainer\",\r\n    onError: this.errorHandler,\r\n    onBeforeSubmit: this.formCheck,\r\n    //onSubmit: this.formSubmit,\r\n    onAfterSubmit: this.afterFormSubmit,\r\n  };\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public labelService: LabelService,\r\n    public headerService: HeaderService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    private scriptLoader: ScriptLoaderService,\r\n    private renderer: Renderer2\r\n  ) {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    thisObj = this;\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.bindLoginLabel();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.bindLoginLabel();\r\n    }\r\n\r\n    const scriptElement = this.scriptLoader.loadJsScript(\r\n      this.renderer,\r\n      \"https://cdns.gigya.com/js/gigya.js?apikey=\" +\r\n      this.apiKey +\r\n      \"&lang=\" +\r\n      this.langCode\r\n    );\r\n    scriptElement.onload = () => {\r\n      this.loadWidget();\r\n    };\r\n    scriptElement.onerror = () => {\r\n      console.log(\"Could not load the Google API Script!\");\r\n    };\r\n  }\r\n\r\n  public loadWidget() {\r\n    if (typeof gigya !== \"undefined\") {\r\n      gigya.accounts.showScreenSet(this.params);\r\n    }\r\n  }\r\n\r\n  public errorHandler(eventObj) {\r\n    if (thisObj.screen != \"gigya-login-screen\")\r\n      thisObj.showMsg(eventObj.errorMessage);\r\n  }\r\n\r\n  public formCheck(eventObj) {\r\n    thisObj.screen = eventObj.screen;\r\n    if (\r\n      thisObj.screen == \"gigya-profile-update-screen\" ||\r\n      thisObj.screen == \"gigya-profile-admin-update-screen\"\r\n    ) {\r\n      thisObj.userDetails = new GigyaUserRegisInfo();\r\n      if (eventObj.formData[\"profile.phones.number\"] != undefined)\r\n        thisObj.userDetails.PhoneNo =\r\n          eventObj.formData[\"profile.phones.number\"];\r\n      if (eventObj.formData[\"profile.address\"] != undefined)\r\n        thisObj.userDetails.AddressLine1 = eventObj.formData[\"profile.address\"];\r\n      thisObj.userDetails.CountryId = thisObj.labelService.userCountryId;\r\n      thisObj.userDetails.LanguageId = thisObj.labelService.selectedLanguage;\r\n    } else {\r\n      thisObj.userDetails = new GigyaUserRegisInfo();\r\n    }\r\n  }\r\n\r\n  public afterFormSubmit(eventObj) {\r\n    if (\r\n      eventObj.screen == \"gigya-profile-update-screen\" ||\r\n      eventObj.screen == \"gigya-profile-admin-update-screen\"\r\n    ) {\r\n      thisObj.addUpdateUser(eventObj);\r\n    }\r\n  }\r\n\r\n  public addUpdateUser(eventObj) {\r\n    this.userDetails.Title = eventObj.data.prefix;\r\n    this.userDetails.FirstName = eventObj.profile.firstName;\r\n    this.userDetails.LastName = eventObj.profile.lastName;\r\n    this.userDetails.Suffix = eventObj.data.suffix;\r\n\r\n    this.userDetails.BusinessName = eventObj.data.businessName;\r\n    this.userDetails.AddressLine2 = eventObj.data.address_2;\r\n    this.userDetails.City = eventObj.profile.city;\r\n    this.userDetails.State = eventObj.data.province;\r\n    this.userDetails.ZipCode = eventObj.profile.zip;\r\n\r\n    this.userDetails.GigyaUID = eventObj.response.UID;\r\n    this.userDetails.Email = eventObj.profile.email;\r\n\r\n    this.userDetails.UserTypeId = this.headerService.userTypeId;\r\n    this.userDetails[\"userGuid\"] = this.headerService.loginUserGuid;\r\n    this.userDetails[\"businessGuid\"] = this.headerService.selectedBusinessGuid;\r\n\r\n    if (this.userDetails.GigyaUID != undefined) {\r\n      this.commonService.addUpdateGigyaUser(this.userDetails).subscribe({\r\n       next:() => {\r\n          // this.headerService.selectedBusinessName = this.userDetails.BusinessName;\r\n          // localStorage.setItem(\"businessName\", this.userDetails.BusinessName);\r\n          this.headerService.userName = this.userDetails.FirstName;\r\n          localStorage.setItem(\"userName\", this.headerService.userName);\r\n          this.headerService.getBusinessListDetailsByUserId(\r\n            this.headerService.selectedBusinessGuid\r\n          );\r\n          // this.headerService.getBusinessListDetailsByUserId(this.headerService.businessGuid);\r\n\r\n          this.showRegisterMsg(\r\n            this.labelService.dsLoginScreen.UserProfileUpdated\r\n          );\r\n        },\r\n        error:() => {\r\n          this.showRegisterMsg(\r\n            this.labelService.dsLoginScreen.UserProfileUpdated + \".\"\r\n          );\r\n        }\r\n    });\r\n    }\r\n  }\r\n\r\n  public showRegisterMsg(msg) {\r\n    this.confirmationDialogService\r\n      .confirm(\r\n        \"\",\r\n        msg,\r\n        this.labelService.dsLoginScreen.OK,\r\n        \"\",\r\n        \"sm\",\r\n        true,\r\n        false\r\n      )\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          // gigya.accounts.showScreenSet(this.loginParams);\r\n        }\r\n      })\r\n      .catch(() =>\r\n        console.log(\r\n          \"User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)\"\r\n        )\r\n      );\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"user-profile\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <mat-accordion>\r\n            <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n              <div id=\"gigyaContainer\" class=\"gigyaDiv\">\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<a id=\"clk\" (click)=\"loadWidget()\" hidden></a>","import { Component, OnInit, Renderer2 } from \"@angular/core\";\r\nimport { HeaderService } from \"../../../services\";\r\nimport { ScriptLoaderService } from \"../../../services/script-loader.service\";\r\ndeclare let gigya: any;\r\nlet thisObj: any;\r\n\r\n@Component({\r\n  selector: \"app-gigya-change-password\",\r\n  templateUrl: \"./gigya-change-password.component.html\",\r\n  styleUrls: [\"./gigya-change-password.component.css\"],\r\n})\r\nexport class GigyaChangePasswordComponent implements OnInit {\r\n  apiKey = localStorage.APIKey != undefined ? localStorage.APIKey : \"\";\r\n  langCode = localStorage.langCode != undefined ? localStorage.langCode : \"US-EN\";\r\n  langCodeForScreenSet = localStorage.langCode != undefined ? localStorage.langCode.split(\"-\")[0].toLowerCase() : \"\";\r\n\r\n  params = {\r\n    screenSet:\r\n      this.langCodeForScreenSet == \"us\"\r\n        ? \"RegistrationLogin_US\"\r\n        : \"RegistrationLogin\",\r\n    lang: this.langCode,\r\n    startScreen: \"gigya-change-password\",\r\n    containerID: \"gigyaContainer\",\r\n    onError: this.errorHandler,\r\n  };\r\n\r\n  constructor(public headerService: HeaderService,\r\n    private scriptLoader: ScriptLoaderService,\r\n    private renderer: Renderer2) {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias  \r\n    thisObj = this;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const scriptElement = this.scriptLoader.loadJsScript(\r\n      this.renderer,\r\n      \"https://cdns.gigya.com/js/gigya.js?apikey=\" +\r\n      this.apiKey +\r\n      \"&lang=\" +\r\n      this.langCode.toLowerCase()\r\n    );\r\n    scriptElement.onload = () => {\r\n      this.loadWidget();\r\n    };\r\n    scriptElement.onerror = () => {\r\n      console.log(\"Could not load the Google API Script!\");\r\n    };\r\n  }\r\n\r\n  public loadWidget() {\r\n    if (typeof gigya !== \"undefined\") {\r\n      gigya.accounts.showScreenSet(this.params);\r\n    }\r\n  }\r\n\r\n  public errorHandler(eventObj) {\r\n    thisObj.showMsg(eventObj.errorMessage);\r\n  }\r\n  // public formCheck(eventObj) { }\r\n  // public afterFormSubmit(eventObj) { }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"changepass\">\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <div class=\"outer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1 pt-2\">\r\n          <mat-accordion>\r\n            <mat-expansion-panel expanded hideToggle=\"true\" disabled>\r\n              <div id=\"gigyaContainer\">\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<a id=\"clk\" (click)=\"loadWidget()\" hidden></a>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-ups',\r\n  templateUrl: './ups.component.html',\r\n  styleUrls: ['./ups.component.css']\r\n})\r\nexport class UpsComponent implements OnInit {\r\n\r\n  constructor(public router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    document.forms['upsform'].submit();\r\n  }\r\n\r\n\r\n}\r\n","<form class=\"form-signin\" id=\"upsForm\" method=\"POST\" action=\"https://row.ups.com/GuestAccess/Guest/Access\"\r\n  #formGroupDirective=\"ngForm\" id=\"upsform\" autocomplete=\"off\">\r\n  <div class=\"form-label-group mb-4\">\r\n    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n      <input type=\"hidden\" name=\"Company\" value=\"Wk5MYWJz\">\r\n    </mat-form-field>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService, EncrDecrService, LabelService, UserService } from '../../services';\r\nimport { ConfirmationDialogService } from '../confirmation-dialog/confirmation-dialog.service';\r\n@Component({\r\n  selector: 'app-zrl-verification',\r\n  templateUrl: './zrl-verification.component.html',\r\n  styleUrls: ['./zrl-verification.component.css']\r\n})\r\nexport class ZrlVerificationComponent implements OnInit {\r\n\r\n  public zrlForm: UntypedFormGroup;\r\n  public profileForm: UntypedFormGroup;\r\n  public zrlEmail = true;\r\n  public isProfile = false;\r\n  public msg = \"\";\r\n  public error = \"\";\r\n  public err = false;\r\n  public cerr = false;\r\n  public Lerr = false;\r\n  public Conerr = true;\r\n  userGuid: any;\r\n  public dsTitle: any[] = [];\r\n  public dsSuffix: any[] = [];\r\n  signal: any;\r\n  email: any;\r\n  public apiUrl: string;\r\n  newAccount: string;\r\n\r\n  constructor(private fb: UntypedFormBuilder, public userService: UserService, public labelService: LabelService, public router: Router, private EncrDecr: EncrDecrService, public commonService: CommonService, public confirmationDialogService: ConfirmationDialogService) {\r\n    this.createForm();\r\n    this.createProfileForm();\r\n    this.apiUrl = ('https:' == document.location.protocol ? 'https://' : 'http://') + location.host + '/#/www.zoetisdx.com/' + this.labelService.selectedLanguage;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.commonService.getUserDDLDetails(this.labelService.selectedLanguage, this.labelService.userCountryId, null).subscribe(data => {\r\n      this.dsTitle = data.ResponseData.TitleDetails;\r\n      this.dsSuffix = data.ResponseData.SuffixDetails;\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.zrlForm = this.fb.group({\r\n      email: ['', Validators.email]\r\n    });\r\n  }\r\n\r\n  createProfileForm() {\r\n    this.profileForm = this.fb.group({\r\n      Title: [''],\r\n      FirstName: ['', Validators.required],\r\n      LastName: ['', Validators.required],\r\n      Suffix: [''],\r\n      Email: [this.email],\r\n      Signal: ['', Validators.required],\r\n      ConfirmSignal: ['', Validators.required],\r\n      UserGuid: [this.userGuid],\r\n    });\r\n  }\r\n\r\n  public noSpaces(val) {\r\n    if (val.match(/\\s/g)) {\r\n      this.zrlForm.controls[\"User\"].setValue(val.replace(/\\s/g, ''));\r\n    }\r\n  }\r\n\r\n\r\n  public zrlVerification() {\r\n    this.email = this.zrlForm.controls['email'].value;\r\n    this.userService.zrl = this.zrlForm.value;\r\n    if (this.zrlForm.status == \"VALID\") {\r\n      this.profileForm.patchValue({ Email: this.zrlForm.controls['email'].value });\r\n      this.userService.verifyZrl().subscribe(data => {\r\n        if (data.ResponseData == \"userprofile\") {\r\n          this.zrlEmail = false;\r\n          this.isProfile = true;\r\n        } else if (data.ResponseData == \"userlogin\") {\r\n          this.Conerr = false;\r\n          this.cerr = true;\r\n          this.Lerr = true;\r\n          this.error = \"A ZoetisDx account already exists with this email address.Please log in with your existing ZoetisDx credentials\"\r\n        } else if (data.ResponseData == \"notfound\") {\r\n          this.Conerr = false;\r\n          this.cerr = false;\r\n          this.err = true;\r\n          this.newAccount = \"This service is available for email addresses used in the ZRL Portal. You can sign up for a new ZoetisDx account at\";\r\n          this.msg = '';\r\n\r\n        } else if (data.ResponseData.length > 20) {\r\n\r\n          this.userGuid = data.ResponseData;\r\n          this.zrlEmail = false;\r\n          this.isProfile = true;\r\n        }\r\n\r\n      })\r\n    }\r\n    else {\r\n      if (!this.zrlForm.controls['email'].valid && this.zrlForm.controls['email'].value != null && this.zrlForm.controls['email'].value != \"\") {\r\n        this.msg = this.labelService.dsLoginScreen.Pleaseentervalidemail;\r\n      }\r\n      else {\r\n        this.msg = this.labelService.dsLoginScreen.Pleaseenterallrequiredfields;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  public loginUrl() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  public cancelError() {\r\n    this.error = '';\r\n    this.msg = '';\r\n    this.cerr = false;\r\n    this.Lerr = false;\r\n    this.Conerr = true;\r\n    this.zrlForm.reset();\r\n  }\r\n\r\n  public okError() {\r\n    this.err = false;\r\n    this.Conerr = true;\r\n    this.error = '';\r\n    this.newAccount = '';\r\n    this.zrlForm.reset();\r\n  }\r\n\r\n  public cancelBack() {\r\n    this.isProfile = false\r\n    this.zrlEmail = true;\r\n    this.msg = '';\r\n    this.zrlForm.reset();\r\n  }\r\n\r\n  public UpdateUserProfile() {\r\n    this.signal = this.profileForm.controls['Signal'].value;\r\n    // Signal:this.EncrDecr.encrypt(this.profileForm.get('Signal').value)\r\n    this.profileForm.patchValue({ UserGuid: this.userGuid });\r\n    if (this.profileForm.status == \"VALID\") {\r\n      if (this.signal === this.profileForm.controls['ConfirmSignal'].value) {\r\n        // this.profileForm.removeControl('ConfirmSignal');\r\n        // this.profileForm.controls['ConfirmSignal'].setValue(\"\");\r\n        this.userService.UpdatezrlUserProfile(this.profileForm.value).subscribe(() => {\r\n          this.confirmationDialogService.confirm(\"\", \"Profile Updated Successfully\", this.labelService.dsSignUpScreen.OK, this.labelService.dsSignUpScreen.Cancel, \"sm\", true, false)\r\n            .then((confirmed) => {\r\n              if (confirmed) {\r\n                this.router.navigateByUrl('/login');\r\n                this.profileForm.reset();\r\n              }\r\n            })\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"login-outer\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"col-sm-5\" *ngIf=\"zrlEmail\">\r\n        <div class=\"card card-login my-5 pt-4 pb-4\">\r\n\r\n          <div class=\"card-body\">\r\n\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"logo-login\" />\r\n            </div>\r\n            <p class=\"textpart\">Please enter the email associated with your ZRL Portal account <span>\r\n                <mat-icon class=\"maticons\"\r\n                  matTooltip=\"The email address associated with your ZRL Portal account can be found logging into ZRL Portal and clicking on the profile icon.\r\n                                                                                                      The email address associated to your account will be displayed at the top of the screen.\">info</mat-icon></span>\r\n            </p>\r\n\r\n            <div class=\"inputbox\">\r\n              <form class=\"example-form\" [formGroup]=\"zrlForm\">\r\n                <mat-form-field class=\"loginPart\" appearance=\"outline\" floatLabel=\"always\">\r\n                  <input type=\"text\" matInput formControlName=\"email\" placeholder=\"Email*\"\r\n                    (keyup)=\"noSpaces($event.target.value)\" required />\r\n                </mat-form-field>\r\n\r\n              </form>\r\n              <div class=\"text-center mb-4 errpart\" *ngIf=\"newAccount\">\r\n                {{newAccount}} <a target=\"_blank\" [href]=\"apiUrl\">www.zoetisdx.com</a>\r\n              </div>\r\n              <div class=\"text-center mb-4 errpart\">\r\n                {{error}}\r\n              </div>\r\n              <div class=\"text-center mb-4 errormsg errpartone\">\r\n                {{msg}}\r\n              </div>\r\n              <button mat-button color=\"primary\" class=\"Btns cncl\" (click)=\"cancelError()\" *ngIf=\"cerr\">Cancel</button>\r\n              <button mat-button color=\"primary\" class=\"Btns\" (click)=\"zrlVerification()\"\r\n                *ngIf=\"Conerr\">Continue</button>\r\n              <button mat-button color=\"primary\" class=\"Btns\" (click)=\"loginUrl()\" *ngIf=\"Lerr\">Login</button>\r\n              <button mat-button color=\"primary\" class=\"Btns\" (click)=\"okError()\" *ngIf=\"err\">Ok</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"isProfile\">\r\n      <form [formGroup]=\"profileForm\">\r\n        <div class=\"heading\">\r\n          <h5>Profile</h5>\r\n        </div>\r\n        <div class=\"profilepart d-flex justify-content-start flex-wrap\">\r\n          <!-- <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n    <mat-label>Title</mat-label>\r\n    <input type=\"text\" matInput formControlName=\"Title\"/>\r\n  </mat-form-field> -->\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Title</mat-label>\r\n            <mat-select placeholder=\"Choose\" formControlName=\"Title\">\r\n              <mat-option [value]=\"\">\r\n                Choose\r\n              </mat-option>\r\n              <mat-option *ngFor=\"let title of dsTitle\" [value]=\"title.Id\">{{\r\n                title.Prefix\r\n                }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>First Name*</mat-label>\r\n            <input type=\"text\" placeholder=\"Enter First Name\" matInput formControlName=\"FirstName\" />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Last Name*</mat-label>\r\n            <input type=\"text\" placeholder=\"Enter Last Name\" matInput formControlName=\"LastName\" />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Suffix</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"Suffix\" placeholder=\"Enter Suffix\" />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Email</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"Email\" [(ngModel)]=\"email\" required readonly />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Password*</mat-label>\r\n            <input type=\"password\" placeholder=\"Enter Password\" matInput formControlName=\"Signal\" />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"inpt mr-3\" appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-label>Confirm Password*</mat-label>\r\n            <input type=\"password\" matInput placeholder=\"Confirm Password\" formControlName=\"ConfirmSignal\" />\r\n          </mat-form-field>\r\n          <div class=\"profileBtn\">\r\n            <button class=\"cancelBtn mr-3\" (click)=\"cancelBack()\">Cancel</button>\r\n            <button class=\"submitBtn\" (click)=\"UpdateUserProfile()\">Complete Profile</button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>","import { LocationStrategy } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService, HeaderService, DataService, SidemenuService, LabelService } from '../../services';\r\nimport { EnmCountry, EnmLanguage, EnmUserType } from '../../shared/constants/enum';\r\nimport { UserAuth } from '../../models/model';\r\nimport { ConfirmationDialogService } from '../confirmation-dialog/confirmation-dialog.service';\r\nimport { environment } from '../../../environments/environment';\r\n@Component({\r\n  selector: 'app-zdx-redirection',\r\n  templateUrl: './zdx-redirection.component.html',\r\n  styleUrls: ['./zdx-redirection.component.css']\r\n})\r\nexport class ZdxRedirectionComponent {\r\n\r\n  public userAuth: UserAuth;\r\n  // isConsultantUser: boolean;\r\n  isBkoUrl:boolean = false;\r\n  constructor(public router: Router, public commonService: CommonService, public headerService: HeaderService, private dataService: DataService, public sidemenuService: SidemenuService, private location: LocationStrategy,\r\n    public confirmationDialogService: ConfirmationDialogService, public labelService: LabelService) {\r\n    // this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    if (this.router.url.indexOf(\"?res=\") != -1) {\r\n      const params = this.router.url.trim().split('?res=');\r\n      if (params[1] == 'null') {\r\n        this.sidemenuService.logOut();\r\n        this.router.navigate(['/login']);\r\n        return;\r\n      }\r\n      if (params[1] != undefined && params[1] != null && params[1] != \"\")\r\n        this.velidateAndRedirect(params[1]);\r\n    }\r\n    else {\r\n      console.log(\"Incorrect res paramerter.\");\r\n      // this.router.navigateByUrl('/internal');\r\n      this.failedAPIRedirection();\r\n      // window.location.href = environment.ZdxInternalUrl;\r\n    }\r\n  }\r\n\r\n  public velidateAndRedirect(guId) {\r\n    localStorage.removeItem('locationBackFromInfo')\r\n    this.commonService.getKeyData(guId).subscribe(reponse => {\r\n      if(reponse.StatusCode == 200){\r\n      const guidVal = this.commonService.decrypt(reponse.ResponseData);\r\n      localStorage.setItem(\"rediretionDetails\", guidVal);\r\n      localStorage.removeItem('authDetails');\r\n      this.dataService.appState.consultationBackUrl = (guidVal.split(\"backURL=\")[1] != undefined ? guidVal.split(\"backURL=\")[1].split(\"&\")[0] : \"\");\r\n      const redirectionUrl: any = (guidVal.split(\"redirect=\")[1] != undefined ? guidVal.split(\"redirect=\")[1].split(\"&\")[0] : \"/internal\").replace('#', '');\r\n      const accessToken = (guidVal.split(\"refresh_token=\")[1] != undefined ? guidVal.split(\"refresh_token=\")[1].split(\"&\")[0] : \"\");\r\n      let businessGuid = (guidVal.split(\"businessGuid=\")[1] != undefined ? guidVal.split(\"businessGuid=\")[1].split(\"&\")[0] : \"\");\r\n      const userGuid = (guidVal.split(\"UserGuid=\")[1] != undefined ? guidVal.split(\"UserGuid=\")[1].split(\"&\")[0] : null);\r\n      const AppointmentGuid = (guidVal.split(\"AppointmentGuid=\")[1] != undefined ? guidVal.split(\"AppointmentGuid=\")[1].split(\"&\")[0] : null);\r\n      const ReportDisabled = (guidVal.split(\"ReportDisabled=\")[1] != undefined ? guidVal.split(\"ReportDisabled=\")[1].split(\"&\")[0] : null);\r\n      const isInternalUser = (guidVal.split(\"isInternal=\")[1] != undefined ? guidVal.split(\"isInternal=\")[1].split(\"&\")[0] : false);\r\n      const token = (guidVal.split(\"token=\")[1] != undefined ? guidVal.split(\"token=\")[1].split(\"&\")[0] : null);\r\n      const UIGuid = (guidVal.split(\"deviceId=\")[1] != undefined ? guidVal.split(\"deviceId=\")[1].split(\"&\")[0] : null)\r\n      localStorage.setItem('UIGuid', UIGuid)\r\n      this.isBkoUrl = guidVal.split(\"isNewInternal=\")[1] != undefined ? JSON.parse(guidVal.split(\"isNewInternal=\")[1].split(\"&\")[0]) : false\r\n      const isViewClinic = (guidVal.split(\"isViewClinic=\")[1] != undefined ? guidVal.split(\"isViewClinic=\")[1].split(\"&\")[0] : false);\r\n      const bkoUrlRedirection = (guidVal.split(\"backBkoUrl=\")[1] != undefined ? guidVal.split(\"backBkoUrl=\")[1].split(\"&\")[0] : this.checkBackTOBko()).replace('#', '');\r\n      localStorage.setItem('bkoUrlRedirection', bkoUrlRedirection)\r\n      const bkoBussinessInfo = (guidVal.split(\"bkoBussinessInfo=\")[1] != undefined ? guidVal.split(\"bkoBussinessInfo=\")[1] : this.checkBckBus());\r\n      localStorage.setItem('bckBusinessInfo', bkoBussinessInfo)\r\n      const bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo')) ? JSON.parse(localStorage.getItem('bckBusinessInfo')) : null;\r\n      const isReflab = (guidVal.split(\"IsLinkedRefLabClinic=\")[1] != undefined ? guidVal.split(\"IsLinkedRefLabClinic=\")[1].split(\"&\")[0] : false);\r\n      this.dataService.appData['AppointmentGuid'] = AppointmentGuid;\r\n      this.dataService.appData['ReportDisabled'] = ReportDisabled;\r\n      this.dataService.data.next(this.dataService.appData);\r\n      localStorage.setItem('AppointmentGuid', AppointmentGuid)\r\n      localStorage.setItem('ReportDisabled', ReportDisabled)\r\n\r\n      const checkConsulation = (!(isInternalUser || isViewClinic) && redirectionUrl != '/refLab/dos') ? true : false;\r\n      if (businessGuid == \"\")\r\n        businessGuid = (guidVal.split(\"businessguid=\")[1] != undefined ? guidVal.split(\"businessguid=\")[1].split(\"&\")[0] : \"\");\r\n      if (accessToken != null && accessToken != \"\") {\r\n        this.userAuth = new UserAuth();\r\n        this.userAuth.refresh_token = accessToken;\r\n\r\n        this.userAuth.LanguageId = (guidVal.split(\"languageId=\")[1] != undefined ? parseInt(guidVal.split(\"languageId=\")[1].split(\"&\")[0]) : EnmLanguage.English);\r\n        this.userAuth.BOAccessUserGuid = bckBusinessInfo ? bckBusinessInfo.UserGuid : null;\r\n        if (isInternalUser || isViewClinic || checkConsulation) {\r\n          console.log(\"testing0\")\r\n          this.userAuth.BOAccessUserGuid = userGuid;\r\n        }\r\n\r\n        this.userAuth.access_token = token;\r\n        this.userAuth.TokenSource = 'zdx';\r\n        this.commonService.refreshToken(this.userAuth).subscribe(data => {\r\n\r\n          this.dataService.appData.authDetails = data;\r\n          this.dataService.data.next(this.dataService.appData);\r\n          if (businessGuid != \"\")\r\n            data.BusinessGuid = businessGuid;\r\n          if (checkConsulation && data.IsConsultantUser)\r\n            data.UserGuid = userGuid;\r\n          this.headerService.setAuthSession(data);\r\n\r\n          const authData = JSON.parse(localStorage.authDetails);\r\n          if (bckBusinessInfo) {\r\n            this.headerService.loginUserGuid = bckBusinessInfo.UserGuid;\r\n            this.dataService.appData.authDetails['BusinessGuid'] = bckBusinessInfo.BusinessGuid;\r\n            this.dataService.appData.authDetails['UserGuid'] = bckBusinessInfo.UserGuid;\r\n            this.dataService.appData.authDetails['IsLinkedRefLabClinic'] = (bckBusinessInfo.IsLinkedRefLabClinic ? true : false);\r\n            this.dataService.pageState.dashboard.requestParams = null;\r\n            this.dataService.appData.authDetails['IsReflabActive'] = (bckBusinessInfo.IsLinkedRefLabClinic ? true : false);\r\n            authData.BusinessGuid = bckBusinessInfo.BusinessGuid;\r\n            authData.UserGuid = bckBusinessInfo.UserGuid;\r\n\r\n            localStorage.setItem('authDetails', JSON.stringify(authData));\r\n            this.dataService.data.next(this.dataService.appData);\r\n\r\n            this.headerService.businessGuid = bckBusinessInfo.BusinessGuid;\r\n            this.headerService.selectedBusinessGuid = bckBusinessInfo.BusinessGuid;\r\n            localStorage.setItem('businessGuid', bckBusinessInfo.BusinessGuid);\r\n\r\n            localStorage['businessGuid'] = bckBusinessInfo.BusinessGuid;\r\n            this.getLabelDetails(1);\r\n            if (redirectionUrl.includes(\"/result-details\") != 1) {\r\n\r\n              this.sidemenuService.getSideMenu(this.headerService.userTypeId, data.LanguageId, data.BCountryId, false);\r\n            } else {\r\n\r\n              localStorage.setItem('bkolanding', '3');\r\n              this.getPatientData(JSON.parse(bkoBussinessInfo));\r\n            }\r\n          }\r\n          if (checkConsulation && data.IsConsultantUser) {\r\n            this.headerService.loginUserGuid = userGuid;\r\n            this.dataService.appData.authDetails['UserGuid'] = userGuid;\r\n            authData.UserGuid = userGuid;\r\n          }\r\n          if (data.UserTypeId == EnmUserType.Consult || data.UserTypeId == EnmUserType.ConsultAdmin) {\r\n            localStorage.setItem(\"languageId\", data.LanguageId)\r\n            localStorage.setItem(\"userCountryId\", data.CountryId)\r\n            this.labelService.selectedLanguage = (data.LanguageId != undefined && data.LanguageId != null && data.LanguageId != \"\" && data.LanguageId != \"0\" ? parseInt(data.LanguageId) : EnmLanguage.English);\r\n            this.labelService.userCountryId = data.CountryId != undefined && data.CountryId != null && data.CountryId != \"\" ? parseInt(data.CountryId) : EnmCountry.UnitedStates;\r\n            this.sidemenuService.getSideMenu(this.headerService.userTypeId, data.LanguageId, data.CountryId, false);\r\n            this.filterDDL();\r\n            this.getLabelDetails(this.labelService.selectedLanguage);\r\n          }\r\n          if (redirectionUrl.indexOf('patient/list') !== -1) {\r\n            this.dataService.appData.authDetails['IsLinkedRefLabClinic'] = (isReflab ? true : false);\r\n            this.dataService.appData.authDetails['IsReflabActive'] = (isReflab ? true : false);\r\n            this.dataService.data.next(this.dataService.appData);\r\n            localStorage.setItem('locationBackFromInfo', '1') //If 1, clicking on back from info will navigate to patient list instead of zcs\r\n          }\r\n          if (redirectionUrl.includes(\"/result-details\") != 1)\r\n            this.router.navigateByUrl(redirectionUrl);\r\n          this.dataService.appState.consultantLandingUrl = redirectionUrl;\r\n          this.dataService.state.next(this.dataService.appState);\r\n        }, error => {\r\n          console.log(JSON.stringify('zcs to zdx redirection error:', error));\r\n          // this.router.navigateByUrl('/internal');\r\n          (this.isBkoUrl)?\r\n           this.sidemenuService.logOut('internal'): this.sidemenuService.logOut();\r\n        });\r\n      }\r\n    }else{\r\n       this.failedAPIRedirection();\r\n      // (localStorage?.authDetails['BackOfficeFlag'] || localStorage?.authDetails['IsConsultantUser'] )?\r\n      //   this.sidemenuService.logOut('internal') :   this.sidemenuService.logOut();\r\n    }\r\n    }, error => {\r\n      console.log(JSON.stringify('zcs to zdx redirection error111:', error));\r\n      this.failedAPIRedirection();\r\n    });\r\n  }\r\n\r\n  failedAPIRedirection(){\r\n\r\n    if(!(localStorage?.authDetails)) return  window.location.href = environment.ZdxInternalUrl;\r\n\r\n    (localStorage?.authDetails['BackOfficeFlag'] || localStorage?.authDetails['IsConsultantUser'] )?\r\n        this.sidemenuService.logOut('internal') :   this.sidemenuService.logOut();\r\n  }\r\n\r\n  checkBckBus(){\r\n    if(localStorage.bckBusinessInfo){\r\n      return  localStorage.getItem(\"bckBusinessInfo\");\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  checkBackTOBko(){\r\n    if(localStorage.bckBusinessInfo){\r\n       return localStorage.getItem('bkoUrlRedirection');\r\n    }else{\r\n       return  \"/internal\";\r\n    }\r\n  }\r\n\r\n  getPatientData(res) {\r\n    const reqbody: any = {\r\n      AnalysisSourceId: 0,\r\n      AnalysisStatusId: 0,\r\n      AnalysisTypeId: 0,\r\n      AnalysisTypeName: null,\r\n      Analyzer: null,\r\n      Breed: \"\",\r\n      BusinessGuid: res.BusinessGuid,\r\n      FromDate: null,\r\n      GenderId: 0,\r\n      IsApplyFilter: true,\r\n      IsBackOfficeUser: true,\r\n      IsExactFilter: true,\r\n      LanguageId: 1,\r\n      OwnerName: null,\r\n      PageNo: 1,\r\n      PageSize: 60,\r\n      PatientId: res.patientId,\r\n      PatientName: null,\r\n      PhysicianName: null,\r\n      SearchText: null,\r\n      SpeciesId: 0,\r\n      SpeciesName: null,\r\n      ToDate: null,\r\n      UserGuid: res.UserGuid,\r\n      isFollowedPatient: false,\r\n      isSortByLastResultDate: true,\r\n      ZDXPatientInfoId: res.zdxPatientId ? res.zdxPatientId : 0\r\n    };\r\n    this.commonService.getPatientResultList(reqbody).subscribe(resp => {\r\n      if (resp.ResponseData.DashboardPatientList != null) {\r\n        const element = resp.ResponseData.DashboardPatientList[0]\r\n        this.dataService.appState.selectedResult.element = element;\r\n        const patientHistoryList = resp.ResponseData.DashboardPatientList[0].Details;\r\n        let subEle;\r\n        if (res.SourceType == 'InClinic') {\r\n          subEle = patientHistoryList.find(x => x.AnalysisTypeName == res.AnalysisTypeName && x.DateReceived == res.DateReceived)\r\n        } else {\r\n          subEle = patientHistoryList.find(x => x.AnalysisTypeId == res.AnalysisTypeId)\r\n        }\r\n        if (subEle) {\r\n          this.dataService.appState.selectedResult.subElement = subEle;\r\n          this.dataService.state.next(this.dataService.appState);\r\n\r\n          this.sidemenuService.getSideMenu(this.headerService.userTypeId, 1, 40, false);\r\n          this.router.navigateByUrl('/result-details');\r\n        } else {\r\n          this.openDialog();\r\n        }\r\n      } else {\r\n        this.openDialog();\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  openDialog() {\r\n    this.confirmationDialogService.BO_Confirm(\"\", 'No Results Found', 'OK', 'Cancel', \"sm\", true, false)\r\n      .then((confirmed) => {\r\n        if (confirmed) {\r\n          this.headerService.EndBkoImpersonation();\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  filterDDL() {\r\n    const langId = this.dataService.appData.authDetails['LanguageId'];\r\n    if (langId) {\r\n      this.commonService.getFilterDDLDetails(langId).subscribe(res => {\r\n        this.dataService.appData.filterDropDownList = res.ResponseData;\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n  }\r\n\r\n  public getLabelDetails(selectedLang) {\r\n\r\n    this.labelService.getLabelDetails(null, selectedLang, true).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.dataService.appData.labels = this.labelService.dsLabelData\r\n    });\r\n  }\r\n\r\n}\r\n","<p>zdx redirection inprogress...!</p>\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SearchResultScreen } from '../../models/label';\r\nimport {\r\n  LabelService, DataService, HeaderService, SidemenuService,\r\n  SidefilterService, PatientService, CommonService, EncrDecrService, AlertService\r\n} from '../../services';\r\nimport { SideFilter } from '../../models/side-filter';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nclass SearchRequestParams {\r\n  BusinessGuid: string;\r\n  UserGuid: string;\r\n  LanguageId: any;\r\n  PageSize: any;\r\n  PageNo: any;\r\n  IsBackOfficeUser: boolean;\r\n  SearchText?: string;\r\n  constructor() {\r\n    this.BusinessGuid = null;\r\n    this.UserGuid = null;\r\n    this.LanguageId = 1;\r\n    this.PageNo = 1;\r\n    this.PageSize = 60;\r\n    this.IsBackOfficeUser = false;\r\n    this.SearchText = '';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  styleUrls: ['./search-results.component.css']\r\n})\r\nexport class SearchResultsComponent implements AfterViewInit {\r\n\r\n  public label: SearchResultScreen;\r\n  public authDetails: any;\r\n  public isBackOfficeUser: boolean;\r\n  public columnsToDisplay = ['PatientId', 'PatientName', 'Owner', 'SpeciesName', 'BreedName', 'Sex', 'LastResultDate'];\r\n  public dataSource = new MatTableDataSource<any>();\r\n  public filter: SearchRequestParams;\r\n  public pataientList: any[];\r\n  public isLoadMore: boolean;\r\n  public isMobile: boolean;\r\n  public prevSearchText: string;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    public commonService: CommonService,\r\n    public sidemenuService: SidemenuService,\r\n    public headerService: HeaderService,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public dataService: DataService,\r\n    private EncrDecr: EncrDecrService,\r\n    private title: Title, public alertService: AlertService) {\r\n    this.title.setTitle('Search Results');\r\n    this.authDetails = this.dataService.appData.authDetails;\r\n    this.isBackOfficeUser = this.authDetails['BackOfficeFlag'];\r\n    this.label = this.labelService.searchResultScreen;\r\n\r\n    this.filter = new SideFilter();\r\n    this.filter.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.filter.LanguageId = this.dataService.appData.authDetails['LanguageId'];\r\n    this.filter.IsBackOfficeUser = this.isBackOfficeUser;\r\n\r\n    this.activatedRoute.queryParams.subscribe(() => {\r\n      this.filter.SearchText = this.headerService.searchText;\r\n      this.headerService.searchText = '';\r\n      if (this.dataService.appState.searchResult.searchStr) {\r\n        this.filter.SearchText = this.dataService.appState.searchResult.searchStr;\r\n      }\r\n      // this.getPatientList(this.filter);\r\n    });\r\n  }\r\n\r\n  public search(value) {\r\n    this.filter.SearchText = value;\r\n    this.getPatientList(this.filter);\r\n  }\r\n\r\n  public getPatientList(requestParams, fromScroll = false) {\r\n    if (!this.filter.SearchText) {\r\n      return;\r\n    }\r\n\r\n    if (this.prevSearchText != this.filter.SearchText) {\r\n      this.prevSearchText = this.filter.SearchText;\r\n      requestParams.PageNo = 1;\r\n    }\r\n\r\n    if (this.filter.PageNo == 1) {\r\n      this.pataientList = [];\r\n    }\r\n    requestParams.isSortByLastResultDate = true;\r\n    requestParams.sortOrder = true;\r\n    this.commonService.getSearchResult(requestParams).subscribe(data => {\r\n      const fetchedPatientList = data.ResponseData.PatientList ? this.CheckLastResultDate(data.ResponseData.PatientList) : data.ResponseData.PatientList;\r\n      // let fetchedPatientList =data.ResponseData.PatientList;\r\n      if (this.filter.PageNo == 1) {\r\n        if (fetchedPatientList != null && fetchedPatientList.length > 0) {\r\n          this.pataientList = fetchedPatientList;\r\n        } else {\r\n          this.pataientList = [];\r\n        }\r\n      } else {\r\n        if (fetchedPatientList != null && fetchedPatientList.length > 0 && fromScroll) {\r\n          this.pataientList = this.pataientList.concat(fetchedPatientList);\r\n        }\r\n      }\r\n\r\n      if (fetchedPatientList != null && fetchedPatientList.length > 0 && this.isLoadMore) {\r\n        this.isLoadMore = false;\r\n      } else {\r\n        this.scrolltoTop(null);\r\n      }\r\n      this.dataSource = new MatTableDataSource<any>(this.pataientList);\r\n      this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n      this.dataSource.sort = this.sort;\r\n    }, err => {\r\n      this.dataSource.data = [];\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n\r\n  }\r\n\r\n  CheckLastResultDate(results) {\r\n    // // if(results)\r\n    return results.filter(el => {\r\n      if (el.DateReceivedStr) return el;\r\n    })\r\n\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight;\r\n    const tableScrollHeight = e.target.scrollHeight;\r\n    const scrollLocation = e.target.scrollTop;\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      this.isLoadMore = true;\r\n      this.filter.PageNo++\r\n      this.getPatientList(this.filter, true)\r\n    }\r\n  }\r\n\r\n  public scrolltoTop(topVal) {\r\n    const scrollabe = document.getElementById('tbl-container');\r\n    scrollabe.scrollTop = topVal;\r\n  }\r\n\r\n  public clearSearch() {\r\n    this.filter.SearchText = '';\r\n    this.dataService.appState.searchResult.searchStr = null;\r\n    this.dataService.state.next(this.dataService.appState);\r\n    this.dataSource.data = [];\r\n  }\r\n\r\n  public OnRowClick(element) {\r\n    this.patientService.showPataientInfo(element, this.filter, this.filter.PageNo, null, null, true);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    try {\r\n      this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getSearchResultScreen();\r\n        this.label = this.labelService.searchResultScreen;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    } catch (error) {\r\n      console.log(JSON.stringify(error));\r\n      this.commonService.showCommonToastrError();\r\n    }\r\n\r\n    const tblContainer = document.getElementById('tbl-container');\r\n    tblContainer.style.height = (window.innerHeight - 190) + 'px';\r\n  }\r\n\r\n  FirstWordCapital(text:String){\r\n    text = text.toLowerCase();\r\n    return text[0].toUpperCase()+ text.slice(1);\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n    <app-side-menu></app-side-menu>\r\n    <div id=\"content\" class=\"search-res\">\r\n        <section>\r\n            <app-header (searchEvent)=\"search($event)\"></app-header>\r\n        </section>\r\n\r\n        <section class=\"title-container\">\r\n            <a href=\"javascript:void(0)\" (click)=\"commonService.goBack()\" class=\"back-btn\">{{label.Back}}</a>\r\n            <span class=\"page-title\" data-testid=\"sr-title\">{{label.SearchResults}}</span>\r\n        </section>\r\n\r\n        <section class=\"page-container mat-elevation-z2\">\r\n            <p class=\"filter-status-text mb-0\" *ngIf=\"filter.SearchText\">\r\n                <strong>\r\n                    <!-- Showing results for: -->\r\n                    {{label.resultlabel}}:\r\n                </strong>\r\n                <span class=\"pr-2\"> {{this.filter.SearchText}} </span>\r\n                <span style=\"cursor: pointer;\" (click)=\"clearSearch()\">X</span>\r\n            </p>\r\n            <!-- Showing results for -->\r\n            <!-- <p class=\"pr-4 mb-0\" style=\"text-align: right;\">\r\n                <span *ngIf=\"dataSource.data.length\">                    \r\n                    {{label.ShowingResultDated}}\r\n                    <span style=\"font-weight: bold;\">\r\n                        {{commonService.getMomentFromatedDate(this.commonService.twoYearBeforeFromToday)}}\r\n                    </span>\r\n                    {{label.To}}\r\n                    <span style=\"font-weight: bold;\">\r\n                        {{commonService.getMomentFromatedDate(this.commonService.today) }}\r\n                    </span>\r\n                </span>\r\n            </p> -->\r\n            <div id=\"tbl-container\" class=\"mattext\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort [class.isMobile]=\"isMobile\"\r\n                    (scroll)=\"onTableScroll($event)\">\r\n                    <ng-container matColumnDef=\"PatientId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.PatientID}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.PatientID}}:</span>\r\n                            <span class=\"mobile-text p-id\" style=\"color:#007bff;\">{{element.PatientId}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"PatientName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.PatientName}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.PatientName}}:</span>\r\n                            <span class=\"mobile-text p-name\">{{element.PatientName}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Owner\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.OwnerName}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.OwnerName}}:</span>\r\n                            <span class=\"mobile-text\"> {{element.OwnerName}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"SpeciesName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.Species}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.Species}}:</span>\r\n                            <span class=\"mobile-text\">{{element.SpeciesName}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"BreedName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.Breed}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.Breed}}:</span>\r\n                            <span class=\"mobile-text\">{{element.BreedName}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Sex\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.Sex}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.Sex}}:</span>\r\n                            <span class=\"mobile-text\">{{element.GenderName}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"LastResultDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{label.DateTime}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element\">\r\n                            <span class=\"mobile-label\">{{label.DateTime}}:</span>\r\n                            <span class=\"mobile-text\">{{element.DateReceivedStr}}</span>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\" (click)=\"OnRowClick(row)\"></mat-row>\r\n                </mat-table>\r\n                <div class=\"norecord\" *ngIf=\"dataSource.data.length===0\">\r\n                    <p>{{FirstWordCapital(label.NoRecordsFound)}}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n</div>","import { Component, OnDestroy, ViewChild, AfterViewInit, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { PatientService } from '../../services/patient.service';\r\nimport { PatientResultByFilter, DownloadPatientResult } from '../../models/patient';\r\nimport { HeaderService, FuseService, SidefilterService } from '../../services';\r\nimport { NgImageSliderComponent } from 'ng-image-slider-v17';\r\nimport { CommonService } from '../../services/common.service';\r\nimport moment from 'moment';\r\nimport { LabelService } from '../../services/label.service';\r\nimport { DataService } from '../../services/data.sevice';\r\nimport { RefLabService } from '../../services';\r\ndeclare let $: any;\r\nimport { ConfirmationDialogService } from '../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { Router } from '@angular/router';\r\nimport { EnmTestType } from '../../shared/constants/enum';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { environment } from '../../../environments/environment';\r\nimport { EncrDecrService } from '../../services/encr-decr.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ImageSliderComponent } from '../../shared/image-slider/image-slider.component';\r\nimport { SideFilter } from '../../models/side-filter';\r\nimport { constant } from '../../models/label';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-accession-results',\r\n  templateUrl: './accession-results.component.html',\r\n  styleUrls: ['./accession-results.component.css']\r\n})\r\nexport class AccessionResultsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  public isBackOfficeUser: boolean;\r\n  public isAnalyzerChanged = false;\r\n  public businessId: any;\r\n  public BusinessGuid: any;\r\n  public txtFromDate: any;\r\n  public txtToDate: any;\r\n  public patientDetails: any;\r\n  public dsDate: any[] = [];\r\n  public patientResultByFilter: PatientResultByFilter;\r\n  public downloadAnalysisResults: DownloadPatientResult;\r\n  public dsImagyst: any[] = [];\r\n  public originalDataAnalysisType: any[] = [];\r\n  public dsAnalyzer: any[] = [];\r\n  public dsAnalysisType: any[] = [];\r\n  public analysisTypeName = \"\";\r\n  public selectedLatestDate = \"\";\r\n  public orderId = \"\";\r\n  public templateId = 0;\r\n  public accessionId: any = '';\r\n  public physicianName = \"\";\r\n  public reviewedBy = \"\";\r\n  public reviewedResult = \"\";\r\n  public prelimText = \"\";\r\n  public readyToShow = false;\r\n  public bigData = Object.create(null)\r\n  public tests = []\r\n  @ViewChild('nav', { static: true }) slider: NgImageSliderComponent;\r\n  public isConsultantUser: boolean;\r\n  private currentSelectedTest = null\r\n  private filterData: any = null\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n  refLAbClinicId: any;\r\n  public helpObj: any;\r\n  public labResults: any = null;\r\n  public labReports: any[] = [];\r\n  public labReportFilterByAnalysisType: any[] = [];\r\n\r\n  constructor(public patientService: PatientService, public commonService: CommonService, public router: Router,\r\n    public headerService: HeaderService, public labelService: LabelService, public dataService: DataService,\r\n    public confirmationDialogService: ConfirmationDialogService, private EncrDecr: EncrDecrService,\r\n    private title: Title, private modalService: NgbModal, public refLabService: RefLabService, public fuseService: FuseService,\r\n    public sidefilterService: SidefilterService, private toaster: ToastrService) {\r\n    // this.title.setTitle('ZoetisDx Patient analysis result');\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.businessId = parseInt(this.dataService.appData.authDetails['BusinessId']);\r\n    this.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.refLAbClinicId = (this.dataService.appData.authDetails['BackOfficeFlag'] && this.bckBusinessInfo) ? this.bckBusinessInfo['RefLabClinicId'] : this.dataService.appData.authDetails['RefLabClinicId'];\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    }\r\n    else {\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    }\r\n    this.getnSetCompatiableDetails();\r\n    localStorage.setItem('prevPageFix', 'accession-results');\r\n  }\r\n  ngOnInit() {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.accessionResultScreen.AccessionResult}`);\r\n  }\r\n  public getnSetCompatiableDetails() {\r\n    this.patientDetails = this.patientService.patientDetails;\r\n    //this.accessionId = this.patientDetails?.spacificAccessionId;\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.isBackOfficeUser = this.dataService.appData.authDetails['BackOfficeFlag'];\r\n    this.isConsultantUser = this.dataService.appData.authDetails['IsConsultantUser'];\r\n    this.sidefilterService.filter.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.sidefilterService.filter.LanguageId = this.labelService.selectedLanguage;\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    this.sidefilterService.filter.IsExactFilter = true;\r\n    this.sidefilterService.filter['IsPatientInfo'] = true;\r\n    this.sidefilterService.filter.PatientId = this.patientService.patientDetails?.PatientId;\r\n    this.sidefilterService.filter.ZDXPatientInfoId = this.patientService.patientDetails?.ZDXPatientId;\r\n    this.sidefilterService.filter.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n\r\n    this.patientService.getPatientInfo(this.sidefilterService.filter).subscribe(data => {\r\n      this.patientService.patientDetails.Details = data.ResponseData.DashboardPatientList[0].Details;\r\n      this.patientService.patientDetails['AnalysisTypeToGetTestReslt'] = this.patientService.patientDetails.Details.find(x => x.AccessionNumber == this.patientService.patientDetails.spacificAccessionId);\r\n      this.patientDetails = this.patientService.patientDetails;\r\n      this.patientDetails.Details.forEach(v => v.isOpened = false)\r\n      this.setPatientDetails();\r\n    })\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.labelService.bindAnaysisResultsLabel();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.title.setTitle(`ZoetisDx | ${this.labelService.accessionResultScreen.AccessionResult}`);\r\n    try {\r\n      this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getAccessionResultScreen();\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    this.helpObj = this.dataService.appData.helpTopics.find(e => e.HelpTopic == \"Accession-Results\");\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle('ZoetisDx');\r\n  }\r\n\r\n  public onAnalysisTypeChange(test) {\r\n    test.isOpened = true;\r\n    this.currentSelectedTest = test\r\n    this.patientResultByFilter.AnalysisTypeName = test.AnalysisTypeName\r\n    this.scrollTo('.' + test.AnalysisTypeId + '-cls')\r\n    this.bindDataSource();\r\n  }\r\n\r\n  public setPatientDetails() {\r\n    this.patientDetails = this.patientService.patientDetails\r\n    this.patientService.selectedTestName = \"\";\r\n    this.patientResultByFilter = new PatientResultByFilter();\r\n    this.patientResultByFilter.PatientId = this.patientDetails.PatientId;\r\n    this.patientResultByFilter.FromDate = null;\r\n    this.txtFromDate = null;\r\n    this.patientResultByFilter.ToDate = null;\r\n    this.txtToDate = null;\r\n    this.patientResultByFilter.BusinessGuid = this.BusinessGuid;\r\n    const getAnalyzer_name = this.patientDetails.Analyzer ? this.patientDetails.Analyzer : \"\"\r\n    const getAnalysisTypeName = this.patientDetails.AnalysisTypeName ? this.patientDetails.AnalysisTypeName : \"\";\r\n    const getSourceType = this.patientDetails.SourceType ? this.patientDetails.SourceType : \"\";\r\n    this.patientResultByFilter.Analyzer = this.patientDetails.AnalysisTypeToGetTestReslt != null ? this.patientDetails.AnalysisTypeToGetTestReslt.Analyzer : getAnalyzer_name;\r\n    this.patientResultByFilter.SourceType = this.patientDetails.AnalysisTypeToGetTestReslt != null ? this.patientDetails.AnalysisTypeToGetTestReslt.SourceType : getSourceType;\r\n    this.patientResultByFilter.AnalysisTypeName = this.patientDetails.AnalysisTypeToGetTestReslt != null ? this.patientDetails.AnalysisTypeToGetTestReslt.AnalysisTypeName : getAnalysisTypeName;\r\n    this.selectedLatestDate = 'All'\r\n\r\n    this.physicianName = this.patientDetails.AnalysisTypeToGetTestReslt ? this.patientDetails.AnalysisTypeToGetTestReslt.PhysicianName : this.patientDetails.PhysicianName;\r\n    this.physicianName = this.formatPhysicianName(this.physicianName);\r\n    this.currentSelectedTest = this.patientDetails.AnalysisTypeToGetTestReslt;\r\n\r\n    this.patientService.getAnalyzer(this.BusinessGuid).subscribe(data => {\r\n      this.dsAnalyzer = data.ResponseData.Analyzers;\r\n      this.getAnalysisResults();\r\n    });\r\n\r\n    if (this.patientDetails.Details && this.patientDetails.Details.length) {\r\n      const completedRefLabs = this.patientDetails.Details.filter(x => x.SourceType == \"ReferenceLab\" && x.AnalysisStatusName == 'Completed')\r\n      this.tests = completedRefLabs.filter(x => x.AccessionNumber == this.patientDetails.AnalysisTypeToGetTestReslt.AccessionNumber)\r\n      this.patientDetails.Details = completedRefLabs\r\n    }\r\n  }\r\n\r\n  public getAnalysisResults() {\r\n    this.dsDate = [];\r\n    this.patientService.imageObject = [];\r\n    this.patientResultByFilter.AccessionNumber = this.patientDetails.AnalysisTypeToGetTestReslt.AccessionNumber\r\n    this.patientResultByFilter.LanguageId = this.labelService.selectedLanguage;\r\n    this.patientResultByFilter.UserGuid = this.headerService.loginUserGuid;\r\n    this.patientResultByFilter.ZDXPatientInfoId = this.dataService.appState.selectedResult.element['ZDXPatientId'];\r\n    this.patientResultByFilter.IsBackOfficeUser = (this.isConsultantUser || this.isBackOfficeUser) ? true : false;\r\n    if (this.txtFromDate != null && this.txtFromDate != \"\")\r\n      this.patientResultByFilter.FromDate = moment(this.txtFromDate).format('MM/DD/YYYY 00:00:00');\r\n    if (this.txtToDate != null && this.txtToDate != \"\")\r\n      this.patientResultByFilter.ToDate = moment(this.txtToDate).format('MM/DD/YYYY 23:59:59');\r\n\r\n    this.patientService.getResultDetails(this.patientResultByFilter).subscribe({next:(data) => {\r\n      this.patientService.originalData = data.ResponseData[\"LabResults\"];\r\n      this.labResults = data.ResponseData && data.ResponseData['LabResults'] && data.ResponseData['LabResults'].length > 0 ? data.ResponseData['LabResults'][0] : null;\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n\r\n      const recIds = [];\r\n      this.tests.forEach(v => {\r\n        recIds.push(v.RecID)\r\n        setTimeout(() => {\r\n          v.isOpened = true;\r\n\r\n          this.currentSelectedTest = v\r\n\r\n          this.patientResultByFilter.AnalysisTypeName = v.AnalysisTypeName\r\n          this.bindDataSource();\r\n        }, 500)\r\n      })\r\n      if (this.commonService.isInternalUsers()) {\r\n      const req = {\r\n        BusinessGuid: this.dataService.appData.authDetails['BusinessGuid'],\r\n        UserGuid: this.dataService.appData.authDetails['UserGuid'],\r\n        ObjResultTagModel: [\r\n          {\r\n            Source: 'ReferenceLab',\r\n            ResultIds: recIds.join(','),\r\n            Tag: 'READ'\r\n          }]\r\n      };\r\n      this.commonService.UpdateResultTag(req).subscribe(resp => { \r\n        console.log(resp)\r\n      });\r\n    } \r\n    }, error:() => {\r\n      this.setDefaultDataSource();\r\n    }\r\n  });\r\n  }\r\n\r\n  public bindDataSource() {\r\n    this.patientService.imageObject = [];\r\n    this.dsDate = [];\r\n    this.patientService.dataService = null;\r\n    this.patientService.orgDataSet = [];\r\n    this.templateId = 0;\r\n    this.patientService.SourceType = 'ReferenceLab'\r\n    this.orderId = this.patientService.patientDetails[\"OrderNumber\"] || this.patientService.originalData[0]['OrderNumber']\r\n    this.accessionId = this.patientService.patientDetails[\"AccessionNumber\"] || this.patientService.originalData[0]['AccessionNumber'];\r\n    // this.prelimText = this.patientService.patientDetails[\"PrelimText\"];\r\n    this.prelimText = this.patientService.patientDetails\r\n      && this.patientService.patientDetails.LabReports\r\n      && this.patientService.patientDetails.LabReports.length > 0\r\n      && this.patientService.patientDetails.LabReports[0].PrelimText ? this.patientService.patientDetails.LabReports[0].PrelimText : null; //? this.patientService.patientDetails.LabReports[0].PrelimText : null; //this.patientService.patientDetails[\"PrelimText\"];\r\n    //debugger\r\n    if (this.labReports.length) {\r\n      this.patientService.orgDataSet = (this.labReports).filter(x => x.AnalyzerName == this.patientResultByFilter.Analyzer && x.AnalysisTypeName == this.patientResultByFilter.AnalysisTypeName);\r\n    }\r\n\r\n    if (this.patientService.orgDataSet.length) {\r\n      this.patientService.orgDataSet.forEach(element => {\r\n        this.dsDate.push(element.DateReceived);\r\n      });\r\n      /** getting distinct value */\r\n      this.dsDate = this.dsDate.filter((n, i) => this.dsDate.indexOf(n) === i);\r\n      this.dsDate = this.sortDate(this.dsDate);\r\n      this.dsDate.forEach(ele => {\r\n        this.patientService.imageObject.push({ title: ele })\r\n      });\r\n      this.filterAnalysisResults();\r\n    }\r\n\r\n  }\r\n\r\n  sortDate(date) {\r\n    date.sort(function (a, b) {\r\n      /**  this is soting for date as desc*/\r\n      if ((new Date(b)) > (new Date(a)))\r\n        return 1;\r\n      if ((new Date(b)) < (new Date(a)))\r\n        return -1;\r\n      return 0;\r\n    }).reverse();\r\n    return date\r\n  }\r\n\r\n  public filterAnalysisResults() {\r\n    this.selectedLatestDate = \"All\"\r\n    this.dsImagyst = [];\r\n    this.patientService.dataSourceTop = [];\r\n    this.filterData = JSON.parse(JSON.stringify(this.patientService.orgDataSet));\r\n    this.templateId = this.filterData.find(x => x.TemplateId != null && x.TemplateId != \"\")[\"TemplateId\"];\r\n    this.patientService.categoryName = this.patientResultByFilter.Analyzer;\r\n\r\n    if (this.templateId != 6) {\r\n      /** Review By: to be shown above the table details */\r\n      const reviewedByObj = this.filterData.find(x => x.PanelTestId == \"2232\");\r\n      this.dsImagyst = this.filterData.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') != -1);\r\n      this.patientService.dataSourceTop = this.filterData.filter(x => x.Parameter != null && x.TestTypeId == EnmTestType.Top);\r\n      this.filterData = this.filterData.filter(x => x.Parameter != null && x.Parameter.indexOf('_IMG') == -1 && x.PanelTestId != \"2232\" && x.TestTypeId != EnmTestType.Top);  // Review By: should not be in table, It will be shown above the table\r\n\r\n      if (reviewedByObj != undefined) {\r\n        this.reviewedBy = reviewedByObj[\"Parameter\"];\r\n        this.reviewedResult = reviewedByObj[\"Result\"];\r\n        this.currentSelectedTest.reviewedBy = reviewedByObj[\"Parameter\"];\r\n        this.currentSelectedTest.reviewedResult = reviewedByObj[\"Result\"];\r\n      }\r\n    }\r\n    else {\r\n      if (this.selectedLatestDate != \"All\" && this.selectedLatestDate != \"\") {\r\n        this.filterData = this.filterData.filter(x => x.DateReceived == this.selectedLatestDate && x.Parameter != null && (x.TestTypeId == EnmTestType.CytoTest || x.TestTypeId == EnmTestType.ImageList));\r\n      }\r\n    }\r\n\r\n    this.getDSBackDate();\r\n  }\r\n\r\n  public getDSBackDate() {\r\n    this.patientService.dataSource = null;\r\n    this.patientService.dataSourceUA = null;\r\n    let filterDataSet = JSON.parse(JSON.stringify(this.filterData));\r\n\r\n    if (this.patientService.backdDteOfSelectedLatestDate.length && this.templateId != 6) {\r\n      const refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n      this.filterData.forEach((element, indx) => {\r\n        this.patientService.backdDteOfSelectedLatestDate.forEach((subEle, subIndx) => {\r\n          const nextDateData = this.patientService.orgDataSet.find(x => x.DateReceived == subEle && x.Parameter == element.Parameter);\r\n          const colName = \"DynamicDate\" + (subIndx + 1);\r\n          const colNameIndicator = colName + \"_Indicator\";\r\n          const colNameRefRange = colName + \"_RefRange\";\r\n          const colNameResult = colName + \"_Result\";\r\n          const colNameTestNote = colName + \"_TestNote\";\r\n          const colNameParameter = colName + \"_Parameter\";\r\n          if (nextDateData != undefined) {\r\n            filterDataSet[indx][colName] = this.patientService.backdDteOfSelectedLatestDate[subIndx];\r\n            filterDataSet[indx][colNameIndicator] = nextDateData[\"Indicator\"];\r\n            filterDataSet[indx][colNameRefRange] = refRengeLabel + \": \" + (nextDateData[\"MinRange\"] != null ? nextDateData[\"MinRange\"] : \"\") + \"-\" + (nextDateData[\"MaxRange\"] != null ? nextDateData[\"MaxRange\"] : \"\");\r\n            filterDataSet[indx][colNameResult] = (nextDateData[\"Result\"] != undefined && nextDateData[\"Result\"] != null && nextDateData[\"Result\"].trim() != \"\") ? nextDateData[\"Result\"] : \"--\";\r\n            filterDataSet[indx][colNameTestNote] = nextDateData[\"TestNote\"];\r\n            filterDataSet[indx][colNameParameter] = nextDateData[\"Parameter\"];\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    switch (this.templateId) {\r\n      case 4:\r\n        this.patientService.dataSource = new MatTableDataSource<any>(filterDataSet.filter(x => x.TestTypeId == EnmTestType.SATest));\r\n        this.patientService.dataSourceUA = new MatTableDataSource<any>(filterDataSet.filter(x => x.TestTypeId == EnmTestType.UATest));\r\n        this.patientService.dataSourceVS2 = null;\r\n        break;\r\n      case 5:\r\n        filterDataSet = filterDataSet.filter(x => x.TestTypeId == EnmTestType.OvaOocysts);\r\n        this.patientService.dataSource = new MatTableDataSource<any>(\r\n          Array.from(new Set(filterDataSet.map(x => x.AnalyteDesc))).map(id => {\r\n            return {\r\n              'AnalyteDesc': id,\r\n              'DateReceived': filterDataSet.find(ele => ele.AnalyteDesc == id).DateReceived,\r\n              'ResultDetection': (filterDataSet.find(ele => ele.AnalyteDesc == id && ele.Parameter != null && (ele.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)) != undefined ? filterDataSet.find(e => e.AnalyteDesc == id && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_dt') >= 0)).Result : 'false'),\r\n              'ResultCount': (filterDataSet.find(ele => ele.AnalyteDesc == id && ele.Parameter != null && (ele.Parameter.toString().toLowerCase().indexOf('_ct') >= 0)) != undefined ? filterDataSet.find(e => e.AnalyteDesc == id && e.Parameter != null && (e.Parameter.toString().toLowerCase().indexOf('_ct') >= 0)).Result : '0')\r\n            };\r\n          })\r\n        );\r\n        break;\r\n      case 6:\r\n        this.getDataSetForTempSix();\r\n        break\r\n      default:\r\n        if (this.templateId == 1) {\r\n          this.patientService.dataSourceVS2 = filterDataSet.filter(x => x.TestTypeId == EnmTestType.VS2Test);\r\n        }\r\n        else {\r\n          this.patientService.dataSourceVS2 = null;\r\n        }\r\n        if (this.templateId == 7) {\r\n          this.getDataImageForTempSeven();\r\n        }\r\n        if (this.templateId == 12) {\r\n          this.selectedLatestDate = filterDataSet.length > 0 ? filterDataSet[0]['DateReceived'] : 'All';\r\n        }\r\n        filterDataSet = filterDataSet.filter(ele => {\r\n          if ((ele.Result == 'SEE DETAILS' || ele.Result == 'See Note')) {\r\n            if (ele.TestNote) {\r\n              return ele;\r\n            }\r\n          } else {\r\n            return ele;\r\n          }\r\n        })\r\n        this.patientService.dataSource = new MatTableDataSource<any>(filterDataSet.filter(x => x.TestTypeId == EnmTestType.ForAll));\r\n        this.patientService.dataSourceUA = null;\r\n        console.log(this.patientService.dataSource.filteredData);\r\n    }\r\n\r\n    this.bigData[this.currentSelectedTest.AnalysisTypeName] = { ...this.patientService }\r\n    this.bigData[this.currentSelectedTest.AnalysisTypeName].templateId = this.templateId\r\n    this.readyToShow = true\r\n  }\r\n\r\n  public getDataSetForTempSix() {\r\n    let cytoTestDisclaimer: any;\r\n    this.patientService.cytoTestData = [];\r\n    this.patientService.cytoTestSingnature = [];\r\n    this.patientService.cytoTestDisclaimerText = \"\";\r\n    let filterDataSet = JSON.parse(JSON.stringify(this.filterData));\r\n\r\n    if (this.filterData.length) {\r\n      this.patientService.cytoTestSingnature = filterDataSet.filter(x => x.TestTypeId == EnmTestType.CytoTest && x.Parameter != null && x.Parameter.toLowerCase().indexOf('s_') == 0);     // parameter value should be start with s_\r\n      cytoTestDisclaimer = filterDataSet.find(x => x.DisclaimerText != null);\r\n      this.patientService.cytoTestDisclaimerText = cytoTestDisclaimer != undefined ? cytoTestDisclaimer[\"DisclaimerText\"] : \"\";\r\n      filterDataSet = filterDataSet.filter(x => (x.TestTypeId == EnmTestType.CytoTest || x.TestTypeId == EnmTestType.ImageList) && x.Parameter != null && x.Parameter.toLowerCase().indexOf('s_') != 0);\r\n      this.patientService.cytoTestData = Array.from(new Set(filterDataSet.map(x => x.Parameter.split(\"_\")[0]))).map(key => {\r\n\r\n        return {\r\n          'GroupName': key + (filterDataSet.find(e => e.TestTypeId == EnmTestType.CytoTest && e.Parameter != null && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null && e.AnalyteDesc.toLowerCase() == 'site name') != undefined ? ('_' + filterDataSet.find(e => e.TestTypeId == EnmTestType.CytoTest && e.Parameter != null && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null && e.AnalyteDesc.toLowerCase() == 'site name')['Result']) : \"\"),\r\n          'CytoTestImages': filterDataSet.filter(e => e.TestTypeId == EnmTestType.ImageList && e.Parameter != null && e.Parameter.indexOf(key) == 0),\r\n          'CytoTests': filterDataSet.filter(e => e.TestTypeId == EnmTestType.CytoTest && e.Parameter != null && e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null && e.AnalyteDesc.toLowerCase() != 'site name')\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  public getDataImageForTempSeven() {\r\n    this.patientService.imgData = [];\r\n    const filterDataImage = JSON.parse(JSON.stringify(this.dsImagyst));\r\n\r\n    if (this.dsImagyst.length) {\r\n      this.patientService.imgData = Array.from(new Set(filterDataImage.map(x => x.Parameter.split(\"_\")[0]))).map(key => {\r\n        return {\r\n          'GroupName': (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null) != undefined ? (filterDataImage.find(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null)['AnalyteDesc']).split('image')[0].trim() : key),\r\n          'Images': filterDataImage.filter(e => e.Parameter.indexOf(key) == 0 && e.AnalyteDesc != null),\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  public getAnalysisIdForPDF(dt) {\r\n    return this.patientService.orgDataSet.find(x => x.DateReceived == dt)[\"AnalysisTypeId\"];\r\n  }\r\n\r\n  public viewImageTemp6(imgObj) {\r\n    if (imgObj != undefined && imgObj != null) {\r\n      this.viewImageSlider(imgObj.ImageList, imgObj.ImageIndex);\r\n    }\r\n  }\r\n\r\n  public viewImageSlider(imageList, imgIndex) {\r\n    const modalRef = this.modalService.open(ImageSliderComponent, {\r\n      centered: true,\r\n      scrollable: false,\r\n      backdrop: 'static'\r\n    });\r\n    modalRef.componentInstance.imageList = imageList;\r\n    modalRef.componentInstance.patientDetails = this.patientDetails;\r\n    modalRef.componentInstance.currentIndex = imgIndex;\r\n    modalRef.componentInstance.analyzerDispName = this.dsAnalyzer.find(x => x.AnalyzerName == this.patientResultByFilter.Analyzer)[\"AnalyzerDisplayName\"];\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    if (msg == undefined || msg == null || msg == \"\")\r\n      this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsAnaysisResultsScreen.Ok, '', \"sm\", true, false)\r\n        .then((confirmed) => {\r\n          console.log(confirmed)\r\n        })\r\n        // .catch(() => { });\r\n  }\r\n\r\n  public goToConsultation() {\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.dataService.appData.prevUrl = \"dashboard\";\r\n    const emailId = this.bckBusinessInfo ? this.bckBusinessInfo['EmailId'] : \"\";\r\n    let urlStr = \"email=\" + (JSON.parse(localStorage.authDetails).Email)\r\n      + \"&bkoClinicEmail=\" + emailId\r\n      + \"&token=\" + JSON.parse(localStorage.authDetails).access_token\r\n      + \"&refresh_token=\" + JSON.parse(localStorage.authDetails).refresh_token\r\n      + \"&BusinessGuid=\" + JSON.parse(localStorage.authDetails).BusinessGuid\r\n      + \"&deviceId=\" + (localStorage.UIGuid)\r\n      + \"&clinicphone=\" + JSON.parse(localStorage.authDetails).BusinessPhoneNo\r\n      + \"&clinicname=\" + JSON.parse(localStorage.authDetails).BusinessName\r\n      + \"&patientName=\" + this.patientDetails?.PatientName\r\n      + \"&species=\" + this.patientDetails.SpeciesName\r\n      + \"&breed=\" + this.patientDetails.BreedName\r\n      + \"&doctorname=\" + this.physicianName\r\n      + \"&patientId=\" + this.patientDetails.PatientId\r\n      + \"&ZDXPatientId=\" + this.patientDetails.ZDXPatientId\r\n      + \"&ownerName=\" + this.patientDetails.OwnerName\r\n      + \"&accessionId=\" + this.accessionId\r\n      + \"&gender=\" + this.patientDetails.Gender\r\n      + \"&age=\" + this.patientDetails.Dob\r\n      + \"&timeZoneId=\" + this.commonService.tzSelectMethod().timeZoneId\r\n      + \"&timeZoneName=\" + this.commonService.tzSelectMethod().timeZoneName\r\n      + \"&Isbackoffice=\" + JSON.parse(localStorage.authDetails).BackOfficeFlag\r\n      + \"&backUrl=\" + window.location.href\r\n      + \"&TimeFormatId=\" + this.dataService.appData.authDetails['TimeFormatId']\r\n      + \"&TimeZoneId=\" + this.dataService.appData.authDetails['TimeZoneId']\r\n      + \"&DateFormatId=\" + this.dataService.appData.authDetails['DateFormatId']\r\n      + \"&ZDxUrl=\"+ this.commonService.getZDxUrl();\r\n    urlStr = this.EncrDecr.encrypt(urlStr);\r\n\r\n    if (this.headerService.isNRP) {\r\n      this.commonService.getRedirectionKey({ \"ValueString\": urlStr }).subscribe(res => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + res.ResponseData;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n    else {\r\n      this.commonService.getEncryptDetail({ toEncryptStr: urlStr }).subscribe(data => {\r\n        window.location.href = environment.ZCSUrl + \"#/user/consultation-request?ref=\" + data.ResponseData.encryptedKey;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n  }\r\n\r\n  public getRecords() {\r\n    this.dataService.appData.AccessionNumber = this.accessionId;\r\n    this.dataService.data.next(this.dataService.appData)\r\n    const daysDifference = this.commonService.getDaysDifference(this.tests[0].DateCreated, this.dataService.appData.serverDate);\r\n\r\n    if (daysDifference > 7) {\r\n      const msg = constant.addOnAccessionRestrictionPopupMsg;\r\n      this.confirmationDialogService.confirm(\"Alert\", msg, 'Dismiss', \"Cancel\", \"sm\", true, false);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('lastOrderId', this.orderId);\r\n    this.fuseService.getClinicDetails(this.refLAbClinicId, this.BusinessGuid).subscribe(res => {\r\n      const isReflabActive = res.ResponseData['is_active'] == 'true' ? true : false;\r\n      if (isReflabActive) {\r\n        this.router.navigate(['/refLab/addOrder']);\r\n      } else {\r\n        const msg = constant.consultRestrictionPopupMsg;\r\n        this.confirmationDialogService.confirm(\"Alert\", msg, 'Dismiss', \"Cancel\", \"sm\", true, false);\r\n      }\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n  }\r\n\r\n  public downloadMainfest() {\r\n    this.refLabService.downloadableMainfest(this.orderId, this.BusinessGuid).subscribe(res => {\r\n      const blob = new Blob([res], { type: 'application/pdf' });\r\n      const objectURL = window.URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = objectURL;\r\n      a.target = '_blank';\r\n      a.click();\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    })\r\n  }\r\n\r\n  public getResultPdf(requestType) {\r\n    if (requestType == 'sendEmail') {\r\n      this.dataService.appData['requestFrom'] = 'AccessionPage';\r\n      this.dataService.appData['downloadPdfRequestParams'] = { accessionId: this.accessionId, businessGuid: this.BusinessGuid };\r\n      this.dataService.data.next(this.dataService.appData);\r\n    } else {\r\n      this.refLabService.downloadableAccession(this.accessionId, this.BusinessGuid).subscribe(data => {\r\n        const blob = new Blob([data], { type: 'application/pdf' });\r\n        const objectURL = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = objectURL;\r\n        a.target = '_blank';\r\n        a.click();\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.confirmationDialogService.confirm(\"\", \"No accession result pdf available\", \"OK\", \"Cancel\", \"sm\", true, false)\r\n          .then((confirmed) => {\r\n            console.log(confirmed)\r\n          })\r\n        // }\r\n      })\r\n    }\r\n  }\r\n\r\n  scrollTo(elmCls) {\r\n    $('html, body').animate({\r\n      scrollTop: $(elmCls).offset().top\r\n    }, 1000);\r\n  }\r\n\r\n  viewHistory(test) {\r\n    test.isOpened = false\r\n    this.dataService.appState.selectedResult.element = this.patientDetails;\r\n    this.dataService.appState.selectedResult.subElement = test;\r\n    this.dataService.state.next(this.dataService.appState);\r\n    this.patientService.showPataientTestResult(this.patientDetails, test, this.headerService.filter, null, null, null);\r\n  }\r\n\r\n  public formatPhysicianName(name) {\r\n    return ((name != undefined && name != null && name != \"\" && name.toLocaleLowerCase() != \"none\") ? name : 'N/A');\r\n  }\r\n\r\n  public setDefaultDataSource() {\r\n    this.patientService.dataSource = null;\r\n    this.patientService.dataSourceUA = null;\r\n    this.patientService.dataSourceTop = [];\r\n    this.patientService.dataSourceVS2 = null;\r\n    this.patientService.categoryName = \"\";\r\n    this.patientService.backdDteOfSelectedLatestDate = [];\r\n    this.patientService.dataSourceBackDate = null;\r\n    this.patientService.isNextEnable = false;\r\n    this.patientService.isPreviousEnable = false;\r\n    this.templateId = 0;\r\n    this.patientService.dataSourceGraphPoint1 = [];\r\n    this.patientService.dataSourceGraphPoint2 = [];\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper accesswrap\">\r\n  <app-side-menu></app-side-menu>\r\n  <div id=\"content\" class=\"page-wrapper access-wrap\">\r\n    <div>\r\n      <div>\r\n        <app-header></app-header>\r\n      </div>\r\n    </div>\r\n    <section class=\"title-container icon-cont\">\r\n      <a href=\"javascript:void(0)\" (click)=\"commonService.goBack()\"\r\n        class=\"back-btn\">{{labelService.accessionResultScreen.Back}}</a>\r\n      <span class=\"page-title font-weight-bold\" data-testid=\"ars-title\">{{labelService.accessionResultScreen.AccessionResult}}</span>\r\n      <img class=\"iconquestion\" src=\"../../../assets/img/help-icon.svg\"\r\n        [matTooltip]=\"labelService.dsSideMenuScreen.Help\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n        alt=\"help-circle\" (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n    </section>\r\n    <div class=\"portal-outer view-user result_block\" id=\"portal-outer1\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 pl-1 pr-1\">\r\n          <mat-card class=\"pt-0 mat-part\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-lg-6 accpart\">\r\n                <h6><span class=\"font-weight-bolder\">{{labelService.accessionResultScreen.Patient}}:</span>\r\n                  {{patientDetails?.PatientName}}\r\n                  -\r\n                  <a href=\"javascript:void(0)\"\r\n                    (click)=\"patientService.showPataientInfo(patientDetails,null,null,null,null)\">\r\n                    {{patientDetails?.PatientId}} </a>\r\n                </h6>\r\n                <hr>\r\n                <div class=\"row accession-result first-info col-12\">\r\n                  <p class=\"w-100 ml-5 pl-3\">\r\n                    <span *ngIf=\"patientDetails?.SpeciesName\"> {{patientDetails.SpeciesName+','}} </span>\r\n                    <span *ngIf=\"patientDetails?.BreedName\"> {{patientDetails.BreedName+','}} </span>\r\n                    <span *ngIf=\"patientDetails?.Dob\"> {{patientDetails.Dob+','}} </span>\r\n                    <span *ngIf=\"patientDetails?.GenderName\"> {{patientDetails.GenderName}} </span>\r\n                  </p>\r\n\r\n                  <p class=\"w-100\">\r\n                    <!-- <span class=\"font-weight-bold\">{{labelService.accessionResultScreen.OwnerName}}:</span> -->\r\n                    <span class=\"font-weight-bold\">Owner:</span>\r\n                     {{ patientDetails?.OwnerName }}\r\n                  </p>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6 mt-4 mt-lg-0 accpart\">\r\n                <h6 class=\"font-weight-bold\">{{labelService.accessionResultScreen.Result}}</h6>\r\n                <hr>\r\n                <div class=\"row accession-result\">\r\n                  <div class=\"col-md-4 col-lg-6 \">\r\n                    <p class=\"font-weight-bold\">{{labelService.accessionResultScreen.OrderID}}: </p>\r\n                    <p>{{ orderId }}</p>\r\n                  </div>\r\n                  <div class=\"col-md-4 col-lg-6\">\r\n                    <p class=\"font-weight-bold\">{{labelService.accessionResultScreen.AccessionID}}: </p>\r\n                    <p>{{ accessionId }}</p>\r\n                  </div>\r\n                  <div class=\"col-md-4 col-lg-6 \">\r\n                    <p class=\"font-weight-bold\">{{labelService.accessionResultScreen.RequestingDoctor}}: </p>\r\n                    <p>{{ physicianName }}</p>\r\n                  </div>\r\n                  <div class=\"col-md-12 pr-3 pr-lg-3\">\r\n                    <div class=\"row m-0 w-100 pb-0\" *ngIf=\"!isConsultantUser\">\r\n                      <div class=\"col-12 picons p-0 text-right d-flex justify-content-end align-items-end\">\r\n                        <span class=\"imgs mr-1\" *ngIf=\"orderId && accessionId\">\r\n                          <button mat-raised-button type=\"button\" class=\"save-change\" color=\"accent\"\r\n                            (click)=\"getRecords()\" placement=\"top\" ngbTooltip=\"{{labelService.accessionResultScreen.AddAPanel}}\">{{labelService.accessionResultScreen.AddAPanel}}</button>\r\n                        </span>\r\n                        <span class=\"mr-1 imgs\">\r\n                          <img src=\"../../../../assets/img/order_manifest.svg\" alt=\"\"\r\n                            (click)=\"downloadMainfest()\" placement=\"top\" ngbTooltip=\"Requisition Form\">\r\n                        </span>\r\n                        <span class=\"mr-1 imgs\">\r\n                          <img src=\"../../../../assets/img/result-button@2x.svg\" alt=\"\"\r\n                            (click)=\"getResultPdf('downloadPdf')\" placement=\"top\" ngbTooltip=\"{{labelService.accessionResultScreen.AccessionResultPDF}}\">\r\n                        </span>\r\n                        <span class=\"lastimg deskview mx-1\">\r\n                          <a routerLink=\"/communication/email\">\r\n                            <img src=\"../../../../assets/img/emailicon.svg\" (click)=\"getResultPdf('sendEmail')\"\r\n                              alt=\"{{labelService.dsAnaysisResultsScreen.EmailResults}}\" placement=\"top\"\r\n                              ngbTooltip=\"{{labelService.dsAnaysisResultsScreen.EmailResults}}\" class=\"adjusttip\"\r\n                              height=\"36\" DisableRightClick>\r\n                          </a>\r\n                        </span>\r\n                        <span class=\"mr-0\" *ngIf=\"!isBackOfficeUser\">\r\n                          <img src=\"../../../../assets/img/BlueBgConsultancy2x.svg\" alt=\"\" (click)=\"goToConsultation()\"\r\n                            placement=\"top\" ngbTooltip=\"{{labelService.accessionResultScreen.ConsultationRequest}}\" class=\"aimg\">\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n\r\n        <div class=\"col-sm-12 pl-1 pr-1\">\r\n          <div class=\"container container1\">\r\n            <div [ngClass]=\"test.AnalysisTypeId+'-cls mt-3 dropdwn'\" *ngFor=\"let test of tests\"\r\n              style=\"position: relative\">\r\n              <p class=\"peramecorr accession\" *ngIf=\"commonService.ACPText(test)\">\r\n                This is {{ test.StatusName === 'Amended' ? 'an' : 'a' }} <span class=\"font-weight-bold\"\r\n                  style=\"text-transform: uppercase;\">{{ test.StatusName }}</span> result\r\n              </p>\r\n              <mat-expansion-panel (opened)=\"test.isOpened = true\" (closed)=\"test.isOpened = false\" [expanded]=\"true\">\r\n                <mat-expansion-panel-header>\r\n                  <!----mobile responsive-->\r\n                  <button *ngIf=\"test.isOpened\" class=\"float-right mobile_button\" mat-stroked-button color=\"blue\"\r\n                    (click)=\"viewHistory(test)\">{{labelService.accessionResultScreen.ViewHistory}}</button>\r\n                  <!----mobile responsive-->\r\n\r\n                  <mat-panel-title style=\"width: 100%\">\r\n                    <p>\r\n                      <span class=\"mb-0 p-title\">{{labelService.accessionResultScreen.AnalysisType}}: </span>\r\n                      <span class=\"light-text mb-0\">{{ test.AnalysisTypeName }} </span>\r\n                    </p>\r\n                  </mat-panel-title>\r\n                  <div class=\"accres\">\r\n\r\n                    <mat-panel-description *ngIf=\"test.isOpened && test.reviewedResult\">\r\n                      <span class=\"font-weight-bold\">\r\n                        {{labelService.accessionResultScreen.ReviewedBy}}:\r\n                        &nbsp;\r\n                      </span>\r\n                      <span class=\"light-text\">{{ test.reviewedResult }}</span>\r\n                    </mat-panel-description>\r\n                  </div>\r\n                  <button *ngIf=\"test.isOpened\" class=\"float-right desk_button mr-2 accBtn\" mat-stroked-button\r\n                    color=\"blue\" (click)=\"viewHistory(test)\">{{labelService.accessionResultScreen.ViewHistory}}</button>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"col-12 nextp\" *ngIf=\"test.TemplateId !== 13 && test.isOpened\">\r\n                  <p *ngIf=\"test.PanelNote\">\r\n                    <span class=\"font-weight-bold\"\r\n                      *ngIf=\"test.TemplateId === 10 || test.TemplateId === 9 || test.TemplateId === 12\">\r\n                      {{test.AnalysisTypeName}}\r\n                    </span>\r\n                    <span class=\"font-weight-bold\">Notes: </span>\r\n                    <span class=\"light-text\" [innerHTML]=\"commonService.getResultText(null, test.PanelNote)\"></span>\r\n                  </p>\r\n                </div>\r\n                <div class=\"details-templates\" *ngIf=\"test.isOpened\">\r\n                  <app-accession-template-one class=\"w-100\" [data]=\"bigData[test.AnalysisTypeName]\"\r\n                    [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 1 && readyToShow\">\r\n                  </app-accession-template-one>\r\n                  <app-accession-template-three class=\"w-100\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 3 && readyToShow\">\r\n                  </app-accession-template-three>\r\n                  <app-accession-template-four class=\"w-100\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 4 && readyToShow\">\r\n                  </app-accession-template-four>\r\n                  <app-accession-template-five class=\"w-100\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 5 && readyToShow\">\r\n                  </app-accession-template-five>\r\n                  <app-accession-template-six class=\"w-100\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 6 && readyToShow\"\r\n                    (viewImages)=\"viewImageTemp6($event)\">\r\n                  </app-accession-template-six>\r\n                  <app-accession-template-seven class=\"w-100\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 7 && readyToShow\"\r\n                    (viewImages)=\"viewImageTemp6($event)\">\r\n                  </app-accession-template-seven>\r\n\r\n                  <app-accession-template-nine class=\"w-100\" [data]=\"bigData[test.AnalysisTypeName]\"\r\n                    [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 9 && readyToShow\">\r\n                  </app-accession-template-nine>\r\n                  <app-accession-template-ten class=\"w-100\" [data]=\"bigData[test.AnalysisTypeName]\"\r\n                    [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 10 && readyToShow\">\r\n                  </app-accession-template-ten>\r\n                  <app-accession-template-12 class=\"w-100\" [labReports]=\"labReports\"\r\n                    [data]=\"bigData[test.AnalysisTypeName]\" [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 12 && readyToShow\">\r\n                  </app-accession-template-12>\r\n                  <!-- copy of template-9 -->\r\n                  <app-accession-template-13 class=\"w-100\" [data]=\"bigData[test.AnalysisTypeName]\"\r\n                    [selectedDate]=\"selectedLatestDate\"\r\n                    *ngIf=\"bigData[test.AnalysisTypeName]?.templateId === 13 && readyToShow\">\r\n                  </app-accession-template-13>\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService, PatientService, CommonService } from '../../../../services';\r\n// import { NoteFormateKeys } from 'src/app/shared';\r\n// declare let $: any;\r\n// declare let CanvasJS;\r\n@Component({\r\n  selector: 'app-accession-template-one',\r\n  templateUrl: './accession-template-one.component.html',\r\n  styleUrls: ['./accession-template-one.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class AccessionTemplateOneComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Parameter\", 'date1', \"Units\", \"Range\", \"GraphResult\"]//, 'date2', 'date3', 'date4', 'Result'];\r\n  //displayedColumns = [\"Parameter\", \"date1\", \"Units\", \"Range\", \"GraphResult\"];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public expandedElement: any;\r\n  //public allRowsExpanded: boolean = false;\r\n  //public source: string;\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n  selectedLatestDate = null;\r\n  public patientService: any = {}\r\n  showMore1 = false;\r\n\r\n  constructor(\r\n    public labelService: LabelService,\r\n    public ptService: PatientService,\r\n    public commonService: CommonService) {\r\n    // this.source = this.patientService.originalData.length > 0 && this.patientService.originalData[0].Source;\r\n    // let data = this.patientService.originalData.length > 0 && this.patientService.originalData[0];\r\n\r\n    // let abc = this.patientService.originalData[0].LabReports.filter(ele=>{\r\n    //     if(ele.DateReceived == '03 DEC 2021 03:20 AM'){ // && ele.AnalysisTypeName == 'Equine Profile Plus'\r\n    //       return ele;\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n  // public getResultText(result, testNote) {\r\n  //   let noteTitleObj = NoteFormateKeys;\r\n  //   // let noteTitleObj = {\r\n  //   //   'CLINICAL HISTORY T TENTATIVE/WORKING CLINICAL DIAGNOSIS-DIFFERENTIAL DIAGNOSIS:': 'CLINICAL HISTORY T TENTATIVE/WORKING CLINICAL DIAGNOSIS-DIFFERENTIAL DIAGNOSIS:',\r\n  //   //   'DIAGNOSIS: ': 'DIAGNOSIS:',\r\n  //   //   'SPECIMEN(S) GROSS DESCRIPTION:': 'SPECIMEN(S) GROSS DESCRIPTION:',\r\n  //   //   'MICROSCOPIC DESCRIPTION:': 'MICROSCOPIC DESCRIPTION:',\r\n  //   //   'DESCRIPTION: ': 'DESCRIPTION:',\r\n  //   //   'MICROSCOPIC INTERPRETATION:': 'MICROSCOPIC INTERPRETATION:', // New added\r\n  //   //   'FELINE INTERPRETATION:': 'FELINE INTERPRETATION:', // New added\r\n  //   //   'FELINE & CANINE INTERPRETATION:': 'FELINE & CANINE INTERPRETATION:', // New added\r\n  //   //   'INTERPRETATION: ': 'INTERPRETATION:',\r\n  //   //   'CASE COMMENT:': 'CASE COMMENT:',\r\n  //   //   'COMMENT: ': 'COMMENT:',\r\n  //   //   'COMMENTS:': 'COMMENTS:',  // New added\r\n  //   //   // Cytology\r\n  //   //   'SPECIMEN:': 'SPECIMEN:',\r\n  //   //   'SITE/HISTORY': 'SITE/HISTORY',\r\n  //   //   'HISTORY: ': 'HISTORY:',\r\n  //   //   'SITE #:': 'SITE #:',\r\n  //   //   'PATHOLOGIST SIGNATURE:': 'PATHOLOGIST SIGNATURE:',\r\n  //   //   // Histopathology\r\n  //   //   'RESULT ID:': 'RESULT ID:',\r\n  //   //   'Result ID:': 'RESULT ID:',\r\n  //   //   'TEST(S) PERFORMED:': 'TEST(S) PERFORMED:',\r\n  //   // };\r\n\r\n  //   if (testNote != null && testNote != \"\") {\r\n  //     for (let x in noteTitleObj) {\r\n  //       // var patt = new RegExp(x, 'gi')\r\n  //       // if (patt.test(testNote)) {\r\n  //       // testNote = testNote.replaceAll(x, noteTitleObj[x]);\r\n  //       testNote = testNote.replaceAll(x, '<br/><br/><b>' + noteTitleObj[x] + '</b>');\r\n  //       // }\r\n  //     }\r\n  //     return testNote;\r\n  //   } else {\r\n  //     return result;\r\n  //   }\r\n  // };\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n  // public bindChart(testName) {\r\n  //   testName = this.replaceSpecialChar(testName);\r\n  //   if (this.patientService.dataSourceGraphPoint2.length) {\r\n  //     $(\"#chartContainer_\" + testName).show();\r\n  //     // var chart = new CanvasJS.Chart(\"chartContainer\", {\r\n  //     //   animationEnabled: true,\r\n  //     //   title: {\r\n  //     //     text: \"\"\r\n  //     //   },\r\n  //     //   dataPointWidth: 40,\r\n  //     //   axisY: {\r\n  //     //     title: this.patientService.graphAxisYTitle,\r\n  //     //     gridThickness: 1,\r\n  //     //     gridColor: \"#dfe2e5\",\r\n  //     //     lineColor: \"#dfe2e5\",\r\n  //     //     showInLegend: false,\r\n  //     //     includeZero: true,\r\n  //     //     //interval: this.patientService.graphIntervalValue,\r\n  //     //     labelFontFamily: \"gothambook\",\r\n  //     //     labelFontColor: \"#3e3e3e\",\r\n  //     //     tickLength: 10,\r\n  //     //     tickThickness: 0,\r\n  //     //     labelFontSize: 12,\r\n\r\n  //     //   },\r\n  //     //   axisX: {\r\n  //     //     title: \" \",\r\n  //     //     tickLength: 10,\r\n  //     //     tickThickness: 0,\r\n  //     //     labelFontFamily: \"gothambook\",\r\n  //     //     labelFontColor: \"#3e3e3e\",\r\n  //     //     labelFontSize: 12,\r\n  //     //     gridColor: \"#dfe2e5\",\r\n  //     //     lineColor: \"#dfe2e5\",\r\n  //     //     labelWrap: true,\r\n  //     //     labelMaxWidth: 90,\r\n\r\n  //     //   },\r\n  //     //   toolTip: {\r\n  //     //     // content:\"{label}: {y[0]}-{y[1]}\" ,\r\n  //     //     content: \"{tooltipContent}\",\r\n  //     //   },\r\n  //     //   data: [\r\n  //     //     {\r\n  //     //       type: \"error\",\r\n  //     //       stemThickness: 2,\r\n  //     //       toolTipContent: null,\r\n  //     //       whiskerThickness: 2,\r\n  //     //       highlightEnabled: false,\r\n  //     //       dataPoints: this.patientService.dataSourceGraphPoint1\r\n  //     //       // dataPoints: [\r\n  //     //       //   { label: \"Oven\", y: [38, 65], whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\"},\r\n  //     //       //   { label: \"Microwawe\", y: [45, 75],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //     //       //   { label: \"PC & Peripherals\", y: [32, 67],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //     //       //   { label: \"Air Conditioner\", y: [27, 67] },\r\n  //     //       //   { label: \"Dishwasher\", y: [48, 70],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //     //       //   { label: \"Shaver\", y: [25, 65] },\r\n\r\n  //     //       // ]\r\n  //     //     },\r\n  //     //     {\r\n  //     //       type: \"line\",\r\n  //     //       markerType: \"circle\",  //\"circle\", \"square\", \"cross\", \"none\"\r\n  //     //       markerSize: 10,\r\n  //     //       indexLabel: \"{y}\",\r\n  //     //       indexLabelBackgroundColor: \"#fff\",\r\n  //     //       indexLabelFontColor: \"#ff6400\",\r\n  //     //       indexLabelFontSize: 12,\r\n  //     //       lineDashType: \"dash\",\r\n  //     //       lineThickness: 1,\r\n  //     //       lineColor: \"#4372c4\",\r\n\r\n  //     //       dataPoints: this.patientService.dataSourceGraphPoint2\r\n  //     //       // dataPoints: [\r\n  //     //       //   { label: \"Jan\", y: 12 ,markerColor: \"green\"},\r\n  //     //       //   { label: \"Feb\", y: 32,markerColor: \"red\" },\r\n  //     //       //   { label: \"Mar\", y: 50 ,markerColor: \"#4372c4\" },\r\n  //     //       //   { label: \"Apr\", y: 32 ,markerColor: \"#4372c4\"  },\r\n  //     //       //   { label: \"May\", y: 38,markerColor: \"red\"  },\r\n  //     //       //   { label: \"June\", y: 36 ,markerColor: \"#4372c4\"  },\r\n\r\n  //     //       // ]\r\n  //     //     },\r\n\r\n  //     //   ]\r\n  //     // });\r\n\r\n\r\n  //     //chart.render();\r\n\r\n  //     // ------New design----------------\r\n  //     var stockChart = new CanvasJS.StockChart(\"chartContainer_\" + testName, {\r\n  //       animationEnabled: true,\r\n  //       title: {\r\n  //         text: \"\"\r\n  //       },\r\n  //       //dataPointWidth: 40,\r\n  //       charts: [{\r\n  //         axisY: {\r\n  //           title: this.patientService.graphAxisYTitle,\r\n  //           gridThickness: 1,\r\n  //           gridColor: \"#dfe2e5\",\r\n  //           lineColor: \"#dfe2e5\",\r\n  //           showInLegend: false,\r\n  //           includeZero: true,\r\n  //           //interval: this.patientService.graphIntervalValue,\r\n  //           labelFontFamily: \"gothambook\",\r\n  //           labelFontColor: \"#3e3e3e\",\r\n  //           tickLength: 10,\r\n  //           tickThickness: 0,\r\n  //           labelFontSize: 12,\r\n\r\n  //         },\r\n  //         axisX: {\r\n  //           title: \" \",\r\n  //           tickLength: 10,\r\n  //           tickThickness: 0,\r\n  //           labelFontFamily: \"gothambook\",\r\n  //           labelFontColor: \"#3e3e3e\",\r\n  //           labelFontSize: 12,\r\n  //           gridColor: \"#dfe2e5\",\r\n  //           lineColor: \"#dfe2e5\",\r\n  //           labelWrap: true,\r\n  //           labelMaxWidth: 90,\r\n\r\n  //         },\r\n  //         toolTip: {\r\n  //           // content:\"{label}: {y[0]}-{y[1]}\" ,\r\n  //           content: \"{tooltipContent}\",\r\n  //         },\r\n  //         data: [\r\n  //           {\r\n  //             type: \"error\",\r\n  //             stemThickness: 2,\r\n  //             toolTipContent: null,\r\n  //             whiskerThickness: 2,\r\n  //             highlightEnabled: false,\r\n  //             dataPoints: this.patientService.dataSourceGraphPoint1\r\n  //             // dataPoints: [\r\n  //             //   { label: \"Oven\", y: [38, 65], whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\"},\r\n  //             //   { label: \"Microwawe\", y: [45, 75],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //             //   { label: \"PC & Peripherals\", y: [32, 67],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //             //   { label: \"Air Conditioner\", y: [27, 67] },\r\n  //             //   { label: \"Dishwasher\", y: [48, 70],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //             //   { label: \"Shaver\", y: [25, 65] },\r\n\r\n\r\n  //             // ]\r\n  //           },\r\n  //           {\r\n  //             type: \"line\",\r\n  //             markerType: \"circle\",  //\"circle\", \"square\", \"cross\", \"none\"\r\n  //             markerSize: 10,\r\n  //             indexLabel: \"{y}\",\r\n  //             indexLabelBackgroundColor: \"#fff\",\r\n  //             indexLabelFontColor: \"#ff6400\",\r\n  //             indexLabelFontSize: 12,\r\n  //             lineDashType: \"dash\",\r\n  //             lineThickness: 1,\r\n  //             lineColor: \"#4372c4\",\r\n\r\n  //             dataPoints: this.patientService.dataSourceGraphPoint2\r\n  //             // dataPoints: [\r\n  //             //   { label: \"Jan\", y: 12 ,markerColor: \"green\"},\r\n  //             //   { label: \"Feb\", y: 32,markerColor: \"red\" },\r\n  //             //   { label: \"Mar\", y: 50 ,markerColor: \"#4372c4\" },\r\n  //             //   { label: \"Apr\", y: 32 ,markerColor: \"#4372c4\"  },\r\n  //             //   { label: \"May\", y: 38,markerColor: \"red\"  },\r\n  //             //   { label: \"June\", y: 36 ,markerColor: \"#4372c4\"  },\r\n  //             //  ]\r\n  //           },\r\n\r\n\r\n  //         ]\r\n  //       }],\r\n  //       navigator: {\r\n  //         height: '25px',\r\n  //         backgroundColor: \"white\",\r\n  //         data: [{\r\n  //           type: \"line\",\r\n  //           lineColor: \"white\",\r\n  //           dataPoints: this.patientService.dataSourceGraphPoint2\r\n\r\n  //         }],\r\n  //         axisX: {\r\n  //           labelFontColor: \"white\",\r\n  //           //viewportMinimum: 0,\r\n\r\n  //         },\r\n  //         slider: {\r\n  //           maskInverted: false,\r\n  //           minimum: this.patientService.sliderMax - 5.5, //2.5\r\n  //           maximum: this.patientService.sliderMax + .5, //5.5\r\n  //           // minimum: this.sliderMax + 5.5, //2.5\r\n  //           // maximum: this.sliderMax - .5, //5.5\r\n  //           // minimum: new Date('2020/11/19'),\r\n  //           // maximum: new Date('2021/01/20'),\r\n  //         },\r\n\r\n  //       },\r\n\r\n  //       rangeSelector: {\r\n  //         enabled: false,\r\n  //         // inputFields: {\r\n  //         //   startValue: new Date(\"2021,02,19\"),\r\n  //         //   endValue: new Date(\"2021,02,19\")\r\n  //         // },\r\n  //         // inputFields: {\r\n  //         //   startValue: new Date(2017, 06, 01),\r\n  //         //   endValue: new Date(2017, 09, 01)\r\n  //         // },\r\n  //         // buttons: [{\r\n  //         //   label: \"1Y\",\r\n  //         //   range: 1,\r\n  //         //   rangeType: \"year\"\r\n  //         // }]\r\n  //       }\r\n  //     });\r\n\r\n  //     if (this.patientService.dataSourceGraphPoint1.length == 1) {\r\n  //       stockChart.options.charts[0].axisX.viewportMinimum = -0.5;\r\n  //       stockChart.options.charts[0].axisX.viewportMaximum = -2.5;\r\n  //     }\r\n\r\n  //     stockChart.render();\r\n\r\n  //   }\r\n  //   else {\r\n  //     $(\"#chartContainer_\" + testName).hide();\r\n  //   }\r\n  // }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public selectedRow(row) {\r\n    //this.expandedElement = this.expandedElement === row ? null : row;\r\n    // if (this.expandedElement === row) {\r\n    //   this.expandedElement = null;\r\n    //   this.patientService.selectedTestName = \"\";\r\n    // }\r\n    // else {\r\n    this.expandedElement = row;\r\n    // const filterData = JSON.parse(JSON.stringify(this.patientService.orgDataSet));\r\n    this.patientService.selectedTestName = row.Parameter;\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n\r\n    return rtnValue;\r\n  }\r\n  // public toggle() {\r\n  //   this.allRowsExpanded = !this.allRowsExpanded;\r\n  //   this.expandedElement = null;\r\n  // }\r\n\r\n  // public bindGraphDataPoints(filterData, testName) {\r\n  //   this.patientService.dataSourceGraphPoint1 = [];\r\n  //   this.patientService.dataSourceGraphPoint2 = [];\r\n  //   if (filterData.length > 0) {\r\n  //     \r\n  //     let isRefRangeSame: boolean = true;\r\n  //     //let rowIndex = filterData.findIndex(x => x.DateReceived == this.selectedDate && x.Parameter == testName);\r\n  //     let resultLabel = this.labelService.dsAnaysisResultsScreen.Results;\r\n  //     let refRengeLabel = this.labelService.dsAnaysisResultsScreen.RefRange;\r\n  //     let refUnitsLabel = this.labelService.dsAnaysisResultsScreen.Units;\r\n  //     //  let minValue = filterData.filter(x => x.DateReceived == this.patientService.backdDteOfSelectedLatestDate[0])[1].MinRange;\r\n  //     //let minValue = filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == testName).MinRange;\r\n  //     //let maxValue = filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == testName).MaxRange;\r\n  //     // this.patientService.templateOneSelectedTestName = filterData.filter(x => x.DateReceived == this.selectedDate)[rowIndex].Parameter;\r\n  //     //this.patientService.templateOneSelectedTestName = testName;\r\n  //     //this.patientService.selectedTestName = testName;\r\n  //     this.patientService.graphAxisYTitle = this.selectedDate === 'All' ? filterData[0].Units : filterData.find(x => x.DateReceived == this.selectedDate && x.Parameter == testName).Units;\r\n  //     // this.setInterval(minValue, maxValue);\r\n  //     let indx = this.selectedDate === 'All' ? 0 : this.patientService.imageObject.findIndex(x => x.title == this.selectedDate);\r\n  //     // this.sliderMax = (this.patientService.imageObject.length - 1) - indx;\r\n  //     this.patientService.sliderMax = indx;\r\n\r\n  //     //let i = this.patientService.imageObject.length - 1;  //indx + 5;\r\n  //     ;\r\n  //     // for (i; i >= indx; i--) {\r\n  //     // for (i; i >= 0; i--) {\r\n  //     for (let i = 0; i < this.patientService.imageObject.length; i++) {\r\n  //       let obj = [];\r\n  //       // obj = filterData.filter(x => x.DateReceived == this.patientService.backdDteOfSelectedLatestDate[i]);\r\n  //       if (this.patientService.imageObject[i] != undefined) {\r\n  //         obj = filterData.find(x => x.DateReceived == this.patientService.imageObject[i].title && x.Parameter == testName);\r\n  //         // if (obj != undefined && obj != null && !isNaN(parseFloat(obj[\"Result\"])) && (obj[\"MinRange\"] == minValue && obj[\"MaxRange\"] == maxValue)) {    // Condition is for same RefLab value only\r\n  //           if (obj != undefined && obj != null && !isNaN(parseFloat(obj[\"Result\"]))) {\r\n  //           // isRefRangeSame=true; // added for resolve 605\r\n  //           let ele = {};\r\n  //           let tooltipContent = this.patientService.imageObject[i].title + \" <br>\" + resultLabel + \": \" + obj[\"Result\"] + \" <br>\" + refRengeLabel + \": \" + obj[\"MinRange\"] + \"-\" + obj[\"MaxRange\"] + \" <br>\" + refUnitsLabel + \": \" + obj[\"Units\"];\r\n  //           let minMaxvalu = [];\r\n  //           minMaxvalu.push(obj[\"MinRange\"]);\r\n  //           minMaxvalu.push(obj[\"MaxRange\"]);\r\n  //           ele['label'] = obj[\"Parameter\"];\r\n  //           ele['y'] = minMaxvalu;\r\n  //           // ele['whiskerColor'] = \"#0072ce\";\r\n  //           // ele['stemColor'] = \"#0072ce\";\r\n  //           if (i == indx) {\r\n  //             ele['whiskerColor'] = \"darkblue\";\r\n  //             ele['stemColor'] = \"darkblue\";\r\n  //             ele['whiskerThickness'] = 3;\r\n  //             ele['stemThickness'] = 3;\r\n  //           }\r\n  //           else {\r\n  //             ele['whiskerColor'] = \"#0072ce\";\r\n  //             ele['stemColor'] = \"#0072ce\";\r\n  //           }\r\n  //           ele['tooltipContent'] = tooltipContent;\r\n\r\n  //           this.patientService.dataSourceGraphPoint1.push(ele);\r\n  //           //   dataPoints: [\r\n  //           //    { label: \"Oven\", y: [38, 65], whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\"},\r\n  //           //    { label: \"Dishwasher\", y: [48, 70],whiskerColor: \"#4372c4\" ,stemColor: \"#4372c4\" },\r\n  //           //    { label: \"Shaver\", y: [25, 65] },\r\n  //           //  ]\r\n\r\n  //           let ele2 = {};\r\n  //           // ele2['label'] = this.patientService.backdDteOfSelectedLatestDate[i];\r\n  //           ele2['label'] = this.patientService.imageObject[i].title;\r\n  //           ele2['y'] = parseFloat(obj[\"Result\"]);\r\n  //           if (obj[\"Indicator\"] == \"In Range\")\r\n  //             ele2['markerColor'] = \"green\";\r\n  //           else\r\n  //             ele2['markerColor'] = \"red\";\r\n  //           ele2['tooltipContent'] = tooltipContent;\r\n\r\n  //           this.patientService.dataSourceGraphPoint2.push(ele2);\r\n  //           // dataPoints: [\r\n  //           //   { label: \"Jan\", y: 12 ,markerColor: \"green\"},\r\n  //           //   { label: \"Feb\", y: 32,markerColor: \"red\" }\r\n  //           // ]\r\n  //         }\r\n  //         else {\r\n  //           isRefRangeSame = false;\r\n  //         }\r\n  //       }\r\n\r\n  //     }\r\n  //     ;\r\n  //     this.bindChart(testName);\r\n  //   }\r\n  //   else {\r\n  //     $(\"#chartContainer_\" + testName).hide();\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n  public isNumber(val) {\r\n    return typeof (val);\r\n  }\r\n\r\n  rangeCheck(elm) {\r\n    if (elm.AnalyzerName == 'Ref Lab' && elm.Parameter == 'GGT' && (elm.MaxRange == null || elm.MinRange == null)) return false;\r\n    if (elm.MinRange || elm.MaxRange) return true;\r\n    if (elm.MinRange === 0 || elm.MaxRange === 0) return true;\r\n    return false;\r\n  }\r\n\r\n  public openTestDefinition(element) {\r\n    this.patientService.showDescription(this.labelService.dsAnaysisResultsScreen.TestDefinition, element, this.labelService.dsAnaysisResultsScreen.Close);\r\n  }\r\n}\r\n","<div class=\"accesspart accpart\" style=\"width: 100%;\">\r\n  <table class=\"sticky_table\" summary=\"\" mat-table [dataSource]=\"patientService?.dataSource\" multiTemplateDataRows>\r\n\r\n    <ng-container matColumnDef=\"Parameter\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-block align-items-center\">\r\n          <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"\"\r\n            *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n            (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss); $event.stopPropagation()\">\r\n          <strong class=\"headtxt {{ patientService?.dataSource.data.length !== 1 ? 'flt-right': 'flt-lft' }}\">\r\n            {{ element.Parameter }}\r\n          </strong>\r\n          <br>\r\n          <!-- <span *ngIf=\"element.TestNote != null && element.TestNote !='' && patientService.dataSource.data.length !== 1\"\r\n          class=\"test-note\"> -->\r\n          <span *ngIf=\"element.TestNote !== null && element.TestNote !==''\" class=\"test-note\">\r\n            <ng-container *ngIf=\"!element.showMore1\">\r\n              {{ptService.getTestNoteFormated(element.TestNote, 35)}}\r\n            </ng-container>\r\n            <!-- <ng-container *ngIf=\"element.showMore1\">\r\n              {{ element.TestNote }}\r\n            </ng-container> -->\r\n            <ng-container *ngIf=\"element.showMore1\">\r\n              <span [innerHTML]=\"commonService.getResultText(element, element.TestNote)\"></span>\r\n            </ng-container>\r\n            <a href=\"javascript:void(0)\" (click)=\"element.showMore1= !element.showMore1\">\r\n              See {{element.showMore1 ?'less':'more' }}\r\n            </a>\r\n          </span>\r\n          <!-----mobile responsive-->\r\n          <!-- <div class=\"acc-temp-one\">\r\n            <span *ngIf=\"element.MinRange > 0 || element.MaxRange > 0\">{{ element.MinRange }}-{{ element.MaxRange\r\n              }}</span>\r\n            <span>{{ element.Units }}</span>\r\n          </div> -->\r\n          <!-----mobile responsive-->\r\n          <!-- <span *ngIf=\"element.TestNote != null && element.TestNote !=''\" class=\"test-note \" matTooltipPosition=\"right\"\r\n            [matTooltip]=\"element.TestNote\">{{ptService.getTestNoteFormated(element.TestNote)}}</span> -->\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"refrange\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"refrange\">\r\n        <span *ngIf=\"element.MinRange > 0 || element.MaxRange > 0\">{{ element.MinRange }}-{{ element.MaxRange }}</span>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"dref\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <!-- <td mat-cell *matCellDef=\"let element\" class=\"dref\"> <span *ngIf=\"element.MinRange !== null && element.MaxRange !== null\">\r\n              <span *ngIf=\"element.MinRange !== null\">{{element.MinRange}}</span>-<span *ngIf=\"element.MaxRange !== null\">{{element.MaxRange}}</span>\r\n            </span> </td> -->\r\n      <td mat-cell *matCellDef=\"let element\" class=\"dref text-lighter\">\r\n        <div *ngIf=\"element.AnalyzerName !== 'Ref Lab';else refLabRange\">\r\n          <span\r\n            *ngIf=\"element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null);else generalContent\">\r\n            <span *ngIf=\"element.MinRange === null\"> {{ '<'+element.MaxRange }} </span>\r\n                <span *ngIf=\"element.MaxRange === null\">\r\n                  {{ '>'+element. MinRange }}\r\n                </span>\r\n            </span>\r\n            <ng-template #generalContent>\r\n              <span *ngIf=\"element.MinRange !== null && element.MaxRange !== null\">\r\n              <span *ngIf=\"element.MinRange !== null\">{{element.MinRange}}</span>-<span *ngIf=\"element.MaxRange !== null\">{{element.MaxRange}}</span>\r\n            </span>\r\n            </ng-template>\r\n        </div>\r\n        <ng-template #refLabRange>\r\n          {{element.TestResultRanges}}\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Units\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"units\"> {{labelService.dsAnaysisResultsScreen.Units}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"units text-lighter\"> {{ element.Units }} </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <img src=\"../../../../assets/img/graph1.PNG\" alt=\"\" width=\"160px\">   </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n          <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf=\"element.Indicator !== null && element.Indicator !== '' && element.GraphResult !== null && ((element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null)) || (element.Result && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 )));else resultBlock\">\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n          </span>\r\n          <ng-template #resultBlock>\r\n            <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n              *ngIf='element.Indicator !== null && element.Indicator !== \"\" && element.GraphResult !== null'>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': !(element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out'))}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'Low' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out')  ? element.GraphResult : (element.Indicator !== '' ? '100' : '0')\">\r\n              </mat-slider>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': element.Indicator !== 'In Range' || (element.Section === 'A' && element.Indicator === 'Out')}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'In Range' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'In Range' ? element.GraphResult : (element.Indicator === 'High' || (element.Section === 'C' && element.Indicator === 'Out') ? '100' : '0') \">\r\n              </mat-slider>\r\n              <mat-slider mode=\"determinate\"\r\n                [ngClass]=\"{'nothumb': (element.Indicator !== 'High' &&  element.Indicator !== 'Out')  || (element.Section === 'A' && element.Indicator === 'Out') }\"\r\n                [max]=\"element.Indicator !== 'High' &&  element.Indicator !== 'Out' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'High' || element.Indicator === 'Out' ? element.GraphResult : '0'\">\r\n              </mat-slider>\r\n            </span>\r\n          </ng-template>\r\n          <!-- && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 ) -->\r\n          <span\r\n            *ngIf=\"rangeCheck(element) && element.GraphResult && element.Indicator !== '' && (element.Indicator === 'High' || element.Indicator === 'Low' || element.Indicator === 'Out')\"\r\n            class=\"clsRed indicator ml-1\">{{getTranslation(element.Indicator)}}</span>\r\n          <span\r\n            *ngIf=\"element.Result && (element.AnalyzerName !== 'Ref Lab' || (element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null))) && (element.AnalyzerName !== 'Ref Lab' && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 ))\"\r\n            class=\"clsRed indicator ml-1 no-underline\"> Out </span>\r\n            <span\r\n            *ngIf=\"element.Result && element.Parameter.trim() === 'GGT' && element.TestResultFlag === 'CH'\" class=\"clsRed indicator ml-1 no-underline\">{{getTranslation('High')}} </span>\r\n          <!-- <span\r\n            *ngIf=\"element.Indicator !== 'High' && element.Indicator !== 'Low' && element.Indicator !== 'Out' && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span> -->\r\n\r\n          <span class=\"d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator === null || element.Indicator === \"\" '>\r\n            {{ element.GraphResult }}\r\n          </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <!-- <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf='element.Indicator != null && element.Indicator != \"\" && element.GraphResult != null'>\r\n            <mat-slider\r\n              [ngClass]=\"{'nothumb': !(element.Indicator == 'Low' || (element.Section == 'A' && element.Indicator == 'Out'))}\"\r\n              mode=\"determinate\" [max]=\"element.Indicator != 'Low' ? 100 : 115\"\r\n              [value]=\"element.Indicator == 'Low' || (element.Section == 'A' && element.Indicator == 'Out')  ? element.GraphResult : (element.Indicator != '' ? '100' : '0')\">\r\n            </mat-slider>\r\n            <mat-slider\r\n              [ngClass]=\"{'nothumb': element.Indicator != 'In Range' || (element.Section == 'A' && element.Indicator == 'Out')}\"\r\n              mode=\"determinate\" [max]=\"element.Indicator != 'In Range' ? 100 : 115\"\r\n              [value]=\"element.Indicator == 'In Range' ? element.GraphResult : (element.Indicator == 'High' || (element.Section == 'C' && element.Indicator == 'Out') ? '100' : '0') \">\r\n            </mat-slider>\r\n            <mat-slider mode=\"determinate\"\r\n              [ngClass]=\"{'nothumb': (element.Indicator != 'High' &&  element.Indicator != 'Out')  || (element.Section == 'A' && element.Indicator == 'Out') }\"\r\n              [max]=\"element.Indicator != 'High' &&  element.Indicator != 'Out' ? 100 : 115\"\r\n              [value]=\"element.Indicator == 'High' || element.Indicator == 'Out' ? element.GraphResult : '0'\">\r\n            </mat-slider>\r\n          </span>\r\n\r\n          <div class=\"indi-con\">\r\n            <span *ngIf=\"element.Indicator == 'High' || element.Indicator == 'Low' || element.Indicator == 'Out'\"\r\n              class=\"clsRed indicator mr-5\">{{getTranslation(element.Indicator)}}</span>\r\n            <span *ngIf=\"element.Indicator != 'High' && element.Indicator != 'Low' && element.Indicator != 'Out'\"\r\n              class=\"clsRed indicator mr-5\"> &nbsp;</span>\r\n\r\n            <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n              *ngIf='element.Indicator == null || element.Indicator == \"\" '>\r\n              {{ element.GraphResult }}\r\n            </span>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n\r\n    <ng-container matColumnDef=\"date1\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.imageObject[0].title }}</span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\"  class=\"text-bolder\">\r\n        <span>\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date2\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate2_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date3\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate3_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date4\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate4_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Result\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n        <span *ngIf=\"selectedDate !== undefined\" class=\"pink\"\r\n          [ngClass]=\"{'clsGreen': ((element.Indicator==='' && element.Result !== 'NEG') || element.Indicator === 'In Range'), 'clsRed': (element.Indicator !== '' && element.Indicator !== 'In Range') || element.Result === 'NEG'}\">\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Template for details row -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n      <td mat-cell *matCellDef=\"let element; let i = index\" [attr.colspan]=\"displayedColumns.length\">\r\n        <!-- {{ isNumber(element.Result) =='number'|json}} -->\r\n        <!-- <div class=\"row student-element-detail\" [@detailExpand]=\"(element == expandedElement || (patientService.dataSource.data.length > 1 || source != 'InClinic' || isNumber(element.Result) =='number') ) ? 'expanded' : 'collapsed'\"> -->\r\n        <div class=\"row student-element-detail\"\r\n          [@detailExpand]=\"(element === expandedElement || patientService?.dataSource.data.length === 1 ) ? 'expanded' : 'collapsed'\">\r\n          <!-- Graph Details -->\r\n\r\n          <div style=\"height: 150px; width: 100%;\"></div>\r\n          <!-- <div id=\"chartContainer\" style=\"height: 370px; width: 100%;\" *ngIf='element.Indicator != null && element.Indicator != \"\" '></div> -->\r\n          <!-- End Graph Details -->\r\n          <!-- Notes Details -->\r\n          <div class=\"text-block\" *ngIf=\"isTextVisible(element) && patientService.SourceType === 'ReferenceLab'\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"\" class=\"review_head\">{{selectedLatestDate}}</label>\r\n              <!-- <p *ngIf=\"patientService.imageObject.length === 1\">\r\n                {{ patientService.imageObject[0].title }}\r\n              </p> -->\r\n              <p [innerHTML]=\"commonService.getResultText(element.Result, element.TestNote)\"></p>\r\n            </div>\r\n            <div class=\"mb-3\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[3]\">\r\n              <label for=\"\" class=\"review_head\">{{ patientService.backdDteOfSelectedLatestDate[3] }}</label>\r\n              <p [innerHTML]=\"commonService.getResultText(element.DynamicDate4_Result, element.DynamicDate4_TestNote)\">\r\n              </p>\r\n            </div>\r\n            <div class=\"mb-3\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[2]\">\r\n              <label for=\"\" class=\"review_head\">{{ patientService.backdDteOfSelectedLatestDate[2] }}</label>\r\n              <p [innerHTML]=\"commonService.getResultText(element.DynamicDate3_Result, element.DynamicDate3_TestNote)\">\r\n              </p>\r\n            </div>\r\n            <div class=\"mb-3\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[1]\">\r\n              <label for=\"\" class=\"review_head\">{{ patientService.backdDteOfSelectedLatestDate[1] }}</label>\r\n              <p [innerHTML]=\"commonService.getResultText(element.DynamicDate2_Result, element.DynamicDate2_TestNote)\">\r\n              </p>\r\n            </div>\r\n            <div class=\"mb-3\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[0]\">\r\n              <label for=\"\" class=\"review_head\">{{ patientService.backdDteOfSelectedLatestDate[0] }}</label>\r\n              <p [innerHTML]=\"commonService.getResultText(element.DynamicDate1_Result, element.DynamicDate1_TestNote)\">\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\"></tr>\r\n    <!-- <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\"\r\n    (click)=\"selectedRow(element)\" [class.student-expanded-row]=\"element == expandedElement\"></tr> -->\r\n\r\n    <!-- Extra row to show detail content column -->\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"student-detail-row\"></tr>\r\n\r\n  </table>\r\n</div>\r\n<div class=\"d-flex justify-content-center lstrow\"\r\n  *ngIf=\"patientService?.dataSourceVS2 !== null && patientService?.dataSourceVS2.length > 0 && patientService.categoryName.toLocaleLowerCase() === 'vetscan vs2'\">\r\n  <span *ngFor=\"let element of patientService?.dataSourceVS2\">{{ element.Parameter }} - {{ element.Result }}</span>\r\n  <!-- <span>HEM - 1+</span>\r\n      <span>LIP - 0 </span>\r\n      <span>ICT - 1+ </span> -->\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService } from '../../../../services/label.service';\r\nimport { PatientService } from '../../../../services/patient.service';\r\n@Component({\r\n  selector: 'app-accession-template-three',\r\n  templateUrl: './accession-template-three.component.html',\r\n  styleUrls: ['./accession-template-three.component.css']\r\n})\r\nexport class AccessionTemplateThreeComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Position\", \"Parameter\", 'DynamicDate1_Result', 'DynamicDate2_Result', 'DynamicDate3_Result', 'DynamicDate4_Result', 'Result'];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public patientService: any = {}\r\n\r\n  constructor(public labelService: LabelService, public ptService: PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n}\r\n","<table class=\"sticky_table\" mat-table [dataSource]=\"patientService?.dataSource\" summary=\"\">\r\n  <ng-container matColumnDef=\"Position\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      {{labelService.dsAnaysisResultsScreen.Test}}\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <span class=\"initials rounded-circle\">{{element.Parameter.charAt(0)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"Parameter\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      &nbsp;\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{element.Parameter}}\r\n      <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  alt=\"\" class=\"test_info_icon\"\r\n        *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n        (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"DynamicDate1_Result\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[0]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate1_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[0] !== undefined\">\r\n        {{ptService.getBlankToDash(element.DynamicDate1_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"DynamicDate2_Result\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n        {{ptService.getBlankToDash(element.DynamicDate2_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"DynamicDate3_Result\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n        {{ptService.getBlankToDash(element.DynamicDate3_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"DynamicDate4_Result\">\r\n    <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n        {{ptService.getBlankToDash(element.DynamicDate4_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"Result\">\r\n    <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n      <span class=\"pink\">\r\n        {{element.Result}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n</table>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService } from '../../../../services/label.service';\r\nimport { PatientService } from '../../../../services/patient.service';\r\n@Component({\r\n  selector: 'app-accession-template-four',\r\n  templateUrl: './accession-template-four.component.html',\r\n  styleUrls: ['./accession-template-four.component.css']\r\n})\r\nexport class AccessionTemplateFourComponent implements OnInit {\r\n\r\n  displayedColumnsSA = [\"Parameter\", \"Units\", 'DynamicDate1_Result', 'DynamicDate2_Result', 'DynamicDate3_Result', 'DynamicDate4_Result', 'Result'];\r\n  displayedColumnsUA = [\"Parameter\", \"Units\", 'DynamicDate1_Result', 'DynamicDate2_Result', 'DynamicDate3_Result', 'DynamicDate4_Result', 'Result'];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public patientService: any = {}\r\n\r\n  constructor(public labelService: LabelService, public ptService: PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n}\r\n","<div class=\"w-100\" style=\"overflow-y: scroll;\"\r\n  *ngIf=\"patientService?.dataSource !== null && patientService.dataSource.data.length > 0\">\r\n  <table class=\"sticky_table\" mat-table [dataSource]=\"patientService.dataSource\" summary=\"\">\r\n    <ng-container matColumnDef=\"Parameter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{labelService.dsAnaysisResultsScreen.SATest}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"datas\">\r\n        {{ element.Parameter }}\r\n        <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon\" alt=\"\"\r\n          *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n          (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"Result\">\r\n        <th mat-header-cell *matHeaderCellDef>{{inputSelectedDate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.Result }}\r\n        </td>\r\n      </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"Units\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{labelService.dsAnaysisResultsScreen.Units}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.Units }}\r\n      </td>\r\n    </ng-container>\r\n    <table summary=\"\">\r\n      <ng-container matColumnDef=\"DynamicDate1_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{\r\n            patientService.backdDteOfSelectedLatestDate[0] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate1_Result\" class=\"datepart\"\r\n          [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[0] === undefined}\">\r\n          <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[0] !== undefined\">\r\n            {{ptService.getBlankToDash(element.DynamicDate1_Result)}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate2_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{\r\n            patientService.backdDteOfSelectedLatestDate[1] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\" class=\"datepart\"\r\n          [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[1] === undefined}\">\r\n          <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n            {{ptService.getBlankToDash(element.DynamicDate2_Result)}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate3_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{\r\n            patientService.backdDteOfSelectedLatestDate[2] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\" class=\"datepart\"\r\n          [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[2] === undefined}\">\r\n          <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n            {{ptService.getBlankToDash(element.DynamicDate3_Result)}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate4_Result\">\r\n        <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{\r\n            patientService.backdDteOfSelectedLatestDate[3] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\" class=\"datepart\"\r\n          [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[3] === undefined}\">\r\n          <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n            {{ptService.getBlankToDash(element.DynamicDate4_Result)}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Result\">\r\n        <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\" class=\"datepart\">\r\n          <span class=\"pink\">\r\n            {{element.Result}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n    </table>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSA; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsSA\"></tr>\r\n  </table>\r\n</div>\r\n\r\n\r\n<!-- For UA Test -->\r\n<div class=\"w-100\" style=\"overflow-y: scroll;\"\r\n  *ngIf=\"patientService?.dataSourceUA !== null && patientService.dataSourceUA.data.length > 0\">\r\n  <table class=\"sticky_table\" mat-table [dataSource]=\"patientService.dataSourceUA\" summary=\"\">\r\n    <ng-container matColumnDef=\"Parameter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{labelService.dsAnaysisResultsScreen.UATest}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"datas\">\r\n        {{ element.Parameter }}\r\n        <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  alt=\"\" class=\"test_info_icon\"\r\n          *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n          (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"Result\">\r\n        <th mat-header-cell *matHeaderCellDef>{{inputSelectedDate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.Result }}\r\n        </td>\r\n      </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"Units\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        {{labelService.dsAnaysisResultsScreen.Units}}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.Units }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"DynamicDate1_Result\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[0]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate1_Result\" class=\"datepart\"\r\n        [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[0] === undefined}\">\r\n        <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[0] !== undefined\">\r\n          {{ptService.getBlankToDash(element.DynamicDate1_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"DynamicDate2_Result\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\" class=\"datepart\"\r\n        [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[1] === undefined}\">\r\n        <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n          {{ptService.getBlankToDash(element.DynamicDate2_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"DynamicDate3_Result\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\" class=\"datepart\"\r\n        [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[2] === undefined}\">\r\n        <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n          {{ptService.getBlankToDash(element.DynamicDate3_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"DynamicDate4_Result\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\" class=\"datepart\"\r\n        [ngClass]=\"{'nodata': patientService.backdDteOfSelectedLatestDate[3] === undefined}\">\r\n        <span class=\"tablecont\" *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n          {{ptService.getBlankToDash(element.DynamicDate4_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Result\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\" class=\"datepart\">\r\n        <span class=\"pink\">\r\n          {{element.Result}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsUA; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsUA\"></tr>\r\n  </table>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService } from '../../../../services/label.service';\r\nimport { PatientService } from '../../../../services/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-accession-template-five',\r\n  templateUrl: './accession-template-five.component.html',\r\n  styleUrls: ['./accession-template-five.component.css']\r\n})\r\nexport class AccessionTemplateFiveComponent implements OnInit {\r\n\r\n  // displayedColumns = [\"Parameter\", \"TestCount\", 'DynamicDate1_Result','DynamicDate2_Result','DynamicDate3_Result','DynamicDate4_Result', 'Result'];\r\n  displayedColumns = [\"AnalyteDesc\", \"ResultDetection\", \"ResultCount\"];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public patientService: any = {}\r\n\r\n  constructor(public labelService: LabelService, public ptService: PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n  public formateText(txt) {\r\n    if (txt != undefined && txt != null) {\r\n      if (txt.toString().trim().toLowerCase() == \"true\")\r\n        txt = \"Yes\";\r\n\r\n      if (txt.toString().trim().toLowerCase() == \"false\")\r\n        txt = \"No\";\r\n    }\r\n    return txt;\r\n  }\r\n\r\n}\r\n","<table class=\"sticky_table\" mat-table [dataSource]=\"patientService?.dataSource\" summary=\"\">\r\n  <ng-container matColumnDef=\"AnalyteDesc\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      {{labelService.dsAnaysisResultsScreen.OvaOocysts}}\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{ element.AnalyteDesc }}\r\n      <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon\" alt=\"\"\r\n        *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n        (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss);\">\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"ResultDetection\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      {{labelService.dsAnaysisResultsScreen.Detected}}\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{formateText(element.ResultDetection)}}\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"ResultCount\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      <!-- {{labelService.dsAnaysisResultsScreen.Units}} -->\r\n      {{labelService.dsAnaysisResultsScreen.Count}}\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{ element.ResultCount }}\r\n      <!-- {{ element.AnalyteCodeTestCT }} -->\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- <ng-container matColumnDef=\"DynamicDate1_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[0] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate1_Result\">\r\n          <span>\r\n            {{element.DynamicDate1_Result}}\r\n        </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate2_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n        <span >\r\n          {{element.DynamicDate2_Result}}\r\n        </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate3_Result\">\r\n        <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n        <span >\r\n          {{element.DynamicDate3_Result}}\r\n        </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"DynamicDate4_Result\">\r\n        <th mat-header-cell *matHeaderCellDef><span class=\"date_block\">  {{ patientService.backdDteOfSelectedLatestDate[3] }}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n        <span >\r\n          {{element.DynamicDate4_Result}}\r\n        </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Result\">\r\n        <th mat-header-cell *matHeaderCellDef><span class=\"date_block\">  {{selectedDate}}</span> </th>\r\n        <td mat-cell *matCellDef=\"let element\"  [title]=\"element.Result\">\r\n          <span class=\"pink\">\r\n          {{element.Result}}\r\n        </span>\r\n        </td>\r\n      </ng-container> -->\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n</table>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { LabelService } from '../../../../services/label.service';\r\nimport { PatientService } from '../../../../services/patient.service';\r\n@Component({\r\n  selector: 'app-accession-template-six',\r\n  templateUrl: './accession-template-six.component.html',\r\n  styleUrls: ['./accession-template-six.component.css']\r\n})\r\nexport class AccessiontTemplateSixComponent implements OnInit {\r\n\r\n  @Output() viewImages: EventEmitter<any> = new EventEmitter();\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public patientService: any = {}\r\n\r\n  constructor(public labelService: LabelService, public ptService: PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n  public viewImageSlider(imageList, imgIndex) {\r\n    const imgObjet = [];\r\n    imgObjet[\"ImageList\"] = imageList;\r\n    imgObjet[\"ImageIndex\"] = imgIndex;\r\n    this.viewImages.emit(imgObjet);\r\n  }\r\n\r\n}\r\n","<div class=\"col-sm-12\">\r\n    <ng-container *ngIf=\"patientService?.cytoTestData !==null && patientService.cytoTestData.length>0\">\r\n        <div class=\"Headcontent\" *ngFor=\"let data of patientService.cytoTestData\">\r\n        <h5 class=\"t6-title\"> {{data.GroupName}} </h5>\r\n        <div class=\"row\">\r\n            <span class=\"col-sm-3 text-center imgpart\" *ngFor=\"let imgData of data.CytoTestImages; let imgIndex=index;\">\r\n            <p class=\"analyte-img-title\">\r\n                {{imgData.Parameter}}\r\n            </p>\r\n            <img [src]=\"imgData.Result\"  (click)=\"viewImageSlider(data.CytoTestImages, imgIndex);\" alt=\"\">\r\n            </span>\r\n        </div>\r\n        <div class=\"row contP\">\r\n            <span class=\"col-sm-12 contentpart\" *ngFor=\"let testData of data.CytoTests\">\r\n            <p class=\"analyte-desc\"> {{testData.AnalyteDesc}} </p>\r\n            <p class=\"analyte-img-title\"> {{testData.Result}} </p>\r\n            </span>\r\n        </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"patientService?.cytoTestSingnature !==null && patientService.cytoTestSingnature.length>0\">\r\n        <div class=\"row SignP\">\r\n            <span class=\"col-sm-12 sigpart\" *ngFor=\"let signData of patientService.cytoTestSingnature\">\r\n            <p class=\"analyte-desc\"> {{signData.AnalyteDesc}} </p>\r\n            <p class=\"analyte-img-title\"> {{signData.Result}} </p>\r\n            </span>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"patientService?.cytoTestDisclaimerText !==null && patientService.cytoTestDisclaimerText.length>0\">\r\n        <div class=\"disclaimer\">\r\n            <p class=\"analyte-desc\"> {{labelService.dsAnaysisResultsScreen.Disclaimer}}:  {{patientService.cytoTestDisclaimerText}}</p>      \r\n        </div>\r\n    </ng-container>\r\n    \r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService } from '../../../../services/label.service';\r\nimport { PatientService } from '../../../../services/patient.service';\r\nimport { ImageSliderComponent } from '../../../../shared/image-slider/image-slider.component';\r\n@Component({\r\n  selector: 'app-accession-template-seven',\r\n  templateUrl: './accession-template-seven.component.html',\r\n  styleUrls: ['./accession-template-seven.component.css']\r\n})\r\nexport class AccessionTemplateSevenComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Parameter\", \"GraphResult\", 'date1', 'date2', 'date3', 'date4', 'Result'];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public patientService: any = {}\r\n\r\n  constructor(public ptService: PatientService, public labelService: LabelService, private modalService: NgbModal) {}\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n  }\r\n\r\n  public viewImageSlider(imageList, imgIndex) {\r\n    const modalRef = this.modalService.open(ImageSliderComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      scrollable: false\r\n    });\r\n    // modalRef.componentInstance.imageList = this.patientService.imageTestFiltered;\r\n    modalRef.componentInstance.imageList = imageList;\r\n    modalRef.componentInstance.currentIndex = imgIndex;\r\n    modalRef.componentInstance.patientDetails = this.patientService.patientDetails;\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n    return rtnValue;\r\n  }\r\n\r\n}\r\n","<table class=\"sticky_table\" mat-table [dataSource]=\"patientService?.dataSource\" summary=\"\">\r\n\r\n  <ng-container matColumnDef=\"Parameter\">\r\n    <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n    <td mat-cell *matCellDef=\"let element\"> <strong>{{ element.AnalyteDesc }} </strong>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <!-- <ng-container matColumnDef=\"Range\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span *ngIf=\"element.MinRange > 0 || element.MaxRange > 0\">{{ element.MinRange }}-{{ element.MaxRange }}</span>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n  <ng-container matColumnDef=\"GraphResult\">\r\n    <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <div class=\"d-flex  align-items-center justify-content-between resultBlock tempt7\" id=\"result-block\">\r\n        <span class=\"w-100 d-flex  align-items-center graph-wrapper resultBlocks\">\r\n          <mat-slider\r\n            *ngIf=\"element.AnalyteDesc !== 'Large Aggregated Platelet' && element.AnalyteDesc !== 'Medium Aggregated Platelet'\"\r\n            mode=\"determinate\" min=\"-12\" max=\"104\"\r\n            [value]=\"element.GraphResult !== null && element.GraphResult !== '' ? element.GraphResult : 0\">\r\n          </mat-slider>\r\n          <!-- {{element.GraphResult}} -->\r\n          <!-- <mat-slider\r\n              [ngClass]=\"{'nothumb': element.Indicator != 'In Range' || (element.Section == 'A' && element.Indicator == 'Out')}\"\r\n              mode=\"determinate\" [max]=\"element.Indicator != 'In Range' ? 100 : 115\"\r\n              [value]=\"element.Indicator == 'In Range' ? element.GraphResult : (element.Indicator == 'High' || (element.Section == 'C' && element.Indicator == 'Out') ? '100' : '0') \">\r\n            </mat-slider>\r\n            <mat-slider mode=\"determinate\"\r\n              [ngClass]=\"{'nothumb': (element.Indicator != 'High' &&  element.Indicator != 'Out')  || (element.Section == 'A' && element.Indicator == 'Out') }\"\r\n              [max]=\"element.Indicator != 'High' &&  element.Indicator != 'Out' ? 100 : 115\"\r\n              [value]=\"element.Indicator == 'High' || element.Indicator == 'Out' ? element.GraphResult : '0'\">\r\n            </mat-slider>-->\r\n        </span>\r\n\r\n        <!-- <span *ngIf=\"element.Indicator == 'High' || element.Indicator == 'Low' || element.Indicator == 'Out'\"\r\n            class=\"clsRed indicator ml-1\">{{getTranslation(element.Indicator)}}</span>\r\n          <span *ngIf=\"element.Indicator != 'High' && element.Indicator != 'Low' && element.Indicator != 'Out'\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span>\r\n\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator == null || element.Indicator == \"\" '>\r\n            {{ element.GraphResult }}\r\n          </span>-->\r\n\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"date1\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[0]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate1_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[0] !== undefined\">\r\n        {{ptService.getResultFormated(element.DynamicDate1_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"date2\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n        {{ptService.getResultFormated(element.DynamicDate2_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"date3\">\r\n    <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n        {{ptService.getResultFormated(element.DynamicDate3_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"date4\">\r\n    <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n        }}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n      <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n        {{ptService.getResultFormated(element.DynamicDate4_Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"Result\">\r\n    <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n    <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n      <span *ngIf=\"selectedDate !== undefined\" class=\"pink\">\r\n        {{ptService.getResultFormated(element.Result)}}\r\n      </span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n  <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\"></tr>\r\n\r\n</table>\r\n\r\n<div class=\"col-sm-12\">\r\n  <ng-container *ngIf=\"patientService?.dataSourceTop && patientService.dataSourceTop.length>0\">\r\n    <div class=\"row contP\">\r\n      <span class=\"col-sm-12 sigpart\" *ngFor=\"let topSource of patientService.dataSourceTop\">\r\n        <p class=\"analyte-desc\"> {{topSource.AnalyteDesc}} </p>\r\n        <p class=\"analyte-result\"> {{topSource.Result}} </p>\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"patientService?.imgData !==null && patientService.imgData.length>0\">\r\n    <div class=\"Headcontent\" *ngFor=\"let data of patientService.imgData\">\r\n      <h5 class=\"analyte-desc\"> {{data.GroupName}} </h5>\r\n      <div class=\"row\">\r\n        <span class=\"col-sm-3 text-center imgpart\" *ngFor=\"let ele of data.Images; let imgIndex=index;\">\r\n          <p class=\"analyte-img-title\">\r\n            {{ele.Parameter}}\r\n          </p>\r\n          <img [src]=\"ele.Result\" (click)=\"viewImageSlider(data.Images, imgIndex);\" alt=\"\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService, PatientService, CommonService } from '../../../../services';\r\n// import { NoteFormateKeys } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-accession-template-nine',\r\n  templateUrl: './accession-template-nine.component.html',\r\n  styleUrls: ['./accession-template-nine.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class AccessionTemplateNineComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Parameter\", 'date1', \"Units\", \"Range\", \"GraphResult\"];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public expandedElement: any;\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n  selectedLatestDate = null;\r\n  public patientService: any = {}\r\n  showMore1 = false;\r\n  public testNoteList: any[] = [];\r\n\r\n  constructor(\r\n    public labelService: LabelService,\r\n    public ptService: PatientService,\r\n    public commonService: CommonService) { }\r\n\r\n  // public getResultText(result, testNote) {\r\n  //   let noteTitleObj = NoteFormateKeys;\r\n  //   if (testNote != null && testNote != \"\") {\r\n  //     for (let x in noteTitleObj) {\r\n  //       testNote = testNote.replaceAll(x, '<br/><br/><b>' + noteTitleObj[x] + '</b>');\r\n  //     }\r\n  //     return testNote;\r\n  //   } else {\r\n  //     return result;\r\n  //   }\r\n  // };\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data;\r\n    this.testNoteList = this.patientService?.dataSource.data.filter(ele => {\r\n      if (ele.TestNote) {\r\n        return ele;\r\n      }\r\n    })\r\n    console.log('testNoteList =>', this.testNoteList);\r\n  }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public selectedRow(row) {\r\n    this.expandedElement = row;\r\n    // const filterData = JSON.parse(JSON.stringify(this.patientService.orgDataSet));\r\n    this.patientService.selectedTestName = row.Parameter;\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n    return rtnValue;\r\n  }\r\n\r\n\r\n  public isNumber(val) {\r\n    return typeof (val);\r\n  }\r\n\r\n  rangeCheck(elm) {\r\n    if (elm.MinRange || elm.MaxRange) return true;\r\n    if (elm.MinRange === 0 || elm.MaxRange === 0) return true;\r\n    return false;\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"accesspart accpart\" style=\"width: 100%;\">\r\n  <table class=\"sticky_table\" summary=\"\" mat-table [dataSource]=\"patientService.dataSource\" multiTemplateDataRows>\r\n\r\n    <ng-container matColumnDef=\"Parameter\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-block align-items-center\">\r\n          <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"\"\r\n            *ngIf=\"(element.Definition != null && element.Definition != '')\"\r\n            (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss); $event.stopPropagation()\">\r\n          <strong class=\"headtxt {{ patientService.dataSource.data.length !== 1 ? 'flt-right': 'flt-lft' }}\">\r\n            {{element.Parameter }}\r\n          </strong>\r\n          <div class=\"acc-temp-one\">\r\n            <span *ngIf=\"element.MinRange > 0 || element.MaxRange > 0\">{{ element.MinRange }}-{{ element.MaxRange\r\n              }}</span>\r\n            <span>{{ element.Units }}</span>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"dref\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"dref\">\r\n        <div *ngIf=\"element.AnalyzerName !== 'Ref Lab';else refLabRange\">\r\n          <span\r\n            *ngIf=\"element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null);else generalContent\">\r\n            <span *ngIf=\"element.MinRange === null\"> {{ '<'+element.MaxRange }} </span>\r\n                <span *ngIf=\"element.MaxRange === null\">\r\n                  {{ '>'+element. MinRange }}\r\n                </span>\r\n            </span>\r\n            <ng-template #generalContent>\r\n              <span *ngIf=\"element.MinRange !== null && element.MaxRange !== null\">\r\n              <span *ngIf=\"element.MinRange !== null\">{{element.MinRange}}</span>-<span *ngIf=\"element.MaxRange !== null\">{{element.MaxRange}}</span>\r\n            </span>\r\n            </ng-template>\r\n        </div>\r\n        <ng-template #refLabRange>\r\n          {{element.TestResultRanges}}\r\n        </ng-template>\r\n      </td>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Units\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"units\"> {{labelService.dsAnaysisResultsScreen.Units}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"units\"> {{ element.Units }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n\r\n          <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf=\"element.Indicator != null && element.Indicator != '' && element.GraphResult != null && ((element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null)) || (element.Result && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 )));else resultBlock\">\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n          </span>\r\n          <ng-template #resultBlock>\r\n            <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n              *ngIf='element.Indicator != null && element.Indicator != \"\" && element.GraphResult != null'>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': !(element.Indicator == 'Low' || (element.Section == 'A' && element.Indicator == 'Out'))}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator != 'Low' ? 100 : 115\"\r\n                [value]=\"element.Indicator == 'Low' || (element.Section == 'A' && element.Indicator == 'Out')  ? element.GraphResult : (element.Indicator != '' ? '100' : '0')\">\r\n              </mat-slider>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': element.Indicator != 'In Range' || (element.Section == 'A' && element.Indicator == 'Out')}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator != 'In Range' ? 100 : 115\"\r\n                [value]=\"element.Indicator == 'In Range' ? element.GraphResult : (element.Indicator == 'High' || (element.Section == 'C' && element.Indicator == 'Out') ? '100' : '0') \">\r\n              </mat-slider>\r\n              <mat-slider mode=\"determinate\"\r\n                [ngClass]=\"{'nothumb': (element.Indicator != 'High' &&  element.Indicator != 'Out')  || (element.Section == 'A' && element.Indicator == 'Out') }\"\r\n                [max]=\"element.Indicator != 'High' &&  element.Indicator != 'Out' ? 100 : 115\"\r\n                [value]=\"element.Indicator == 'High' || element.Indicator == 'Out' ? element.GraphResult : '0'\">\r\n              </mat-slider>\r\n            </span>\r\n          </ng-template>\r\n\r\n          <span\r\n            *ngIf=\"rangeCheck(element) && element.Indicator != '' && (element.Indicator == 'High' || element.Indicator == 'Low' || element.Indicator == 'Out') && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\">{{getTranslation(element.Indicator)}}</span>\r\n          <span\r\n            *ngIf=\"element.Result && (element.AnalyzerName !== 'Ref Lab' || (element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null))) && (element.AnalyzerName !== 'Ref Lab' && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 ))\"\r\n            class=\"clsRed indicator ml-1 no-underline\"> Out </span>\r\n          <span\r\n            *ngIf=\"element.Indicator != 'High' && element.Indicator != 'Low' && element.Indicator != 'Out' && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span>\r\n\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator == null || element.Indicator == \"\" '>\r\n            {{ element.GraphResult }}\r\n          </span>\r\n        </div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date1\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.imageObject[0].title }}</span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n        <span>\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date2\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] != undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate2_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date3\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] != undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate3_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date4\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] != undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate4_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Result\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n        <span *ngIf=\"selectedDate != undefined\" class=\"pink\"\r\n          [ngClass]=\"{'clsGreen': ((element.Indicator=='' && element.Result != 'NEG') || element.Indicator == 'In Range'), 'clsRed': (element.Indicator != '' && element.Indicator != 'In Range') || element.Result == 'NEG'}\">\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\"></tr>\r\n  </table>\r\n</div> -->\r\n\r\n\r\n<div *ngIf=\"testNoteList?.length>0\">\r\n  <section style=\"width:100%\" *ngFor=\"let data of testNoteList\">\r\n    <h3 class=\"note-header\"> {{data.AnalysisTypeName}}</h3>\r\n    <div class=\"text-block\">\r\n      <h5 style=\"font-weight: bold;\"> {{data.Parameter}} </h5>\r\n      <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n    </div>\r\n  </section>\r\n</div>\r\n\r\n\r\n<div class=\"d-flex justify-content-center lstrow\"\r\n  *ngIf=\"patientService?.dataSourceVS2 !== null && patientService.dataSourceVS2.length > 0 && patientService.categoryName.toLocaleLowerCase() === 'vetscan vs2'\">\r\n  <span *ngFor=\"let element of patientService?.dataSourceVS2\">{{ element.Parameter }} - {{ element.Result }}</span>\r\n</div>","import { Component, Input, OnChanges, SimpleChange } from '@angular/core';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { LabelService, PatientService, DataService } from '../../../../services';\r\n@Component({\r\n  selector: 'app-accession-template-12',\r\n  templateUrl: './accession-template-12.component.html',\r\n  styleUrls: ['./accession-template-12.component.css']\r\n})\r\nexport class AccessionTemplate12Component implements OnChanges {\r\n\r\n  @Input() data: any;\r\n  @Input() selectedDate: string;\r\n  public expandedElement: any;\r\n  @Input() labResults: any[] = [];\r\n  @Input() labReports: any[] = [];\r\n  @Input() labReportFilterByAnalysisType: any[] = [];\r\n  // @Input() selectedDate: string;\r\n  @Input() selectedAnalysisType: string;\r\n  public displayedColumns = ['Sensitivity', 'prevDate1', 'prevDate2', 'prevDate3', 'prevDate4'];\r\n  public dataSource: MatTableDataSource<any>;\r\n  // public labReports: any[] = [];\r\n  public labReportDistinct: any[] = [];\r\n  public labReportFiltered: any[] = [];\r\n  public noneSensitiveElements: any[];\r\n  public topNoneSensitiveElements: any[] = [];\r\n  public middleNoneSensitiveElements: any[] = []\r\n  public bottomNoneSensitiveElements: any[] = []\r\n  public organismList: any[] = [];\r\n  public noneSensitivityList: any[] = [];\r\n  public bottomNoneSensitivityList: any[] = [];\r\n  public sensitivityList: any[] = [];\r\n  public startOrganismIndex = 0;\r\n  public endOrganismIndex = 4;\r\n  public selectedBackDate: string;\r\n  public backDates: any[] = [];\r\n  // public selectedBackDateIndex: number = 0;\r\n  // public organismGroups: any[] = [];\r\n  // public organismGrouplist: any[] = [];\r\n\r\n  constructor(public patientService: PatientService, public labelService: LabelService, public dataService: DataService) {\r\n    // this.noneSensitiveElements = ['Source', 'Media Plated', 'Culture Comment', 'Aerobic Culture Results', 'Anaerobic Culture Results', 'Organism', 'Quantity', 'Comment', 'Urine Collection Method', 'Culture Results', 'Fungal Culture Result', 'Time & Date of Collection', 'Location of Collection', 'Blood Culture Results', 'Campylobacter Screen', 'Salmonella Screen', 'Dermatophyte Culture Result'];\r\n    // this.organismGroups = ['Organism', 'Quantity', 'Comment'];\r\n    this.topNoneSensitiveElements = [\r\n      'Source',\r\n      'Urine Collection Method',\r\n      'Time & Date of Collection',\r\n      'Location of Collection'\r\n    ]\r\n\r\n    this.middleNoneSensitiveElements = [\r\n      'Media Plated',\r\n      'Culture Comment',\r\n      'Aerobic Culture Results',\r\n      'Anaerobic Culture Results',\r\n      'Fungal Culture Result',\r\n      'Culture Results',\r\n      'Blood Culture Results',\r\n      'Campylobacter Screen',\r\n      'Salmonella Screen',\r\n      'Fungal Culture Comment',\r\n      'Dermatophyte Culture Result',\r\n    ]\r\n\r\n    this.bottomNoneSensitiveElements = [\r\n      'Organism',\r\n      'Quantity',\r\n      'Comment'\r\n    ]\r\n    this.noneSensitiveElements = this.topNoneSensitiveElements.concat(this.middleNoneSensitiveElements).concat(this.bottomNoneSensitiveElements);\r\n  }\r\n\r\n  ngOnChanges(changes: { [property: string]: SimpleChange }) {\r\n    if (changes.labResults && changes.labResults.firstChange) {\r\n      this.labReports = this.labResults ? this.labResults['LabReports'] : [];\r\n    }\r\n\r\n    if (changes.selectedAnalysisType && !changes.selectedAnalysisType.firstChange) {\r\n      this.selectedAnalysisType = changes.selectedAnalysisType.currentValue;\r\n    }\r\n\r\n    this.labReportDistinct = [...new Map(this.labReports.map((item) => [item[\"DateReceived\"], item])).values()];\r\n    // this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate);\r\n    // this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    // console.log('labReportDistinct ************', this.labReportDistinct);\r\n\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n\r\n  public selectNote(event) {\r\n    this.selectedDate = event.value;\r\n    this.filterAndUpdateReport();\r\n    this.dataService.appData.tblTopPatientDetails = this.labReportDistinct.filter(ele => ele.DateReceived == this.selectedDate)[0];\r\n    // this.dataService.appData['backDates'] = [];\r\n    // this.dataService.data.next(this.dataService.appData);\r\n    this.patientService.markAs(this.dataService.appData.tblTopPatientDetails, 'READ');\r\n  }\r\n\r\n  public filterAndUpdateReport() {\r\n    // console.log('selectedDate =>', this.selectedDate);\r\n    this.labReports = this.labReports.filter(ele => ele.DateReceived == this.selectedDate);\r\n    console.log('labReports =>', this.labReports);\r\n\r\n    this.labReportFiltered = this.data.dataSource.filteredData;\r\n    // let analysisTypeId = this.dataService.appData.tblTopPatientDetails['AnalysisTypeId'];\r\n    // let selectedDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedDate && i.AnalysisTypeId == analysisTypeId);\r\n    // this.dataService.appData['backDateToPrint'] = this.labReportDistinct.slice(selectedDateIndex);\r\n\r\n    this.organismList = this.labReportFiltered.filter(ele => {\r\n      return ele.Parameter == 'Organism' && ele.Result != 'See Note' && /_/.test(ele.PanelTestId);\r\n    })\r\n    console.log('organismList =>', this.organismList);\r\n\r\n    this.backDates = this.organismList.slice(this.startOrganismIndex, this.endOrganismIndex);\r\n    // this.backDates = this.organismList.slice(1,5);\r\n    console.log('backDates =>', this.backDates);\r\n\r\n    const topData = this.labReportFiltered.filter(ele => {\r\n      // if (ele.Parameter != 'Comment' && ele.Result == 'See Note') {\r\n      //   ele.Result = ele.TestNote;\r\n      // }\r\n      return this.noneSensitiveElements.includes(ele.Parameter);\r\n    })\r\n\r\n    const sortedTopData = [...topData].sort((a, b) => {\r\n      const indexA = this.noneSensitiveElements.indexOf(a.Parameter);\r\n      const indexB = this.noneSensitiveElements.indexOf(b.Parameter);\r\n      return indexA - indexB;\r\n    });\r\n    console.log('sortedTopData =>', sortedTopData);\r\n\r\n    const topNoneSensitiveData = [], bottomNoneSensitiveData = [], othersNoneSensitiveData = [];\r\n    let middleNoneSensitiveData = [];\r\n    sortedTopData.forEach(ele => {\r\n      if (this.topNoneSensitiveElements.includes(ele.Parameter)) {\r\n        topNoneSensitiveData.push(ele);\r\n      } else if (this.middleNoneSensitiveElements.includes(ele.Parameter)) {\r\n        middleNoneSensitiveData.push(ele);\r\n      } else if (/_/.test(ele.PanelTestId) && this.bottomNoneSensitiveElements.includes(ele.Parameter)) {\r\n        bottomNoneSensitiveData.push(ele);\r\n      } else {\r\n        othersNoneSensitiveData.push(ele);\r\n      }\r\n    })\r\n\r\n    const indexedMiddleNoneSensitiveData = [];\r\n\r\n    middleNoneSensitiveData.forEach(ele => {\r\n      const id = ele.PanelTestId.split('_')[1];\r\n      if (ele.Parameter == 'Media Plated') {\r\n        indexedMiddleNoneSensitiveData.push(ele);\r\n        middleNoneSensitiveData.forEach(subEle => {\r\n          const subId = subEle.PanelTestId.split('_')[1];\r\n          if (ele.Parameter != subEle.Parameter && id == subId) {\r\n            indexedMiddleNoneSensitiveData.push(subEle);\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    middleNoneSensitiveData = indexedMiddleNoneSensitiveData;\r\n\r\n    // console.log('topNoneSensitiveData =>', topNoneSensitiveData);\r\n    // console.log('middleNoneSensitiveData =>', middleNoneSensitiveData);\r\n    // console.log('bottomNoneSensitiveData =>', bottomNoneSensitiveData);\r\n\r\n    this.noneSensitivityList = topNoneSensitiveData.concat(middleNoneSensitiveData); // .concat(othersNoneSensitiveData);\r\n    // console.log('noneSensitivityList =>', this.noneSensitivityList);\r\n\r\n    const indexedBottomNoneSensitiveData = []\r\n\r\n    bottomNoneSensitiveData.forEach(ele => {\r\n      const id = ele.PanelTestId.split('_')[1];\r\n      if (ele.Parameter == 'Organism') {\r\n        indexedBottomNoneSensitiveData.push(ele);\r\n        bottomNoneSensitiveData.forEach(subEle => {\r\n          const subId = subEle.PanelTestId.split('_')[1];\r\n          if (ele.Parameter != subEle.Parameter && id == subId) {\r\n            indexedBottomNoneSensitiveData.push(subEle);\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // this.bottomNoneSensitivityList = indexedBottomNoneSensitiveData;\r\n    this.bottomNoneSensitivityList = indexedBottomNoneSensitiveData.map(ele => {\r\n      if (ele.Parameter == 'Comment') {\r\n        if (ele.Result == 'See Note' && ele.TestNote) {\r\n          ele.displayNote = ele.TestNote;\r\n        } else if (ele.Result != 'See Note' && ele.TestNote) {\r\n          ele.displayNote = ele.Result + '<br/>' + ele.TestNote;\r\n        } else {\r\n          ele.displayNote = ele.Result;\r\n        }\r\n      } else {\r\n        if (ele.TestNote) {\r\n          ele.displayNote = ele.TestNote;\r\n        } else {\r\n          ele.displayNote = ele.Result;\r\n        }\r\n      }\r\n      return ele;\r\n    })\r\n    console.log('bottomNoneSensitivityList =>', this.bottomNoneSensitivityList);\r\n\r\n    this.sensitivityList = this.labReportFiltered.filter(ele => {\r\n      return !this.noneSensitiveElements.includes(ele.Parameter) && /_/.test(ele.PanelTestId);\r\n    })\r\n    // Removing duplicates\r\n    this.sensitivityList = this.sensitivityList.filter((obj, index) => {\r\n      return index === this.sensitivityList.findIndex(o => obj.Parameter === o.Parameter);\r\n    });\r\n    console.log('sensitivityList =>', this.sensitivityList);\r\n\r\n    this.labReportFiltered = this.sensitivityList;\r\n\r\n    this.labReportFiltered.forEach((element) => {\r\n      // this.organismList.forEach((subEle, subIndx) => {\r\n      this.backDates.forEach((subEle, subIndx) => {\r\n        // let nextDateData = this.labReportFilterByAnalysisType.find(x => x.DateReceived == subEle.DateReceived && x.Parameter == element.Parameter);\r\n        const nextOrganism = this.labReports.find(x => x.Parameter == element.Parameter && x.PanelTestId.split('_')[1] == subEle.PanelTestId.split('_')[1]);\r\n        if (nextOrganism != undefined) {\r\n          element['backDate' + subIndx] = nextOrganism; // element; // this.organismList[subIndx];\r\n          element['backDate' + subIndx + '_Result'] = nextOrganism[\"Result\"] ? nextOrganism[\"Result\"] : \"--\";\r\n          element['backDate' + subIndx + '_Parameter'] = nextOrganism[\"Parameter\"];\r\n          element['backDate' + subIndx + '_TestNote'] = nextOrganism[\"TestNote\"];\r\n          element['backDate' + subIndx + '_PanelTestId'] = nextOrganism[\"PanelTestId\"];\r\n          element['backDate' + subIndx + '_OrganismName'] = nextOrganism[\"Parameter\"];\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource<any>(this.labReportFiltered);\r\n    // console.log('**********labReportFiltered ************', this.labReportFiltered);\r\n  }\r\n\r\n  public prevResult() {\r\n    if (this.startOrganismIndex == 0) return;\r\n    this.startOrganismIndex = this.startOrganismIndex - 1;\r\n    this.endOrganismIndex = this.endOrganismIndex - 1;\r\n    this.dataSource.data.forEach((ele) => {\r\n      for (let i = 0; i < 4; i++) {\r\n        ele['backDate' + i + '_Result'] = null;\r\n      }\r\n      // ele.backDate0_Result = null;\r\n      // ele.backDate1_Result = null;\r\n      // ele.backDate2_Result = null;\r\n      // ele.backDate3_Result = null;\r\n    });\r\n\r\n    // this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.selectedBackDate = this.selectedBackDateIndex == 0 ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex - 1].DateReceived;\r\n    // this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n    this.filterAndUpdateReport();\r\n  }\r\n\r\n  public nextResult() {\r\n    if (this.endOrganismIndex <= 4) return;\r\n    this.startOrganismIndex = this.startOrganismIndex + 1;\r\n    this.endOrganismIndex = this.endOrganismIndex + 1;\r\n    this.dataSource.data.forEach((ele) => {\r\n      for (let i = 0; i < 4; i++) {\r\n        ele['backDate' + i + '_Result'] = null;\r\n      }\r\n      // ele.backDate0_Result = null;\r\n      // ele.backDate1_Result = null;\r\n      // ele.backDate2_Result = null;\r\n      // ele.backDate3_Result = null;\r\n    });\r\n\r\n    // this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.selectedBackDate = this.selectedBackDateIndex == (this.labReportDistinct.length - 1) ? this.selectedBackDate : this.labReportDistinct[this.selectedBackDateIndex + 1].DateReceived;\r\n    // this.selectedBackDateIndex = this.labReportDistinct.findIndex(i => i.DateReceived === this.selectedBackDate);\r\n    // this.backDates = this.labReportDistinct.slice(this.selectedBackDateIndex);\r\n\r\n    this.filterAndUpdateReport();\r\n  }\r\n}\r\n","<section>\r\n    <!-- <article>\r\n        <div class=\"head1\" style=\"display: inline-block; margin: 14px 14px 14px 0px;\">\r\n            {{labelService.dsAnaysisResultsScreen. AvailableResults}}\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n            <mat-select [(value)]=\"selectedDate\" (selectionChange)=\"selectNote($event)\">\r\n                <mat-option *ngFor=\"let dateObj of labReportDistinct\" [value]=\"dateObj.DateReceived\">\r\n                    {{dateObj.DateReceived}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </article> -->\r\n\r\n    <article>\r\n        <h3 class=\"hl-head\" *ngIf=\"noneSensitivityList.length>0\"> {{noneSensitivityList[0].AnalysisTypeName}} </h3>\r\n        <div class=\"wz-content\">\r\n            <!-- <ng-container *ngFor=\"let item of noneSensitivityList\">\r\n                <p *ngIf=\"item.Result == 'See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n                <p *ngIf=\"item.Result != 'See Note'\">\r\n                    <strong> {{item.Parameter}} Note: </strong>\r\n                    <span> {{item.Result}}</span>\r\n                </p>\r\n            </ng-container> -->\r\n            <ng-container *ngFor=\"let item of noneSensitivityList\">\r\n                <p *ngIf=\"item.Result || item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span *ngIf=\"item.Result\">\r\n                        <span *ngIf=\"item.Result === 'See Note' && item.TestNote; else showResult\">\r\n                            {{item.TestNote}}\r\n                        </span>\r\n                        <ng-template #showResult>{{item.Result}}</ng-template>\r\n                    </span>\r\n                </p>\r\n                <!-- <p *ngIf=\"item.Result == 'See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n                <p *ngIf=\"item.Result != 'See Note'\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.Result}}</span>\r\n                </p> -->\r\n                <p *ngIf=\"item.Result !== 'See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}} Note: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n            </ng-container>\r\n            <div *ngFor=\"let item of bottomNoneSensitivityList\"\r\n                [ngClass]=\"{'top-border': bottomNoneSensitivityList.length>0 && item.Parameter === 'Organism'}\">\r\n                <p>\r\n                    <strong>\r\n                        {{item.Parameter}}\r\n                        <span *ngIf=\"item.TestNote && item.Parameter !=='Comment'\">Note</span>:\r\n                    </strong>\r\n                    <span [innerHTML]=\"item.displayNote\"></span>\r\n                </p>\r\n                <!-- <p *ngIf=\"item.Parameter !='Comment'\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.Result}}</span>\r\n                </p>\r\n                <p *ngIf=\"item.Parameter !='Comment' && item.TestNote\">\r\n                    <strong> {{item.Parameter}} Note: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n                <p *ngIf=\"item.Parameter =='Comment' && item.Result=='See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.TestNote}}</span>\r\n                </p>\r\n                <p *ngIf=\"item.Parameter =='Comment' && item.Result !='See Note' && item.TestNote\">\r\n                    <strong> {{item.Parameter}}: </strong>\r\n                    <span> {{item.Result}} <br> {{item.TestNote}}</span>\r\n                </p> -->\r\n            </div>\r\n        </div>\r\n    </article>\r\n</section>\r\n\r\n<div class=\"temp1 wz-table\" *ngIf=\"labReportFiltered.length>0\">\r\n    <table mat-table [dataSource]=\"dataSource\" summary=\"\">\r\n        <ng-container matColumnDef=\"Sensitivity\">\r\n            <th style=\"min-width: 175px;\" mat-header-cell *matHeaderCellDef>\r\n                {{labelService.dsAnaysisResultsScreen.Sensitivity}}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <div>\r\n                    <p style=\"width: 165px;\">\r\n                        <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"info-icon\"\r\n                            *ngIf=\"element.Definition\" (click)=\"openTestDefinition(element); $event.stopPropagation()\">\r\n                        <span> {{element.Parameter}} </span>\r\n                    </p>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate1\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"material-symbols-outlined date-navitation-icon\"\r\n                    [ngClass]=\"{'icon-disable' : (startOrganismIndex === 0)}\" (click)=\"prevResult()\" title=\"Previous\">\r\n                    arrow_back </span>\r\n                <span class=\"back-date\" *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    {{backDates[0].Result}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[0] && backDates[0].Result\">\r\n                    <span>\r\n                        {{element.backDate0_Result ? element.backDate0_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate2\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date\" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    {{backDates[1].Result}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p class=\"back-date\" *ngIf=\"backDates[1] && backDates[1].Result\">\r\n                    <span>\r\n                        {{element.backDate1_Result ? element.backDate1_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate3\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date\" *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    {{backDates[2].Result}}\r\n                </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[2] && backDates[2].Result\">\r\n                    <span>\r\n                        {{element.backDate2_Result ? element.backDate2_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"prevDate4\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <span class=\"back-date\" *ngIf=\"backDates[3] && backDates[3].Result\">\r\n                    {{backDates[3].Result}}\r\n                </span>\r\n                <span class=\"material-symbols-outlined date-navitation-icon nextBtn\"\r\n                    [ngClass]=\"{'icon-disable' : (endOrganismIndex <= 4)}\" (click)=\"nextResult()\" title=\"Next\">\r\n                    arrow_forward </span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <p *ngIf=\"backDates[3] && backDates[3].Result\">\r\n                    <span>\r\n                        {{element.backDate3_Result ? element.backDate3_Result : '--'}}\r\n                    </span>\r\n                </p>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\">\r\n        </tr>\r\n    </table>\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService, PatientService, CommonService } from '../../../../services';\r\n@Component({\r\n  selector: 'app-accession-template-13',\r\n  templateUrl: './accession-template-13.component.html',\r\n  styleUrls: ['./accession-template-13.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class AccessionTemplate13Component implements OnInit {\r\n\r\n  displayedColumns = [\"Parameter\", 'date1', \"Units\", \"Range\", \"GraphResult\"];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public expandedElement: any;\r\n  // public mdfound: boolean = false;\r\n  // public mifound: boolean = false;\r\n  // public ccfound: boolean = false;\r\n  selectedLatestDate = null;\r\n  public patientService: any = {}\r\n  showMore1 = false;\r\n  public testNoteList: any[] = [];\r\n  constructor(public labelService: LabelService, public ptService: PatientService, public commonService: CommonService,) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data;\r\n    this.testNoteList = this.patientService?.dataSource.data.filter(ele => {\r\n      if (ele.TestNote) {\r\n        return ele;\r\n      }\r\n    })\r\n    console.log('testNoteList =>', this.testNoteList);\r\n  }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public selectedRow(row) {\r\n    this.expandedElement = row;\r\n    // const filterData = JSON.parse(JSON.stringify(this.patientService.orgDataSet));\r\n    this.patientService.selectedTestName = row.Parameter;\r\n  }\r\n\r\n}\r\n","<div class=\"pagefont\" *ngIf=\"testNoteList?.length>0\">\r\n  <h3 class=\"note-header\"> {{testNoteList[0].AnalysisTypeName}}</h3>\r\n  <section class=\"text-block\" style=\"width:100%\">\r\n    <ng-container *ngFor=\"let data of testNoteList\">\r\n      <div class=\"col-12\">\r\n        <!-- <h5 style=\"font-weight: bold;\"> {{data.Parameter}} </h5> -->\r\n        <p><strong> {{data.Parameter}} </strong></p>\r\n        <p> {{data.Result}} </p>\r\n        <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n      </div>\r\n    </ng-container>\r\n    <div style=\"padding-left: 14px;\" *ngIf=\"testNoteList?.length>0 && testNoteList[0].PanelNote\">\r\n      <h5 class=\"note-head\"> Panel Notes: </h5>\r\n      <p [innerHTML]=\"commonService.getResultText(testNoteList[0].Result, testNoteList[0].PanelNote)\"></p>\r\n    </div>\r\n  </section>\r\n</div>\r\n<div class=\"d-flex justify-content-center lstrow\"\r\n  *ngIf=\"patientService?.dataSourceVS2 !== null && patientService.dataSourceVS2?.length > 0 && patientService.categoryName.toLocaleLowerCase() === 'vetscan vs2'\">\r\n  <span *ngFor=\"let element of patientService?.dataSourceVS2\">{{ element.Parameter }} - {{ element.Result }}</span>\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { LabelService, PatientService, CommonService } from '../../../../services';\r\n@Component({\r\n  selector: 'app-accession-template-ten',\r\n  templateUrl: './accession-template-ten.component.html',\r\n  styleUrls: ['./accession-template-ten.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class AccessionTemplateTenComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Parameter\", 'date1', \"Units\", \"Range\", \"GraphResult\"];\r\n  @Input() selectedDate: string;\r\n  @Input() data: any;\r\n  public expandedElement: any;\r\n  public mdfound = false;\r\n  public mifound = false;\r\n  public ccfound = false;\r\n  selectedLatestDate = null;\r\n  public patientService: any = {}\r\n  showMore1 = false;\r\n  public testNoteList: any[] = [];\r\n\r\n  constructor(\r\n    public labelService: LabelService,\r\n    public ptService: PatientService,\r\n    public commonService: CommonService,) { }\r\n\r\n  ngOnInit() {\r\n    this.patientService = this.data\r\n    // console.log('PatientService.dataSource from temp 10 =>', this.patientService.dataSource.data);\r\n    this.testNoteList = this.patientService?.dataSource.data.filter(ele => {\r\n      if (ele.TestNote) {\r\n        return ele;\r\n      }\r\n    })\r\n    console.log('testNoteList =>', this.testNoteList);\r\n  }\r\n\r\n  public replaceSpecialChar(name) {\r\n    return name.replace(\"%\", \"pc\").replace(\"#\", \"hs\").replace(\".\", \"dt\").replace(\"(\", \"bo\").replace(\")\", \"bc\");\r\n  }\r\n\r\n  public isTextVisible(row) {\r\n    return (row.Result != null && row.Result != \"\" && isNaN(parseFloat(row.Result)));\r\n  }\r\n\r\n  public selectedRow(row) {\r\n    this.expandedElement = row;\r\n    // const filterData = JSON.parse(JSON.stringify(this.patientService.orgDataSet));\r\n    this.patientService.selectedTestName = row.Parameter;\r\n  }\r\n\r\n  public getTranslation(val) {\r\n    let rtnValue = val;\r\n    if (val != null && val != \"\") {\r\n      switch (val.toLowerCase()) {\r\n        case \"low\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Low;\r\n          break;\r\n        case \"high\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.High;\r\n          break\r\n        case \"out\":\r\n          rtnValue = this.labelService.dsAnaysisResultsScreen.Out;\r\n          break\r\n      }\r\n    }\r\n    return rtnValue;\r\n  }\r\n\r\n  public isNumber(val) {\r\n    return typeof (val);\r\n  }\r\n\r\n  rangeCheck(elm) {\r\n    if (elm.MinRange || elm.MaxRange) return true;\r\n    if (elm.MinRange === 0 || elm.MaxRange === 0) return true;\r\n    return false;\r\n  }\r\n\r\n}\r\n","<div class=\"accesspart accpart\" style=\"width: 100%;\">\r\n  <table class=\"sticky_table\" summary=\"\" mat-table [dataSource]=\"patientService?.dataSource\" multiTemplateDataRows>\r\n\r\n    <ng-container matColumnDef=\"Parameter\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Test}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div class=\"d-block align-items-center\">\r\n          <img src=\"../../../../assets/img/info-icon.svg\" [matTooltip]=\"labelService.dsAnaysisResultsScreen.TestDefinition\" [matTooltipPosition]=\"'above'\"  class=\"test_info_icon pl-1\" alt=\"\"\r\n            *ngIf=\"(element.Definition !== null && element.Definition !== '')\"\r\n            (click)=\"ptService.showDescription(labelService.dsAnaysisResultsScreen.TestDefinition, element, labelService.dsAnaysisResultsScreen.Dismiss); $event.stopPropagation()\">\r\n          <strong class=\"headtxt {{ patientService?.dataSource.data?.length !== 1 ? 'flt-right': 'flt-lft' }}\">\r\n            {{element.Parameter }}\r\n          </strong>\r\n          <!-- ---mobile responsive-->\r\n          <!-- <div class=\"acc-temp-one\">\r\n            <span *ngIf=\"element.MinRange > 0 || element.MaxRange > 0\">{{ element.MinRange }}-{{ element.MaxRange\r\n              }}</span>\r\n            <span>{{ element.Units }}</span>\r\n          </div> -->\r\n          <!-----mobile responsive -->\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Range\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"dref\"> {{labelService.dsAnaysisResultsScreen.RefRange}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"dref text-lighter\">\r\n        <div *ngIf=\"element.AnalyzerName !== 'Ref Lab';else refLabRange\">\r\n          <span\r\n            *ngIf=\"element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null);else generalContent\">\r\n            <span *ngIf=\"element.MinRange === null\"> {{ '<'+element.MaxRange }} </span>\r\n                <span *ngIf=\"element.MaxRange === null\">\r\n                  {{ '>'+element. MinRange }}\r\n                </span>\r\n            </span>\r\n            <ng-template #generalContent>\r\n              <span *ngIf=\"element.MinRange !== null && element.MaxRange !== null\">\r\n              <span *ngIf=\"element.MinRange !== null\">{{element.MinRange}}</span>-<span *ngIf=\"element.MaxRange !== null\">{{element.MaxRange}}</span>\r\n            </span>\r\n            </ng-template>\r\n        </div>\r\n        <ng-template #refLabRange>\r\n          {{element.TestResultRanges}}\r\n        </ng-template>\r\n      </td>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Units\">\r\n      <th mat-header-cell *matHeaderCellDef class=\"units\"> {{labelService.dsAnaysisResultsScreen.Units}} </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"units text-lighter\"> {{ element.Units }} </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <img src=\"../../../../assets/img/graph1.PNG\" alt=\"\" width=\"160px\">   </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"GraphResult\">\r\n      <th mat-header-cell *matHeaderCellDef> {{labelService.dsAnaysisResultsScreen.Graph}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n\r\n        <div class=\"d-flex  align-items-center justify-content-start align-indicator\" id=\"result-block\">\r\n\r\n          <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n            *ngIf=\"element.Indicator !== null && element.Indicator !== '' && element.GraphResult !== null && ((element.Parameter && element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null)) || (element.Result && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 )));else resultBlock\">\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n            <mat-slider mode=\"determinate\" class=\"nothumb\" [max]=\"0\"></mat-slider>\r\n          </span>\r\n          <ng-template #resultBlock>\r\n            <span class=\"d-flex  align-items-center graph-wrapper justify-content-start\"\r\n              *ngIf='element.Indicator !== null && element.Indicator !== \"\" && element.GraphResult !== null'>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': !(element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out'))}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'Low' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'Low' || (element.Section === 'A' && element.Indicator === 'Out')  ? element.GraphResult : (element.Indicator !== '' ? '100' : '0')\">\r\n              </mat-slider>\r\n              <mat-slider\r\n                [ngClass]=\"{'nothumb': element.Indicator !== 'In Range' || (element.Section === 'A' && element.Indicator === 'Out')}\"\r\n                mode=\"determinate\" [max]=\"element.Indicator !== 'In Range' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'In Range' ? element.GraphResult : (element.Indicator === 'High' || (element.Section === 'C' && element.Indicator === 'Out') ? '100' : '0') \">\r\n              </mat-slider>\r\n              <mat-slider mode=\"determinate\"\r\n                [ngClass]=\"{'nothumb': (element.Indicator !== 'High' &&  element.Indicator !== 'Out')  || (element.Section === 'A' && element.Indicator === 'Out') }\"\r\n                [max]=\"element.Indicator !== 'High' &&  element.Indicator !== 'Out' ? 100 : 115\"\r\n                [value]=\"element.Indicator === 'High' || element.Indicator === 'Out' ? element.GraphResult : '0'\">\r\n              </mat-slider>\r\n            </span>\r\n          </ng-template>\r\n\r\n          <span\r\n            *ngIf=\"rangeCheck(element) && element.Indicator !== '' && (element.Indicator === 'High' || element.Indicator === 'Low' || element.Indicator === 'Out') && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\">{{getTranslation(element.Indicator)}}</span>\r\n          <span\r\n            *ngIf=\"element.Result && (element.AnalyzerName !== 'Ref Lab' || (element.Parameter.trim() === 'GGT' && (element.MinRange === null || element.MaxRange === null))) && (element.AnalyzerName !== 'Ref Lab' && (element.Result.indexOf('>') !== -1 || element.Result.indexOf('<') !== -1 ))\"\r\n            class=\"clsRed indicator ml-1 no-underline\"> Out </span>\r\n          <span\r\n            *ngIf=\"element.Indicator !== 'High' && element.Indicator !== 'Low' && element.Indicator !== 'Out' && (element.Result.indexOf('>') === -1 && element.Result.indexOf('<') === -1 )\"\r\n            class=\"clsRed indicator ml-1\"> &nbsp;</span>\r\n\r\n          <span class=\"w-100 d-flex  align-items-center graph-wrapper\"\r\n            *ngIf='element.Indicator === null || element.Indicator === \"\" '>\r\n            {{ element.GraphResult }}\r\n          </span>\r\n        </div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date1\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.imageObject[0].title }}</span>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n        <span style=\"font-weight: bolder;\">\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date2\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[1]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate2_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[1] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate2_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date3\">\r\n      <th mat-header-cell *matHeaderCellDef> <span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[2]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate3_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[2] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate3_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date4\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{ patientService.backdDteOfSelectedLatestDate[3]\r\n          }}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.DynamicDate4_Result\">\r\n        <span *ngIf=\"patientService.backdDteOfSelectedLatestDate[3] !== undefined\">\r\n          {{ptService.getResultFormated(element.DynamicDate4_Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Result\">\r\n      <th mat-header-cell *matHeaderCellDef><span class=\"date_block\"> {{selectedDate}}</span> </th>\r\n      <td mat-cell *matCellDef=\"let element\" [title]=\"element.Result\">\r\n        <span *ngIf=\"selectedDate !== undefined\" class=\"pink\" style=\"font-weight: bolder;\" \r\n          [ngClass]=\"{'clsGreen': ((element.Indicator==='' && element.Result !== 'NEG') || element.Indicator === 'In Range'), 'clsRed': (element.Indicator !== '' && element.Indicator !== 'In Range') || element.Result === 'NEG'}\">\r\n          {{ptService.getResultFormated(element.Result)}}\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: displayedColumns; let i = index;\" class=\"student-element-row\"></tr>\r\n\r\n  </table>\r\n</div>\r\n\r\n<section class=\"text-block\" style=\"width:100%\" *ngIf=\"testNoteList?.length>0\">\r\n  <div *ngFor=\"let data of testNoteList; let i = index\">\r\n    <h5 style=\"font-weight: bold;\"> {{data.Parameter}} </h5>\r\n    <p [innerHTML]=\"commonService.getResultText(data.Result, data.TestNote)\"> </p>\r\n  </div>\r\n</section>\r\n\r\n<div class=\"d-flex justify-content-center lstrow\"\r\n  *ngIf=\"patientService?.dataSourceVS2 !== null && patientService.dataSourceVS2?.length > 0 && patientService.categoryName.toLocaleLowerCase() === 'vetscan vs2'\">\r\n  <span *ngFor=\"let element of patientService?.dataSourceVS2\">{{ element.Parameter }} - {{ element.Result }}</span>\r\n</div>","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maintenance',\r\n  templateUrl: './maintenance.component.html',\r\n  styleUrls: ['./maintenance.component.css']\r\n})\r\nexport class MaintenanceComponent {\r\n\r\n  // constructor() { }\r\n\r\n  // ngOnInit() {\r\n  // }\r\n\r\n}\r\n","<section class=\"m-page\">\r\n    <div class=\"content-box\">\r\n        <img src=\"../../../../assets/img/logo-header@2x.png\" style=\"width:150px ;\" alt=\"\">\r\n        <h1> <span style=\"color:red; font-weight:bold\">Sorry,</span> we're down for maintenance. </h1>\r\n        <p>We'll be back shortly.</p>\r\n    </div>\r\n</section>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonService } from '../../services';\r\nimport { SideFilter } from '../../models/side-filter';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { HeaderService } from '../../services/header.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { PatientService } from '../../services/patient.service';\r\nimport { DashboardScreen, DosScreen } from '../../models/label';\r\nimport { LabelService, DataService, UserService } from '../../services';\r\nimport { SidefilterService } from '../../services/sidefilter.service';\r\nimport { EnmModule } from '../../shared/constants/enum';\r\nimport { SidemenuService } from '../../services/sidemenu.service';\r\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\r\nimport { AlertMessageComponent } from '../../components/alert-message/alert-message.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n// declare const gtag: Function;\r\ndeclare const gtag: (...arg) => void;\r\n@Component({\r\n  selector: 'app-consult-dos',\r\n  templateUrl: './consult-dos.component.html',\r\n  styleUrls: ['./consult-dos.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class ConsultDosComponent implements OnInit, AfterViewInit {\r\n\r\n  public dsDashboardScreen = new DashboardScreen();\r\n  allRowsExpanded = false;\r\n  expandedElement: any;\r\n  isAdvSearched = false;\r\n  isNotificationSelected = false;\r\n  recordCount = 0;\r\n  selectedBusinessId = (localStorage.businessGuid != undefined && localStorage.businessGuid != null && localStorage.businessGuid != \"\" ? parseInt(localStorage.businessGuid) : 0);\r\n  filter: SideFilter;\r\n  columnsToDisplay = ['TestName', 'Class', 'SampleRequirements', 'TubeType', 'TAT', 'Price', ' '];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  dsAnalysisSource: any[] = [];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  selectedRow: any;\r\n  selectfalserow: any;\r\n  active = true;\r\n  proActive = false;\r\n  public checked = false;\r\n  filterClassData: any[] = [];\r\n  filterMenuData: any[] = [];\r\n  isChecked = false;\r\n  public CheckForm: UntypedFormGroup = new UntypedFormGroup({});\r\n  checkfavastatus: any;\r\n  favstatus: any;\r\n  defaultValue: any;\r\n  selected: any;\r\n  filtereddata: any[];\r\n  public userId: number = localStorage.authDetails ? JSON.parse(localStorage.authDetails).Id:0;\r\n  dosprice: any;\r\n  public searchValue: string = null;\r\n  public selectedMenu: string = null;\r\n  public selectedCass: string = null;\r\n  public isFavourite = false;\r\n  selectedmenufor: any;\r\n  selectedmenudata: any;\r\n  selectedClassdata: any;\r\n  start = 0;\r\n  limit = 15;\r\n  end: number = this.limit + this.start;\r\n  selectedRowIndex: number = null;\r\n  public label: DosScreen;\r\n  public isViewDOSPrice: boolean;\r\n  private authDetails: any;\r\n  public isBackOfficeUser: boolean;\r\n  searchTextChanged = new Subject<string>();\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public userService: UserService,\r\n    private fb: UntypedFormBuilder,\r\n    public sidemenuService: SidemenuService,\r\n    public headerService: HeaderService,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    private modalService: NgbModal,\r\n    public sidefilterService: SidefilterService) {\r\n    this.authDetails = this.dataService.appData.authDetails;\r\n    this.isBackOfficeUser = this.authDetails['BackOfficeFlag'];\r\n    this.isViewDOSPrice = this.authDetails['IsViewDOSPrice'];\r\n    this.sidemenuService.selectedModuleId = EnmModule.dos;\r\n    this.labelService.getDosScreenLabels();\r\n    this.label = this.labelService.dosScreen;\r\n    this.getDosTestData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('alert-popup') == 'true') {\r\n        this.modalService.open(AlertMessageComponent, {\r\n        centered: true,\r\n        backdrop: 'static',\r\n        scrollable: false\r\n      });\r\n    }\r\n    this.getDosfilter();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const tblContainer = document.getElementById('dos-datatbl');\r\n    tblContainer.style.maxHeight = (window.innerHeight - 200) + 'px';\r\n    this.searchTextChanged.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged()\r\n    ).subscribe(data => {\r\n      this.searchValue = data;\r\n      this.getDosTestData()\r\n    });\r\n  }\r\n\r\n  getQuerytext(event) {\r\n    if (event.target.value[event.target.value.length - 1] != ' ') {\r\n      this.searchTextChanged.next(event.target.value);\r\n    }\r\n  }\r\n\r\n  onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight /**  viewport */\r\n    const tableScrollHeight = e.target.scrollHeight /**  length of all table */\r\n    const scrollLocation = e.target.scrollTop; /**  how far user scrolled */\r\n\r\n    /**  If the user has scrolled within 200px of the bottom, add more data */\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (scrollLocation > limit) {\r\n      const data = this.getTableData(this.start, this.end);\r\n      this.dataSource.data = this.dataSource.data.concat(data);\r\n      this.updateIndex();\r\n    }\r\n  }\r\n\r\n  public getTableData(start, end) {\r\n    return this.originData.filter((value, index) => index >= start && index < end);\r\n  }\r\n\r\n  public updateIndex() {\r\n    this.start = this.end;\r\n    this.end = this.limit + this.start;\r\n  }\r\n\r\n  public onDataSort() {\r\n    const scrollabe = document.getElementById('dos-datatbl');\r\n    scrollabe.scrollTop = 0;\r\n  }\r\n\r\n  public bindDataSource() {\r\n    this.dataSource = new MatTableDataSource<any>(this.originData);\r\n    this.updateIndex();\r\n    this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.recordCount = this.dataSource.data.length;\r\n    if (this.recordCount > 0 && this.isNotificationSelected) {\r\n      this.allRowsExpanded = true;\r\n      this.isNotificationSelected = false;\r\n    }\r\n    else {\r\n      this.allRowsExpanded = false;\r\n    }\r\n  }\r\n\r\n  public getDosfilter() {\r\n    this.commonService.GetDOSFilterdetails().subscribe(data => {\r\n      this.filterClassData = data.ResponseData?.Class;\r\n      this.filterMenuData = data.ResponseData.Menu;\r\n    })\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.selected = 'Filter By Class';\r\n    this.selectedMenu = 'Filter By Menu';\r\n    this.isAdvSearched = false;\r\n  }\r\n\r\n  public toggle() {\r\n    this.allRowsExpanded = !this.allRowsExpanded;\r\n    this.expandedElement = null;\r\n  }\r\n\r\n  public setClickedtrueRow(element) {\r\n    this.selectedRow = element;\r\n    this.dataSource.data.forEach(data => {\r\n      if (data.TestId == element.TestId) {\r\n        data.IsFavourite = !data.IsFavourite;\r\n      }\r\n    })\r\n\r\n    const fav = {\r\n      TestId: element.TestId,\r\n      UserGuid: this.dataService.appData.authDetails['UserGuid'],\r\n      IsFavourite: element.IsFavourite\r\n    }\r\n    this.commonService.postFavourite(fav).subscribe({next:() => {\r\n      this.expandedElement = null;\r\n    }})\r\n\r\n  }\r\n\r\n  public searchDosTestData() {\r\n    const dosfields = {\r\n      SearchText: this.searchValue,\r\n      IsOrder: false,\r\n      UserGuid: this.headerService.loginUserGuid,\r\n    }\r\n    this.commonService.GetDOSTestdata(dosfields).subscribe(data => {\r\n      this.originData = data.ResponseData;\r\n      this.bindDataSource();\r\n    }, err => {\r\n      console.log(JSON.stringify(err));\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n\r\n  }\r\n\r\n  public getDosTestData() {\r\n    const dosfields = {\r\n      IsOrder: false,\r\n      UserGuid: this.authDetails['UserGuid'],\r\n      SearchText: this.searchValue,\r\n      Menu: this.selectedMenu,\r\n      ClassName: this.selectedCass,\r\n      IsFavourite: this.isFavourite\r\n    }\r\n\r\n    this.commonService.GetDOSTestdata(dosfields).subscribe(data => {\r\n      this.originData = data.ResponseData;\r\n      this.bindDataSource();\r\n    });\r\n\r\n  }\r\n\r\n  public onFilterChange(selectedField, event) {\r\n    if (selectedField == 'search') {\r\n      this.selectedMenu = null;\r\n      this.selectedCass = null;\r\n      this.isFavourite = false;\r\n    }\r\n    if (selectedField == 'menu') {\r\n      this.selectedMenu = event.value;\r\n    }\r\n    if (selectedField == \"class\") {\r\n      this.selectedCass = event.value;\r\n    }\r\n    if (selectedField == \"favorites\") {\r\n      this.isFavourite = event.checked;\r\n    }\r\n    this.getDosTestData();\r\n  }\r\n\r\n  public clraeAll() {\r\n    this.searchValue = null\r\n    this.selectedMenu = null;\r\n    this.selectedCass = null;\r\n    this.isFavourite = false;\r\n    this.getDosTestData();\r\n  }\r\n\r\n  public expandCard(ele) {\r\n    this.expandedElement = this.expandedElement === ele ? null : ele\r\n    gtag('event', 'Directory_of_Services', {\r\n      Total_Services_Visited: '',\r\n      Total_Unique_Services_Clicked: '',\r\n      Service_Name: ele.TestName,\r\n      Service_Class: ele.Class,\r\n      Sample_Requirements: ele.SampleRequirements,\r\n      Tube_Type: ele.TubeType,\r\n      TAT: ele['TAT'],\r\n      Price: ele.Price,\r\n      Component: ele.Component,\r\n      Notes: ele.Notes,\r\n      Methodology: ele.Methodologies,\r\n      Lab: ele.LabName,\r\n    })\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n\r\n    <div>\r\n      <app-header></app-header>\r\n    </div>\r\n\r\n    <!-- Page Title -->\r\n    <section class=\"title-container\" *ngIf=\"!isBackOfficeUser\">\r\n      <h5> <span data-testid=\"dos-title\" class=\"page-title\">{{label.DirectoryOfServices}}</span> </h5>\r\n    </section>\r\n    <!-- Page Title end -->\r\n\r\n    <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n      <mat-drawer #drawer class=\"example-sidenav sidefilter right-filter\" mode=\"over\" position=\"end\">\r\n      </mat-drawer>\r\n\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n        <!-- <div class=\"left-block\"> -->\r\n        <mat-card class=\"p-0\">\r\n          <div class=\"mt-0\">\r\n            <h5 class=\"bko-page-title\" *ngIf=\"isBackOfficeUser\">\r\n              <p>{{label.DirectoryOfServices}}</p>\r\n            </h5>\r\n            <!-- Filter Start -->\r\n            <section class=\"tbl-filter tblpart d-flex  align-items-center\">\r\n              <div class=\"fprt row m-0 w-100 justify-content-start align-items-center\">\r\n                <div class=\"col-12 col-md-10 pl-0 order-md-1 order-2 \">\r\n                  <div class=\"row m-0 align-items-end\">\r\n                    <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0 srchpart\">\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <span matPrefix (click)=\"searchDosTestData()\" style=\"cursor: pointer;\">\r\n                          <img src=\"../../../../assets/img/search-icon.png\" alt=\"search-icon\">\r\n                        </span>\r\n                        <input type=\"text\" matInput maxlength=\"20\" [(ngModel)]=\"searchValue\" ngDefaultControl placeholder=\"Search\"\r\n                          (keyup)=\"getQuerytext($event)\" />\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-md-3 pr-0\">\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"dotpart\">\r\n                        <span\r\n                          [ngClass]=\"{dotdosskyBlue: selectedMenu === 'Blue',dotdosGreen: selectedMenu === 'Green',dotdosorange: selectedMenu === 'Orange',dotdosequine: selectedMenu === 'Equine',dotdosBlue: selectedMenu === 'AvianExotic',dotdosallother: selectedMenu === 'AllOther'}\"></span>\r\n                        <mat-select #selectedmenu [(value)]=\"selectedMenu\" [placeholder]=\"label.FilterByMenu\"\r\n                          (selectionChange)=\"onFilterChange('menu', $event)\">\r\n                          <mat-option *ngFor=\"let filter of filterMenuData\" [value]=\"filter.Color\">\r\n                            <span\r\n                              [ngClass]=\"{dotdosskyBlue: filter.Color === 'Blue',dotdosGreen: filter.Color === 'Green',dotdosorange: filter.Color === 'Orange',dotdosequine: filter.Color === 'Equine',dotdosBlue: filter.Color === 'AvianExotic',dotdosallother: filter.Color === 'AllOther'}\"></span><span>{{\r\n                              filter.Name }}</span>\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0\">\r\n                      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n                        <mat-select #selectedClass [(value)]=\"selectedCass\" [placeholder]=\"label.FilterByClass\"\r\n                          (selectionChange)=\"onFilterChange('class', $event)\">\r\n                          <mat-option *ngFor=\"let filter of filterClassData\" [value]=\"filter.Id\">{{ filter.Name\r\n                            }}</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\" col-12 mt-2 mt-md-0 col-sm-6 col-md-3 pl-0 pr-sm-3 pr-0 m-fav\">\r\n                      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"isFavourite\" ngDefaultControl [(value)]=\"checked\"\r\n                        (change)=\"onFilterChange('favorites', $event)\"> {{label.Favorites}}</mat-checkbox>\r\n                      <!---for mobile start-->\r\n                      <a class=\"clrall m-clrall\" (click)=\"clraeAll()\">{{label.ClearAll}}</a>\r\n                      <!---for mobile end-->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-12 col-md-2 sprt d-flex justify-content-end order-md-2 order-1\">\r\n\r\n                  <a class=\"clrall\" (click)=\"clraeAll()\">{{label.ClearAll}}</a>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <!-- Filter end -->\r\n\r\n            <div class=\"d-flex justify-content-between my-2 pl-3 pr-3 align-items-center toprow\">\r\n              <span class=\"d-flex align-items-center tube_type_key\">\r\n                <div class=\"tooltip\">\r\n                  <span class=\"tooltext\"> {{label.TubeTypeKey}}</span>\r\n                  <img src=\"../../../assets/img/infos.svg\" alt=\"\" />\r\n                  <div class=\"tooltiptext\">\r\n                    <div class=\"tool_header\">\r\n                      {{label.DirectoryOfServicesSampleKey}}\r\n                    </div>\r\n                    <div class=\"tool_text p-3\">\r\n                      <div class=\" d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot sst\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">SST</span>\r\n                          <span>Serum Separator</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot rrt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">RTT</span>\r\n                          <span>Serum, No Gel</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot ltt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">LTT</span>\r\n                          <span>EDTA Whole Blood</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot btt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">BTT</span>\r\n                          <span>Citrated Blood</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot grntt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">GRNTT</span>\r\n                          <span>Heparinized Blood</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot f\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">F</span>\r\n                          <span>Feces</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"dot u\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">U</span>\r\n                          <span>Urine</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"micro msst\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">M-SST</span>\r\n                          <span>Micro Serum Separator</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"micro mrtt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">M-RTT</span>\r\n                          <span>Micro Serum, No Gel</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"micro mltt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">M-LTT </span>\r\n                          <span>Micro EDTA Whole Blood</span>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-start align-items-center mb-2\">\r\n                        <span class=\"micro mgrntt\"></span>\r\n                        <div class=\"d-flex\">\r\n                          <span class=\"abbre\">M-GRNTT</span>\r\n                          <span>Micro Heparinized Blood (Lithium)</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"p-0 pt-3 cust-postion\">\r\n              <div>\r\n                <div class=\"example-container pt-0\">\r\n                  <div class=\"usermangemt\" id=\"dos-datatbl\" (scroll)=\"onTableScroll($event)\">\r\n                    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"dashboard-table pt-4\"\r\n                      summary=\"\" matSort>\r\n                      <ng-container matColumnDef=\"TestName\">\r\n                        <th mat-header-cell *matHeaderCellDef style=\"padding-left: 20px\" mat-sort-header>\r\n                          {{label.Name}}\r\n                        </th>\r\n                        <td mat-cell id=\"first_block\" *matCellDef=\"let element\" [ngClass]=\"{\r\n                                  dosskyBlue: element.Menu === 'Blue',\r\n                                  dosGreen: element.Menu === 'Green',\r\n                                  dosorange: element.Menu === 'Orange',\r\n                                  dosequine: element.Menu === 'Equine',\r\n                                  dosBlue: element.Menu === 'AvianExotic',\r\n                                  dosallother: element.Menu === 'AllOther'\r\n                                }\">\r\n                          <span class=\"textTtl d-none\">{{label.Name}}</span>\r\n                          <div class=\"d-flex\">\r\n                            <span *ngIf=\"element.IsFavourite === true\"\r\n                              (click)=\"setClickedtrueRow(element); $event.stopPropagation()\"\r\n                              class=\"mr-2 star_wrapper\"><img src=\"../../../assets/img/star.png\" alt=\"star.png\"\r\n                                width=\"18\" /></span>\r\n                            <span *ngIf=\"element.IsFavourite === false\"\r\n                              (click)=\"setClickedtrueRow(element); $event.stopPropagation()\"\r\n                              class=\"mr-2 star_wrapper\"><img src=\"../../../assets/img/unstar.png\" alt=\"unstar.png\"\r\n                                width=\"18\" /></span>\r\n                            <div class=\"d-flex flex-column\">\r\n                              <span>{{ element.TestName }}</span>\r\n                              <div><span class=\"mr-1\">Test Code:</span> {{element.OrderCode}}</div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"Class\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.Class}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.Class}}</span>\r\n                          <span class=\"bluetext\">\r\n                            {{ element.Class }}\r\n                          </span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"SampleRequirements\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.SampleRequirements}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none sample-req-txt\">{{label.SampleRequirements}}</span> <span>{{\r\n                            element.SampleRequirements }}</span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"TubeType\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.TubeType}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.TubeType}}</span>\r\n                          <ng-container *ngFor=\"let tube of element.TubeType\">\r\n                            <div class=\"d-flex flex-column\">\r\n\r\n                              <span class=\"d-flex align-items-center mb-1\">\r\n                                <span [ngClass]=\"{\r\n                                          'dot-sst': tube.code === 'SST',\r\n                                          'dot-rtt': tube.code === 'RTT',\r\n                                          'dot-urine': tube.code === 'Urine',\r\n                                          'dot-btt': tube.code === 'BTT',\r\n                                          'dot-feces': tube.code === 'Feces',\r\n                                          'dot-grntt': tube.code === 'GrnTT',\r\n                                          'dot-ltt': tube.code === 'LTT'\r\n                                        }\"></span>{{ tube.code }}</span>\r\n                            </div>\r\n                          </ng-container>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"TAT\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                          {{label.Tat}}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.Tat}}</span>\r\n                          <span class=\"tat_text\">\r\n                            {{ element.TAT }}</span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"Price\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                          <span *ngIf=\"isViewDOSPrice\"> {{label.Price}} </span>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                          <span class=\"textTtl d-none\">{{label.Price}}</span>\r\n                          <span *ngIf=\"isViewDOSPrice\">\r\n                            {{ element.Price }}\r\n                          </span>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\" \">\r\n                        <th mat-header-cell *matHeaderCellDef><button class=\"closeall\" mat-raised-button\r\n                            (click)=\"toggle()\" [ngClass]=\"{ expandedall: allRowsExpanded }\">\r\n                            <img src=\"../../../assets/img/expandall.png \" alt=\"expandall\" />\r\n                          </button></th>\r\n                        <td mat-cell *matCellDef=\"let element\" id=\"arrow_block\" class=\"down-arrow\">\r\n                          <img src=\"../../../assets/img/down-gray@2x.png\" alt=\"down-gray\" />\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <ng-container matColumnDef=\"expandedDetail\">\r\n                        <td id=\"expanded_td\" mat-cell td *matCellDef=\"let element\"\r\n                          [attr.colspan]=\"columnsToDisplay.length\">\r\n                          <div class=\"example-element-detail\" [@detailExpand]=\"element === expandedElement || allRowsExpanded\r\n                                      ? 'expanded'\r\n                                      : 'collapsed'\r\n                                  \">\r\n                            <div class=\"row py-0 card-block w-100\">\r\n                              <div class=\"d-flex w-100\">\r\n                                <div class=\"w-100\">\r\n                                  <table id=\"inner_table\" [ngClass]=\"{\r\n                                      dosskyBlue: element.Menu === 'Blue',\r\n                                      dosGreen: element.Menu === 'Green',\r\n                                      dosorange: element.Menu === 'Orange',\r\n                                      dosequine: element.Menu === 'Equine',\r\n                                      dosBlue: element.Menu === 'AvianExotic',\r\n                                      dosallother: element.Menu === 'AllOther'\r\n                                    }\" summary=\"\">\r\n                                    <tr style=\"display:none\">\r\n                                      <th></th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>\r\n                                        <div class=\"d-flex pr-3 flex-column two text-left pl-5 comp\">\r\n                                          <strong> {{label.Component}}:</strong>\r\n                                          <span class=\"textTtl d-none\">{{label.Component}}</span>\r\n                                          <span class=\"comp_text desc_text\">\r\n                                            {{ element.Component }}\r\n                                          </span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td>\r\n                                        <div class=\"d-flex pr-3 flex-column three text-left notes_block\">\r\n                                          <strong> {{label.Notes}}:</strong>\r\n                                          <span class=\"textTtl d-none\">{{label.Notes}}</span>\r\n                                          <span class=\"desc_text\">\r\n                                            {{ element.Notes }}\r\n                                          </span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td>\r\n                                        <div class=\"d-flex pr-3 flex-column four text-left\">\r\n                                          <strong> {{label.Methodology}}:</strong>\r\n                                          <span class=\"textTtl d-none\">{{label.Methodology}}</span>\r\n                                          <span class=\"desc_textmethodology\"\r\n                                            *ngFor=\"let meth of element.Methodologies\">{{meth.methodology}}</span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td></td>\r\n                                      <td>\r\n                                        <div class=\"d-flex pr-3 flex-column six text-left\">\r\n                                          <strong> {{label.Lab}}:</strong>\r\n                                          <span class=\"textTtl d-none\">{{label.Lab}}</span>\r\n                                          <span class=\"desc_text\">\r\n                                            {{ element.LabName }}\r\n                                          </span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td></td>\r\n                                      <td></td>\r\n                                    </tr>\r\n                                  </table>\r\n\r\n                                </div>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n\r\n                      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\r\n                      <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay\"\r\n                        class=\"example-element-row pt-5 pb-4\" [ngClass]=\"{\r\n                      dosskyBlue: element.Menu === 'Blue',\r\n                      dosGreen: element.Menu === 'Green',\r\n                      dosorange: element.Menu === 'Orange',\r\n                      dosequine: element.Menu === 'Equine',\r\n                      dosBlue: element.Menu === 'AvianExotic',\r\n                      dosallother: element.Menu === 'AllOther'\r\n                    }\" [class.example-expanded-row]=\"expandedElement === element\" (click)=\"expandCard(element)\"></tr>\r\n                      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n                    </table>\r\n                    <div>\r\n                      <tbody class=\"norecord\" *ngIf=\"dataSource === null || dataSource.data.length === 0\">\r\n                        <tr>\r\n                          <td>{{label.Norecordsfound}}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n    </mat-drawer-container>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n} from \"@angular/core\";\r\nimport { HomePageScreen, SideFilter } from \"../../../models\";\r\nimport {\r\n  CommonService,\r\n  DataService,\r\n  HeaderService,\r\n  LabelService,\r\n  PatientService,\r\n  SidefilterService,\r\n  SidemenuService,\r\n} from \"../../../services\";\r\n\r\n@Component({\r\n  selector: \"app-result-list\",\r\n  templateUrl: \"./result-list.component.html\",\r\n  styleUrls: [\"./result-list.component.css\"],\r\n})\r\nexport class ResultListComponent implements OnInit {\r\n  public patientList: any[] = [];\r\n  allPatientData: any[] = [];\r\n  lastThreeDates: any = [];\r\n  defaultPageNumber = 1;\r\n  private atBottom: boolean = false;\r\n  private stopScrolling: boolean = false;\r\n\r\n  originData: any[] = [];\r\n  filter: SideFilter;\r\n  BusinessGuId: any;\r\n  overflowStates: boolean[] = [];\r\n  public label: HomePageScreen;\r\n\r\n  @ViewChildren(\"textContainer\") textContainers: QueryList<ElementRef>;\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public dataService: DataService,\r\n    public patientService: PatientService,\r\n    public headerService: HeaderService,\r\n    public sidefilterService: SidefilterService,\r\n    public labelService: LabelService,\r\n    public sideMenu: SidemenuService\r\n  ) {\r\n    this.label = this.labelService.dsHomePageScreen;\r\n\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.getHomePageScreenLabel();\r\n    }\r\n    this.filter = new SideFilter();\r\n    this.BusinessGuId = this.dataService.appData.authDetails[\"BusinessGuid\"];\r\n    this.filter.BusinessGuid = this.BusinessGuId;\r\n    this.filter.LanguageId = this.dataService.appData.authDetails[\"LanguageId\"];\r\n    this.filter.UserGuid = this.dataService.appData.authDetails[\"UserGuid\"];\r\n    if (!this.dataService.pageState.dashboard.requestParams) {\r\n      this.dataService.pageState.dashboard.requestParams = this.filter;\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getHomePageScreenLabel();\r\n      });\r\n  }\r\n\r\n  @HostListener(\"scroll\", [\"$event\"])\r\n  onScroll(event) {\r\n    const element = event.target as HTMLElement;\r\n    const currentAtBottom =\r\n      Math.round(element.scrollHeight) - Math.round(element.scrollTop) ===\r\n      Math.round(element.clientHeight);\r\n    console.log(element.scrollHeight, element.scrollTop, element.clientHeight);\r\n    if (this.stopScrolling == false) {\r\n      if (currentAtBottom && !this.atBottom) {\r\n        this.atBottom = true;\r\n        this.onScrollEnd();\r\n      } else if (!currentAtBottom) {\r\n        // Reset the flag if we scroll up\r\n        this.atBottom = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onScrollEnd() {\r\n    console.log(\"Scrolled to the end\");\r\n    // Additional logic when scrolled to end\r\n    this.defaultPageNumber = this.defaultPageNumber + 1;\r\n    this.getPatientResultDetails();\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onResize(event) {\r\n    this.checkOverflow();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\r\n      \"requestParams => \",\r\n      this.dataService.pageState.dashboard.requestParams\r\n    );\r\n    this.getPatientResultDetails();\r\n  }\r\n\r\n  // getOnlyDate(datetime) {\r\n  //   return datetime.split(\" \")[0];\r\n  // }\r\n\r\n  getExactDate(datetime: any) {\r\n    let newDate: any = new Date(datetime.replace(\"T\", \" \"));\r\n    return newDate;\r\n  }\r\n\r\n  // pushOrUpdatePatientResult(obj, dateType) {\r\n  //   let elem = this.patientList.find(\r\n  //     (o) => o.PatientId === obj[\"PatientId\"] && o.dateType == dateType\r\n  //   );\r\n  //   if (elem) {\r\n  //     elem.AnalysisTypeName =\r\n  //       elem.AnalysisTypeName + \",\" + obj[\"AnalysisTypeName\"];\r\n  //   } else {\r\n  //     obj.dateType = dateType;\r\n  //     this.patientList.push(JSON.parse(JSON.stringify(obj)));\r\n  //   }\r\n  // }\r\n\r\n  groupByPatientId(patients) {\r\n    const grouped = {};\r\n    patients.forEach((patient) => {\r\n      const { PatientId } = patient;\r\n      if (!grouped[PatientId]) {\r\n        grouped[PatientId] = [];\r\n      }\r\n      grouped[PatientId].push(patient);\r\n    });\r\n    return Object.values(grouped);\r\n  }\r\n\r\n  groupBy24Hours(patientArray) {\r\n    console.log(patientArray);\r\n    if (patientArray.length > 1) {\r\n      let latestDateTime: Date | undefined,\r\n        secondLatestDate: Date | undefined,\r\n        thirdLatestDate: Date | undefined;\r\n      const sortedList = patientArray.sort(\r\n        (a, b) =>\r\n          new Date(b.DateReceived).getTime() -\r\n          new Date(a.DateReceived).getTime()\r\n      );\r\n      latestDateTime = new Date(sortedList[0].DateReceived);\r\n      secondLatestDate = new Date(latestDateTime);\r\n      thirdLatestDate = new Date(latestDateTime);\r\n\r\n      this.lastThreeDates = [\r\n        latestDateTime.getTime(),\r\n        secondLatestDate.setDate(latestDateTime.getDate() - 1),\r\n        thirdLatestDate.setDate(latestDateTime.getDate() - 2),\r\n      ];\r\n\r\n      const ranges = [\r\n        [this.lastThreeDates[0], this.lastThreeDates[1], 1],\r\n        [this.lastThreeDates[1], this.lastThreeDates[2], 2],\r\n        [this.lastThreeDates[2], 0, 3], // 0 as lower bound for the third range\r\n      ];\r\n\r\n      ranges.forEach(([upper, lower, dateType]) => {\r\n        const filteredData = sortedList.filter((item) => {\r\n          const itemTime = new Date(item.DateReceived).getTime();\r\n          return itemTime <= upper && itemTime > lower;\r\n        });\r\n        filteredData.forEach((elem) => {\r\n          this.pushOrUpdatePatientResult(elem, dateType);\r\n        });\r\n      });\r\n    } else {\r\n      this.pushOrUpdatePatientResult(patientArray[0], 4);\r\n    }\r\n  }\r\n  stopPropagation(event: Event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  pushOrUpdatePatientResult(obj, dateType) {\r\n    let elem = this.patientList.find(\r\n      (o) => o.PatientId === obj[\"PatientId\"] && o.dateType == dateType\r\n    );\r\n    if (elem) {\r\n      elem.AnalysisTypeName =\r\n        elem.AnalysisTypeName + \",\" + obj[\"AnalysisTypeName\"];\r\n    } else {\r\n      obj.dateType = dateType;\r\n      this.patientList.push(JSON.parse(JSON.stringify(obj)));\r\n    }\r\n  }\r\n\r\n  getPatientResultDetails() {\r\n    // debugger\r\n    let reqbody: any;\r\n    const today = new Date();\r\n    console.log(\"todays date\", today);\r\n    const threeDaysBack = new Date();\r\n    threeDaysBack.setDate(today.getDate() - 3);\r\n    console.log(\"threeDaysBack\", threeDaysBack);\r\n    console.log(\"defaultPageNumber\", this.defaultPageNumber);\r\n    reqbody = JSON.parse(\r\n      JSON.stringify(this.dataService.pageState.dashboard.requestParams)\r\n    );\r\n    reqbody.BusinessGuid = this.dataService.appData.authDetails['BusinessGuid'];\r\n    reqbody.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    reqbody.AnalysisTypeId = 0;\r\n    reqbody.AnalysisStatusId = 0;\r\n    reqbody.PageNo = this.defaultPageNumber;\r\n    reqbody.PageSize = 60;\r\n    reqbody.IsApplyFilter = true;\r\n    //reqbody.IsExactFilter = true;\r\n    reqbody.PatientId = null;\r\n    reqbody.ZDXPatientInfoId = 0;\r\n    reqbody.ToDate = this.commonService.formatDate(today, \"1\").split(' ')[0] + ' 23:59:59';\r\n    reqbody.FromDate = this.commonService.formatDate(threeDaysBack, \"3\").split(' ')[0] + ' 00:00:00';\r\n    //delete reqbody.selectedDr;\r\n    //delete reqbody.isSortByLastResultDate;\r\n    this.commonService.getResultList(reqbody).subscribe((data) => {\r\n      let patientDetailsByDate = [];\r\n      this.patientList = [];\r\n      let obj: any = {};\r\n      if (data.ResponseData.DashboardPatientList.length < 60) {\r\n        this.stopScrolling = true\r\n      }\r\n\r\n      if (\r\n        data.ResponseData.DashboardPatientList != undefined ||\r\n        data.ResponseData.DashboardPatientList != null\r\n      ) {\r\n        data.ResponseData.DashboardPatientList.forEach((data) => {\r\n          if (data.Details && data.Details.length > 0) {\r\n            data.Details.forEach((d) => {\r\n              obj = {\r\n                AccessionNumber: data?.AccessionNumber,\r\n                BirthDate: data?.BirthDate,\r\n                BreedName: data?.BreedName,\r\n                Dob: data?.Dob,\r\n                FirstName: data?.FirstName,\r\n                Gender: data?.Gender,\r\n                LastName: data?.LastName,\r\n                OrderNote: data?.OrderNote,\r\n                OrderNumber: data?.OrderNumber,\r\n                OwnerFirstName: data?.OwnerFirstName,\r\n                OwnerLastName: data?.OwnerLastName,\r\n                OwnerName: data?.Owner_Name,\r\n                PatientId: data?.PatientId,\r\n                PatientName: data?.PatientName,\r\n                SpeciesId: data?.SpeciesId,\r\n                SpeciesName: data?.SpeciesName,\r\n                Status: data?.Status,\r\n                ZDXPatientId: data?.ZDXPatientId,\r\n                showmore: false, // added to show more text\r\n                dateType: 1,\r\n              };\r\n              obj = Object.assign(obj, d);\r\n              patientDetailsByDate.push(obj);\r\n              obj = {};\r\n            });\r\n          }\r\n        });\r\n        // console.log(patientDetailsByDate);\r\n\r\n        if (this.allPatientData.length == 0) {\r\n          this.allPatientData = patientDetailsByDate;\r\n        } else {\r\n          this.allPatientData = this.allPatientData.concat(\r\n            patientDetailsByDate\r\n          );\r\n        }\r\n      }\r\n      const filteredArr = this.allPatientData.reduce((acc, current) => {\r\n        const isWithinLastThreeDays = new Date(current.DateReceived) >= threeDaysBack;\r\n\r\n        const x = acc.find(\r\n          (item) =>\r\n            item.PatientId === current.PatientId &&\r\n            item.DateReceivedStr === current.DateReceivedStr &&\r\n            item.AnalysisTypeName === current.AnalysisTypeName\r\n        );\r\n        if (!x && isWithinLastThreeDays) {\r\n          return acc.concat([current]);\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, []);\r\n\r\n      console.log(\"this.allPatientData\", this.allPatientData);\r\n      console.log(\"filteredArr\", filteredArr);\r\n      if (filteredArr && filteredArr.length > 0) {\r\n        const groupedPatients = this.groupByPatientId(filteredArr);\r\n        console.log(groupedPatients);\r\n        for (let pat of groupedPatients) {\r\n          this.groupBy24Hours(pat)\r\n        }\r\n      }\r\n\r\n      // let latestDateTime: Date | undefined,\r\n      //   secondLatestDate: Date | undefined,\r\n      //   thirdLatestDate: Date | undefined;\r\n\r\n      // if (filteredArr.length > 0) {\r\n      //   const sortedData = filteredArr.sort(\r\n      //     (a, b) =>\r\n      //       new Date(b.DateReceived).getTime() -\r\n      //       new Date(a.DateReceived).getTime()\r\n      //   );\r\n\r\n      //   latestDateTime = new Date(sortedData[0].DateReceived);\r\n      //   secondLatestDate = new Date(latestDateTime);\r\n      //   thirdLatestDate = new Date(latestDateTime);\r\n\r\n      //   this.lastThreeDates = [\r\n      //     latestDateTime.getTime(),\r\n      //     secondLatestDate.setDate(latestDateTime.getDate() - 1),\r\n      //     thirdLatestDate.setDate(latestDateTime.getDate() - 2),\r\n      //   ];\r\n\r\n      //   console.log(\r\n      //     \"lastThreeDates==>\",\r\n      //     this.lastThreeDates[0],\r\n      //     this.lastThreeDates[1],\r\n      //     this.lastThreeDates[2]\r\n      //   );\r\n\r\n      //   const ranges = [\r\n      //     [this.lastThreeDates[0], this.lastThreeDates[1], 1],\r\n      //     [this.lastThreeDates[1], this.lastThreeDates[2], 2],\r\n      //     [this.lastThreeDates[2], 0, 3], // 0 as lower bound for the third range\r\n      //   ];\r\n\r\n      //   ranges.forEach(([upper, lower, dateType]) => {\r\n      //     const filteredData = filteredArr.filter((item) => {\r\n      //       const itemTime = new Date(item.DateReceived).getTime();\r\n      //       return itemTime <= upper && itemTime > lower;\r\n      //     });\r\n      //     filteredData.forEach((elem) => {\r\n      //       this.pushOrUpdatePatientResult(elem, dateType);\r\n      //     });\r\n      //   });\r\n\r\n      this.patientList.sort(\r\n        (a, b) =>\r\n          this.getExactDate(b.DateReceived) -\r\n          this.getExactDate(a.DateReceived)\r\n      );\r\n      // }\r\n\r\n      // this.patientList = this.patientList.filter(\r\n      //   (f: any) => this.getExactDate(f.DateReceived) >= threeDaysBack\r\n      // );\r\n\r\n      console.log(this.patientList);\r\n      setTimeout(() => {\r\n        this.checkOverflow();\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  navToPatientInfo(element, rowIndex) {\r\n    this.dataService.appState.selectedResult.element = element;\r\n    // this.expandedElement = rowIndex;\r\n    this.dataService.pageState.dashboard.selectedRow = rowIndex;\r\n    this.dataService.pageState.dashboard.resultsList = this.originData;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.patientService.showPataientInfo(\r\n      element,\r\n      this.headerService.filter,\r\n      this.sidefilterService.filter,\r\n      undefined,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  onPreventClick(event: Event) {\r\n    event.stopPropagation(); // Prevents the click event from propagating to the parent div\r\n    // console.log('Button clicked');\r\n  }\r\n\r\n  toggleText(i: number, event: Event, res: any) {\r\n    event.preventDefault();\r\n    res.showmore = !res.showmore;\r\n  }\r\n\r\n  checkOverflow() {\r\n    this.overflowStates = this.textContainers.toArray().map((container) => {\r\n      const element = container.nativeElement;\r\n      return (\r\n        element.scrollWidth > element.clientWidth ||\r\n        element.scrollHeight > element.clientHeight\r\n      );\r\n    });\r\n  }\r\n}\r\n","<div class=\"home-left\">\r\n  <div class=\"headpart d-flex justify-content-between align-items-center mb-3\">\r\n    <p>\r\n      <b>{{ labelService.dsHomePageScreen.Results }}</b>\r\n    </p>\r\n    <p *ngIf=\"patientList.length != 0\">\r\n      {{ labelService.dsHomePageScreen.Showingresultslast72hours }}\r\n    </p>\r\n  </div>\r\n  <div *ngIf=\"patientList.length == 0\" class=\"box-inner\">\r\n    <span class=\"box-msg\"\r\n      >{{ labelService.dsHomePageScreen.noNewResultMsg }}<span *ngIf=\"commonService.hasDot(labelService.dsHomePageScreen.noNewResultMsg)\">.</span></span>\r\n    <button class=\"clickBtn seeAll\"   (click)=\"sideMenu.goToLink(1)\">\r\n      {{ labelService.dsHomePageScreen.SeeAllResults }}\r\n    </button>\r\n  </div>\r\n  <div\r\n    *ngIf=\"patientList.length != 0\"\r\n    class=\"box-inner\"\r\n    (scroll)=\"onScroll($event)\"\r\n  >\r\n    <div\r\n      *ngFor=\"let result of patientList; let i = index\"\r\n      class=\"box-container\"\r\n      [ngClass]=\"{\r\n        boxRed: result.AnalysisStatusName == 'Canceled',\r\n        boxGreen: result.AnalysisStatusName == 'Completed'\r\n      }\"\r\n      (click)=\"navToPatientInfo(result, 1)\"\r\n    >\r\n      <div class=\"boxOne\">\r\n        <p>{{ result.DateReceivedStr }}</p>\r\n        <p>\r\n          {{ result.FirstName }} {{ result.LastName }}, {{ result.PatientId }}\r\n        </p>\r\n      </div>\r\n      <div class=\"boxTwo\">\r\n        <p [ngClass]=\"{ showHide: !result.showmore }\" #textContainer>\r\n          <span *ngIf=\"overflowStates[i] && result.showmore\"></span>\r\n          {{ result.AnalysisTypeName }}\r\n        </p>\r\n        <p (click)=\"onPreventClick($event)\" style=\"color: blue\">\r\n          <a\r\n            href=\"#\"\r\n            *ngIf=\"overflowStates[i]\"\r\n            (click)=\"toggleText(i, $event, result)\"\r\n            >{{\r\n              result.showmore\r\n                ? labelService.dsHomePageScreen.less\r\n                : labelService.dsHomePageScreen.more\r\n            }}</a\r\n          >\r\n        </p>\r\n      </div>\r\n      <div class=\"decBtn\">\r\n        <button (click)=\"stopPropagation($event)\"\r\n          *ngIf=\"result.AnalysisStatusName != 'Canceled'\"\r\n          [hidden]=\"result.ViewedFlag\"\r\n          style=\"border: 1px solid #f26323; color: #f26323;cursor: default;\"\r\n        >\r\n          {{ labelService.dsHomePageScreen.New }}\r\n        </button>\r\n        <button (click)=\"stopPropagation($event)\"\r\n          *ngIf=\"result.AnalysisStatusName != 'Canceled'\"\r\n          [hidden]=\"!result.ViewedFlag\"\r\n          style=\"border: 1px solid grey; color: grey; cursor: default;\"\r\n        >\r\n          {{ labelService.dsHomePageScreen.Viewed }}\r\n        </button>\r\n        <p\r\n          *ngIf=\"result.AnalysisStatusName == 'Completed'\"\r\n          style=\"color: #24c624 !important\"\r\n        >\r\n          {{ labelService.dsHomePageScreen.Completed }}\r\n        </p>\r\n        <p\r\n          *ngIf=\"result.AnalysisStatusName == 'Canceled'\"\r\n          style=\"color: red !important; margin: 20px\"\r\n        >\r\n          {{ labelService.dsHomePageScreen.Canceled }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <button class=\"clickBtn seeAll\" (click)=\"sideMenu.goToLink(1)\" type=\"button\"> \r\n      {{ labelService.dsHomePageScreen.SeeAllResults }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  CommonService,\r\n  DataService,\r\n  LabelService,\r\n  SidemenuService,\r\n} from \"../../../services\";\r\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { PdfModalComponent } from \"../../../shared/pdf-modal/pdf-modal.component\";\r\nimport { HomePageScreen } from \"src/app/models/label\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n  selector: \"app-consultations\",\r\n  templateUrl: \"./consultations.component.html\",\r\n  styleUrls: [\"./consultations.component.css\"],\r\n})\r\nexport class ConsultationsComponent implements OnInit, AfterViewInit {\r\n  isCompletedConsult: boolean = false;\r\n  specialityList: any = [];\r\n  consultationTypeList: any = [];\r\n  selectedSepecialityId: number = null;\r\n  modeOfEngagementEmail: boolean = false;\r\n  selectedMode: any;\r\n\r\n  appointmentList: any = [];\r\n  reportImage: SafeResourceUrl | null = null;\r\n  pdfUrl: SafeResourceUrl;\r\n  @ViewChild(\"consultationInput\")\r\n  consultationInput: ElementRef<HTMLInputElement>;\r\n  public label: HomePageScreen;\r\n  defaultPageNumber = 1;\r\n  private atBottom: boolean = false;\r\n  consultantTexts: any;\r\n  public isLoadMore: boolean;\r\n\r\n  @HostListener(\"scroll\", [\"$event\"])\r\n  onScroll(event) {\r\n    // console.log(this.isCompletedConsult);\r\n    const element = event.target as HTMLElement;\r\n    const currentAtBottom =\r\n    Math.round(element.scrollTop)>Math.round(element.scrollHeight)-Math.round(element.clientHeight)-100;\r\n      // Math.round(element.scrollHeight) - Math.round(element.scrollTop) == Math.round(element.clientHeight);\r\n    // console.log(Math.round(element.scrollTop)>Math.round(element.scrollHeight)-Math.round(element.clientHeight)-100);\r\n\r\n    if (currentAtBottom && !this.atBottom) {\r\n      this.atBottom = true;\r\n      this.onScrollEnd();\r\n    } else if (!currentAtBottom) {\r\n      this.atBottom = false;\r\n    }\r\n  }\r\n\r\n  onScrollEnd() {\r\n    this.defaultPageNumber = this.defaultPageNumber + 1;\r\n    this.getConsultPatientList(\"1\", \"\");\r\n  }\r\n\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public labelService: LabelService,\r\n    private sidemenuService: SidemenuService,\r\n    public dataService: DataService,\r\n    private modalService: NgbModal\r\n  ) {\r\n\r\n    this.label = this.labelService.dsHomePageScreen;\r\n    if (this.labelService.dsLabelData.length == 0) {\r\n      this.getLabelDetails();\r\n    } else {\r\n      this.labelService.getHomePageScreenLabel();\r\n      this.labelService.bindPatientInfoLabel();\r\n    }\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getHomePageScreenLabel();\r\n        this.labelService.bindPatientInfoLabel();\r\n      });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.selectedMode = null;\r\n    this.modeOfEngagementEmail = false;\r\n    if (this.consultationInput) {\r\n      this.consultationInput.nativeElement.value = \"\";\r\n    }\r\n    this.consultationTypeList = [];\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.consultationTypeList);\r\n    setTimeout(() => {\r\n      this.label = this.labelService.dsHomePageScreen;\r\n    }, 2000);\r\n    this.commonService\r\n      .getSpecialityList(this.labelService.selectedLanguage)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          console.log(res.ResponseData.Speciality);\r\n          this.specialityList = res.ResponseData.Speciality;\r\n        },\r\n        error: (error: any) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    this.getConsultPatientList(\"1\", \"\");\r\n\r\n    setTimeout(() => {\r\n      this.ngAfterViewInit();\r\n    }, 1000);\r\n\r\n    this.getHeaderText()\r\n  }\r\n\r\n  getHeaderText() {\r\n    this.commonService.getConsultationHeaderText(this.labelService.selectedLanguage).subscribe({\r\n      next: (data) => {\r\n        this.consultantTexts = data.ResponseData.find(e => e.Id == environment.zcsResourceId)\r\n        console.log(\"header\", data.ResponseData, this.consultantTexts)\r\n      }\r\n    })\r\n  }\r\n\r\n  getConsultationTypeList(id) {\r\n    this.commonService.getConsultationTypeList(id).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.consultationTypeList = res.ResponseData;\r\n      },\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  onSelectSpeciality(event) {\r\n    this.selectedMode = null;\r\n    this.modeOfEngagementEmail = false;\r\n    this.consultationTypeList = [];\r\n    if (this.consultationInput) {\r\n      this.consultationInput.nativeElement.value = \"\";\r\n    }\r\n    console.log(event.target.value);\r\n    this.selectedSepecialityId = event.target.value;\r\n    this.getConsultationTypeList(event.target.value);\r\n  }\r\n\r\n  onSelectConsultType(event) {\r\n    const MOE = JSON.parse(event.target.value);\r\n    this.modeOfEngagementEmail = MOE.IsEmail;\r\n    this.selectedMode = MOE.Id;\r\n  }\r\n\r\n  letsGo() {\r\n    if (this.selectedSepecialityId == null || this.selectedMode == null) {\r\n      return;\r\n    }\r\n\r\n    if (this.modeOfEngagementEmail == true) {\r\n      const objToSend: any = {};\r\n      const bckBusinessInfo = localStorage.getItem(\"bckBusinessInfo\");\r\n      if (\r\n        bckBusinessInfo != \"null\" &&\r\n        bckBusinessInfo != null &&\r\n        bckBusinessInfo != undefined\r\n      ) {\r\n        const bckData = JSON.parse(bckBusinessInfo);\r\n        objToSend.impersonate = true;\r\n        objToSend.impClinicBussinessGuid = bckData.BusinessGuid;\r\n        objToSend.clinicUsertypeId = 1;\r\n        objToSend.impClinicUserGuid = bckData.UserGuid;\r\n      }\r\n      const queryParams = new URLSearchParams(objToSend).toString();\r\n      console.log(queryParams);\r\n      this.sidemenuService.gotoConsultationEmail(\r\n        this.selectedSepecialityId,\r\n        queryParams\r\n      );\r\n    } else {\r\n      const objToSend: any = {\r\n        resourceGroupId: environment.zcsResourceId,\r\n        selectedSpecialityId: this.selectedSepecialityId,\r\n        selectedMode: this.selectedMode,\r\n        zdxredirectiontoFindconsultation: true,\r\n      };\r\n\r\n      const bckBusinessInfo = localStorage.getItem(\"bckBusinessInfo\");\r\n\r\n      if (\r\n        bckBusinessInfo != \"null\" &&\r\n        bckBusinessInfo != null &&\r\n        bckBusinessInfo != undefined\r\n      ) {\r\n        const bckData = JSON.parse(bckBusinessInfo);\r\n        objToSend.impersonate = true;\r\n        objToSend.impClinicBussinessGuid = bckData.BusinessGuid;\r\n        objToSend.clinicUsertypeId = 1;\r\n        objToSend.impClinicUserGuid = bckData.UserGuid;\r\n      }\r\n\r\n      const queryParams = new URLSearchParams(objToSend).toString();\r\n      console.log(queryParams);\r\n      this.sidemenuService.gotoConsultationAppointment(queryParams);\r\n    }\r\n  }\r\n\r\n  getConsultPatientList(status_type: string, typ: string = \"\") {\r\n    this.isCompletedConsult = status_type == \"1\" ? false : true;\r\n    if (typ == \"pending\") {\r\n      this.appointmentList = [];\r\n      this.defaultPageNumber = 1;\r\n      this.atBottom = true;\r\n    }\r\n    if (status_type === \"2\") {\r\n      this.appointmentList = [];\r\n      this.defaultPageNumber = 1;\r\n      this.atBottom = true;\r\n    }\r\n    let timezoneId = this.dataService.appData.authDetails[\"TimeZoneId\"];\r\n    console.log(timezoneId)\r\n    // if (\r\n    //   this.dataService.appData.userDropDownList != undefined &&\r\n    //   this.dataService.appData.userDropDownList != null\r\n    // ) {\r\n    //   const timezoneObj = this.dataService.appData.userDropDownList.TimeZonesList.find(\r\n    //     (x) =>\r\n    //       x.WebTimeZone != null &&\r\n    //       x.WebTimeZone.toLowerCase().indexOf(\r\n    //         Intl.DateTimeFormat().resolvedOptions().timeZone.toLowerCase()\r\n    //       ) >= 0\r\n    //   );\r\n    //   if (timezoneObj != undefined) {\r\n    //     timezoneId = timezoneObj.Id;\r\n    //   }\r\n    // }\r\n    const payload = {\r\n      BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"],\r\n      UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n      TimeZoneId: timezoneId,\r\n      StatusId: status_type,\r\n      PageNo: this.defaultPageNumber,\r\n      PageSize: 60,\r\n    };\r\n\r\n    this.commonService.GetConsultPatientList(payload).subscribe({\r\n      next: (res: any) => {\r\n        if(!res?.ResponseData?.appointmentrecord?.length)\r\n           this.isLoadMore =false;\r\n        if (this.appointmentList.length != 0) {\r\n          this.appointmentList = this.appointmentList.concat(\r\n            res?.ResponseData?.appointmentrecord\r\n          );\r\n          console.log('concatinated', this.appointmentList)\r\n        } else {\r\n          this.appointmentList = res?.ResponseData?.appointmentrecord;\r\n          console.log('pushed', this.appointmentList)\r\n        }\r\n        // this.appointmentList.sort((a, b) => {\r\n        //   if (status_type != \"1\") {\r\n        //     const dateA = new Date(a.AppointmentDate).getTime();\r\n        //     const dateB = new Date(b.AppointmentDate).getTime();\r\n        //     // First, compare the dates in descending order\r\n        //     if (dateA !== dateB) {\r\n        //       return dateB - dateA;\r\n        //     }\r\n        //   } else {\r\n        //     // If dates are the same, compare the mode\r\n        //     if (a.AppointmentTypeId === 1 && b.AppointmentTypeId === 3)\r\n        //       return -1;\r\n        //     if (a.AppointmentTypeId === 3 && b.AppointmentTypeId === 1)\r\n        //       return 1;\r\n        //     return 0;\r\n        //   }\r\n        // });\r\n\r\n        console.log(\"this.appointmentList==>\", this.appointmentList);\r\n        this.isCompletedConsult = status_type == \"1\" ? false : true;\r\n      },\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  // For Direct Download\r\n  // base64ToPdf(base64String: string, fileName: string) {\r\n  //   const byteCharacters = atob(base64String.split(',')[1]);\r\n  //   const byteNumbers = new Array(byteCharacters.length);\r\n  //   for (let i = 0; i < byteCharacters.length; i++) {\r\n  //     byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n  //   }\r\n  //   const byteArray = new Uint8Array(byteNumbers);\r\n  //   const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n  //   saveAs(blob, fileName);\r\n  // }\r\n\r\n  openPdfModal(base64String: SafeResourceUrl) {\r\n    const modalRef = this.modalService.open(PdfModalComponent, {\r\n      size: \"lg\",\r\n      windowClass: \"my-class\",\r\n    });\r\n    modalRef.componentInstance.pdfBase64 = base64String;\r\n  }\r\n\r\n  getconsultationAppointmentReportView(appointment_id: string) {\r\n    let payload = {\r\n      BusinessGuid: this.dataService.appData.authDetails[\"BusinessGuid\"],\r\n      UserGuid: this.dataService.appData.authDetails[\"UserGuid\"],\r\n      AppointmentId: appointment_id,\r\n    };\r\n\r\n    this.commonService.ConsultationAppointmentReportView(payload).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        // this.base64ToPdf(res?.ResponseData?.ImageBase64, 'output.pdf');\r\n        this.openPdfModal(res?.ResponseData?.ImageBase64);\r\n      },\r\n      error: (error: any) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  NavigatetoFollowUp() {\r\n    const objToSend: any = {};\r\n    const bckBusinessInfo = localStorage.getItem(\"bckBusinessInfo\");\r\n\r\n    if (\r\n      bckBusinessInfo != \"null\" &&\r\n      bckBusinessInfo != null &&\r\n      bckBusinessInfo != undefined\r\n    ) {\r\n      const bckData = JSON.parse(bckBusinessInfo);\r\n      objToSend.impersonate = true;\r\n      objToSend.impClinicBussinessGuid = bckData.BusinessGuid;\r\n      objToSend.clinicUsertypeId = 1;\r\n      objToSend.impClinicUserGuid = bckData.UserGuid;\r\n    }\r\n\r\n    const queryParams = new URLSearchParams(objToSend).toString();\r\n    console.log(queryParams);\r\n    this.sidemenuService.gotoFollowUp(queryParams);\r\n  }\r\n\r\n  seeAllConsultation() {\r\n    console.log(\"xx\");\r\n    const objToSend: any = {};\r\n    const bckBusinessInfo = localStorage.getItem(\"bckBusinessInfo\");\r\n\r\n    if (\r\n      bckBusinessInfo != \"null\" &&\r\n      bckBusinessInfo != null &&\r\n      bckBusinessInfo != undefined\r\n    ) {\r\n      const bckData = JSON.parse(bckBusinessInfo);\r\n      objToSend.impersonate = true;\r\n      objToSend.impClinicBussinessGuid = bckData.BusinessGuid;\r\n      objToSend.clinicUsertypeId = 1;\r\n      objToSend.impClinicUserGuid = bckData.UserGuid;\r\n    }\r\n\r\n    const queryParams = new URLSearchParams(objToSend).toString();\r\n    console.log(queryParams);\r\n    this.sidemenuService.gotoConsultationList(queryParams);\r\n  }\r\n}\r\n","<div class=\"home-right\">\r\n  <div class=\"headpart d-flex justify-content-between align-items-center mb-3\">\r\n    <p>\r\n      <b>{{ label.Consultations }}</b>\r\n    </p>\r\n    <p *ngIf=\"isCompletedConsult\">{{ label.Showingresultslast30days }}</p>\r\n  </div>\r\n  <div class=\"whole-wrapper\">\r\n  <div class=\"first-part\">\r\n    <p>\r\n      <span\r\n        ><img src=\"../../../../assets/img/consultancy.svg\" alt=\"image\"\r\n      /></span>\r\n      <!-- {{label.ZoetisClinicalConsultationServices}} -->\r\n       {{consultantTexts?.ResurceGroupName}}\r\n    </p>\r\n    <!-- <p *ngIf=\"commonService.hasDot(label.consultTopMsg)\"> -->\r\n    <p >  \r\n      {{consultantTexts?.ResourceGroupDescription}}\r\n      <!-- {{label.consultTopMsg}}. -->\r\n    </p>\r\n    <!-- <p *ngIf=\"!commonService.hasDot(label.consultTopMsg)\">\r\n      {{label.consultTopMsg}}\r\n    </p> -->\r\n    <div class=\"dropdown\">\r\n      <select\r\n        name=\"specialty\"\r\n        id=\"specialty\"\r\n        (change)=\"onSelectSpeciality($event)\"\r\n      >\r\n        <option selected value=\"\" hidden>{{ label.Speciality }}</option>\r\n        <option *ngFor=\"let s of specialityList\" value=\"{{ s?.Id }}\">\r\n          {{ s?.SpecialityName }}\r\n        </option>\r\n      </select>\r\n      <select\r\n        *ngIf=\"consultationTypeList.length != 0\"\r\n        name=\"consultation\"\r\n        id=\"consultation\"\r\n        (change)=\"onSelectConsultType($event)\"\r\n      >\r\n        <option selected value=\"\" hidden>{{ label.ConsultationType }}</option>\r\n        <option *ngFor=\"let c of consultationTypeList\" value=\"{{ c | json }}\">\r\n          <span *ngIf=\"c?.ModeOfEngagement=='Schedule Zoom Appointment' && labelService.selectedLanguage==1\">\r\n            {{ c?.ModeOfEngagement }}\r\n          </span>\r\n          <span *ngIf=\"c?.ModeOfEngagement=='Schedule Zoom Appointment' && labelService.selectedLanguage!=1\">\r\n            {{ label.ScheduledAppt }}\r\n          </span>\r\n          <span *ngIf=\"c?.ModeOfEngagement=='Email Response'\">\r\n            {{ labelService.dsPatientInfoScreen.EmailResp }}\r\n          </span>\r\n        </option>\r\n      </select>\r\n      <select\r\n        name=\"consultation\"\r\n        #consultationInput\r\n        id=\"consultation\"\r\n        *ngIf=\"consultationTypeList.length === 0\"\r\n      >\r\n        <option selected value=\"\" hidden>{{ label.ConsultationType }}</option>\r\n      </select>\r\n\r\n      <div class=\"tooltip\">\r\n        <img src=\"../../../../assets/img/infoimg.svg\" alt=\"image\" />\r\n\r\n        <div class=\"tooltiptext\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 blue-bg\">\r\n                <h5\r\n                  class=\"modal-title text-center\"\r\n                  style=\"text-align: center !important\"\r\n                >\r\n                  {{label.ConsultationType}}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"row modal-content2\">\r\n              <div class=\"col-12 d-flex text-center m-auto align-items-center\">\r\n                <p\r\n                  class=\"schdule_appoinment consultation-type-blk schedule-img\"\r\n                  style=\"text-align: center !important\"\r\n                >\r\n                  <img\r\n                    _ngcontent-ebv-c269=\"\"\r\n                    src=\"../../../assets/img/schdule_appoinment_select.png\"\r\n                  /><span\r\n                    _ngcontent-ebv-c269=\"\"\r\n                    class=\"d-block consultation-type\"\r\n                    >{{ labelService.dsHomePageScreen.ScheduledAppt }}</span\r\n                  >\r\n                </p>\r\n                <p class=\"text-left selected_appoinment pl-3\">\r\n                  {{ label.SetUpWebMeetingWithConsultant }}.\r\n                </p>\r\n              </div>\r\n              <div class=\"col-12 d-flex text-center m-auto align-items-center\">\r\n                <p\r\n                  class=\"text-center pt-2 consultation-type-blk schedule-img\"\r\n                  style=\"text-align: center !important\"\r\n                >\r\n                  <img\r\n                    _ngcontent-ebv-c269=\"\"\r\n                    src=\"../../../assets/img/email_response_selected.png\"\r\n                    alt=\"\"\r\n                  /><span\r\n                    _ngcontent-ebv-c269=\"\"\r\n                    class=\"d-block consultation-type\"\r\n                    >{{ label.EmailConsultation }}</span\r\n                  >\r\n                </p>\r\n                <p class=\"text-left selected_appoinment pl-3\">\r\n                  {{ label.consultantWillRespond2yourQuestionsEmail }}.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button (click)=\"letsGo()\">\r\n        {{ label.LetsGo }}\r\n        <img\r\n          src=\"../../../../assets/img/arrowwhite.svg\"\r\n          alt=\"image\"\r\n          width=\"22\"\r\n        />\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottomPrt d-flex justify-content-center align-items-center\">\r\n    <p>{{ label.additionalquestionsaboutpreviousconsultation }}</p>\r\n    <button (click)=\"NavigatetoFollowUp()\">\r\n      {{ label.FollowUp }}\r\n      <img src=\"../../../../assets/img/rightarrow.svg\" alt=\"image\" />\r\n    </button>\r\n  </div>\r\n  <div class=\"toggleBtn mt-3 mb-1\">\r\n    <button\r\n      [ngClass]=\"{ active: !isCompletedConsult, notactive: isCompletedConsult }\"\r\n      (click)=\"getConsultPatientList('1','pending')\"\r\n    >\r\n      {{ label.PendingConsultations }}\r\n    </button>\r\n    <button\r\n      [ngClass]=\"{ active: isCompletedConsult, notactive: !isCompletedConsult }\"\r\n      (click)=\"getConsultPatientList('2','completed')\"\r\n    >\r\n      {{ label.CompletedConsultations }}\r\n    </button>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"!isCompletedConsult && appointmentList.length == 0\"\r\n    class=\"bottomPart consultPart\"\r\n  >\r\n    <div class=\"box-empty-container mt-2\">\r\n      <p>\r\n        {{ label.pendingConsultMsg30Days }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"isCompletedConsult && appointmentList.length == 0\"\r\n    class=\"bottomPart consultPart\"\r\n  >\r\n    <div class=\"box-empty-container mt-2\">\r\n      <p>\r\n        {{ label.completedConsultMsg30Days }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!isCompletedConsult\" class=\"bottomPart consultPart\" (scroll)=\"onScroll($event)\">\r\n    <div class=\"box-containerr mt-2\" *ngFor=\"let item of appointmentList\" >\r\n      <div class=\"boxOne\">\r\n        <div class=\"box-title\">\r\n          <p *ngIf=\"item.AppointmentTypeId != 3\">\r\n            {{ label.Appointmentdatetime }}\r\n          </p>\r\n          <p *ngIf=\"item.AppointmentTypeId == 3\">\r\n            {{ label.EmailResponseRequested }}\r\n          </p>\r\n          <p>{{ item?.ConvertedDateTimeWithTimeZone |localDate }}</p>\r\n        </div>\r\n        <div class=\"box-title\">\r\n          <p>{{ label.Doctor }}</p>\r\n          <p>{{ item?.DoctorName }}</p>\r\n        </div>\r\n        <div class=\"box-title\">\r\n          <p>{{ label.PatientName }}</p>\r\n          <p>{{ item?.PatientName }}</p>\r\n        </div>\r\n        <div class=\"box-title\">\r\n          <p>{{ label.Speciality }}</p>\r\n          <p>{{ item?.Speciality }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"decBtn\" *ngIf=\"item.AppointmentTypeId == 1\">\r\n        <button class=\"zoomBtn\">\r\n          <span *ngIf=\"!item?.GuestUrl\">{{ label.JoinMeeting }}</span>\r\n          <a *ngIf=\"item?.GuestUrl\" href=\"{{ item?.GuestUrl }}\" target=\"_blank\">{{\r\n            label.JoinMeeting\r\n          }}</a>\r\n          &nbsp;\r\n          <img src=\"../../../../assets/img/video.svg\" alt=\"image\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <button (click)=\"seeAllConsultation()\" class=\"clickBtn seeAll\">\r\n      {{ label.SeeAllConsultations }}\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"isCompletedConsult\" class=\"bottomPart consultPart\">\r\n    <div class=\"box-container mt-2\" *ngFor=\"let item of appointmentList\">\r\n      <div class=\"boxOne\">\r\n        <div class=\"boxtitle\">\r\n          <p>\r\n            {{ label.Appointmentdatetime }}\r\n          </p>\r\n          <p>{{ item.ConvertedDateTimeWithTimeZone|localDate }}</p>\r\n        </div>\r\n        <div class=\"boxtitle\">\r\n          <p>{{ label.Doctor }}</p>\r\n          <p>{{ item.DoctorName }}</p>\r\n        </div>\r\n        <div class=\"boxtitle\">\r\n          <p>{{ label.PatientName }}</p>\r\n          <p>{{ item.PatientName }}</p>\r\n        </div>\r\n        <div class=\"boxtitle\">\r\n          <p>{{ label.Speciality }}</p>\r\n          <p>{{ item.Speciality }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"decBtn\">\r\n        <img\r\n          style=\"cursor: pointer\"\r\n          (click)=\"getconsultationAppointmentReportView(item?.Id)\"\r\n          src=\"../../../../assets/img/report.svg\"\r\n          alt=\"image\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <button (click)=\"seeAllConsultation()\" class=\"clickBtn seeAll\">\r\n      {{ label.SeeAllConsultations }}\r\n    </button>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div *ngIf=\"reportImage\">\r\n  <iframe [src]=\"reportImage\" width=\"600\" height=\"800\"></iframe>\r\n</div> -->\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SideFilter } from '../../models/side-filter';\r\nimport { MatLegacyTableDataSource as MatTableDataSource } from '@angular/material/legacy-table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { DashboardScreen } from '../../models/label';\r\nimport { EnmAnalysisSource, EnmModule, EnmAnalysisStatus } from '../../shared/constants/enum';\r\nimport { ConfirmationDialogService } from '../../components/confirmation-dialog/confirmation-dialog.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LabelService, DataService, HeaderService, SidemenuService, SidefilterService, PatientService, CommonService, EncrDecrService, AlertService } from '../../services';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { ToastrService } from 'ngx-toastr';\r\n// declare const gtag: Function;\r\ndeclare const gtag: (...arg) => void;\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  public label: DashboardScreen;\r\n  allRowsExpanded = false;\r\n  expandedElement: any;\r\n  isAdvSearched = false;\r\n  isNotificationSelected = false;\r\n  recordCount = 0;\r\n  BusinessGuId: any;\r\n  filter: SideFilter;\r\n  columnsToDisplay = ['ViewedFlag', 'DateReceivedStr', 'PatientId', 'PatientName', 'OwnerName', 'SpeciesName', 'BreedName', ' '];\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  dsAnalysisSource: any[] = [];\r\n  selectedAnalysisSource: string;\r\n  public Eula: any[] = [];\r\n  headerText = \"Results\"\r\n  public analysisSrcId = EnmAnalysisSource.POC;\r\n  public canceledAnalysisStatusId = EnmAnalysisStatus.Canceled;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public sortState: Sort;\r\n  public isBackOfficeUser: boolean;\r\n  public pageNo: number;\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 30;\r\n  end: number = this.limit + this.start;\r\n  selectedRowIndex: number;\r\n  patientIdList: string[] = [];\r\n  public pataientList: any[] = [];\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem('bckBusinessInfo'));\r\n  public helpObj: any;\r\n  viewConsultation:boolean=false\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public commonService: CommonService,\r\n    private modalService: NgbModal,\r\n    public sidemenuService: SidemenuService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public headerService: HeaderService,\r\n    public patientService: PatientService,\r\n    public labelService: LabelService,\r\n    public sidefilterService: SidefilterService,\r\n    public dataService: DataService,\r\n    private EncrDecr: EncrDecrService,\r\n    private title: Title, public alertService: AlertService, private toaster: ToastrService) { \r\n      if (this.labelService.dsLabelData.length == 0) {\r\n        this.getLabelDetails();\r\n      } else {\r\n        this.labelService.getHomePageScreenLabel();\r\n      }\r\n      this.sidemenuService.selectedModuleId = EnmModule.Home;\r\n    }\r\n\r\n  ngOnInit(): void { \r\n\r\n    this.helpObj = this.dataService.appData.helpTopics.find(\r\n      (e) => e.HelpTopic == \"ZoetisDx-Home-Page\"\r\n    );\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    this.labelService\r\n      .getLabelDetails(null, this.labelService.selectedLanguage)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.labelService.dsLabelData = data.ResponseData;\r\n        this.labelService.getHomePageScreenLabel();\r\n      });\r\n  }\r\n\r\n  // public async getPatientList(event) {\r\n  //   this.selectedAnalysisSource = event.SearchText ? event.SearchTextToDisplayOnDashboard : this.labelService.dsDashboardScreen.All;\r\n  //   this.expandedElement = null;\r\n  //   if (!event.SearchText) {\r\n  //     this.isAdvSearched = false;\r\n  //   }\r\n\r\n    // event.IsBackOfficeUser = this.isBackOfficeUser;\r\n    // this.pageNo = event.PageNo;\r\n    // if (event.PageNo == 1) {\r\n    //   this.originData = [];\r\n    //   this.pataientList = [];\r\n    // }\r\n\r\n    // event[\"IsExactFilter\"] = this.isNotificationSelected ? true : false;\r\n    // event.isSortByLastResultDate = true;\r\n    // this.dataService.pageState.dashboard.requestParams = event;\r\n    // this.dataService.page.next(this.dataService.pageState);\r\n\r\n    // const params = Object.assign({}, this.dataService.pageState.dashboard.requestParams);\r\n\r\n    // if (params.FromDate) {\r\n    //   params.FromDate = params.FromDate != null ? this.commonService.getMomentFromDateTime(params.FromDate) : null;\r\n    // }\r\n    // if (params.ToDate) {\r\n    //   params.ToDate = params.ToDate != null ? this.commonService.getMomentToDateTime(params.ToDate) : null;\r\n    // }\r\n\r\n    // this.commonService.getDashboardPatientList(this.dataService.pageState.dashboard.requestParams).subscribe(data => {\r\n    //   this.isNotificationSelected = false;\r\n    //   if (event.PageNo == 1) {\r\n    //     if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n    //       this.pataientList = data.ResponseData.PatientList;\r\n    //       /** this.followPatientList = data.ResponseData.FollowPatientList; */\r\n    //     } else {\r\n    //       this.pataientList = [];\r\n    //       /**   this.followPatientList = []; */\r\n    //     }\r\n    //   } else {\r\n    //     if (data.ResponseData.PatientList != null && data.ResponseData.PatientList.length > 0) {\r\n    //       this.pataientList = this.pataientList.concat(data.ResponseData.PatientList);\r\n    //       /**   this.followPatientList = this.followPatientList.concat(data.ResponseData.FollowPatientList);  */\r\n    //     }\r\n    //   }\r\n\r\n    //   if (data.ResponseData.PatientList != null && this.pataientList.length < 60) {\r\n    //     event.PageNo += 1;\r\n    //     this.pageNo = event.PageNo\r\n    //     this.dataService.pageState.dashboard.requestParams['PageNo'] = this.pageNo;\r\n    //     this.getPatientList(event);\r\n    //   }\r\n    //   if (this.pataientList && this.pataientList.length > 0) {\r\n    //     this.pataientList = this.pataientList.map(item => {\r\n    //       if (!item.PhysicianName || item.PhysicianName.trim() == \"None\")\r\n    //         item.PhysicianName = this.labelService.dsDashboardScreen.none;\r\n    //       return item\r\n    //     })\r\n\r\n    //     if (this.originData.length > 0 && this.isLoadMore) {\r\n    //       this.isLoadMore = false;\r\n    //     } else {\r\n    //       this.scrolltoTop(null);\r\n    //     }\r\n    //     this.originData = this.pataientList;\r\n    //     this.dataSource = new MatTableDataSource<any>(this.originData);\r\n\r\n    //     this.dataService.pageState.dashboard.resultsList = this.originData;\r\n    //     this.dataService.page.next(this.dataService.pageState);\r\n\r\n    //     this.dataSource.sortingDataAccessor = this.commonService.sortingDataAccessor;\r\n    //     this.dataSource.sort = this.sort;\r\n    //     if (this.dataService.pageState.dashboard.selectedRow) {\r\n    //       const expandedRowDetails = this.dataService.pageState.dashboard.selectedRow;\r\n    //       this.expandedElement = this.originData.find(x => x.Id == expandedRowDetails.Id && x.PatientId == expandedRowDetails.PatientId && x.PatientName == expandedRowDetails.PatientName && x.dob == expandedRowDetails.dob && x.owner_id == expandedRowDetails.owner_id);\r\n    //     }\r\n    //     this.sortState = this.dataService.pageState.dashboard.sortState;\r\n    //   } else {\r\n    //     this.dataSource.data = [];\r\n    //   }\r\n\r\n    // }, err => {\r\n    //   this.originData = [];\r\n    //   this.dataSource.data = [];\r\n    //   console.log(JSON.stringify(err));\r\n    // });\r\n\r\n  // }\r\n\r\n  // public getPatientListByAdvSearch(event) {\r\n  //   this.sidefilterService.filter = this.dataService.pageState.default.requestParams;\r\n  //   if (event.FromDate == null)\r\n  //     this.sidefilterService.FromDate = null;\r\n  //   if (event.ToDate == null)\r\n  //     this.sidefilterService.ToDate = null;\r\n  //   this.isAdvSearched = true;\r\n  //   this.selectedAnalysisSource = event.SearchTextToDisplayOnDashboard != null ? event.SearchTextToDisplayOnDashboard : this.labelService.dsDashboardScreen.All;\r\n  //   this.getPatientList(event);\r\n  // }\r\n\r\n  // public scrolltoTop(topVal) {\r\n  //   const scrollabe = document.getElementById('dashboard-scrollabe');\r\n  //   scrollabe.scrollTop = topVal;\r\n  //   this.isLoadMore = false;\r\n  // }\r\n\r\n\r\n  public getPatientBySelectedNotification(event) {\r\n    this.isNotificationSelected = true;\r\n\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.PatientId = event.PatientId;\r\n    this.sidefilterService.filter.BusinessGuid = this.BusinessGuId;\r\n    this.sidefilterService.filter.UserGuid = this.dataService.appData.authDetails['UserGuid'];\r\n    this.sidefilterService.filter.IsApplyFilter = true;\r\n    this.sidefilterService.filter.ZDXPatientInfoId = event.ZDXPatientInfoId;\r\n    // this.getPatientList(this.sidefilterService.filter);\r\n    this.headerService.selectedNotification = null;\r\n  }\r\n\r\n  // public getAnlysisSourceList(event) {\r\n  //   this.dsAnalysisSource = event;\r\n  // }\r\n\r\n  // closeFilter() {\r\n  //   this.drawer.close()\r\n  // }\r\n  // public filterDataSource(event) {\r\n  //   this.getPatientList(event);\r\n  // }\r\n\r\n  refreshHomePage(){\r\n    window.location.reload()\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- Sidebar  -->\r\n  <app-side-menu></app-side-menu>\r\n\r\n  <!-- Page Content  -->\r\n  <div id=\"content\" class=\"dashboard-wrapper\">\r\n    <div>\r\n      <app-header\r\n        (outFilterNotification)=\"getPatientBySelectedNotification($event)\"\r\n      ></app-header>\r\n    </div>\r\n     \r\n    <mat-drawer-container class=\"example-container1\" hasBackdrop=\"true\">\r\n      \r\n      \r\n      \r\n      <mat-drawer\r\n        #drawer\r\n        class=\"example-sidenav sidefilter right-filter\"\r\n        mode=\"over\"\r\n        position=\"end\"\r\n      >\r\n        <!-- <app-dashboard-filter\r\n          (outAnlysisSource)=\"getAnlysisSourceList($event)\"\r\n          (outFilterBy)=\"filterDataSource($event)\"\r\n          (closeFilterPanel)=\"closeFilter()\"\r\n        >\r\n        </app-dashboard-filter> -->\r\n      </mat-drawer>\r\n\r\n      <div class=\"example-sidenav-content w-100 sidefilter dashboard\">\r\n        <div class=\"toggleBtn mt-3 mb-1 toggleMobile\">\r\n          <button [ngClass]=\"{'actives':!viewConsultation,'notactives':viewConsultation}\" (click)=\"viewConsultation = false\">Results</button>\r\n          <button [ngClass]=\"{'actives':viewConsultation,'notactives':!viewConsultation}\" (click)=\"viewConsultation = true\">Consultations</button>\r\n        </div>\r\n        <section class=\"home-container\">\r\n           <div class =\"home-top d-flex justify-content-between align-items-center pb-2\">\r\n            <div class=\"d-flex justify-content-start align-items-center\">\r\n            <img class=\"\" src=\"../../../assets/img/Home_Blue.svg\" />\r\n            <p class =\"homeTxt pl-2\">{{labelService.dsHomePageScreen.Home}}</p>\r\n          </div>\r\n          <div>\r\n            <img class=\"qicon text-right\" src=\"../../../assets/img/Help_orng.svg\" [matTooltip]=\"labelService.dsSideMenuScreen.Help\"\r\n            alt=\"help-circle\" width=\"17px\" matTooltipPosition=\"below\" matTooltipClass=\"below\"\r\n            (click)=\"commonService.onlineHelp(helpObj.PageID)\" />\r\n          </div>\r\n           </div>\r\n          <app-result-list [ngClass]=\"{'hideme':viewConsultation}\"></app-result-list>\r\n          <app-consultations [ngClass]=\"{'hideme':!viewConsultation}\"></app-consultations>\r\n        </section>\r\n      </div>\r\n    </mat-drawer-container>\r\n    <div class=\"refreshBtn\">\r\n      <img (click)=\"refreshHomePage()\" src=\"../../../../assets/img/refreshBtn.png\" alt=\"Refreshimage\">\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { PatientInfoEditComponent } from './components/patient-managements/patient-info-edit/patient-info-edit.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n// import { RegisterComponent } from \"./components/register/register.component\";\r\nimport { ResetComponent } from \"./components/reset/reset.component\";\r\nimport { ForgotComponent } from \"./components/forgot/forgot.component\";\r\n// import { SigninComponent } from \"./components/signin/signin.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { ClinicManagementComponent } from './components/clinic-management/clinic-management.component';\r\nimport { UserListComponent } from './components/user-managements/user-list/user-list.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { ThanksComponent } from './components/thanks/thanks.component';\r\nimport { AuthGuard, BusinessAdminGuard, AuthGuardRotor, ConsultantGuard } from './guards'\r\nimport { PatientListComponent } from './components/patient-managements/patient-list/patient-list.component';\r\nimport { FuseListComponent } from './components/fuse-managements/fuse-list/fuse-list.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\n// import { UserProfileComponent } from './components/user-managements/user-profile/user-profile.component';\r\nimport { UserSupportComponent } from './components/user-managements/user-support/user-support.component';\r\nimport { HelpComponent } from './components/help/help.component';\r\nimport { EndUserLicenseAgreementComponent } from './components/end-user-license-agreement/end-user-license-agreement.component';\r\nimport { RotorCreditComponent } from './components/rotor-credits/rotor-credit/rotor-credit.component';\r\nimport { RotorCreditFirstScreenComponent } from './components/rotor-credits/rotor-credit-first-screen/rotor-credit-first-screen.component';\r\nimport { PatientInfoComponent } from './components/patient-managements/patient-info/patient-info.component';\r\nimport { ConsultPatientInfoComponent } from './components/patient-managements/consult-patient-info/consult-patient-info.component';\r\nimport { LoginRegisIntermediateComponent } from './components/login-regis-intermediate/login-regis-intermediate.component';\r\nimport { AccountSettingsComponent } from './components/user-managements/account-settings/account-settings.component';\r\nimport { GigyaLoginComponent } from './components/gigya-login/gigya-login.component';\r\nimport { SecurityComponent } from './components/user-managements/security/security.component';\r\nimport { PreferencesComponent } from './components/user-managements/preferences/preferences.component'\r\nimport { GigyaResetComponent } from './components/gigya-managements/gigya-reset/gigya-reset.component';\r\nimport { GigyaUserProfileComponent } from './components/gigya-managements/gigya-user-profile/gigya-user-profile.component';\r\nimport { GigyaChangePasswordComponent } from './components/gigya-managements/gigya-change-password/gigya-change-password.component';\r\n// import { FaqComponent } from \"./components/faq/faq.component\";\r\nimport { UpsComponent } from \"./components/ups/ups.component\"\r\n// import { LoginComponent } from \"./components/login/login.component\";\r\nimport { ZrlVerificationComponent } from \"./components/zrl-verification/zrl-verification.component\";\r\n// import { CountryLangComponent } from \"./components/country-lang/country-lang.component\";\r\nimport { ZdxRedirectionComponent } from \"./components/zdx-redirection/zdx-redirection.component\";\r\nimport { SearchResultsComponent } from './components/search-results/search-results.component';\r\nimport { AccessionResultsComponent } from \"./components/accession-results/accession-results.component\";\r\nimport { MaintenanceComponent } from './components/maintenance/maintenance.component';\r\nimport { ConsultDosComponent } from './components/consult-dos/consult-dos.component';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { HomepageComponent } from './components/homepage/homepage.component';\r\n\r\nexport const routes: Routes = [\r\n  // === NO AUTH REQUIRED ===\r\n  {\r\n    path: \"login\",\r\n    component: GigyaLoginComponent,\r\n    // canActivate: [MaintenanceMode]\r\n  },\r\n  {\r\n    path: 'maintenance',\r\n    component: MaintenanceComponent\r\n  },\r\n  // === NO AUTH REQUIRED END ===\r\n  {\r\n    path: \"home\",\r\n    component: HomepageComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"dashboard\",\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'result-details',\r\n    loadChildren: () => import('./modules/result-details/result-details.module').then((m) => m.ResultDetailsModule),\r\n  },\r\n  {\r\n    path: 'accession-results',\r\n    component: AccessionResultsComponent,\r\n  },\r\n  {\r\n    path: \"fuse/list\",\r\n    component: FuseListComponent,\r\n    canActivate: [AuthGuard]\r\n    // canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"user/list\",\r\n    component: UserListComponent,\r\n    canActivate: [AuthGuard]\r\n    // canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"patient/list\",\r\n    component: PatientListComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient/info\",\r\n    component: PatientInfoComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient/info/edit\",\r\n    component: PatientInfoEditComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"patient/info/:pataientId/:zdxPatientId\",\r\n    component: ConsultPatientInfoComponent,\r\n    canActivate: [ConsultantGuard]\r\n  },\r\n  {\r\n    path: \"search-result\",\r\n    component: SearchResultsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"zrl-verification\",\r\n    component: ZrlVerificationComponent,\r\n    // canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"help\",\r\n    component: HelpComponent,\r\n    // canActivate: [BusinessAdminGuard]\r\n    canActivate: [AuthGuard]\r\n  },\r\n  // {\r\n  //   path: \"faq/:languageId/:CountryId\",\r\n  //   component: FaqComponent\r\n  // },\r\n  // {\r\n  //   path: \"faq\",\r\n  //   component: CountryLangComponent\r\n  // },\r\n  {\r\n    path: \"ups\",\r\n    component: UpsComponent\r\n  },\r\n  {\r\n    path: \"clinic\",\r\n    component: ClinicManagementComponent,\r\n    canActivate: [BusinessAdminGuard]\r\n  },\r\n  // {\r\n  //   path: \"consult/profile\",\r\n  //   component: UserProfileComponent,\r\n  //   // canActivate: [BusinessAdminGuard]\r\n  // },\r\n  {\r\n    path: \"user/profile\",\r\n    component: GigyaUserProfileComponent,\r\n    // canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"user/preferences\",\r\n    component: PreferencesComponent,\r\n    canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"consult/security\",\r\n    component: SecurityComponent,\r\n    canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"user/security\",\r\n    component: GigyaChangePasswordComponent,\r\n    //canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"user/support\",\r\n    component: UserSupportComponent,\r\n    canActivate: [BusinessAdminGuard]\r\n  },\r\n  {\r\n    path: \"user/account\",\r\n    component: AccountSettingsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"consultant-dos\",\r\n    component: ConsultDosComponent,\r\n    canActivate: [ConsultantGuard]\r\n  },\r\n\r\n  // {\r\n  //   path: \"gmarket\",\r\n  //   component: GigyaMarketComponent,\r\n  // },\r\n  {\r\n    path: \"loginregisintermediate\",\r\n    component: LoginRegisIntermediateComponent,\r\n  },\r\n  // {\r\n  //   path: \"register\",\r\n  //   component: RegisterComponent,\r\n  // },\r\n  {\r\n    path: \"forgot\",\r\n    component: ForgotComponent,\r\n  },\r\n  {\r\n    path: \"verify\",\r\n    component: VerifyComponent,\r\n  },\r\n  {\r\n    path: \"thanks\",\r\n    component: ThanksComponent,\r\n  },\r\n  {\r\n    path: \"link-expired\",\r\n    component: ThanksComponent,\r\n  },\r\n  {\r\n    path: \"alredy-verified\",\r\n    component: ThanksComponent,\r\n  },\r\n  {\r\n    path: \"resetting\",\r\n    component: ResetComponent,\r\n  },\r\n  {\r\n    path: \"reset\",\r\n    component: GigyaResetComponent,\r\n  },\r\n  {\r\n    path: \"enduserlicenseagreement/:languageId\",\r\n    component: EndUserLicenseAgreementComponent\r\n  },\r\n  {\r\n    path: \"enduserlicenseagreement/:languageId/:countryId\",\r\n    component: EndUserLicenseAgreementComponent\r\n  },\r\n  {\r\n    path: \"zdx\",\r\n    component: ZdxRedirectionComponent,\r\n  },\r\n  {\r\n    path: \"settings\",\r\n    component: SettingsComponent,\r\n  },\r\n  {\r\n    path: \"rotor-firstScreen\",\r\n    component: RotorCreditFirstScreenComponent,\r\n    canActivate: [AuthGuardRotor]\r\n  },\r\n  {\r\n    path: \"rotor\",\r\n    component: RotorCreditComponent,\r\n  },\r\n  {\r\n    path: 'refLab',\r\n    loadChildren: () => import('./modules/refrence-lab/refrence-lab.module').then((m) => m.RefrenceLabModule),\r\n  },\r\n  {\r\n    path: 'communication',\r\n    loadChildren: () => import('./modules/communication/communication.module').then((m) => m.CommunicationModule),\r\n  },\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'login'\r\n  },\r\n  {\r\n    path: \"**\",\r\n    // component: PagenotfoundComponent\r\n    redirectTo: 'login'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {}),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatModule } from '../../modules/mat-module/mat.module';\r\nimport { AddUserComponent } from './add-user.component';\r\n@NgModule({\r\n    declarations: [AddUserComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatModule\r\n    ],\r\n    exports: [AddUserComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class AddUserModule { }","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatModule } from '../../modules/mat-module/mat.module';\r\nimport { SidefilterComponent } from './sidefilter.component';\r\nimport { pipeModule } from '../../pipe/pipe.module';\r\n@NgModule({\r\n  declarations: [SidefilterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatModule,\r\n    pipeModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n  exports: [SidefilterComponent],\r\n})\r\nexport class SideFilterModule { }\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  CommonService,\r\n  LabelService,\r\n  DataService,\r\n  MyMonitoringService,\r\n  SidemenuService,\r\n  HeaderService,\r\n  AlertService,\r\n  RefLabService,\r\n  AutoRefreshService,\r\n  AutoLogoutService,\r\n  PendoService\r\n} from '../app/services';\r\nimport { EnmLanguage, EnmCountry } from '../app/shared/constants/enum';\r\nimport { AlertMessageComponent } from '../app/components/alert-message/alert-message.component';\r\nimport { ConfirmationDialogService } from '../app/components/confirmation-dialog/confirmation-dialog.service';\r\nimport { environment } from '../environments/environment';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ToastrService } from 'ngx-toastr';\r\ndeclare const gtag: (...arg) => void;\r\ndeclare const pendo: any;\r\n// declare let gtag: Function;\r\ndeclare let feedbackFun\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [NgbActiveModal]\r\n})\r\nexport class AppComponent implements OnInit, AfterViewInit {\r\n  public Eula: any[] = [];\r\n  public prevUrl: string;\r\n  public isEnableCR = false;\r\n  public isOpenedCR = false;\r\n  authdata;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    private myMonitoringService: MyMonitoringService,\r\n    public router: Router,\r\n    private title: Title,\r\n    public labelService: LabelService,\r\n    public dataService: DataService,\r\n    private modalService: NgbModal,\r\n    public sidemenuService: SidemenuService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public headerService: HeaderService,\r\n    public activeModal: NgbActiveModal,\r\n    public alertService: AlertService,\r\n    private refLabService: RefLabService,\r\n    private platform: Platform,\r\n    private toastr: ToastrService,\r\n    public autoRefreshService: AutoRefreshService,\r\n    public autoLogoutService: AutoLogoutService, public pendoService: PendoService) {\r\n\r\n    // ==================App Data===============\r\n    // try {\r\n    //   this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(res => {\r\n    //     this.dataService.appData.labels = res.ResponseData;\r\n    //     this.dataService.data.next(this.dataService.appData);\r\n    //     this.labelService.bindPatientInfoLabel();\r\n    //   }, err => {\r\n    //     console.log(JSON.stringify(err));\r\n    //   })\r\n    // } catch (err) {\r\n    //   console.log(JSON.stringify(err));\r\n    // }\r\n    // try {\r\n    //   this.router.events.subscribe((event) => {\r\n    //     if (event instanceof NavigationEnd) {\r\n    //       this.pendoService.trackPageLoad();\r\n    //     }\r\n    //   });\r\n    // } catch (err) {\r\n    //   console.log(JSON.stringify(err));\r\n    // }\r\n    this.dataService.data.subscribe(data => {\r\n      this.authdata = data.authDetails;\r\n    })\r\n    try {\r\n      this.commonService.getUserDDLDetails(EnmLanguage.English, EnmCountry.UnitedStates, null).subscribe(res => {\r\n        this.dataService.appData.userDropDownList = res.ResponseData;\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }, err => {\r\n        console.log(JSON.stringify(err))\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    } catch (err) {\r\n      this.commonService.showCommonToastrError()\r\n    }\r\n\r\n    // ==================App Data end==================\r\n\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart && sessionStorage.ENV === 'CVET') {\r\n        this.sidemenuService.logOut();\r\n      }\r\n\r\n      if (event instanceof NavigationEnd && event.url == '/login') {\r\n        this.activeModal.close();\r\n      }\r\n\r\n      // const navList = ['/dashboard', '/refLab/orders', '/patient/list', '/refLab/dos', '/fuse/list', '/user/list'];\r\n      const handleConsultationBack = ['/patient/info', '/patient/result'];\r\n      if (event instanceof NavigationEnd && event.id == 1 && handleConsultationBack.includes(event.url)) {\r\n        this.dataService.appData.prevUrl = \"dashboard\";\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }\r\n\r\n      //  if (localStorage.IsLicenseAgreement == 'False' && event instanceof NavigationEnd && event.urlAfterRedirects != this.prevUrl && navList.includes(event.urlAfterRedirects)) {\r\n      // // if (this.dataService.appData.authDetails['IsLicenseAgreement'] == 'False' && event instanceof NavigationEnd && navList.includes(event.urlAfterRedirects)) {\r\n      //if (this.dataService.appData.authDetails['IsLicenseAgreement'] == false && event instanceof NavigationEnd && navList.includes(event.urlAfterRedirects)) {\r\n      if (this.dataService.appData.authDetails['IsLicenseAgreement'] == false && event instanceof NavigationEnd && !(this.authdata['IsConsultantUser'] || this.authdata['BackOfficeFlag'])) {\r\n        this.prevUrl = event.urlAfterRedirects;\r\n        this.alertService.getAlertMsg(this.headerService.loginUserGuid, this.dataService.appData.authDetails['BusinessGuid']).subscribe(data => {\r\n          this.dataService.appData['CommunicationEmailCount'] = data.ResponseData['CommunicationEmailCount'];\r\n          this.dataService.appData.serverDate = data.ResponseData['ServerDate'];\r\n          if (this.dataService.appData.updatedNotificationCount != data.ResponseData['NotificationLogCount']) {\r\n            this.dataService.appData.updatedNotificationCount = data.ResponseData['NotificationLogCount'];\r\n            this.headerService.getNotification(this.labelService.selectedLanguage, true);\r\n          } else {\r\n            this.headerService.dsNotificationList = this.dataService.appData.notificationList;\r\n            this.headerService.updateNotificationCount();\r\n          }\r\n\r\n          const lastDosUpdatedAt = data.ResponseData['LatestDOSUpdatedTime'];\r\n          if (lastDosUpdatedAt) {\r\n            const DDHHStr = this.dataService.getDDHHChar(lastDosUpdatedAt)\r\n            if (!this.dataService.appData.dosCnf.dosData.length || this.dataService.appData.dosCnf.lstDosUpdateDtHr !== DDHHStr) {\r\n              this.dataService.appData.dosCnf.dosDoRefresh = true;\r\n            }\r\n            this.dataService.appData.dosCnf.lstDosUpdateDtHr = DDHHStr;\r\n          } else {\r\n            this.dataService.appData.dosCnf.dosDoRefresh = true;\r\n          }\r\n\r\n          this.dataService.data.next(this.dataService.appData);\r\n\r\n          this.modalService.dismissAll();\r\n          // const shouldShowAlertPop = localStorage.getItem('ShowAlertPop') || 'true';\r\n          // && shouldShowAlertPop === 'true'\r\n          if (data.ResponseData.length > 0 && data.ResponseData.filter(x => x.IsRead === false).length) {\r\n            localStorage.setItem('ShowAlertPop', 'false');\r\n            const modalRef = this.modalService.open(AlertMessageComponent, {\r\n              centered: true,\r\n              backdrop: 'static',\r\n              scrollable: false,\r\n            });\r\n            modalRef.componentInstance.onlyNew = true;\r\n          }\r\n        }, err => {\r\n          console.log(JSON.stringify(err))\r\n          this.commonService.showCommonToastrError();\r\n        });\r\n      }\r\n      // alert implementatioan on page navigation end\r\n      if (event instanceof NavigationEnd && !(event.urlAfterRedirects.includes('backoffice') || event.urlAfterRedirects.includes('bko'))) {\r\n        this.commonService.firebase.analytics().logEvent('Screen_view', { pages: event.urlAfterRedirects });\r\n        gtag('event', 'page_view', {\r\n          page_path: event.urlAfterRedirects,\r\n          page_title: this.getPageTitle(event.urlAfterRedirects) + ' Page',\r\n        })\r\n      }\r\n\r\n      // if (event instanceof NavigationStart) {\r\n      //   this.isEnableCR = false;\r\n      // }\r\n\r\n      // if (event instanceof NavigationEnd && this.dataService.appData['ReportDisabled'] == 'false' && this.dataService.appData['AppointmentGuid'] && localStorage.getItem('rediretionDetails') && (event.url.indexOf('/patient/info') !== -1 || event.url.indexOf('/result-details') !== -1)) {\r\n      //   this.isEnableCR = true;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n  public getPageTitle(str: string) {\r\n    const strArray = str.split('/');\r\n    strArray.shift();\r\n    return strArray.join(' ');\r\n  }\r\n\r\n  /** Add Google Analytics Script Dynamically */\r\n  addGAScript() {\r\n    const gtagScript: HTMLScriptElement = document.createElement('script');\r\n    gtagScript.async = true;\r\n    gtagScript.src = 'https://www.googletagmanager.com/gtag/js?id=' + environment.GA_TRACKING_ID;\r\n    document.head.prepend(gtagScript);\r\n    /** Disable automatic page view hit to fix duplicate page view count  **/\r\n    setTimeout(() => {\r\n      if (typeof gtag !== 'undefined') {\r\n        gtag('config', environment.GA_TRACKING_ID, { send_page_view: false });\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  enSpeciesList: any = []\r\n  enGenderList: any = []\r\n  getTranslationByLang() {\r\n    const langId = this.dataService.appData.authDetails['LanguageId'];\r\n    if (langId) {\r\n      this.commonService.getFilterDDLDetails(langId).subscribe(res => {\r\n        res.ResponseData['enSpeciesList'] = this.enSpeciesList\r\n        res.ResponseData['enGenderList'] = this.enGenderList\r\n        this.dataService.appData.filterDropDownList = res.ResponseData;\r\n        this.dataService.data.next(this.dataService.appData);\r\n      }, err => {\r\n        console.log(JSON.stringify(err))\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    try {\r\n      if (window.location.href.indexOf('/zdx?res=') === -1) {\r\n        this.getFilterDDLDetails()\r\n      } else {\r\n        setTimeout(() => this.getFilterDDLDetails, 500)\r\n      }\r\n\r\n    } catch (err) {\r\n      this.commonService.showCommonToastrError();\r\n    }\r\n    // ==========\r\n    this.addGAScript();\r\n  }\r\n  ngOnInit(): void {\r\n    let data = localStorage.authDetails ? JSON.parse(localStorage?.authDetails) : null;\r\n    this.pendoService.initializePendo(data);\r\n    this.commonService.pdfDownloading.subscribe({\r\n      next: (res) => {\r\n        const blobStore = new Blob([res.data], { type: 'application/pdf' });\r\n        const data = window.URL.createObjectURL(blobStore);\r\n\r\n        if (!this.platform.FIREFOX && !this.platform.SAFARI) {\r\n          const link = document.createElement('a');\r\n          document.body.appendChild(link);\r\n          link.href = data;\r\n          link.download = `${res.fileName}.pdf`;\r\n          link.click();\r\n          link.remove();\r\n        }\r\n\r\n        this.confirmationDialogService.dismiss();\r\n        let msg = this.labelService.dsPatientInfoScreen.ViewDocumentMessage\r\n        const indx = msg.indexOf('ボタン') // only for japanese\r\n        if (indx != -1) {\r\n          const result = [msg.slice(0, indx), msg.slice(indx)];\r\n          msg = result[0] + '<br>' + result[1]\r\n        }\r\n        const ref = this.confirmationDialogService.confirm(\"Alert\", msg, this.labelService.dsPatientInfoScreen.ViewDocument, \"\", \"sm\", true, false);\r\n        ref.then(() => {\r\n          const link2 = document.createElement('a');\r\n          document.body.appendChild(link2);\r\n          link2.href = data;\r\n          link2.target = '_blank';\r\n          if (this.platform.FIREFOX || this.platform.SAFARI) link2.download = `${res.fileName}.pdf`;\r\n          link2.click();\r\n          link2.remove();\r\n          window.URL.revokeObjectURL(data);\r\n        });\r\n      },\r\n      error: () => {\r\n        this.commonService.showCommonToastrError();\r\n      }\r\n    })\r\n\r\n    this.commonService.getOnlineHelpTopics().subscribe((data) => {\r\n      if (data.StatusCode == '200') {\r\n        this.dataService.appData.helpTopics = data.ResponseData;\r\n        this.dataService.data.next(this.dataService.appData)\r\n      }\r\n    })\r\n\r\n    this.commonService.catchedApiError.subscribe(error => {\r\n      console.log(error)\r\n      this.commonService.showCommonToastrError()\r\n      //const ref = this.confirmationDialogService.confirm(\"Alert\", this.labelService.dsFuseManagementScreen.AddRefLabAccountRespErrorMessage, this.labelService.dsPatientInfoScreen.Ok, \"\", \"sm\", true, false);\r\n    })\r\n\r\n  }\r\n\r\n  getFilterDDLDetails() {\r\n    this.commonService.getFilterDDLDetails(1).subscribe(res => {\r\n      this.enSpeciesList = res.ResponseData.SpeciesList;\r\n      this.enGenderList = res.ResponseData.GenderList\r\n      // console.log(this.enSpeciesList)\r\n      this.getTranslationByLang()\r\n    }, err => {\r\n      console.log(JSON.stringify(err))\r\n      this.getTranslationByLang()\r\n      this.commonService.showCommonToastrError();\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<!-- <div class=\"sideBtn\" *ngIf=\"isEnableCR\" [ngClass]=\"isOpenedCR ? 'opened':''\">\r\n  <button (click)=\"isOpenedCR = !isOpenedCR\">CONSULTATION REPORT</button>\r\n</div>\r\n<div [ngClass]=\"isOpenedCR ? 'app-content':''\" *ngIf=\"isOpenedCR\">\r\n  <app-floating-consult-report [isOpened]=\"isOpenedCR\"\r\n    (valueChange)='isOpenedCR = $event'></app-floating-consult-report>\r\n</div> -->\r\n\r\n<router-outlet></router-outlet>\r\n<ng-http-loader></ng-http-loader>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormGroup, Validators, UntypedFormBuilder } from '@angular/forms';\r\nimport { EnmLanguage, EnmUserType, EnmNotificationSetting } from '../../shared/constants/enum';\r\nimport { UserAuth } from '../../models/model';\r\nimport { LoginScreen } from '../../models/label';\r\nimport { ConfirmationDialogService } from '../confirmation-dialog/confirmation-dialog.service';\r\nimport { LabelService, DataService, HeaderService, SidemenuService, CommonService } from '../../services';\r\ndeclare let gigya: any;\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.css\"],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n\r\n  public dsLoginScreen = new LoginScreen();\r\n  //public orginalData: any[] = []; \r\n  hide = true;\r\n  public dsLanguage: any[] = [];\r\n  public msg = \"\";\r\n  // public selectedLanguage=(localStorage.languageId != undefined && localStorage.languageId != null && localStorage.languageId != \"\" ? parseInt(localStorage.languageId) : EnmLanguage.English);\r\n  public userAuthForm: UntypedFormGroup;\r\n  public isRememberme = false;\r\n  public betaUser = \"Thank you for your participation in our ZoetisDx.com version 1.2 beta. We appreciate your participation and look forward to serving your diagnostics needs in the future. If you bookmarked or saved the beta.zoetisdx.com site, please remember to update your bookmark to point to ZoetisDx.com\";\r\n  public hyperData = \"To log in to ZoetisDX, please go to\";\r\n  public link = \"www.zoetisdx.com\";\r\n  public finalLink: any;\r\n  public includeValues: any;\r\n  public apiUrl: string;\r\n  public zlink: any;\r\n  formResetClicked = false;\r\n\r\n  // ===============gigya========================\r\n  // loginParams = {\r\n  //   screenSet: \"RegistrationLogin\",\r\n  //   startScreen: \"gigya-login-screen\",\r\n  //   containerID: \"loginContainer\"\r\n  // };\r\n  // ==============gigya end========================\r\n\r\n  constructor(private formBuilder: UntypedFormBuilder, public router: Router, public commonService: CommonService, public confirmationDialogService: ConfirmationDialogService,\r\n    public headerService: HeaderService, public labelService: LabelService, public sidemenuService: SidemenuService, public dataService: DataService) {\r\n    this.commonService.getLanguageDetails().subscribe(data => {\r\n      this.dsLanguage = data.ResponseData;\r\n      if (document.cookie == undefined || document.cookie == null || document.cookie == \"\") {\r\n        // const lang = navigator.language || window.navigator.language;\r\n        const langCode = (navigator.language).split(\"-\")[1] == undefined ? (navigator.language).split(\"-\")[0] : (navigator.language).split(\"-\")[1].toLowerCase();\r\n        this.labelService.selectedLanguage = this.getLanIdByLanCode(langCode);\r\n        this.getLabelDetails();\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + (24 * 60 * 60 * 1000));\r\n        const expires = \"expires=\" + d.toUTCString();\r\n        //document.cookie = \"languageCode=\"+ langCode + \";\" + expires + \";path=\" + window.location.href;\r\n        document.cookie = \"languageCode=\" + navigator.language;\r\n        document.cookie = \"languageShortCode=\" + langCode;\r\n        document.cookie = expires;\r\n        document.cookie = \"path=\" + window.location.href;\r\n      }\r\n      else {\r\n        if (this.labelService.dsLabelData.length == 0) {\r\n          this.getLabelDetails();\r\n        }\r\n        else {\r\n          this.bindLabel();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLanIdByLanCode(val) {\r\n    return this.dsLanguage.find(x => x.Code.toLowerCase() == val) != undefined ? this.dsLanguage.find(x => x.Code.toLowerCase() == val).Id : EnmLanguage.English;\r\n  }\r\n\r\n  public logOutUser() {\r\n    gigya.accounts.logout();\r\n    // console.log('You have been logged out!');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userAuthForm = this.createFormGroup(new UserAuth());\r\n    if (localStorage['rememberedUser']) {\r\n      this.userAuthForm.controls.User.setValue(localStorage['rememberedUser'])\r\n      this.isRememberme = true;\r\n    }\r\n    // ======================gigya======================================================\r\n    //gigya.accounts.showScreenSet(this.loginParams);\r\n    // ====================gigya end====================================================\r\n\r\n    // this.commonService.getLanguageDetails().subscribe(data => {\r\n    //   this.dsLanguage = data.ResponseData;\r\n\r\n    //   // if (this.dsLanguage.length == 2) {\r\n    //   //   this.dsLanguage.push({ Id: 4, Name: \"Spanish\", Code: \"ES\" })\r\n    //   // }\r\n\r\n    //   //this.selectedLanguage=EnmLanguage.English;\r\n    // }, error => {\r\n    // })\r\n  }\r\n\r\n  public showMsg(msg) {\r\n    this.confirmationDialogService.confirm(\"\", msg, this.labelService.dsRotorManagementScreen.OkLabel, this.labelService.dsUserManagementScreen.Cancel, \"sm\", true, false)\r\n      // .then((confirmed) => {\r\n      //   if (confirmed) {\r\n      //   }\r\n      // })\r\n      // .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\r\n  }\r\n\r\n  public getLabelDetails() {\r\n    //if (localStorage.languageId == undefined)\r\n    localStorage.setItem('languageId', this.labelService.selectedLanguage.toString())\r\n    this.dataService.appData.masterData.languageId = this.labelService.selectedLanguage.toString();\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    this.labelService.getLabelDetails(null, this.labelService.selectedLanguage).subscribe(data => {\r\n      this.labelService.dsLabelData = data.ResponseData;\r\n      this.bindLabel();\r\n      this.msg = \"\";\r\n    });\r\n  }\r\n\r\n  public bindLabel() {\r\n    if (localStorage.languageId == undefined)\r\n      localStorage.setItem('languageId', this.labelService.selectedLanguage.toString())\r\n    this.dataService.appData.masterData.languageId = this.labelService.selectedLanguage.toString();\r\n    this.dataService.data.next(this.dataService.appData);\r\n\r\n    this.dsLoginScreen = new LoginScreen();\r\n    if (this.labelService.dsLabelData[\"LoginScreen\"] != undefined) {\r\n      this.dsLoginScreen.Pleasefillyourinformationbelow = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Pleasefillyourinformationbelow\").LabelName;\r\n      this.dsLoginScreen.Email = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Email\").LabelName;\r\n      this.dsLoginScreen.Password = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Password\").LabelName;\r\n      this.dsLoginScreen.ForgotPassword = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"ForgotPassword\").LabelName;\r\n      this.dsLoginScreen.Login = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Login\").LabelName;\r\n      this.dsLoginScreen.Donthaveanaccount = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Donthaveanaccount\").LabelName;\r\n      this.dsLoginScreen.SignUpHere = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"SignUpHere\").LabelName;\r\n      this.dsLoginScreen.Emailnotvalidated = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Emailnotvalidated\").LabelName;\r\n      this.dsLoginScreen.Pleaseenterallrequiredfields = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Pleaseenterallrequiredfields\").LabelName;\r\n      this.dsLoginScreen.Pleasefillyourinformationbelow = this.labelService.dsLabelData[\"LoginScreen\"].find(x => x.KeyValue == \"Pleasefillyourinformationbelow\").LabelName;\r\n\r\n      this.dsLoginScreen.Pleaseentervalidemail = this.labelService.getValue(\"LoginScreen\", \"Pleaseentervalidemail\", this.dsLoginScreen.Pleaseentervalidemail);\r\n      this.dsLoginScreen.UserNotActive = this.labelService.getValue(\"LoginScreen\", \"UserNotActive\", this.dsLoginScreen.UserNotActive);\r\n      this.dsLoginScreen.LoginFailed = this.labelService.getValue(\"LoginScreen\", \"LoginFailed\", this.dsLoginScreen.LoginFailed);\r\n      this.dsLoginScreen.Pleaseenteruseremail = this.labelService.getValue(\"LoginScreen\", \"Pleaseenteruseremail\", this.dsLoginScreen.Pleaseenteruseremail);\r\n      this.dsLoginScreen.Pleaseenterpassword = this.labelService.getValue(\"LoginScreen\", \"Pleaseenterpassword\", this.dsLoginScreen.Pleaseenterpassword);\r\n      this.dsLoginScreen.RememberMe = this.labelService.getValue(\"LoginScreen\", \"RememberMe\", this.dsLoginScreen.RememberMe);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public noSpaces(val) {\r\n    if (val.match(/\\s/g)) {\r\n      this.userAuthForm.controls[\"User\"].setValue(val.replace(/\\s/g, ''));\r\n    }\r\n  }\r\n\r\n  public login() {\r\n    localStorage.clear();\r\n    //this.userAuthForm.controls[\"User\"].setValue(this.userAuthForm.controls[\"User\"].value.trim());\r\n    if (this.userAuthForm.status == \"VALID\") {\r\n      if (this.isRememberme) {\r\n        this.rememeberMe();\r\n      }\r\n      this.userAuthForm.controls[\"LanguageId\"].setValue(this.labelService.selectedLanguage);\r\n      this.commonService.loginAuth(this.userAuthForm.value).subscribe(data => {\r\n        // if (data.BackOfficeFlag == \"True\") {\r\n        if (data.BackOfficeFlag) {\r\n          data.LanguageId = EnmLanguage.English.toString();\r\n          this.labelService.selectedLanguage = parseInt(data.LanguageId);\r\n          this.getLabelDetails();\r\n          localStorage.setItem('isBackOfficeFlag', data.BackOfficeFlag);\r\n        }\r\n        else\r\n          // console.log(data)\r\n          this.labelService.selectedLanguage = (data.LanguageId != undefined && data.LanguageId != null && data.LanguageId != \"\" && data.LanguageId != \"0\" ? parseInt(data.LanguageId) : EnmLanguage.English);\r\n        this.sidemenuService.getSideMenu(data.UserTypeId, this.labelService.selectedLanguage, this.labelService.userCountryId, true);\r\n        localStorage.setItem('authDetails', JSON.stringify(data));\r\n\r\n        this.dataService.appData.authDetails = data;\r\n        this.dataService.data.next(this.dataService.appData);\r\n        //let bussId = (data.BusinessId != null && data.BusinessId != \"\" ? parseInt(data.BusinessId) : 0);\r\n        localStorage.setItem('userTypeId', data.UserTypeId);\r\n        localStorage.setItem('businessId', data.BusinessId);\r\n        localStorage.setItem('businessName', data.BusinessName);\r\n        localStorage.setItem('userName', data.FirstName);\r\n        localStorage.setItem(\"isBusiness\", (data.UserTypeId == EnmUserType.Business ? \"true\" : \"false\"));\r\n        const langId = data.LanguageId != undefined && data.LanguageId != null && data.LanguageId != \"\" && data.LanguageId != \"0\" ? data.LanguageId : EnmLanguage.English.toString();\r\n        localStorage.setItem('languageId', langId);\r\n        this.dataService.appData.masterData.languageId = langId;\r\n        this.dataService.data.next(this.dataService.appData);\r\n\r\n        const userCountryId = data.CountryId != undefined && data.CountryId != null && data.CountryId != \"\" ? data.CountryId : 0;\r\n        localStorage.setItem('userCountryId', userCountryId);\r\n        this.dataService.appData.masterData.userCountryId = userCountryId;\r\n        this.dataService.data.next(this.dataService.appData);\r\n\r\n        localStorage.setItem('notificationSettingId', (data.FollowPatient != undefined && data.FollowPatient != null && data.FollowPatient != \"\" && data.FollowPatient != \"0\" ? data.FollowPatient : EnmNotificationSetting.AllClinicResults.toString()));\r\n\r\n        this.labelService.userCountryId = data.CountryId != undefined && data.CountryId != null && data.CountryId != \"\" ? data.CountryId : 0;\r\n        this.headerService.loginUserId = data.Id;\r\n        this.headerService.selectedBusinessId = data.BusinessId;\r\n        this.headerService.selectedBusinessName = data.BusinessName;\r\n        this.headerService.isBusiness = data.UserTypeId == EnmUserType.Business;\r\n        this.headerService.userName = data.FirstName;\r\n        this.headerService.userTypeId = data.UserTypeId;\r\n        this.headerService.notificationSettingId = data.FollowPatient;\r\n\r\n        //this.router.navigateByUrl('/dashboard');\r\n        //this.sidemenuService.goToLink(this.sidemenuService.dsSideMenu[0].TableId)\r\n        //this.router.navigate(['/dashboard']);\r\n      }, error => {\r\n        if (error.error.error == \"not_verified\") {\r\n          this.msg = this.dsLoginScreen.Emailnotvalidated;\r\n        }\r\n        else if (error.error.error == \"not_active\") {\r\n          this.msg = this.dsLoginScreen.UserNotActive;\r\n        }\r\n        else if (error.error.error == \"beta end date has passed\") {\r\n\r\n          this.includeValues = this.betaUser + '\\n';\r\n          this.showMsg(this.includeValues);\r\n          this.commonService.callMethodOfSecondComponent('signIn');\r\n        }\r\n        else {\r\n          this.msg = this.dsLoginScreen.LoginFailed;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      if (!this.userAuthForm.controls['User'].valid && this.userAuthForm.controls['User'].value != null && this.userAuthForm.controls['User'].value != \"\")\r\n        this.msg = this.dsLoginScreen.Pleaseentervalidemail;     // this.msg = AppConstant.invalidEmail;\r\n      else if ((this.userAuthForm.controls['User'].value == null || this.userAuthForm.controls['User'].value == \"\") && (this.userAuthForm.controls['Signal'].value != null && this.userAuthForm.controls['Signal'].value != \"\"))\r\n        this.msg = this.dsLoginScreen.Pleaseenteruseremail;\r\n      else if ((this.userAuthForm.controls['Signal'].value == null || this.userAuthForm.controls['Signal'].value == \"\") && (this.userAuthForm.controls['User'].value != null && this.userAuthForm.controls['User'].value != \"\"))\r\n        this.msg = this.dsLoginScreen.Pleaseenterpassword;\r\n      else\r\n        this.msg = this.dsLoginScreen.Pleaseenterallrequiredfields;\r\n      //this.msg = AppConstant.requiredFields;\r\n    }\r\n\r\n  }\r\n\r\n  public onChangeRememberme(e) {\r\n    this.isRememberme = e.checked;\r\n  }\r\n\r\n  public rememeberMe() {\r\n    if (this.isRememberme) {\r\n      const userName = this.userAuthForm.value.User;\r\n      localStorage.setItem('rememberedUser', userName);\r\n    } else {\r\n      localStorage.removeItem('rememberedUser');\r\n    }\r\n  }\r\n\r\n  public createFormGroup(dataItem: any): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      // 'Email' : [dataItem.Email, Validators.compose([Validators.required, Validators.maxLength(100),Validators.pattern(/^[A-Za-z0-9.-]+$/) ])],\r\n      // 'User': [dataItem.User, Validators.compose([Validators.required, Validators.maxLength(100), Validators.pattern(\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\")])],\r\n      'User': [dataItem.User, Validators.compose([Validators.required, Validators.maxLength(100), Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,9}$\")])],\r\n      'Signal': [dataItem.Signal, Validators.compose([Validators.required, Validators.maxLength(20)])],\r\n      'GrantType': \"password\",\r\n      'LanguageId': this.labelService.selectedLanguage\r\n    })\r\n  }\r\n}\r\n","<div class=\"signin-outer\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center flex-column align-items-center\">\r\n      <div class=\"w-75\">\r\n        <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n\r\n          <div class=\"card-body\">\r\n\r\n            <div class=\"text-center mb-2\">\r\n              <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"logo-login\" />\r\n            </div>\r\n            <div class=\"text-center mb-5 info\">\r\n              {{dsLoginScreen.Pleasefillyourinformationbelow}}\r\n            </div>\r\n            <div class=\"text-center mb-0 errormsg\" style=\"color: red;\">\r\n              {{msg}}\r\n            </div>\r\n\r\n            <form class=\"form-signin\" [formGroup]=\"userAuthForm\" autocomplete=\"off\" (keyup.enter)=\"login()\">\r\n              <div class=\"form-label-group\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n\r\n                  <input matInput [placeholder]=\"dsLoginScreen.Email\" formControlName=\"User\"\r\n                    (keyup)=\"noSpaces($event.target.value)\" />\r\n                  <span matPrefix><img class=\"icon\" src=\"../../../assets/img/user.png\" alt=\"user\"> </span>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"form-label-group\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" [placeholder]=\"dsLoginScreen.Password\"\r\n                    formControlName=\"Signal\" autocomplete=\"off\" />\r\n                  <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                  <span matPrefix><img class=\"icon\" src=\"../../../assets/img/lock.png\" alt=\"lock\">\r\n                  </span>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"mb-2 d-flex justify-content-between\">\r\n                <div>\r\n                  <mat-checkbox class=\"remember-chk\" [checked]=\"isRememberme\" (change)=\"onChangeRememberme($event)\">\r\n                    {{dsLoginScreen.RememberMe}}</mat-checkbox>\r\n                </div>\r\n                <div>\r\n                  <a routerLink=\"/forgot\">{{dsLoginScreen.ForgotPassword}}</a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"d-flex align-items-center justify-content-center flex-column\">\r\n                <button class=\"btn btn-lg btn-primary btn-block  \" mat-raised-button color=\"warn\"\r\n                  (click)=\"login()\">{{dsLoginScreen.Login}}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { SideFilter } from '../models/side-filter';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderSidefilterService {\r\n\r\n  public filter: SideFilter;\r\n  public dsDVM: any[]=[];\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CommonService, DataService } from '../../services';\r\nimport { Router } from '@angular/router';\r\nimport { EnmCountry } from '../../shared/constants/enum';\r\n\r\n@Component({\r\n  selector: 'app-gigya-market',\r\n  templateUrl: './gigya-market.component.html',\r\n  styleUrls: ['./gigya-market.component.css']\r\n})\r\nexport class GigyaMarketComponent implements OnInit {\r\n\r\n  public dsGigyaMarket: any[] = [];\r\n  public selectedMarket: number;\r\n  public apiKey = \"\";\r\n\r\n  constructor(public commonService: CommonService, public dataService: DataService, public router: Router) {\r\n    const rmvScript = document.getElementById(\"widget\");\r\n    if (rmvScript != null)\r\n      document.head.removeChild(rmvScript);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.selectedMarket = localStorage.SelectedGygyaMarketId != undefined ? parseInt(localStorage.SelectedGygyaMarketId) : EnmCountry.UnitedStates;\r\n    this.commonService.getGigyaMarketDetails().subscribe(data => {\r\n      this.dsGigyaMarket = data.ResponseData;\r\n    });\r\n  }\r\n\r\n  public onChangeGigayMarket() {\r\n    localStorage.setItem('SelectedGygyaMarketId', this.selectedMarket.toString());\r\n    const rmvScript = document.getElementById(\"widget\");\r\n    if (rmvScript != null)\r\n      document.head.removeChild(rmvScript);\r\n\r\n    this.apiKey = this.dsGigyaMarket.find(x => x.ID == this.selectedMarket) != undefined ? this.dsGigyaMarket.find(x => x.ID == this.selectedMarket).Key : \"\";\r\n    localStorage.setItem('APIKey', this.apiKey);\r\n    this.dataService.appData.masterData.APIKey = this.apiKey;\r\n    this.dataService.data.next(this.dataService.appData);\r\n    this.router.navigateByUrl('/glogin');\r\n  }\r\n\r\n}\r\n","<div class=\"signin-outer\">\r\n  <div class=\"lang\">\r\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\r\n      <mat-select autocomplete=\"off\" [(ngModel)]=\"selectedMarket\">\r\n        <mat-option *ngFor=\"let market of dsGigyaMarket\" [value]=\"market.ID\" (click)=\"onChangeGigayMarket()\">\r\n          {{ market.Name }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { CommonService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-refresh-dap',\r\n  templateUrl: './refresh-dap.component.html',\r\n  styleUrls: ['./refresh-dap.component.css']\r\n})\r\nexport class RefreshDapComponent{\r\n  public status = \"\";\r\n\r\n  constructor(public commonService: CommonService) {\r\n    if (window.location.host.indexOf(\"www.zoetisdx.com\") == -1) {\r\n      this.commonService.refreshDap().subscribe(data => {\r\n        if (data.ResponseData.status == \"Ok\")\r\n          this.status = \"Refreshed\";\r\n        else\r\n          this.status = data.ResponseData.status;\r\n      }, err => {\r\n        console.log(JSON.stringify(err));\r\n        this.commonService.showCommonToastrError();\r\n      });\r\n    }\r\n    else {\r\n      this.status = \"\";\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<p>{{status}}</p>\r\n","import { Component } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-internal-banner',\r\n  templateUrl: './internal-banner.component.html',\r\n  styleUrls: ['./internal-banner.component.css']\r\n})\r\nexport class InternalBannerComponent {\r\n\r\n  newinternalLink = environment.ZdxInternalUrl\r\n  constructor() {\r\n    setTimeout(() => {\r\n      window.location.href = environment.ZdxInternalUrl;\r\n    }, 20000)\r\n  }\r\n\r\n\r\n  navToNewUrl() {\r\n    window.location.href = environment.ZdxInternalUrl;\r\n  }\r\n}\r\n\r\n","<div class=\"signin-outer\">\r\n  <div class=\"signin-outer\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center flex-column align-items-center\">\r\n        <div class=\"col-sm-5\">\r\n          <div class=\"card card-signin my-5 pt-4 pb-4\">\r\n\r\n            <div class=\"card-body\">\r\n\r\n              <div class=\"text-center mb-2\">\r\n                <img src=\"../../../assets/img/logo-login@2x.png\" alt=\"img\" />\r\n              </div>\r\n\r\n              <div class=\"text-center\">\r\n                <div class=\"text-center in-bnt\">\r\n                  <img src=\"../../../assets/img/alert-triangle_banr.svg\" alt=\"img\" />\r\n                </div>\r\n                <p class=\"text-justify int-bnt\">\r\n                  ZoetisDx Internal application has moved to <a\r\n                    href=\"{{newinternalLink}}\">{{newinternalLink.replace(\"com/\",\"com\")}}</a> and the current website\r\n                  will no longer be accessible from January 5th, 2024. You can click directly on the new URL to log in\r\n                  or stay on this page and you will be redirected to the new website. Remember to bookmark & save the\r\n                  new URL!\r\n                </p>\r\n\r\n                <button type=\"button\" class=\"logBtn\" (click)=\"navToNewUrl()\">\r\n                  {{newinternalLink.replace(\"com/\",\"com\")}}\r\n                </button>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class PagenotfoundComponent {\r\n\r\n}\r\n","<div class=\"wrap-container\">\r\n    <div class=\"text-center\">\r\n        <h6>404</h6>\r\n        <h6 data-testid=\"nf-title\">Page not found.</h6>\r\n    </div>\r\n</div>","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { MyMonitoringService } from '../services/my-monitoring.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandlerService extends ErrorHandler {\r\n\r\n  constructor(private myMonitoringService: MyMonitoringService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error) {\r\n    console.log('Custom', error)\r\n    if (environment.production) this.myMonitoringService.logException(error); // Manually log exception\r\n  }\r\n}\r\n","import { DialogRef } from '@angular/cdk/dialog';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-consultation-report',\r\n  templateUrl: './consultation-report.component.html',\r\n  styleUrls: ['./consultation-report.component.css']\r\n})\r\nexport class ConsultationReportComponent {\r\n\r\n  constructor(private modalRef: DialogRef<ConsultationReportComponent>){\r\n\r\n  }\r\n  closeModal(){\r\n    this.modalRef.close()\r\n  }\r\n}\r\n","<h4 mat-dialog-title>\r\n    <mat-toolbar role=\"toolbar\" class=\"task-header\">\r\n        <span class=\"dialogttl\" data-testid=\"mp-title\"> Report</span>\r\n        <button type=\"button\" class=\"close body-close\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </mat-toolbar>\r\n</h4>\r\n<div mat-dialog-content>\r\n\r\n\r\n        <img src=\"../../../../../assets/img/zcs/report.png\" alt=\"\" style=\"width: 100%; height: 100%;\">\r\n\r\n</div>","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, ErrorHandler } from \"@angular/core\";\r\nimport { MatModule } from './modules/mat-module/mat.module';\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { SideFilterModule } from './modules';\r\nimport { HeaderModule } from './modules/header/header.module';\r\nimport { SideMenuModule } from './modules/side-menu/side-menu.module';\r\nimport { AppComponent } from \"./app.component\";\r\nimport { SigninComponent } from \"./components/signin/signin.component\";\r\n// import { RegisterComponent } from './components/register/register.component';\r\nimport { ResetComponent } from './components/reset/reset.component';\r\nimport { ForgotComponent } from './components/forgot/forgot.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { CommonService } from './services/common.service';\r\nimport { provideHttpClient, withInterceptorsFromDi, withJsonpSupport } from '@angular/common/http';\r\nimport { NgHttpLoaderModule } from 'ng-http-loader';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogComponent } from './components/confirmation-dialog/confirmation-dialog.component';\r\nimport { ConfirmationDialogService } from './components/confirmation-dialog/confirmation-dialog.service';\r\nimport { ClinicManagementComponent } from './components/clinic-management/clinic-management.component';\r\nimport { UserListComponent } from './components/user-managements/user-list/user-list.component';\r\n// import { AddUserComponent } from './components/user-managements/add-user/add-user.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { ThanksComponent } from './components/thanks/thanks.component';\r\nimport { authInterceptorProviders, PendoService } from './services';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateFormats, CustomDateAdapter } from './shared';\r\nimport { HeaderService } from './services/header.service';\r\nimport { PatientService } from './services/patient.service';\r\nimport { FuseService } from './services/fuse.service';\r\nimport { PatientListComponent } from './components/patient-managements/patient-list/patient-list.component';\r\nimport { NgImageSliderModule } from 'ng-image-slider-v17';\r\nimport { FuseListComponent } from './components/fuse-managements/fuse-list/fuse-list.component';\r\nimport { SidenavService } from './services/sidenav.service';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\n// import { UserProfileComponent } from './components/user-managements/user-profile/user-profile.component';\r\nimport { UserSupportComponent } from './components/user-managements/user-support/user-support.component';\r\nimport { UserService } from './services/user.service';\r\nimport { LabelService } from './services/label.service';\r\nimport { SidefilterService } from './services/sidefilter.service';\r\nimport { OrderSidefilterService } from './services/order-sidefilter.service';\r\nimport { HelpComponent } from './components/help/help.component';\r\nimport { AutoLogoutService } from './services/auto.logout.service';\r\nimport { EndUserLicenseAgreementComponent } from './components/end-user-license-agreement/end-user-license-agreement.component';\r\nimport { RotorCreditComponent } from './components/rotor-credits/rotor-credit/rotor-credit.component';\r\nimport { ImageSliderComponent } from './shared/image-slider/image-slider.component';\r\nimport { RotorCreditFirstScreenComponent } from './components/rotor-credits/rotor-credit-first-screen/rotor-credit-first-screen.component'\r\nimport { PatientInfoComponent } from './components/patient-managements/patient-info/patient-info.component';\r\nimport { ConsultPatientInfoComponent } from './components/patient-managements/consult-patient-info/consult-patient-info.component';\r\nimport { SidemenuService } from './services/sidemenu.service';\r\nimport { LoginRegisIntermediateComponent } from './components/login-regis-intermediate/login-regis-intermediate.component';\r\nimport { GigyaLoginComponent } from './components/gigya-login/gigya-login.component';\r\nimport { GigyaMarketComponent } from './components/gigya-market/gigya-market.component';\r\nimport { GigyaResetComponent } from './components/gigya-managements/gigya-reset/gigya-reset.component';\r\nimport { GigyaUserProfileComponent } from './components/gigya-managements/gigya-user-profile/gigya-user-profile.component';\r\nimport { GigyaChangePasswordComponent } from './components/gigya-managements/gigya-change-password/gigya-change-password.component';\r\nimport { pipeModule } from './pipe/pipe.module';\r\nimport { AccountSettingsComponent } from './components/user-managements/account-settings/account-settings.component';\r\nimport { SecurityComponent } from './components/user-managements/security/security.component';\r\nimport { PreferencesComponent } from './components/user-managements/preferences/preferences.component';\r\nimport { DirectivesModule } from './directive/directives.module';\r\nimport { AlertService } from './services';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n// import { FaqComponent } from './components/faq/faq.component';\r\nimport { UpsComponent } from './components/ups/ups.component';\r\n// import { LoginComponent } from './components/login/login.component';\r\nimport { ZrlVerificationComponent } from './components/zrl-verification/zrl-verification.component';\r\nimport { AddUserModule } from './modules';\r\n// import { CountryLangComponent } from './components/country-lang/country-lang.component';\r\nimport { AutoRefreshService } from \"./services/auto.refresh.service\";\r\nimport { ZdxRedirectionComponent } from './components/zdx-redirection/zdx-redirection.component';\r\nimport { DashboardFilterComponent } from './components/dashboard/dashboard-filter/dashboard-filter.component';\r\nimport { SearchResultsComponent } from './components/search-results/search-results.component';\r\nimport { AccessionResultsComponent } from './components/accession-results/accession-results.component';\r\nimport { AccessionTemplateOneComponent } from './components/accession-results/templates/accession-template-one/accession-template-one.component';\r\nimport { AccessionTemplateThreeComponent } from \"./components/accession-results/templates/accession-template-three/accession-template-three.component\";\r\nimport { AccessionTemplateFourComponent } from \"./components/accession-results/templates/accession-template-four/accession-template-four.component\";\r\nimport { AccessionTemplateFiveComponent } from \"./components/accession-results/templates/accession-template-five/accession-template-five.component\";\r\nimport { AccessiontTemplateSixComponent } from \"./components/accession-results/templates/accession-template-six/accession-template-six.component\";\r\nimport { AccessionTemplateSevenComponent } from \"./components/accession-results/templates/accession-template-seven/accession-template-seven.component\";\r\nimport { AccessionTemplateNineComponent } from \"./components/accession-results/templates/accession-template-nine/accession-template-nine.component\";\r\nimport { AccessionTemplateTenComponent } from \"./components/accession-results/templates/accession-template-ten/accession-template-ten.component\";\r\nimport { AccessionTemplate12Component } from \"./components/accession-results/templates/accession-template-12/accession-template-12.component\";\r\nimport { AccessionTemplate13Component } from \"./components/accession-results/templates/accession-template-13/accession-template-13.component\";\r\nimport { PatientInfoEditComponent } from './components/patient-managements/patient-info-edit/patient-info-edit.component';\r\nimport { MergePatientComponent } from './components/patient-managements/merge-patient/merge-patient.component';\r\nimport { MaintenanceComponent } from './components/maintenance/maintenance.component';\r\nimport { ConsultDosComponent } from './components/consult-dos/consult-dos.component';\r\nimport { ScriptLoaderService } from './services/script-loader.service';\r\nimport { RefreshDapComponent } from './components/refresh-dap/refresh-dap.component';\r\nimport { FcrComponent } from \"./components/floating-consult-report/fcr.component\";\r\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\r\nimport { PatientInfoTestsComponent } from \"./components/patient-managements/patient-info-tests/patient-info-tests.component\";\r\nimport { InternalBannerComponent } from './components/internal-banner/internal-banner.component';\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\nimport { PagenotfoundComponent } from './components/pagenotfound/pagenotfound.component';\r\nimport { ErrorHandlerService } from \"./services/error-handler.service\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { HomepageComponent } from './components/homepage/homepage.component';\r\nimport { ResultListComponent } from './components/homepage/result-list/result-list.component';\r\nimport { ConsultationsComponent } from './components/homepage/consultations/consultations.component';\r\nimport { ConsultationListComponent } from \"./components/patient-managements/consultation-list/consultation-list.component\";\r\nimport { ConsultationDetailsComponent } from './components/patient-managements/consultation-list/consultation-details/consultation-details.component';\r\nimport { ConsultationReportComponent } from './components/patient-managements/consultation-list/consultation-report/consultation-report.component';\r\nimport { PdfModalComponent } from './shared/pdf-modal/pdf-modal.component';\r\nimport { PimsManagementComponent } from \"./components/pims-management/pims-management.component\";\r\nimport { QuillModule } from 'ngx-quill'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SigninComponent,\r\n    // RegisterComponent,\r\n    ResetComponent,\r\n    ForgotComponent,\r\n    DashboardComponent,\r\n    ConfirmationDialogComponent,\r\n    ImageSliderComponent,\r\n    ClinicManagementComponent,\r\n    UserListComponent,\r\n    // AddUserComponent,\r\n    VerifyComponent,\r\n    ThanksComponent,\r\n    PatientListComponent,\r\n    FuseListComponent,\r\n    SettingsComponent,\r\n    // UserProfileComponent,\r\n    UserSupportComponent,\r\n    HelpComponent,\r\n    EndUserLicenseAgreementComponent,\r\n    EndUserLicenseAgreementComponent,\r\n    RotorCreditComponent,\r\n    RotorCreditFirstScreenComponent,\r\n    PatientInfoComponent,\r\n    ConsultPatientInfoComponent,\r\n    LoginRegisIntermediateComponent,\r\n    GigyaLoginComponent,\r\n    GigyaMarketComponent,\r\n    GigyaResetComponent,\r\n    GigyaUserProfileComponent,\r\n    GigyaChangePasswordComponent,\r\n    AccountSettingsComponent,\r\n    SecurityComponent,\r\n    PreferencesComponent,\r\n    // FaqComponent,\r\n    UpsComponent,\r\n    // LoginComponent,\r\n    ZrlVerificationComponent,\r\n    // CountryLangComponent,\r\n    ZdxRedirectionComponent,\r\n    DashboardFilterComponent,\r\n    SearchResultsComponent,\r\n    AccessionResultsComponent,\r\n    AccessionTemplateOneComponent,\r\n    AccessionTemplateThreeComponent,\r\n    AccessionTemplateFourComponent,\r\n    AccessionTemplateFiveComponent,\r\n    AccessiontTemplateSixComponent,\r\n    AccessionTemplateSevenComponent,\r\n    AccessionTemplateNineComponent,\r\n    AccessionTemplate12Component,\r\n    AccessionTemplate13Component,\r\n    AccessionTemplateTenComponent,\r\n    PatientInfoEditComponent,\r\n    MergePatientComponent,\r\n    MaintenanceComponent,\r\n    ConsultDosComponent,\r\n    RefreshDapComponent,\r\n    // FcrComponent,\r\n    PatientInfoTestsComponent,\r\n    InternalBannerComponent,\r\n    PagenotfoundComponent,\r\n    HomepageComponent,\r\n    ResultListComponent,\r\n    ConsultationsComponent,\r\n    ConsultationListComponent,\r\n    ConsultationDetailsComponent,\r\n    ConsultationReportComponent,\r\n    PdfModalComponent,\r\n    PimsManagementComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA], \r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatModule,\r\n    HeaderModule,\r\n    SideMenuModule,\r\n    SideFilterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgImageSliderModule,\r\n    NgHttpLoaderModule.forRoot(),\r\n    NgbModule,\r\n    DirectivesModule,\r\n    pipeModule,\r\n    MatDatepickerModule,\r\n    AddUserModule,\r\n    FormsModule,\r\n    AngularEditorModule,\r\n    PdfViewerModule,\r\n    FcrComponent,\r\n    ToastrModule.forRoot({\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n    QuillModule.forRoot(),\r\n  ], providers: [CommonService, HeaderService, PatientService, FuseService, ConfirmationDialogService,\r\n      authInterceptorProviders, SidenavService, UserService, LabelService, AlertService,\r\n      SidefilterService, OrderSidefilterService, SidemenuService, AutoLogoutService, AutoRefreshService,\r\n      { provide: MAT_DATE_FORMATS, useValue: DateFormats },\r\n      { provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n      ScriptLoaderService,\r\n      { provide: ErrorHandler, useClass: ErrorHandlerService }, provideHttpClient(withInterceptorsFromDi(), withJsonpSupport()),]\r\n})\r\nexport class AppModule {\r\n  constructor(private common: CommonService) {\r\n    this.common.SetLocaleForDate();\r\n  }\r\n}\r\n","export class FuseDetails {\r\n  public Id = 0;\r\n  public FuseSerialNo: string;\r\n  public FusePin: string;\r\n  public StartDate: string;\r\n  public EndDate: string;\r\n\r\n  public UserGuid: string;\r\n  public businessGuid: string;\r\n  public CreatedAt: string;\r\n  public CreatedBy: number;\r\n  public ModifiedAt: string;\r\n  public modifiedGuid: string;\r\n  public IsActive: boolean;\r\n  public IsDeleted = false;\r\n}\r\n\r\nexport class Token {\r\n  public languageId: number;\r\n  public Guid: string;\r\n  public deviceId: string;\r\n  public deviceType: string;\r\n  public username: string;\r\n}\r\n","/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n  const props = Object.getOwnPropertyDescriptors(src);\n  for (let prop of exclude) delete props[prop];\n  Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) return currentChain;\n  return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n  if (objs.length === 0) return undefined;\n  let commonProto = undefined;\n  const protoChains = objs.map(obj => protoChain(obj));\n  while (protoChains.every(protoChain => protoChain.length > 0)) {\n    const protos = protoChains.map(protoChain => protoChain.pop());\n    const potentialCommonProto = protos[0];\n    if (protos.every(proto => proto === potentialCommonProto)) commonProto = potentialCommonProto;else break;\n  }\n  return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n  var _a;\n  const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n  const mixedProto = Object.create(base);\n  // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n  // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n  // when they will already be accessible via prototype access.\n  const visitedProtos = protoChain(base);\n  for (let prototype of ingredients) {\n    let protos = protoChain(prototype);\n    // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n    for (let i = protos.length - 1; i >= 0; i--) {\n      let newProto = protos[i];\n      if (visitedProtos.indexOf(newProto) === -1) {\n        copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n        visitedProtos.push(newProto);\n      }\n    }\n  }\n  mixedProto.constructor = constructor;\n  return mixedProto;\n};\nconst unique = arr => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n  const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n  // since we search breadth-first, we need to keep track of our depth in the prototype chains\n  let protoDepth = 0;\n  // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n  // prototype chains has an object at this depth\n  let protosAreLeftToSearch = true;\n  while (protosAreLeftToSearch) {\n    // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n    protosAreLeftToSearch = false;\n    // scan through the ingredients right to left\n    for (let i = ingredients.length - 1; i >= 0; i--) {\n      const searchTarget = protoChains[i][protoDepth];\n      if (searchTarget !== undefined && searchTarget !== null) {\n        // if we find something, this is proof that this horizontal slice potentially more objects to search\n        protosAreLeftToSearch = true;\n        // eureka, we found it\n        if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n          return protoChains[i][0];\n        }\n      }\n    }\n    protoDepth++;\n  }\n  return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n  getPrototypeOf() {\n    return prototype;\n  },\n  setPrototypeOf() {\n    throw Error('Cannot set prototype of Proxies created by ts-mixer');\n  },\n  getOwnPropertyDescriptor(_, prop) {\n    return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n  },\n  defineProperty() {\n    throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n  },\n  has(_, prop) {\n    return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n  },\n  get(_, prop) {\n    return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n  },\n  set(_, prop, val) {\n    const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n    if (ingredientWithProp === undefined) throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n    ingredientWithProp[prop] = val;\n    return true;\n  },\n  deleteProperty() {\n    throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n  },\n  ownKeys() {\n    return ingredients.map(Object.getOwnPropertyNames).reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n  }\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, {\n  constructor\n}]);\nconst settings = {\n  initFunction: null,\n  staticsStrategy: 'copy',\n  prototypeStrategy: 'copy',\n  decoratorInheritance: 'deep'\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new WeakMap();\nconst getMixinsForClass = clazz => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n  if (instance instanceof mixin) return true;\n  const constructor = instance.constructor;\n  const visited = new Set();\n  let frontier = new Set();\n  frontier.add(constructor);\n  while (frontier.size > 0) {\n    // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n    if (frontier.has(mixin)) return true;\n    frontier.forEach(item => visited.add(item));\n    // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n    const newFrontier = new Set();\n    frontier.forEach(item => {\n      var _a;\n      const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n      if (itemConstituents) itemConstituents.forEach(constituent => {\n        if (!visited.has(constituent) && !frontier.has(constituent)) newFrontier.add(constituent);\n      });\n    });\n    // we have a new frontier, now search again\n    frontier = newFrontier;\n  }\n  // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n  return false;\n};\nconst mergeObjectsOfDecorators = (o1, o2) => {\n  var _a, _b;\n  const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n  const mergedObject = {};\n  for (let key of allKeys) mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n  return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n  var _a, _b, _c, _d;\n  return {\n    property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n    method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {})\n  };\n};\nconst mergeDecorators = (d1, d2) => {\n  var _a, _b, _c, _d, _e, _f;\n  return {\n    class: unique([...((_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : []), ...((_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : [])]),\n    static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n    instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {})\n  };\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n  var _a;\n  const allClasses = new Set();\n  const frontier = new Set([...classes]);\n  while (frontier.size > 0) {\n    for (let clazz of frontier) {\n      const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n      const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n      const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n      const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n      for (let newClass of newClasses) frontier.add(newClass);\n      allClasses.add(clazz);\n      frontier.delete(clazz);\n    }\n  }\n  return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n  const decoratorsForClassChain = findAllConstituentClasses(...classes).map(clazz => decorators.get(clazz)).filter(decorators => !!decorators);\n  if (decoratorsForClassChain.length == 0) return {};\n  if (decoratorsForClassChain.length == 1) return decoratorsForClassChain[0];\n  return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n  const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n  if (classDecorators.length === 0) return {};\n  if (classDecorators.length === 1) return classDecorators[0];\n  return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = clazz => {\n  let decoratorsForClass = decorators.get(clazz);\n  if (!decoratorsForClass) {\n    decoratorsForClass = {};\n    decorators.set(clazz, decoratorsForClass);\n  }\n  return decoratorsForClass;\n};\nconst decorateClass = decorator => clazz => {\n  const decoratorsForClass = getDecoratorsForClass(clazz);\n  let classDecorators = decoratorsForClass.class;\n  if (!classDecorators) {\n    classDecorators = [];\n    decoratorsForClass.class = classDecorators;\n  }\n  classDecorators.push(decorator);\n  return decorator(clazz);\n};\nconst decorateMember = decorator => (object, key, ...otherArgs) => {\n  var _a, _b, _c;\n  const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n  const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n  const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n  const decoratorsForClass = getDecoratorsForClass(clazz);\n  const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n  decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n  let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n  decoratorsForTargetType[decoratorType] = decoratorsForType;\n  let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n  decoratorsForType[key] = decoratorsForKey;\n  // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n  decoratorsForKey.push(decorator);\n  // @ts-ignore\n  return decorator(object, key, ...otherArgs);\n};\nconst decorate = decorator => (...args) => {\n  if (args.length === 1) return decorateClass(decorator)(args[0]);\n  return decorateMember(decorator)(...args);\n};\nfunction Mixin(...constructors) {\n  var _a, _b, _c;\n  const prototypes = constructors.map(constructor => constructor.prototype);\n  // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n  // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n  // similarly to constructors -- not methods, which simply override each other.\n  const initFunctionName = settings.initFunction;\n  if (initFunctionName !== null) {\n    const initFunctions = prototypes.map(proto => proto[initFunctionName]).filter(func => typeof func === 'function');\n    const combinedInitFunction = function (...args) {\n      for (let initFunction of initFunctions) initFunction.apply(this, args);\n    };\n    const extraProto = {\n      [initFunctionName]: combinedInitFunction\n    };\n    prototypes.push(extraProto);\n  }\n  function MixedClass(...args) {\n    for (const constructor of constructors)\n    // @ts-ignore: potentially abstract class\n    copyProps(this, new constructor(...args));\n    if (initFunctionName !== null && typeof this[initFunctionName] === 'function') this[initFunctionName].apply(this, args);\n  }\n  MixedClass.prototype = settings.prototypeStrategy === 'copy' ? hardMixProtos(prototypes, MixedClass) : softMixProtos(prototypes, MixedClass);\n  Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy' ? hardMixProtos(constructors, null, ['prototype']) : proxyMix(constructors, Function.prototype));\n  let DecoratedMixedClass = MixedClass;\n  if (settings.decoratorInheritance !== 'none') {\n    const classDecorators = settings.decoratorInheritance === 'deep' ? deepDecoratorSearch(...constructors) : directDecoratorSearch(...constructors);\n    for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n      const result = decorator(DecoratedMixedClass);\n      if (result) {\n        DecoratedMixedClass = result;\n      }\n    }\n    applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n    applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n  }\n  registerMixins(DecoratedMixedClass, constructors);\n  return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n  const propDecorators = propAndMethodDecorators.property;\n  const methodDecorators = propAndMethodDecorators.method;\n  if (propDecorators) for (let key in propDecorators) for (let decorator of propDecorators[key]) decorator(target, key);\n  if (methodDecorators) for (let key in methodDecorators) for (let decorator of methodDecorators[key]) decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n  // @ts-ignore\n  const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n  Object.defineProperty(mixedClass, 'name', {\n    value: decoratedClass.name,\n    writable: false\n  });\n  return mixedClass;\n};\nexport { Mixin, decorate, hasMixin, mix, settings };","import { Injectable } from \"@angular/core\";\r\nimport { CommonService, DataService, HeaderService, PatientService, RefLabService } from \"../../services\";\r\nimport { Token } from \"./cvet.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ApiSetting } from \"../../shared/constants/api-setting\";\r\nimport { Mixin } from \"ts-mixer\";\r\nimport { CvetStorage } from \"./storage.service\";\r\nexport class CvetService extends Mixin(DataService, PatientService, RefLabService, HeaderService, CommonService) {\r\n\r\n  public auth(data: any): Observable<any> {\r\n    const uiguid = this.generateGuid();\r\n    // const params1 = {\r\n    //   \"username\": \"SHiKNSMHesPt/jaCfgPW4PGYI+FFbeQiEff6wk+IFiI=\",\r\n    //   \"deviceId\": \"9a9ba9aabab0081ebcf22a58c81aa81b\",\r\n    //   \"deviceType\": \"EXTL\",\r\n    //   \"languageId\": 1,\r\n    //   \"gigyaUID\": \"d8d90cde-746f-48d2-a2fd-b8dcfc16d5fa\"\r\n    // }\r\n    this.appData.deviceId = uiguid;\r\n    const token = new Token();\r\n    token.deviceId = uiguid;\r\n    token.deviceType = \"EXTL\";\r\n    token.Guid = data.GUID;\r\n    token.languageId = 1;\r\n    // deepcode ignore NoHardcodedCredentials: <Just for demo credentials>\r\n    token.username = \"Test\";\r\n    localStorage.setItem(\"UIGuid\", uiguid);\r\n    this.data.next(this.appData);\r\n\r\n    const testParams = {\r\n      username: \"SHiKNSMHesPt/jaCfgPW4PGYI+FFbeQiEff6wk+IFiI=\",\r\n      deviceId: uiguid,\r\n      deviceType: \"web\",\r\n      languageId: 1,\r\n      gigyaUID: \"d8d90cde-746f-48d2-a2fd-b8dcfc16d5fa\"\r\n    }\r\n\r\n    return this.http.post<any>(ApiSetting.loginAuth, token);\r\n  }\r\n\r\n}\r\n","export class MESSAGES {\r\n  static AUTHENTICATING = \"Authenticating...\";\r\n  static REDIRECTING = \"Redirecting...\";\r\n  static TRYAGAIN = \"Try Again\";\r\n  static AUTH_ERROR = \"Authentication error! Please try again.\";\r\n  static REDIRECTION_ERROR = \"Redirection error! Please try again.\";\r\n  static NO_RECORD = \"No record found! Please try again.\";\r\n  static ERROR_FETCHING = \"Error while fetching data! Please try again.\";\r\n}\r\n","import { ApplicationRef, Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AppComponent } from \"../../../app.component\";\r\nimport { CvetService } from \"../cvet.service\";\r\nimport { Token } from \"../cvet.model\";\r\nimport { MESSAGES } from \"../messages\";\r\nimport { CvetStorage } from \"../storage.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { OrderParams, SideFilter } from \"../../../models/side-filter\";\r\nimport { EnmLanguage } from \"../../../shared/constants/enum\";\r\nimport { DataService } from \"../../../services\";\r\n\r\n@Component({\r\n  selector: \"app-zdx-deep-link\",\r\n  templateUrl: \"./zdx-deep-link.component.html\",\r\n  styleUrls: [\"./zdx-deep-link.component.css\"],\r\n})\r\nexport class ZdxDeepLinkComponent implements OnInit {\r\n\r\n  loadingText: string = MESSAGES.AUTHENTICATING;\r\n  params: Record<string, string>;\r\n  tryAgainFlag = false;\r\n  public orderParams: SideFilter;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n    private appRef: ApplicationRef,\r\n    private cvetService: CvetService,\r\n    private storage: CvetStorage,\r\n    private dataService: DataService\r\n  ) {\r\n    this.storage.clearAll();\r\n    this.storage.init();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activeRoute.params.subscribe(async (params) => {\r\n      const source =\r\n        params.OAID.indexOf(\"I-\") !== -1 ? \"InClinic\" : \"ReferenceLab\";\r\n      const finalParams = {\r\n        ...params,\r\n        ...{ Source: source },\r\n        ...{ OAID: params.OAID.replace(\"I-\", \"\").replace(\"R-\", \"\") },\r\n      };\r\n      this.params = finalParams;\r\n      this.storage.set(\"params\", finalParams);\r\n      try {\r\n        await this.secureLogin(params);\r\n      } catch (error) {\r\n        this.loadingText = MESSAGES.AUTH_ERROR;\r\n      }\r\n    });\r\n  }\r\n\r\n  // bootstrapApp() {\r\n  //   const app = document.getElementById(\"zdxApp\");\r\n  //   app.innerHTML = \"<app-root></app-root>\";\r\n  //   this.appRef.bootstrap(AppComponent);\r\n  //   return this;\r\n  // }\r\n\r\n  async secureLogin(params) {\r\n    this.loadingText = MESSAGES.AUTHENTICATING;\r\n    return this.cvetService.auth(params).subscribe(\r\n      async (data) => {\r\n        this.loadingText = MESSAGES.REDIRECTING;\r\n        this.dataService.appData.authDetails = data;\r\n        this.dataService.data.next(this.dataService.appData);\r\n        try {\r\n          await this.cvetService.setAuthSession(data);\r\n        } catch (error) {\r\n          this.loadingText = MESSAGES.NO_RECORD;\r\n          return false;\r\n        }\r\n        // try {\r\n        //   this.cvetService.commonService.firebase\r\n        //     .analytics()\r\n        //     .logEvent(\"login\", { user_email: data.Email });\r\n        // } catch (error) {}\r\n\r\n        try {\r\n          this.navigateToResultDetails();\r\n        } catch (error) {\r\n          this.loadingText = MESSAGES.REDIRECTION_ERROR;\r\n        }\r\n      },\r\n      () => {\r\n        this.loadingText = MESSAGES.AUTH_ERROR;\r\n      }\r\n    );\r\n  }\r\n\r\n  navigateToResultDetails() {\r\n    this.router.navigateByUrl(`${environment.CvetPATH}/result-details`);\r\n  }\r\n\r\n}\r\n","<div class=\"row col-12\" style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\r\n    <div class=\"loader-container\">\r\n        <div class=\"loader-section\">\r\n            <div class=\"loader\"></div>\r\n            <img id=\"logo-inside-loader\" src=\"./assets/img/logo-header@2x.png\" alt=\"\">\r\n        </div>\r\n        <div class=\"text-section\">\r\n            <span>\r\n                {{ loadingText }}\r\n            </span>\r\n\r\n            <button *ngIf=\"tryAgainFlag\" class=\"w-50 g-btn mt-2\" mat-raised-button color=\"warn\" (click)=\"tryAgain()\">\r\n                Try Again\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { RefLabService } from \"./../../../services/ref-lab.service\";\r\nimport {\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport {\r\n  DataService,\r\n  HeaderService,\r\n  LabelService,\r\n  PatientService,\r\n  CommonService,\r\n  SidefilterService,\r\n  EncrDecrService,\r\n} from \"src/app/services\";\r\nimport { ConfirmationDialogService } from \"src/app/components/confirmation-dialog/confirmation-dialog.service\";\r\nimport {\r\n  PatientInfo,\r\n  DownloadMultipleAnalysisResult,\r\n  AnalysisDetails,\r\n} from \"src/app/models/patient\";\r\nimport { SideFilter } from \"src/app/models/side-filter\";\r\nimport {\r\n  EnmNotificationSetting,\r\n  EnmAnalysisStatus,\r\n  EnmCountry,\r\n  EnmLanguage,\r\n} from \"src/app/shared/constants/enum\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { RefLabGuard } from \"src/app/guards\";\r\nimport { SpinnerVisibilityService } from \"ng-http-loader\";\r\nimport { MatLegacyDialog as MatDialog } from \"@angular/material/legacy-dialog\";\r\nimport { MatDrawer } from \"@angular/material/sidenav\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from \"@angular/animations\";\r\nimport { CvetService } from \"../cvet.service\";\r\nimport { UserAuth } from \"src/app/models\";\r\n\r\n@Component({\r\n  selector: \"app-results\",\r\n  templateUrl: \"./results.component.html\",\r\n  styleUrls: [\"./results.component.css\"],\r\n  animations: [\r\n    trigger(\"detailExpand\", [\r\n      state(\r\n        \"in\",\r\n        style({\r\n          transform: \"translate3d(0, 0, 0)\",\r\n        })\r\n      ),\r\n      state(\r\n        \"out\",\r\n        style({\r\n          transform: \"translate3d(100%, 0, 0)\",\r\n        })\r\n      ),\r\n      transition(\"in => out\", animate(\"400ms ease-in-out\")),\r\n      transition(\"out => in\", animate(\"400ms ease-in-out\")),\r\n    ]),\r\n  ],\r\n})\r\nexport class ResultsComponent implements OnInit, OnDestroy {\r\n  downloadMultipleAnalysisResult: DownloadMultipleAnalysisResult;\r\n  analysisDetails: AnalysisDetails;\r\n  filterData = [];\r\n  public isLoadMore: boolean;\r\n  start = 0;\r\n  limit = 100;\r\n  counter = 0;\r\n  end: number = this.limit + this.start;\r\n  public patientInfo: PatientInfo;\r\n  filter: SideFilter;\r\n\r\n  dataSource = new MatTableDataSource<any>();\r\n  originData: any[] = [];\r\n  IsAllSelected = false;\r\n  showPrintIcon = false;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  public canceledAnalysisStatusId = EnmAnalysisStatus.Canceled;\r\n  selectedBusinessId: number;\r\n  businessGuid: any;\r\n  public isBackOfficeUser: boolean;\r\n  public isConsultantUser: boolean;\r\n  public pataientId: any;\r\n  public patient: any = {};\r\n  bckBusinessInfo = JSON.parse(localStorage.getItem(\"bckBusinessInfo\"));\r\n  @ViewChild(MatDrawer, { static: true }) drawer: MatDrawer;\r\n  public helpObj: any;\r\n  consultSec = false;\r\n  consultations = [];\r\n\r\n  public FromDateLabel: Date;\r\n  public ToDateLabel: Date;\r\n  columnsToDisplay = [\r\n    \"DateReceivedStr\",\r\n    \"PhysicianName\",\r\n    \"AnalysisSourceName\",\r\n    \"AnalysisTypeName\",\r\n    \"AccessionId\",\r\n  ];\r\n  columnsToDisplayWithExpand = [...this.columnsToDisplay, \"expand\"];\r\n  expandedElement: null;\r\n  loadData: any;\r\n  zoomLevel: number = 1;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    public patientService: PatientService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    public labelService: LabelService,\r\n    public headerService: HeaderService,\r\n    public sidefilterService: SidefilterService,\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    public dataService: DataService,\r\n    private title: Title,\r\n    private EncrDecr: EncrDecrService,\r\n    public dialog: MatDialog,\r\n    public refLabService: RefLabService,\r\n    public refLabGuard: RefLabGuard,\r\n    private spinner: SpinnerVisibilityService,\r\n    private cvetService: CvetService\r\n  ) {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.patientInfo = new PatientInfo();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.commonService\r\n      .getUserDDLDetails(\r\n        EnmLanguage.English,\r\n        EnmCountry.UnitedStates,\r\n        null,\r\n        true\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.dataService.appData.userDropDownList = res.ResponseData;\r\n          this.dataService.data.next(this.dataService.appData);\r\n        },\r\n        (err) => {\r\n          console.log(JSON.stringify(err));\r\n        }\r\n      );\r\n\r\n    // {\r\n    //   \"session\": \"ZxQpGuQWThCQwvLH%2FaMBHvxdbf2RpEWoLte6mQI0LXDlzldwZNxMch5pGaNOrkuc\",\r\n    //   \"domain\": \"zdxpoc1-api.mobileprogramming.net\",\r\n    //   \"ClientRequestId\": 'bpl5s0Pj53'\r\n    // }\r\n    //document.getElementById('cunsultation-report-btn').style.display = 'none';\r\n\r\n    const _params = this.toLower(this.route.snapshot.queryParams);\r\n    const clientrequestid = _params[\"clientrequestid\"];\r\n\r\n    const referrer = document.referrer\r\n      ? new URL(document.referrer).hostname\r\n      : \"localhost\";\r\n    const req = {\r\n      session: this.route.snapshot.params.token,\r\n      //domain: \"zdxpoc-api.mobileprogramming.net\",\r\n      domain: referrer,\r\n      ClientRequestId: clientrequestid,\r\n    };\r\n    debugger\r\n    this.patientService.loadTestZdxSession(req).subscribe({\r\n      next: (data) => {\r\n        this.loadData = data;\r\n        const patientId = data?.Data?.Patient?.Id;\r\n        const zdxPatientId = data?.Data?.Patient?.ZdxPatientId;\r\n        const userGuid = data.UserGuid;\r\n        const businessGuid = data.ZdxBusinessGuid;\r\n        this.getPatientInfo(patientId, zdxPatientId, userGuid, businessGuid);\r\n        setInterval(() => {\r\n          this.refreshToken();\r\n        }, 14 * 60 * 1000); // 14 minutes in milliseconds\r\n      },\r\n      error: (err) => {\r\n        this.showMsg(err.error, true);\r\n      },\r\n    });\r\n  }\r\n\r\n  toLower(params: Params): Params {\r\n    const lowerParams: Params = {};\r\n    for (const key in params) {\r\n      lowerParams[key.toLowerCase()] = params[key];\r\n    }\r\n\r\n    return lowerParams;\r\n  }\r\n\r\n  refreshToken() {\r\n    const auth = new UserAuth();\r\n    auth.refresh_token = this.loadData.RefreshToken;\r\n    auth.access_token = this.loadData.AccessToken;\r\n    auth.LanguageId = localStorage.languageId;\r\n    auth.BOAccessUserGuid = this.loadData.UserGuid;\r\n    auth.TokenSource = \"zdx\"; // 'zdx' | 'zcs'\r\n    auth.DeviceType = \"web.embedded\";\r\n    this.commonService.refreshToken(auth).subscribe({\r\n      next: (data) => {\r\n        this.loadData.AccessToken = data.access_token;\r\n        this.loadData.RefreshToken = data.refresh_token;\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.title.setTitle(\"ZoetisDx\");\r\n  }\r\n\r\n  public scrolltoTop(topVal) {\r\n    //const scrollabe = document.getElementById('patientinfoTbl-scrollabe');\r\n    //scrollabe.scrollTop = topVal;\r\n  }\r\n\r\n  public onTableScroll(e) {\r\n    const tableViewHeight = e.target.offsetHeight;\r\n    const tableScrollHeight = e.target.scrollHeight;\r\n    const scrollLocation = e.target.scrollTop;\r\n\r\n    const buffer = 200;\r\n    const limit = tableScrollHeight - tableViewHeight - buffer;\r\n    if (!this.isLoadMore && scrollLocation > limit) {\r\n      this.isLoadMore = true;\r\n      this.sidefilterService.filter.PageNo++;\r\n      this.sidefilterService.filter.PageSize = 60;\r\n      this.getPatientInfo();\r\n    }\r\n  }\r\n\r\n  navToOrderPage() {\r\n    if (!this.refLabGuard.IsLinkedRefLabClinic) {\r\n      const msg =\r\n        this.labelService.dsSideMenuScreen.ConsultationRestrictionPopupMsg;\r\n      this.confirmationDialogService.confirm(\r\n        \"Alert\",\r\n        msg,\r\n        \"Ok\",\r\n        \"Cancel\",\r\n        \"sm\",\r\n        true,\r\n        false\r\n      );\r\n      return false;\r\n    }\r\n    this.router.navigate([\"/refLab/createOrder\"], {\r\n      queryParams: { id: this.patientInfo.PatientId },\r\n    });\r\n  }\r\n\r\n  public getPatientInfo(pi?, zpi?, userGuid?, businessGuid?) {\r\n    const params = {\r\n      LanguageId: this.labelService.selectedLanguage,\r\n      BusinessGuid: businessGuid,\r\n      UserGuid: userGuid,\r\n      ZDXPatientInfoId: zpi,\r\n    };\r\n    this.patientService\r\n      .GetLabResultsEE(params, this.loadData.AccessToken, 1, 60)\r\n      .subscribe({\r\n        next: (data) => {\r\n          if (this.sidefilterService.filter.PageNo == 1) {\r\n            if (\r\n              data.ResponseData.DashboardPatientList != null &&\r\n              data.ResponseData.DashboardPatientList.length > 0\r\n            ) {\r\n              this.originData =\r\n                data.ResponseData.DashboardPatientList[0].Details;\r\n              this.patientService.patientDetails = this.patientInfo =\r\n                data.ResponseData.DashboardPatientList[0];\r\n            } else {\r\n              this.originData = [];\r\n              this.dataSource = new MatTableDataSource<any>(this.originData);\r\n            }\r\n          } else {\r\n            if (\r\n              data.ResponseData.DashboardPatientList != null &&\r\n              data.ResponseData.DashboardPatientList.length > 0\r\n            ) {\r\n              this.originData = this.originData.concat(\r\n                data.ResponseData.DashboardPatientList[0].Details\r\n              );\r\n            }\r\n          }\r\n\r\n          if (\r\n            data.ResponseData.DashboardPatientList &&\r\n            data.ResponseData.DashboardPatientList.length > 0\r\n          ) {\r\n            this.patientInfo = data.ResponseData.DashboardPatientList[0];\r\n            this.patient = data.ResponseData.DashboardPatientList[0];\r\n\r\n            this.originData = this.originData.map((item, index) => {\r\n              if (item.PhysicianName && item.PhysicianName.trim() == \"None\") {\r\n                item.PhysicianName =\r\n                  this.labelService.dsAnaysisResultsScreen.none;\r\n              }\r\n              if (item.DAPAnalyzerType == \"vetscan-ltf\") {\r\n                item.AnalyzerDisplayName = item.AnalyzerDisplayName + \"+\";\r\n              }\r\n              return item;\r\n            });\r\n\r\n            if (this.originData.length > 0 && this.isLoadMore) {\r\n              this.isLoadMore = false;\r\n            } else {\r\n              this.scrolltoTop(null);\r\n            }\r\n\r\n            this.createAlysisTypeList(this.originData);\r\n\r\n            this.dataService.pageState.PatientInfo.resultsList =\r\n              this.originData;\r\n            this.dataService.page.next(this.dataService.pageState);\r\n\r\n            this.dataSource = new MatTableDataSource<any>(this.originData);\r\n            this.dataSource.sortingDataAccessor =\r\n              this.commonService.sortingDataAccessor;\r\n            this.dataSource.sort = this.sort;\r\n            this.bindDVMDDL();\r\n          }\r\n        },\r\n        error: () => {\r\n          this.originData = [];\r\n          this.dataSource.data = [];\r\n          this.sidefilterService.filter.DVMName = \"\";\r\n          this.sidefilterService.dsDVM = [];\r\n        },\r\n      });\r\n  }\r\n\r\n  public createAlysisTypeList(tblData) {\r\n    let tempArry = [];\r\n    tblData.forEach((ele) => {\r\n      if (\r\n        !tempArry.find((item) => ele?.AnalysisTypeName == item.analysisTypeName)\r\n      ) {\r\n        const obj = {\r\n          sourceType: ele?.SourceType,\r\n          analyzerDisplayName: ele?.AnalyzerDisplayName,\r\n          analysisTypeName: ele?.AnalysisTypeName,\r\n        };\r\n        tempArry.push(obj);\r\n      }\r\n    });\r\n    // if (this.dataService.appState.analysisTypeList <= tempArry) {\r\n    this.dataService.appState.analysisTypeList = tempArry;\r\n    // }\r\n    this.dataService.state.next(this.dataService.appState);\r\n  }\r\n\r\n  public bindDVMDDL() {\r\n    this.sidefilterService.dsDVM = [];\r\n    if (this.originData != null) {\r\n      const arrDVM = [];\r\n      let noDVMText = \"\";\r\n      this.originData.forEach((subEle) => {\r\n        if (subEle.PhysicianName && !arrDVM.includes(subEle.PhysicianName)) {\r\n          if (subEle.PhysicianName == \"None\") {\r\n            noDVMText = subEle.PhysicianName;\r\n          } else {\r\n            arrDVM.push(subEle.PhysicianName.trim());\r\n            this.sidefilterService.dsDVM.push(subEle.PhysicianName.trim());\r\n          }\r\n        }\r\n      });\r\n      this.sidefilterService.dsDVM =\r\n        this.commonService.arraySortByAscendingOrders(arrDVM);\r\n      if (noDVMText) {\r\n        this.sidefilterService.dsDVM.splice(0, 0, noDVMText);\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectAll(e) {\r\n    this.IsAllSelected = e.checked;\r\n    this.showPrintIcon = e.checked;\r\n    this.dataSource.data.forEach((element) => {\r\n      if (element.AnalysisStatusName == \"Completed\")\r\n        element.IsReadyForPrint = e.checked;\r\n    });\r\n  }\r\n\r\n  public onDataSort(e) {\r\n    this.dataService.pageState.PatientInfo.sortState = e;\r\n    this.dataService.page.next(this.dataService.pageState);\r\n    this.scrolltoTop(null);\r\n  }\r\n\r\n  public selectSingleCheckbox(e, selecteItem) {\r\n    selecteItem.IsReadyForPrint = e.checked;\r\n    if (e.checked) {\r\n      this.showPrintIcon = true;\r\n      const allSelected = this.dataSource.data.find(\r\n        (x) => !x.IsReadyForPrint && x.AnalysisStatusName == \"Completed\"\r\n      );\r\n      if (allSelected == undefined) this.IsAllSelected = true;\r\n      else this.IsAllSelected = false;\r\n    } else {\r\n      this.IsAllSelected = false;\r\n      const checkboxSelected = this.dataSource.data.find(\r\n        (x) => x.IsReadyForPrint && x.AnalysisStatusName == \"Completed\"\r\n      );\r\n      if (checkboxSelected == undefined) this.showPrintIcon = false;\r\n    }\r\n    this.countCheckbox(e, selecteItem);\r\n  }\r\n\r\n  public countCheckbox(event, selectedItem) {\r\n    if (event.checked === true) {\r\n      this.counter++;\r\n      if (this.counter > 5) {\r\n        this.confirmationDialogService\r\n          .confirm(\r\n            \"\",\r\n            this.labelService.dsPatientInfoScreen.CheckBoxExceed,\r\n            this.labelService.dsPatientInfoScreen.Ok,\r\n            \"\",\r\n            \"sm\",\r\n            true,\r\n            false\r\n          )\r\n          .then((confirmed) => {\r\n            if (confirmed) {\r\n              this.counter--;\r\n              selectedItem.IsReadyForPrint = false;\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (event.checked === false) {\r\n      this.counter--;\r\n    }\r\n  }\r\n\r\n  public setDefaultFilter() {\r\n    this.sidefilterService.filter = new SideFilter();\r\n    this.sidefilterService.filter.BusinessGuid = this.businessGuid;\r\n    this.sidefilterService.filter.FromDate = null;\r\n    this.sidefilterService.filter.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisStatusId = 0;\r\n    this.sidefilterService.filter.AnalysisTypeId = 0;\r\n    this.sidefilterService.FromDate = null;\r\n    this.sidefilterService.ToDate = null;\r\n    this.sidefilterService.filter.AnalysisSourceId = this.dataService.appData\r\n      .authDetails[\"IsLinkedRefLabClinic\"]\r\n      ? 0\r\n      : 1;\r\n  }\r\n\r\n  public showMsg(cancelComment, force = false) {\r\n    /*\r\n    cancelComment may be:-\r\n    1) user.cancelled : The user canceled the process.\r\n    2) 11 : Test cancelled by user\r\n    3) X : Order cannot be done, order cancelled\r\n    */\r\n    if (!force) {\r\n      if (cancelComment && /user.cancelled/.test(cancelComment)) {\r\n        cancelComment =\r\n          this.labelService.dsPatientInfoScreen.CanceledTestMessage;\r\n      } else if (cancelComment && /11 :/.test(cancelComment)) {\r\n        cancelComment =\r\n          this.labelService.dsPatientInfoScreen.CanceledTestMessage11;\r\n      } else if (cancelComment && /X :/.test(cancelComment)) {\r\n        cancelComment =\r\n          this.labelService.dsPatientInfoScreen.CanceledTestMessageX;\r\n      } else {\r\n        cancelComment = this.labelService.dsPatientInfoScreen.CanceledTest;\r\n        // cancelComment = cancelComment ? cancelComment : this.labelService.dsPatientInfoScreen.CanceledTest;\r\n      }\r\n    }\r\n    this.confirmationDialogService.confirm(\r\n      \"\",\r\n      cancelComment,\r\n      this.labelService.dsPatientInfoScreen.Ok,\r\n      \"\",\r\n      \"sm\",\r\n      true,\r\n      false\r\n    );\r\n    // .then((confirmed) => {\r\n    // }).catch(() => console.log('User dismissed the dialog'));\r\n  }\r\n\r\n  showResult(rowIndex, ele) {\r\n    if (ele.AnalysisStatusId == this.canceledAnalysisStatusId) {\r\n      this.showMsg(ele.CancelComment);\r\n    } else if (ele.AnalysisStatusId == EnmAnalysisStatus.Pending) {\r\n      this.showMsg(\r\n        this.labelService.dsPatientInfoScreen.pendingAlertMessage,\r\n        true\r\n      );\r\n    } else {\r\n      this.dataService.appState.selectedResult.element =\r\n        this.patientService.patientDetails;\r\n      this.dataService.appState.selectedResult.subElement = ele;\r\n      this.dataService.state.next(this.dataService.appState);\r\n\r\n      this.dataService.pageState.PatientInfo.selectedRow = rowIndex;\r\n      this.dataService.pageState.PatientInfo.requestParams =\r\n        this.sidefilterService.filter;\r\n      this.dataService.pageState.PatientInfo.resultsList = this.originData;\r\n      this.dataService.appState.selectedResult.element.Details =\r\n        this.originData; // use for maintain patient history list on result details page\r\n      this.dataService.page.next(this.dataService.pageState);\r\n      //this.patientService.showPataientTestResult(this.patientService.patientDetails, ele, null, this.sidefilterService.filter, null, null)\r\n      this.patientService.patientDetails[\"AnalysisTypeToGetTestReslt\"] = ele;\r\n      localStorage.setItem(\r\n        \"patientDetails\",\r\n        JSON.stringify(this.patientService.patientDetails)\r\n      );\r\n\r\n      if (this.dataService && this.dataService.appState) {\r\n        this.dataService.appState.selectedResult.element =\r\n          this.patientService.patientDetails;\r\n        this.dataService.appState.selectedResult.subElement = ele;\r\n        this.dataService.state.next(this.dataService.appState);\r\n      }\r\n      this.expandedElement = this.expandedElement === ele ? null : ele;\r\n    }\r\n    //ele.isExpend = true;\r\n  }\r\n\r\n  zoomIn() {\r\n    if (this.zoomLevel < 3) {\r\n      // Limit max zoom\r\n      this.zoomLevel += 0.1;\r\n    }\r\n  }\r\n\r\n  zoomOut() {\r\n    if (this.zoomLevel > 0.5) {\r\n      // Limit min zoom\r\n      this.zoomLevel -= 0.1;\r\n    }\r\n  }\r\n\r\n  resetZoom() {\r\n    this.zoomLevel = 1;\r\n  }\r\n}\r\n","<div class=\"wrapper\" class=\"zoom-box\" [style.transform]=\"'scale(' + zoomLevel + ')'\" #zoomElement>\r\n    <!-- Page Content  -->\r\n    <div id=\"content\" class=\"dashboard-wrapper\">\r\n        <section class=\"col-12 title-container m-cont icon-cont mb-4\">\r\n            <span class=\"page-title\" data-testid=\"pi-title\">ZoetisDx Results</span>\r\n\r\n        </section>\r\n\r\n        <ul class=\"status\">\r\n            <li><span class=\"green-dot\"></span><span class=\"text\">Completed</span></li>\r\n            <li><span class=\"gray-dot\"></span><span class=\"text\">Ordered</span></li>\r\n            <li><span class=\"red-dot\"></span><span class=\"text\">Canceled</span></li>\r\n        </ul>\r\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8 w-100\" style=\"position: relative;\">\r\n            <ng-container matColumnDef=\"DateReceivedStr\">\r\n                <th mat-header-cell *matHeaderCellDef>Date & Time</th>\r\n\r\n                <td mat-cell *matCellDef=\"let element; let i = index;\" [ngClass]=\"{\r\n                                      completed: element.AnalysisStatusId === 1,\r\n                                      cancelled: element.AnalysisStatusId === 2,\r\n                                      pending: element.AnalysisStatusId === 3 }\">\r\n                    <span class=\"textTtl d-none\">Date & Time</span><span class=\"pdate\"\r\n                        [ngStyle]=\"{'font-weight':element.ViewedFlag ? 'normal':'bold'}\"> {{\r\n                        element.DateReceivedStr }}</span>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"PhysicianName\">\r\n                <th mat-header-cell *matHeaderCellDef>Doctor</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n                    {{ element.PhysicianName }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"AnalysisSourceName\">\r\n                <th mat-header-cell *matHeaderCellDef>Analysis Source</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n                    {{ element.AnalysisSourceName }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"AnalysisTypeName\">\r\n                <th mat-header-cell *matHeaderCellDef style=\"width: 30%; text-align: center;\">Analysis Type</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index;\" style=\"padding-right: 5px;\" style=\"width: 30%; text-align: center;\">\r\n                    {{ element.AnalysisTypeName }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"AccessionId\">\r\n                <th mat-header-cell *matHeaderCellDef>Accession ID</th>\r\n                <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n                    {{ element.AccessionNumber }}\r\n                </td>\r\n            </ng-container>\r\n\r\n\r\n            <!-- @for (column of columnsToDisplay; track column) {\r\n            <ng-container matColumnDef=\"{{column}}\">\r\n                <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n            </ng-container>\r\n            } -->\r\n            <ng-container matColumnDef=\"expand\">\r\n                <th mat-header-cell *matHeaderCellDef aria-label=\"row actions\">&nbsp;</th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <button mat-icon-button aria-label=\"expand row\"\r\n                        (click)=\"showResult(i, element); $event.stopPropagation()\">\r\n                        @if (expandedElement === element) {\r\n                        <mat-icon>keyboard_arrow_up</mat-icon>\r\n                        } @else {\r\n                        <mat-icon>keyboard_arrow_down</mat-icon>\r\n                        }\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n            <ng-container matColumnDef=\"expandedDetail\">\r\n                <td mat-cell *matCellDef=\"let element; let i = dataIndex;\"\r\n                    [attr.colspan]=\"columnsToDisplayWithExpand.length\">\r\n                    <div class=\"example-element-detail\"\r\n                        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\"\r\n                        *ngIf=\"element === expandedElement\">\r\n                        <app-result-details [isCVET]=\"true\" [loadData]=\"loadData\"\r\n                            [originData]=\"originData\"></app-result-details>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplayWithExpand\"></tr>\r\n            <tr mat-row *matRowDef=\"let element; columns: columnsToDisplayWithExpand;\" class=\"example-element-row\"\r\n                [class.example-expanded-row]=\"expandedElement === element\" (click)=\"showResult(i, element);\">\r\n            </tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n            <!-- <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay\" [ngClass]=\"{\r\n                completed: row.AnalysisStatusId === 1,\r\n                cancelled: row.AnalysisStatusId === 2,\r\n                pending: row.AnalysisStatusId === 3 }\"></tr> -->\r\n        </table>\r\n\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"controls\">\r\n    <a title=\"Zoom In\" href=\"javascript::void(0)\" (click)=\"zoomIn()\"><i class=\"fa fa-search-plus\" aria-hidden=\"true\"></i></a>\r\n    <a title=\"Zoom Out\" href=\"javascript::void(0)\" (click)=\"zoomOut()\"><i class=\"fa fa-search-minus\" aria-hidden=\"true\"></i></a>\r\n    <a title=\"Reset Zoom\" href=\"javascript::void(0)\" (click)=\"resetZoom()\"><i class=\"fa fa-times-circle-o\" aria-hidden=\"true\"></i></a>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ZdxDeepLinkComponent } from \"./zdx-deep-link/zdx-deep-link.component\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { PatientInfoComponent } from \"src/app/components/patient-managements/patient-info/patient-info.component\";\r\nimport { ResultDetailsComponent } from \"../result-details/result-details.component\";\r\nimport { ResultsComponent } from \"./results/results.component\";\r\nimport { PagenotfoundComponent } from \"src/app/components/pagenotfound/pagenotfound.component\";\r\n\r\nconst cvetPath = environment.CvetPATH.replace('/', \"\").trim();\r\n\r\nconst routes = [\r\n  {\r\n    path: `${cvetPath}/results-request/:token`,\r\n    component: ResultsComponent\r\n  },\r\n  {\r\n    path: `${cvetPath}/patient/info`,\r\n    component: PatientInfoComponent,\r\n  },\r\n  {\r\n    path: `${cvetPath}/result-details`,\r\n    component: ResultDetailsComponent,\r\n  },\r\n  {\r\n    //path: `${cvetPath}`,\r\n    path: ':GUID/:PIMSPatientID/:OAID',\r\n    component: ZdxDeepLinkComponent,\r\n  },\r\n  { path: '**', component: PagenotfoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {})],\r\n  exports: [RouterModule],\r\n})\r\nexport class CvetRoutingModule {\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { CvetService } from \"./cvet.service\";\r\n\r\n@Component({\r\n  selector: \"app-cvet\",\r\n  templateUrl: \"./cvet.component.html\",\r\n  styleUrls: [\"./cvet.component.css\"]\r\n})\r\nexport class CvetComponent {\r\n  constructor(private cvetService: CvetService) {\r\n    localStorage.removeItem('appData');\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n<ng-http-loader></ng-http-loader>","import { APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA, ErrorHandler, NO_ERRORS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { CvetService } from \"./cvet.service\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { ZdxDeepLinkComponent } from \"./zdx-deep-link/zdx-deep-link.component\";\r\nimport { CvetStorage } from \"./storage.service\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AppRoutingModule } from \"src/app/app-routing.module\";\r\nimport { pipeModule } from \"src/app/pipe/pipe.module\";\r\nimport { provideHttpClient, withInterceptorsFromDi, withJsonpSupport } from \"@angular/common/http\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgHttpLoaderModule } from \"ng-http-loader\";\r\nimport { NgImageSliderModule } from \"ng-image-slider-v17\";\r\nimport { DirectivesModule } from \"src/app/directive/directives.module\";\r\nimport { CvetRoutingModule } from \"./cvet-routing.module\";\r\nimport { CvetComponent } from \"./cvet.component\";\r\nimport { AlertService, CommonService, DataService, FuseService, HeaderService, LabelService, PatientService, SidefilterService, SidemenuService, SidenavService, UserService } from \"src/app/services\";\r\nimport { ConfirmationDialogService } from \"src/app/components/confirmation-dialog/confirmation-dialog.service\";\r\nimport { authInterceptorProviders } from \"src/app/services\";\r\nimport { OrderSidefilterService } from \"src/app/services/order-sidefilter.service\";\r\nimport { ResultDetailsModule } from \"../result-details/result-details.module\";\r\nimport { AddUserModule } from \"../add-user/add-user.module\";\r\nimport { HeaderModule } from \"../header/header.module\";\r\nimport { MatModule } from \"../mat-module/mat.module\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { ResultsComponent } from \"./results/results.component\";\r\nimport { ResultDetailsComponent } from \"../result-details/result-details.component\";\r\nimport { ErrorHandlerService } from \"src/app/services/error-handler.service\";\r\n\r\n@NgModule({\r\n    declarations: [CvetComponent, ZdxDeepLinkComponent, ResultsComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n    bootstrap: [CvetComponent],\r\n    imports: [\r\n        CvetRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatModule,\r\n        HeaderModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgImageSliderModule,\r\n        NgHttpLoaderModule.forRoot(),\r\n        NgbModule,\r\n        DirectivesModule,\r\n        pipeModule,\r\n        MatDatepickerModule,\r\n        AddUserModule,\r\n        FormsModule,\r\n        ResultDetailsModule,\r\n        ToastrModule.forRoot({\r\n            timeOut: 3000,\r\n            positionClass: 'toast-top-right',\r\n            preventDuplicates: true,\r\n        })], providers: [\r\n            CvetStorage,\r\n            CvetService,\r\n            CommonService,\r\n            HeaderService,\r\n            PatientService,\r\n            FuseService,\r\n            ConfirmationDialogService,\r\n            SidenavService,\r\n            UserService,\r\n            LabelService,\r\n            AlertService,\r\n            SidefilterService,\r\n            OrderSidefilterService,\r\n            SidemenuService,\r\n            DataService,\r\n            authInterceptorProviders,\r\n            provideHttpClient(withInterceptorsFromDi(), withJsonpSupport()),\r\n            { provide: ErrorHandler, useClass: ErrorHandlerService },\r\n        ],\r\n    exports: [\r\n        ResultsComponent\r\n    ]\r\n})\r\nexport class CvetModule { }\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\nimport { CvetModule } from \"./app/modules/cvet/cvet.module\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nif (environment.isProduction) {\r\n  //==> Console output is disabled on production! <==\r\n  console.log = function (): void {\r\n    //do nothing\r\n  };\r\n  console.info = function (): void {\r\n    //do nothing\r\n  };\r\n}\r\nconst app = document.getElementById(\"zdxApp\");\r\nconst isCVET = window.location.href.indexOf(environment.CvetPATH) !== -1 //!(window === window.parent);\r\n// window.location.href.indexOf(environment.CvetPATH) !== -1\r\nconst module = isCVET ? CvetModule : AppModule;\r\napp.insertAdjacentHTML(\"beforeend\", isCVET ? \"<app-cvet></app-cvet>\" : \"<app-root></app-root>\");\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(module) // Bootstrapng manually in flavour of CVET\r\n  .catch((err) => console.error(err));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,kEAAAA,SAAA;AAOA,KAAC,SAAU,SAAS;AAClB,UAAI,OAAOA,YAAW,YAAYA,QAAO,QAAS,CAAAA,QAAO,UAAU,QAAQ;AAAA,UAAO,QAAO,eAAe,QAAQ;AAAA,IAClH,GAAG,SAAUC,YAAW;AACtB;AAEA,aAAO,WAAY;AAejB,YAAI,eAAe,CAAC,CAAC,0FAA8B,MAAM,IAAI,GAAG,CAAC,yBAAsB,MAAM,KAAK,GAAG,CAAC,0EAAwB,MAAM,KAAK,GAAG,CAAC,kBAAkB,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,uBAAuB,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,MAAM,IAAI,GAAG,CAAC,8DAAsB,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,oBAAoB,MAAM,KAAK,GAAG,CAAC,aAAa,MAAM,MAAM,CAAC,GAAG,CAAC,2BAAwB,MAAM,IAAI,GAAG,CAAC,gCAA2B,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,0EAAwB,MAAM,KAAK,GAAG,CAAC,iEAAyB,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,8DAAsB,MAAM,KAAK,GAAG,CAAC,uBAAoB,MAAM,IAAI,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,oBAAiB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2CAAkB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,qIAAgD,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,mBAAmB,MAAM,IAAI,GAAG,CAAC,kCAAkC,MAAM,KAAK,GAAG,CAAC,0BAA0B,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,+DAAuB,MAAM,KAAK,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,sBAAsB,MAAM,KAAK,GAAG,CAAC,yDAAsB,MAAM,KAAK,GAAG,CAAC,uBAAuB,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,CAAC,GAAG,CAAC,2BAA2B,MAAM,KAAK,GAAG,CAAC,yBAAyB,MAAM,OAAO,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,kBAAkB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2DAAwD,MAAM,KAAK,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,IAAI,GAAG,CAAC,wBAAc,MAAM,IAAI,GAAG,CAAC,oBAAoB,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,2BAA2B,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,MAAM,IAAI,GAAG,CAAC,iFAA0B,MAAM,KAAK,GAAG,CAAC,kDAAkD,MAAM,KAAK,GAAG,CAAC,wCAAwC,MAAM,KAAK,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,yBAAiB,MAAM,KAAK,GAAG,CAAC,sBAAsB,MAAM,KAAK,GAAG,CAAC,QAAQ,MAAM,IAAI,GAAG,CAAC,cAAW,MAAM,OAAO,CAAC,GAAG,CAAC,iDAAmB,MAAM,KAAK,GAAG,CAAC,4CAAoC,MAAM,KAAK,GAAG,CAAC,qBAAqB,MAAM,IAAI,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gDAA6C,MAAM,KAAK,GAAG,CAAC,OAAO,OAAO,KAAK,CAAC,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,gDAAkB,MAAM,IAAI,GAAG,CAAC,eAAe,MAAM,KAAK,GAAG,CAAC,yCAAyC,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,mBAAmB,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,qCAAqC,MAAM,KAAK,GAAG,CAAC,8BAA2B,MAAM,KAAK,GAAG,CAAC,QAAQ,MAAM,KAAK,GAAG,CAAC,mBAAmB,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,IAAI,GAAG,CAAC,uCAAoC,MAAM,KAAK,GAAG,CAAC,gDAA0C,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,0EAAwB,MAAM,KAAK,GAAG,CAAC,yBAAyB,MAAM,IAAI,GAAG,CAAC,iBAAiB,MAAM,KAAK,GAAG,CAAC,aAAa,MAAM,KAAK,GAAG,CAAC,iDAAmB,MAAM,IAAI,GAAG,CAAC,gCAAgC,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,MAAM,GAAG,CAAC,QAAQ,QAAQ,QAAQ,MAAM,CAAC,GAAG,CAAC,sBAAmB,MAAM,KAAK,GAAG,CAAC,mCAAgC,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,4BAAkB,MAAM,KAAK,GAAG,CAAC,6BAA0B,MAAM,IAAI,GAAG,CAAC,uBAAoB,MAAM,KAAK,GAAG,CAAC,oCAAgB,MAAM,IAAI,GAAG,CAAC,aAAa,MAAM,IAAI,GAAG,CAAC,2DAAmB,MAAM,IAAI,GAAG,CAAC,iEAAoB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,eAAe,MAAM,MAAM,GAAG,CAAC,QAAQ,SAAS,QAAQ,QAAQ,MAAM,CAAC,GAAG,CAAC,6DAAqB,MAAM,KAAK,GAAG,CAAC,kBAAkB,MAAM,MAAM,CAAC,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,wBAAc,MAAM,IAAI,GAAG,CAAC,UAAU,MAAM,MAAM,GAAG,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,CAAC,GAAG,CAAC,mEAAsB,MAAM,KAAK,GAAG,CAAC,uEAA0B,MAAM,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,mEAAsB,MAAM,KAAK,GAAG,CAAC,6EAA2B,MAAM,KAAK,GAAG,CAAC,6BAAc,MAAM,KAAK,GAAG,CAAC,oBAAoB,MAAM,KAAK,GAAG,CAAC,8DAAsB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,4DAAoB,MAAM,KAAK,GAAG,CAAC,iBAAiB,MAAM,KAAK,GAAG,CAAC,uBAAuB,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,wBAAc,MAAM,KAAK,GAAG,CAAC,6BAA6B,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,IAAI,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,QAAQ,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,oBAAoB,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,yFAA6B,MAAM,KAAK,GAAG,CAAC,qBAAqB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,OAAO,GAAG,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,sBAAmB,MAAM,IAAI,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,+BAA+B,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,mDAAqB,MAAM,KAAK,GAAG,CAAC,0BAA0B,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,oEAAuB,MAAM,OAAO,CAAC,GAAG,CAAC,8BAA2B,MAAM,KAAK,GAAG,CAAC,0DAA4B,MAAM,IAAI,GAAG,CAAC,wBAAqB,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,0CAAiB,MAAM,KAAK,GAAG,CAAC,2BAA2B,MAAM,IAAI,GAAG,CAAC,yCAAsC,MAAM,KAAK,GAAG,CAAC,eAAe,MAAM,IAAI,GAAG,CAAC,aAAa,MAAM,KAAK,GAAG,CAAC,iBAAiB,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,QAAQ,MAAM,KAAK,GAAG,CAAC,kBAAkB,MAAM,KAAK,GAAG,CAAC,uFAAgC,MAAM,KAAK,GAAG,CAAC,6HAAwC,MAAM,KAAK,GAAG,CAAC,4BAA4B,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,MAAM,MAAM,CAAC,GAAG,CAAC,2DAAmB,MAAM,KAAK,GAAG,CAAC,2EAAyB,MAAM,IAAI,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,sEAAyB,MAAM,KAAK,GAAG,CAAC,sBAAmB,MAAM,KAAK,GAAG,CAAC,oBAAoB,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,kBAAe,MAAM,IAAI,GAAG,CAAC,eAAe,MAAM,IAAI,GAAG,CAAC,mBAAmB,MAAM,IAAI,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,eAAe,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,gDAAkB,MAAM,KAAK,GAAG,CAAC,8BAAwB,MAAM,OAAO,CAAC,GAAG,CAAC,wBAAqB,MAAM,IAAI,GAAG,CAAC,iDAAmB,MAAM,KAAK,CAAC,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,uBAAoB,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,yBAAyB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qDAAkD,MAAM,OAAO,CAAC,GAAG,CAAC,wDAAwD,MAAM,KAAK,GAAG,CAAC,oCAAoC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,iEAA+C,MAAM,KAAK,GAAG,CAAC,2KAA8C,MAAM,KAAK,GAAG,CAAC,2BAAqB,MAAM,KAAK,GAAG,CAAC,iDAAmB,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,aAAa,MAAM,IAAI,GAAG,CAAC,gBAAgB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,wBAAwB,MAAM,KAAK,GAAG,CAAC,wBAAwB,MAAM,KAAK,GAAG,CAAC,mBAAmB,MAAM,KAAK,GAAG,CAAC,wBAAwB,MAAM,KAAK,GAAG,CAAC,gBAAgB,MAAM,IAAI,GAAG,CAAC,0CAAsB,MAAM,IAAI,GAAG,CAAC,uGAAiC,MAAM,KAAK,GAAG,CAAC,qBAAkB,MAAM,IAAI,GAAG,CAAC,6EAA2B,MAAM,IAAI,GAAG,CAAC,wEAAsB,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,0BAA0B,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,MAAM,IAAI,GAAG,CAAC,yBAAyB,MAAM,IAAI,GAAG,CAAC,4DAAoB,MAAM,KAAK,GAAG,CAAC,yBAAe,MAAM,KAAK,GAAG,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,iCAAkB,MAAM,IAAI,GAAG,CAAC,eAAe,MAAM,KAAK,GAAG,CAAC,QAAQ,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,SAAS,MAAM,KAAK,GAAG,CAAC,uBAAuB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,wDAAqB,MAAM,KAAK,GAAG,CAAC,uBAAoB,MAAM,IAAI,GAAG,CAAC,gBAAgB,MAAM,KAAK,GAAG,CAAC,4BAA4B,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,uBAAuB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,wDAAqB,MAAM,KAAK,GAAG,CAAC,mLAAsD,MAAM,KAAK,GAAG,CAAC,kBAAkB,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,MAAM,KAAK,CAAC,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,iCAA4B,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,KAAK,GAAG,CAAC,wCAAqC,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,MAAM,IAAI,GAAG,CAAC,2BAAsB,MAAM,IAAI,GAAG,CAAC,wCAAwC,MAAM,KAAK,GAAG,CAAC,4HAAuC,MAAM,OAAO,GAAG,CAAC,QAAQ,MAAM,CAAC,GAAG,CAAC,4DAAoB,MAAM,KAAK,GAAG,CAAC,UAAU,MAAM,KAAK,GAAG,CAAC,YAAY,MAAM,KAAK,GAAG,CAAC,oBAAiB,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AAEzmS,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAI,IAAI,aAAa,CAAC;AACtB,uBAAa,CAAC,IAAI;AAAA,YAChB,MAAM,EAAE,CAAC;AAAA,YACT,MAAM,EAAE,CAAC;AAAA,YACT,UAAU,EAAE,CAAC;AAAA,YACb,UAAU,EAAE,CAAC,KAAK;AAAA,YAClB,WAAW,EAAE,CAAC,KAAK;AAAA,UACrB;AAAA,QACF;AACA;AACA,iBAAS,gBAAgB,UAAU,aAAa;AAC9C,cAAI,EAAE,oBAAoB,cAAc;AACtC,kBAAM,IAAI,UAAU,mCAAmC;AAAA,UACzD;AAAA,QACF;AACA,iBAAS,kBAAkB,QAAQ,OAAO;AACxC,mBAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,gBAAI,aAAa,MAAMA,EAAC;AACxB,uBAAW,aAAa,WAAW,cAAc;AACjD,uBAAW,eAAe;AAC1B,gBAAI,WAAW,WAAY,YAAW,WAAW;AACjD,mBAAO,eAAe,QAAQ,WAAW,KAAK,UAAU;AAAA,UAC1D;AAAA,QACF;AACA,iBAAS,aAAa,aAAa,YAAY,aAAa;AAC1D,cAAI,WAAY,mBAAkB,YAAY,WAAW,UAAU;AACnE,cAAI,YAAa,mBAAkB,aAAa,WAAW;AAC3D,iBAAO;AAAA,QACT;AACA,YAAIC,uBAAsB;AAAA,UACxB,aAAa,SAAS,YAAY,OAAO;AACvC,gBAAIC,MAAK,MAAM,aAAa,wBAAwB;AACpD,mBAAO,OAAO,oBAAoB,UAAUA,GAAE;AAAA,UAChD;AAAA,UACA,WAAW,CAAC;AAAA;AAAA,UAEZ,eAAe,SAAS,gBAAgB;AACtC,mBAAO,SAAS,eAAe;AAAA,UACjC;AAAA,QACF;AACA,YAAI,OAAO,WAAW,SAAU,QAAO,sBAAsBD;AAE7D,YAAI,KAAK;AACT,YAAI,WAAW;AAAA;AAAA,UAEb,eAAe;AAAA;AAAA,UAEf,kBAAkB;AAAA;AAAA,UAElB,iBAAiB;AAAA;AAAA,UAEjB,iBAAiB;AAAA;AAAA,UAEjB,mBAAmB;AAAA;AAAA,UAEnB,mBAAmB;AAAA;AAAA,UAEnB,kBAAkB,CAAC;AAAA;AAAA,UAEnB,iBAAiB;AAAA;AAAA,UAEjB,aAAa;AAAA;AAAA,UAEb,aAAa;AAAA;AAAA,UAEb,gBAAgB;AAAA;AAAA,UAEhB,oBAAoB;AAAA;AAAA,UAEpB,cAAc;AAAA;AAAA,UAEd,eAAe,CAAC;AAAA;AAAA,UAEhB,uBAAuB;AAAA;AAAA,UAEvB,oBAAoB,CAAC,MAAM,IAAI;AAAA;AAAA,UAE/B,kBAAkB;AAAA;AAAA,UAElB,aAAa;AAAA,QACf;AAEA,YAAI,wBAAwB,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AAGlJ,YAAI,cAAc,SAASE,aAAY,KAAK,UAAU;AACpD,cAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,mBAASH,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,qBAAS,KAAKA,EAAC,GAAG,IAAI,KAAKA,EAAC,CAAC,CAAC;AAAA,UAChC;AAAA,QACF;AAEA,YAAI,kBAAkB,SAASI,iBAAgB,QAAQ;AACrD,sBAAY,OAAO,oBAAoB,WAAW,SAAU,KAAK;AAC/D,mBAAO,oBAAoB,UAAU,GAAG,EAAE,MAAM,EAAE;AAAA,UACpD,CAAC;AAAA,QACH;AAGA,YAAI,MACJ,2BAAY;AACV,mBAASC,KAAI,OAAO,SAAS;AAC3B,gBAAI,QAAQ;AACZ,4BAAgB,MAAMA,IAAG;AACzB,iBAAK,KAAK;AACV,iBAAK,WAAW;AAChB,iBAAK,aAAa;AAClB,iBAAK,kBAAkB;AAGvB,gBAAI,gBAAgB,WAAW,CAAC;AAChC,iBAAK,UAAU,CAAC;AAChB,wBAAY,UAAU,SAAU,KAAK,OAAO;AAC1C,oBAAM,QAAQ,GAAG,IAAI,cAAc,eAAe,GAAG,IAAI,cAAc,GAAG,IAAI;AAAA,YAChF,CAAC;AACD,iBAAK,wBAAwB,QAAQ,MAAM,aAAa,aAAa,CAAC;AAAA,UACxE;AACA,uBAAaA,MAAK,CAAC;AAAA,YACjB,KAAK;AAAA,YACL,OAAO,SAAS,QAAQ;AACtB,kBAAI,SAAS;AAEb,kBAAI,KAAK,QAAQ,aAAc,MAAK,QAAQ,mBAAmB;AAI/D,kBAAI,KAAK,QAAQ,kBAAkB;AACjC,qBAAK,QAAQ,mBAAmB,KAAK,QAAQ,eAAe;AAAA,cAC9D;AAMA,mBAAK,WAAW,oEAAoE,KAAK,UAAU,SAAS;AAC5G,kBAAI,KAAK,UAAU;AAEjB,yBAAS,KAAK,UAAU,IAAI,YAAY;AAExC,oBAAI,CAAC,KAAK,QAAQ,kBAAmB,MAAK,QAAQ,oBAAoB,SAAS;AAAA,cACjF;AAIA,kBAAI,OAAO,YAAY,aAAa;AAClC,oBAAI,qBAAqB,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC9D,yBAAO,4BAA4B;AACnC,yBAAO,2BAA2B;AAAA,gBACpC,CAAC;AACD,oBAAI,qBAAqB,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC9D,yBAAO,4BAA4B;AACnC,yBAAO,2BAA2B;AAAA,gBACpC,CAAC;AACD,qBAAK,UAAU,QAAQ,IAAI,CAAC,oBAAoB,kBAAkB,CAAC;AAAA,cACrE,OAAO;AAEL,qBAAK,4BAA4B,KAAK,2BAA2B,WAAY;AAAA,gBAAC;AAC9E,qBAAK,4BAA4B,KAAK,2BAA2B,WAAY;AAAA,gBAAC;AAAA,cAChF;AAGA,mBAAK,sBAAsB,CAAC;AAE5B,mBAAK,oBAAoB;AAEzB,mBAAK,gBAAgB;AAErB,mBAAK,iBAAiB;AAEtB,mBAAK,eAAe;AAEpB,mBAAK,cAAc;AAAA,YACrB;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,sBAAsB;AAEpC,mBAAK,qBAAqB;AAE1B,mBAAK,qBAAqB;AAE1B,mBAAK,2BAA2B;AAEhC,kBAAI,KAAK,QAAQ,mBAAoB,MAAK,4BAA4B;AAEtE,kBAAI,KAAK,QAAQ,cAAc,UAAU,KAAK,QAAQ,oBAAoB;AACxE,qBAAK,UAAU,KAAK,KAAK,gBAAgB;AAAA,cAC3C;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB,MAAM,aAAa,UAAU;AAC3D,kBAAI,YAAY,SAAS,KAAK,mBAAmB;AAC/C,qBAAK,oBAAoB,YAAY;AAAA,cACvC;AACA,kBAAI,CAAC,KAAK,aAAa,eAAe,WAAW,GAAG;AAClD,qBAAK,aAAa,WAAW,IAAI,CAAC;AAAA,cACpC;AAEA,uBAASL,KAAI,GAAGA,KAAI,KAAK,aAAa,WAAW,EAAE,QAAQA,MAAK;AAC9D,oBAAI,KAAK,aAAa,WAAW,EAAEA,EAAC,MAAM,KAAM;AAAA,cAClD;AAEA,kBAAI,QAAQ,aAAaD,aAAY,WAAW,KAAK,aAAa,WAAW,EAAE;AAC/E,mBAAK,aAAa,WAAW,EAAE,KAAK,IAAI;AAAA,YAC1C;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,uBAAuB;AACrC,kBAAI,KAAK,QAAQ,cAAc,QAAQ;AACrC,oBAAI,yBAAyB,KAAK,QAAQ,cAAc,IAAI,SAAU,SAAS;AAC7E,yBAAO,QAAQ,YAAY;AAAA,gBAC7B,CAAC;AACD,qBAAK,YAAY,aAAa,OAAO,SAAU,SAAS;AACtD,yBAAO,uBAAuB,QAAQ,QAAQ,IAAI,IAAI;AAAA,gBACxD,CAAC;AAAA,cACH,WAAW,KAAK,QAAQ,iBAAiB,QAAQ;AAC/C,oBAAI,4BAA4B,KAAK,QAAQ,iBAAiB,IAAI,SAAU,SAAS;AACnF,yBAAO,QAAQ,YAAY;AAAA,gBAC7B,CAAC;AACD,qBAAK,YAAY,aAAa,OAAO,SAAU,SAAS;AACtD,yBAAO,0BAA0B,QAAQ,QAAQ,IAAI,MAAM;AAAA,gBAC7D,CAAC;AAAA,cACH,OAAO;AACL,qBAAK,YAAY;AAAA,cACnB;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,8BAA8B;AAC5C,uBAASC,KAAI,GAAGA,KAAI,KAAK,UAAU,QAAQA,MAAK;AAC9C,oBAAI,MAAM,KAAK,UAAUA,EAAC,EAAE,KAAK,YAAY;AAC7C,oBAAI,KAAK,QAAQ,mBAAmB,eAAe,GAAG,GAAG;AACvD,uBAAK,UAAUA,EAAC,EAAE,OAAO,KAAK,QAAQ,mBAAmB,GAAG;AAAA,gBAC9D;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB,GAAG,GAAG;AACrC,qBAAO,EAAE,KAAK,cAAc,EAAE,IAAI;AAAA,YACpC;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,uBAAuB;AACrC,mBAAK,oBAAoB;AAEzB,mBAAK,YAAY,CAAC;AAElB,mBAAK,eAAe,CAAC;AAErB,uBAASA,KAAI,GAAGA,KAAI,KAAK,UAAU,QAAQA,MAAK;AAC9C,oBAAIM,KAAI,KAAK,UAAUN,EAAC;AACxB,oBAAI,CAAC,KAAK,UAAUM,GAAE,QAAQ,EAAG,MAAK,UAAUA,GAAE,QAAQ,IAAI;AAC9D,qBAAK,gBAAgBA,GAAE,MAAMA,GAAE,UAAUA,GAAE,QAAQ;AAAA,cACrD;AAKA,uBAAS,KAAK,GAAG,KAAK,KAAK,UAAU,QAAQ,MAAM;AACjD,oBAAI,KAAK,KAAK,UAAU,EAAE;AAE1B,oBAAI,GAAG,WAAW;AAChB,sBAAI,kBAAkB,KAAK,aAAa,GAAG,QAAQ,EAAE,CAAC;AAEtD,2BAAS,IAAI,GAAG,IAAI,GAAG,UAAU,QAAQ,KAAK;AAC5C,wBAAI,WAAW,GAAG,UAAU,CAAC;AAE7B,6BAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,0BAAI,kBAAkB,GAAG,WAAW,SAAS,OAAO,GAAG,CAAC;AAExD,2BAAK,gBAAgB,iBAAiB,eAAe;AACrD,2BAAK,gBAAgB,GAAG,MAAM,eAAe;AAAA,oBAC/C;AAEA,yBAAK,gBAAgB,GAAG,MAAM,GAAG,WAAW,QAAQ;AAAA,kBACtD;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,6BAA6B;AAC3C,mBAAK,qBAAqB,CAAC;AAC3B,uBAASN,KAAI,GAAGA,KAAI,KAAK,QAAQ,mBAAmB,QAAQA,MAAK;AAC/D,oBAAI,cAAc,KAAK,QAAQ,mBAAmBA,EAAC,EAAE,YAAY;AACjE,oBAAI,cAAc,KAAK,gBAAgB,aAAa,OAAO,IAAI;AAC/D,oBAAI,YAAa,MAAK,mBAAmB,KAAK,WAAW;AAAA,cAC3D;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,UAAU,MAAM,OAAO,WAAW;AAChD,kBAAI,KAAK,SAAS,cAAc,IAAI;AACpC,kBAAI,MAAO,aAAY,OAAO,SAAU,KAAK,OAAO;AAClD,uBAAO,GAAG,aAAa,KAAK,KAAK;AAAA,cACnC,CAAC;AACD,kBAAI,UAAW,WAAU,YAAY,EAAE;AACvC,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,kBAAkB;AAKhC,kBAAI,CAAC,KAAK,SAAS,aAAa,cAAc,KAAK,EAAE,KAAK,SAAS,QAAQ,KAAK,SAAS,KAAK,aAAa,cAAc,IAAI;AAC3H,qBAAK,SAAS,aAAa,gBAAgB,KAAK;AAAA,cAClD;AAEA,kBAAI,cAAc;AAClB,kBAAI,KAAK,QAAQ,cAAe,gBAAe;AAC/C,kBAAI,KAAK,QAAQ,iBAAkB,gBAAe;AAClD,kBAAI,KAAK,QAAQ,iBAAiB;AAChC,+BAAe;AACf,+BAAe,KAAK,QAAQ;AAAA,cAC9B;AACA,kBAAI,UAAU,KAAK,UAAU,OAAO;AAAA,gBAClC,SAAS;AAAA,cACX,CAAC;AACD,mBAAK,SAAS,WAAW,aAAa,SAAS,KAAK,QAAQ;AAC5D,mBAAK,iBAAiB,KAAK,UAAU,OAAO;AAAA,gBAC1C,SAAS;AAAA,cACX,GAAG,OAAO;AACV,sBAAQ,YAAY,KAAK,QAAQ;AAEjC,mBAAK,eAAe,KAAK,UAAU,OAAO;AAAA,gBACxC,SAAS;AAAA,gBACT,MAAM;AAAA,gBACN,iBAAiB,OAAO,OAAO,KAAK,IAAI,mBAAmB;AAAA,gBAC3D,aAAa,OAAO,OAAO,KAAK,IAAI,mBAAmB;AAAA,gBACvD,iBAAiB;AAAA,cACnB,GAAG,KAAK,cAAc;AACtB,mBAAK,oBAAoB,KAAK,UAAU,OAAO;AAAA,gBAC7C,SAAS;AAAA,cACX,GAAG,KAAK,YAAY;AACpB,kBAAI,KAAK,QAAQ,kBAAkB;AACjC,qBAAK,mBAAmB,KAAK,UAAU,OAAO;AAAA,kBAC5C,SAAS;AAAA,gBACX,GAAG,KAAK,YAAY;AAAA,cACtB;AACA,kBAAI,KAAK,QAAQ,eAAe;AAE9B,qBAAK,aAAa,aAAa,YAAY,GAAG;AAC9C,qBAAK,gBAAgB,KAAK,UAAU,OAAO;AAAA,kBACzC,SAAS;AAAA,gBACX,GAAG,KAAK,YAAY;AAEpB,qBAAK,cAAc,KAAK,UAAU,MAAM;AAAA,kBACtC,SAAS;AAAA,kBACT,IAAI,OAAO,OAAO,KAAK,IAAI,mBAAmB;AAAA,kBAC9C,MAAM;AAAA,kBACN,cAAc;AAAA,gBAChB,CAAC;AACD,oBAAI,KAAK,mBAAmB,QAAQ;AAClC,uBAAK,iBAAiB,KAAK,oBAAoB,kBAAkB,IAAI;AACrE,uBAAK,UAAU,MAAM;AAAA,oBACnB,SAAS;AAAA,oBACT,MAAM;AAAA,oBACN,iBAAiB;AAAA,kBACnB,GAAG,KAAK,WAAW;AAAA,gBACrB;AACA,qBAAK,iBAAiB,KAAK,WAAW,eAAe;AAErD,oBAAI,KAAK,QAAQ,mBAAmB;AAClC,uBAAK,WAAW,KAAK,UAAU,OAAO;AAAA,oBACpC,SAAS;AAAA,kBACX,CAAC;AACD,uBAAK,SAAS,YAAY,KAAK,WAAW;AAAA,gBAC5C,OAAO;AACL,uBAAK,eAAe,YAAY,KAAK,WAAW;AAAA,gBAClD;AAAA,cACF;AACA,kBAAI,KAAK,QAAQ,aAAa;AAC5B,oBAAI,kBAAkB,KAAK,QAAQ;AACnC,oBAAI,OAAO,KAAK,SAAS,aAAa,MAAM;AAC5C,oBAAI,MAAM;AACR,sBAAIA,KAAI,KAAK,YAAY,GAAG;AAG5B,sBAAIA,OAAM,GAAI,mBAAkB,GAAG,OAAO,KAAK,OAAO,GAAGA,EAAC,GAAG,GAAG,EAAE,OAAO,iBAAiB,GAAG;AAAA,gBAC/F;AACA,qBAAK,cAAc,KAAK,UAAU,SAAS;AAAA,kBACzC,MAAM;AAAA,kBACN,MAAM;AAAA,gBACR,CAAC;AACD,wBAAQ,YAAY,KAAK,WAAW;AAAA,cACtC;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB,WAAW,WAAW,WAAW;AAGhE,kBAAI,MAAM;AAEV,uBAASA,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACzC,oBAAIM,KAAI,UAAUN,EAAC;AACnB,oBAAI,WAAW,YAAY,eAAe;AAE1C,uBAAO,2BAA2B,OAAO,WAAW,0BAA0B,EAAE,OAAO,KAAK,IAAI,SAAS,EAAE,OAAOM,GAAE,IAAI,EAAE,OAAO,UAAU,kCAAkC,EAAE,OAAOA,GAAE,UAAU,uBAAuB,EAAE,OAAOA,GAAE,MAAM,0BAA0B;AAEpQ,uBAAO,yDAAyD,OAAOA,GAAE,MAAM,gBAAgB;AAE/F,uBAAO,mCAAmC,OAAOA,GAAE,MAAM,SAAS;AAClE,uBAAO,iCAAiC,OAAOA,GAAE,UAAU,SAAS;AAEpE,uBAAO;AAAA,cACT;AACA,mBAAK,YAAY,mBAAmB,aAAa,GAAG;AAAA,YACtD;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,mBAAmB;AAIjC,kBAAI,iBAAiB,KAAK,SAAS,aAAa,OAAO;AACvD,kBAAI,aAAa,KAAK,SAAS;AAC/B,kBAAI,eAAe,kBAAkB,eAAe,OAAO,CAAC,MAAM,QAAQ,CAAC,cAAc,WAAW,OAAO,CAAC,MAAM;AAClH,kBAAI,MAAM,eAAe,iBAAiB;AAC1C,kBAAI,WAAW,KAAK,aAAa,GAAG;AACpC,kBAAI,mBAAmB,KAAK,kBAAkB,GAAG;AACjD,kBAAI,gBAAgB,KAAK,SACvB,iBAAiB,cAAc,gBAC/B,eAAe,cAAc,cAC7B,mBAAmB,cAAc,kBACjC,mBAAmB,cAAc;AAGnC,kBAAI,YAAY,CAAC,kBAAkB;AACjC,qBAAK,sBAAsB,GAAG;AAAA,cAChC,WAAW,mBAAmB,QAAQ;AAEpC,oBAAI,gBAAgB;AAClB,uBAAK,SAAS,eAAe,YAAY,CAAC;AAAA,gBAC5C,OAAO;AACL,sBAAI,YAAY,kBAAkB;AAEhC,yBAAK,SAAS,IAAI;AAAA,kBACpB,OAAO;AAEL,yBAAK,iBAAiB,KAAK,mBAAmB,SAAS,KAAK,mBAAmB,CAAC,EAAE,OAAO,KAAK,UAAU,CAAC,EAAE;AAC3G,wBAAI,CAAC,KAAK;AACR,2BAAK,SAAS,KAAK,cAAc;AAAA,oBACnC;AAAA,kBACF;AAAA,gBACF;AAEA,oBAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,kBAAkB;AACnE,uBAAK,SAAS,QAAQ,IAAI,OAAO,KAAK,oBAAoB,QAAQ;AAAA,gBACpE;AAAA,cACF;AAGA,kBAAI,IAAK,MAAK,qBAAqB,GAAG;AAAA,YACxC;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB;AAC/B,mBAAK,kBAAkB;AACvB,kBAAI,KAAK,QAAQ,iBAAkB,MAAK,mBAAmB;AAC3D,kBAAI,KAAK,QAAQ,cAAe,MAAK,uBAAuB;AAC5D,kBAAI,KAAK,YAAa,MAAK,yBAAyB;AAAA,YACtD;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,2BAA2B;AACzC,kBAAI,SAAS;AACb,mBAAK,2BAA2B,WAAY;AAC1C,uBAAO,YAAY,QAAQ,OAAO,UAAU;AAAA,cAC9C;AACA,kBAAI,KAAK,SAAS,KAAM,MAAK,SAAS,KAAK,iBAAiB,UAAU,KAAK,wBAAwB;AAAA,YACrG;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,mBAAmB;AACjC,kBAAI,KAAK,KAAK;AACd,qBAAO,MAAM,GAAG,YAAY,SAAS;AACnC,qBAAK,GAAG;AAAA,cACV;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,yBAAyB;AACvC,kBAAI,SAAS;AAIb,mBAAK,oBAAoB,SAAU,GAAG;AAEpC,oBAAI,OAAO,YAAY,UAAU,SAAS,WAAW,EAAG,QAAO,SAAS,MAAM;AAAA,oBAAO,GAAE,eAAe;AAAA,cACxG;AACA,kBAAI,QAAQ,KAAK,iBAAiB;AAClC,kBAAI,MAAO,OAAM,iBAAiB,SAAS,KAAK,iBAAiB;AAEjE,mBAAK,2BAA2B,WAAY;AAI1C,oBAAI,OAAO,YAAY,UAAU,SAAS,WAAW,KAAK,CAAC,OAAO,SAAS,YAAY,CAAC,OAAO,SAAS,UAAU;AAChH,yBAAO,cAAc;AAAA,gBACvB;AAAA,cACF;AACA,mBAAK,aAAa,iBAAiB,SAAS,KAAK,wBAAwB;AAEzE,mBAAK,+BAA+B,SAAU,GAAG;AAC/C,oBAAI,mBAAmB,OAAO,YAAY,UAAU,SAAS,WAAW;AACxE,oBAAI,oBAAoB,CAAC,WAAW,MAAM,aAAa,QAAQ,KAAK,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI;AAElG,oBAAE,eAAe;AAEjB,oBAAE,gBAAgB;AAClB,yBAAO,cAAc;AAAA,gBACvB;AAEA,oBAAI,EAAE,QAAQ,MAAO,QAAO,eAAe;AAAA,cAC7C;AACA,mBAAK,eAAe,iBAAiB,WAAW,KAAK,4BAA4B;AAAA,YACnF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB;AAC9B,kBAAI,SAAS;AAEb,kBAAI,KAAK,QAAQ,eAAe,CAAC,OAAO,mBAAmB;AAEzD,oBAAI,OAAO,oBAAoB,cAAc,GAAG;AAC9C,yBAAO,oBAAoB,UAAU,KAAK,QAAQ,WAAW;AAAA,gBAC/D,OAAO;AAEL,yBAAO,iBAAiB,QAAQ,WAAY;AAC1C,2BAAO,oBAAoB,UAAU,OAAO,QAAQ,WAAW;AAAA,kBACjE,CAAC;AAAA,gBACH;AAAA,cACF,MAAO,MAAK,0BAA0B;AACtC,kBAAI,KAAK,QAAQ,mBAAmB,OAAQ,MAAK,iBAAiB;AAAA,kBAAO,MAAK,0BAA0B;AAAA,YAC1G;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,mBAAmB;AAKjC,kBAAI,OAAO,oBAAoB,aAAa;AAC1C,qBAAK,kBAAkB;AAAA,cACzB,WAAW,CAAC,OAAO,oBAAoB,2BAA2B;AAEhE,uBAAO,oBAAoB,4BAA4B;AACvD,oBAAI,OAAO,KAAK,QAAQ,gBAAgB,YAAY;AAClD,uBAAK,QAAQ,YAAY,SAAU,aAAa;AAC9C,2BAAO,oBAAoB,cAAc,YAAY,YAAY;AAOjE,+BAAW,WAAY;AACrB,6BAAO,gBAAgB,mBAAmB;AAAA,oBAC5C,CAAC;AAAA,kBACH,GAAG,WAAY;AACb,2BAAO,gBAAgB,0BAA0B;AAAA,kBACnD,CAAC;AAAA,gBACH;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,oBAAoB;AAClC,kBAAI,SAAS;AAEb,mBAAK,oBAAoB,WAAY;AACnC,oBAAI,OAAO,sBAAsB,OAAO,SAAS,KAAK,GAAG;AACvD,yBAAO,sBAAsB;AAAA,gBAC/B;AAAA,cACF;AACA,mBAAK,SAAS,iBAAiB,SAAS,KAAK,iBAAiB;AAE9D,mBAAK,wBAAwB,WAAY;AAEvC,2BAAW,OAAO,iBAAiB;AAAA,cACrC;AACA,mBAAK,SAAS,iBAAiB,OAAO,KAAK,qBAAqB;AAChE,mBAAK,SAAS,iBAAiB,SAAS,KAAK,qBAAqB;AAAA,YACpE;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,KAAK,QAAQ;AAC3B,kBAAI,MAAM,KAAK,SAAS,aAAa,WAAW;AAChD,qBAAO,OAAO,OAAO,SAAS,MAAM,OAAO,OAAO,GAAG,GAAG,IAAI;AAAA,YAC9D;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,qBAAqB;AACnC,kBAAI,SAAS;AAEb,mBAAK,2BAA2B,WAAY;AAC1C,uBAAO,qBAAqB;AAAA,cAC9B;AACA,kBAAI,KAAK,SAAS,KAAM,MAAK,SAAS,KAAK,iBAAiB,UAAU,KAAK,wBAAwB;AACnG,mBAAK,SAAS,iBAAiB,QAAQ,KAAK,wBAAwB;AAAA,YACtE;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,uBAAuB;AACrC,kBAAI,KAAK,SAAS,MAAM,OAAO,CAAC,MAAM,KAAK;AACzC,oBAAI,UAAU,KAAK,YAAY,KAAK,SAAS,KAAK;AAElD,oBAAI,CAAC,WAAW,KAAK,oBAAoB,aAAa,SAAS;AAC7D,uBAAK,SAAS,QAAQ;AAAA,gBACxB;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,YAAY,GAAG;AAC7B,qBAAO,EAAE,QAAQ,OAAO,EAAE;AAAA,YAC5B;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,SAAS,MAAM;AAE7B,kBAAI,IAAI,SAAS,YAAY,OAAO;AACpC,gBAAE,UAAU,MAAM,MAAM,IAAI;AAE5B,mBAAK,SAAS,cAAc,CAAC;AAAA,YAC/B;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB;AAC9B,mBAAK,YAAY,UAAU,OAAO,WAAW;AAC7C,mBAAK,aAAa,aAAa,iBAAiB,MAAM;AACtD,mBAAK,qBAAqB;AAE1B,kBAAI,KAAK,YAAY;AACnB,qBAAK,mBAAmB,KAAK,YAAY,KAAK;AAC9C,qBAAK,UAAU,KAAK,YAAY,IAAI;AAAA,cACtC;AAEA,mBAAK,uBAAuB;AAE5B,mBAAK,cAAc,UAAU,IAAI,gBAAgB;AACjD,mBAAK,SAAS,sBAAsB;AAAA,YACtC;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,aAAa,IAAI,WAAW,iBAAiB;AAC3D,kBAAI,mBAAmB,CAAC,GAAG,UAAU,SAAS,SAAS,EAAG,IAAG,UAAU,IAAI,SAAS;AAAA,uBAAW,CAAC,mBAAmB,GAAG,UAAU,SAAS,SAAS,EAAG,IAAG,UAAU,OAAO,SAAS;AAAA,YACpL;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,uBAAuB;AACrC,kBAAI,SAAS;AACb,kBAAI,KAAK,QAAQ,mBAAmB;AAClC,qBAAK,QAAQ,kBAAkB,YAAY,KAAK,QAAQ;AAAA,cAC1D;AACA,kBAAI,CAAC,KAAK,UAAU;AAClB,oBAAI,MAAM,KAAK,SAAS,sBAAsB;AAE9C,oBAAI,YAAY,OAAO,eAAe,SAAS,gBAAgB;AAC/D,oBAAI,WAAW,IAAI,MAAM;AACzB,oBAAI,iBAAiB,KAAK,YAAY;AAEtC,oBAAI,oBAAoB,WAAW,KAAK,SAAS,eAAe,iBAAiB,YAAY,OAAO;AACpG,oBAAI,oBAAoB,WAAW,iBAAiB;AAGpD,qBAAK,aAAa,KAAK,aAAa,6BAA6B,CAAC,qBAAqB,iBAAiB;AAExG,oBAAI,KAAK,QAAQ,mBAAmB;AAGlC,sBAAI,WAAW,CAAC,qBAAqB,oBAAoB,IAAI,KAAK,SAAS;AAE3E,uBAAK,SAAS,MAAM,MAAM,GAAG,OAAO,WAAW,UAAU,IAAI;AAC7D,uBAAK,SAAS,MAAM,OAAO,GAAG,OAAO,IAAI,OAAO,SAAS,KAAK,YAAY,IAAI;AAE9E,uBAAK,sBAAsB,WAAY;AACrC,2BAAO,OAAO,eAAe;AAAA,kBAC/B;AACA,yBAAO,iBAAiB,UAAU,KAAK,mBAAmB;AAAA,gBAC5D;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,oBAAoB,QAAQ;AAC1C,kBAAI,KAAK;AACT,qBAAO,MAAM,OAAO,KAAK,eAAe,CAAC,GAAG,UAAU,SAAS,cAAc,GAAG;AAC9E,qBAAK,GAAG;AAAA,cACV;AAEA,qBAAO,OAAO,KAAK,cAAc,OAAO;AAAA,YAC1C;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,yBAAyB;AACvC,kBAAI,SAAS;AAGb,mBAAK,8BAA8B,SAAU,GAAG;AAE9C,oBAAI,WAAW,OAAO,oBAAoB,EAAE,MAAM;AAClD,oBAAI,SAAU,QAAO,mBAAmB,UAAU,KAAK;AAAA,cACzD;AACA,mBAAK,YAAY,iBAAiB,aAAa,KAAK,2BAA2B;AAE/E,mBAAK,0BAA0B,SAAU,GAAG;AAC1C,oBAAI,WAAW,OAAO,oBAAoB,EAAE,MAAM;AAClD,oBAAI,SAAU,QAAO,gBAAgB,QAAQ;AAAA,cAC/C;AACA,mBAAK,YAAY,iBAAiB,SAAS,KAAK,uBAAuB;AAIvE,kBAAI,YAAY;AAChB,mBAAK,yBAAyB,WAAY;AACxC,oBAAI,CAAC,UAAW,QAAO,eAAe;AACtC,4BAAY;AAAA,cACd;AACA,uBAAS,gBAAgB,iBAAiB,SAAS,KAAK,sBAAsB;AAK9E,kBAAI,QAAQ;AACZ,kBAAI,aAAa;AACjB,mBAAK,2BAA2B,SAAU,GAAG;AAG3C,kBAAE,eAAe;AAEjB,oBAAI,EAAE,QAAQ,aAAa,EAAE,QAAQ,QAAQ,EAAE,QAAQ,eAAe,EAAE,QAAQ,OAAQ,QAAO,iBAAiB,EAAE,GAAG;AAAA,yBAAW,EAAE,QAAQ,QAAS,QAAO,gBAAgB;AAAA,yBAAW,EAAE,QAAQ,SAAU,QAAO,eAAe;AAAA,yBAAW,uBAAuB,KAAK,EAAE,GAAG,GAAG;AAE5Q,sBAAI,WAAY,cAAa,UAAU;AACvC,2BAAS,EAAE,IAAI,YAAY;AAC3B,yBAAO,kBAAkB,KAAK;AAE9B,+BAAa,WAAW,WAAY;AAClC,4BAAQ;AAAA,kBACV,GAAG,GAAG;AAAA,gBACR;AAAA,cACF;AACA,uBAAS,iBAAiB,WAAW,KAAK,wBAAwB;AAAA,YACpE;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB,KAAK;AACpC,kBAAI,OAAO,QAAQ,aAAa,QAAQ,OAAO,KAAK,gBAAgB,yBAAyB,KAAK,gBAAgB;AAClH,kBAAI,MAAM;AAER,oBAAI,KAAK,UAAU,SAAS,cAAc,GAAG;AAC3C,yBAAO,QAAQ,aAAa,QAAQ,OAAO,KAAK,yBAAyB,KAAK;AAAA,gBAChF;AACA,qBAAK,mBAAmB,MAAM,IAAI;AAAA,cACpC;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,kBAAkB;AAChC,kBAAI,KAAK,gBAAiB,MAAK,gBAAgB,KAAK,eAAe;AAAA,YACrE;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,kBAAkB,OAAO;AACvC,uBAASN,KAAI,GAAGA,KAAI,KAAK,UAAU,QAAQA,MAAK;AAC9C,oBAAI,KAAK,YAAY,KAAK,UAAUA,EAAC,EAAE,MAAM,KAAK,GAAG;AACnD,sBAAI,WAAW,KAAK,YAAY,cAAc,QAAQ,OAAO,KAAK,IAAI,SAAS,EAAE,OAAO,KAAK,UAAUA,EAAC,EAAE,IAAI,CAAC;AAE/G,uBAAK,mBAAmB,UAAU,KAAK;AACvC,uBAAK,UAAU,UAAU,IAAI;AAC7B;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,YAAY,GAAG,GAAG;AAChC,qBAAO,EAAE,OAAO,GAAG,EAAE,MAAM,EAAE,YAAY,MAAM;AAAA,YACjD;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,qBAAqB,gBAAgB;AACnD,kBAAI,SAAS;AACb,kBAAI,KAAK,QAAQ,mBAAmB,OAAO,qBAAqB,KAAK,qBAAqB;AACxF,oBAAI,cAAc,CAAC,KAAK,QAAQ,qBAAqB,KAAK,QAAQ,gBAAgB,OAAO,OAAO,CAAC,MAAM;AACvG,oBAAI,wBAAwB,kBAAkB,cAC5C,WAAW,sBAAsB,UACjC,gBAAgB,sBAAsB;AACxC,oBAAI,SAAS,cAAc,WAAW;AACtC,yBAAS,kBAAkB,aAAa,QAAQ,KAAK,oBAAoB,MAAM,MAAM;AAAA,cACvF;AACA,uBAAS,KAAK,iBAAiB,MAAM;AACrC,mBAAK,SAAS,QAAQ;AAAA,YACxB;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,sBAAsB,gBAAgB;AAMpD,kBAAI,SAAS;AACb,kBAAI,mBAAmB,KAAK,oBAAoB;AAChD,kBAAI,SAAS,qBAAqB;AAClC,kBAAI,UAAU,KAAK,QAAQ,gBAAgB,UAAU,OAAO,OAAO,CAAC,MAAM,KAAK;AAC7E,oBAAI,OAAO,OAAO,CAAC,MAAM,IAAK,UAAS,IAAI,OAAO,MAAM;AACxD,yBAAS,IAAI,OAAO,MAAM;AAAA,cAC5B;AAEA,kBAAI,KAAK,QAAQ,oBAAoB,oBAAoB,OAAO,OAAO,CAAC,MAAM,KAAK;AACjF,yBAAS,IAAI,OAAO,gBAAgB,EAAE,OAAO,MAAM;AAAA,cACrD;AAEA,kBAAI,WAAW,KAAK,aAAa,QAAQ,IAAI;AAC7C,kBAAI,UAAU,KAAK,YAAY,MAAM;AACrC,kBAAI,cAAc;AAClB,kBAAI,UAAU;AACZ,oBAAI,eAAe,KAAK,aAAa,KAAK,YAAY,QAAQ,CAAC;AAK/D,oBAAI,kBAAkB,aAAa,QAAQ,KAAK,oBAAoB,IAAI,MAAM,MAAM,QAAQ,UAAU,SAAS,SAAS;AACxH,oBAAI,yBAAyB,qBAAqB,OAAO,KAAK,kBAAkB,OAAO;AAKvF,oBAAI,CAAC,0BAA0B,CAAC,iBAAiB;AAG/C,2BAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,wBAAI,aAAa,CAAC,GAAG;AACnB,oCAAc,aAAa,CAAC;AAC5B;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,WAAW,OAAO,OAAO,CAAC,MAAM,OAAO,QAAQ,QAAQ;AAIrD,8BAAc;AAAA,cAChB,WAAW,CAAC,UAAU,WAAW,KAAK;AAEpC,8BAAc,KAAK;AAAA,cACrB;AACA,kBAAI,gBAAgB,MAAM;AACxB,uBAAO,KAAK,SAAS,WAAW;AAAA,cAClC;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,kBAAkB,QAAQ;AACxC,kBAAI,UAAU,KAAK,YAAY,MAAM;AACrC,kBAAI,QAAQ,OAAO,CAAC,MAAM,KAAK;AAC7B,oBAAI,WAAW,QAAQ,OAAO,GAAG,CAAC;AAClC,uBAAO,sBAAsB,QAAQ,QAAQ,MAAM;AAAA,cACrD;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,mBAAmB,UAAU,aAAa;AACxD,kBAAI,WAAW,KAAK;AACpB,kBAAI,SAAU,UAAS,UAAU,OAAO,gBAAgB;AACxD,mBAAK,kBAAkB;AACvB,mBAAK,gBAAgB,UAAU,IAAI,gBAAgB;AACnD,kBAAI,YAAa,MAAK,gBAAgB,MAAM;AAAA,YAC9C;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB,aAAa,2BAA2B,WAAW;AACjF,kBAAI,cAAc,4BAA4B,eAAe,KAAK;AAClE,uBAASA,KAAI,GAAGA,KAAI,YAAY,QAAQA,MAAK;AAC3C,oBAAI,YAAYA,EAAC,EAAE,SAAS,aAAa;AACvC,yBAAO,YAAYA,EAAC;AAAA,gBACtB;AAAA,cACF;AACA,kBAAI,WAAW;AACb,uBAAO;AAAA,cACT;AACA,oBAAM,IAAI,MAAM,wBAAwB,OAAO,aAAa,GAAG,CAAC;AAAA,YAClE;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,SAAS,aAAa;AACpC,kBAAI,cAAc,KAAK,oBAAoB,OAAO,KAAK,sBAAsB,CAAC;AAE9E,mBAAK,sBAAsB,cAAc,KAAK,gBAAgB,aAAa,OAAO,KAAK,IAAI,CAAC;AAE5F,kBAAI,KAAK,oBAAoB,MAAM;AACjC,qBAAK,iBAAiB,KAAK,oBAAoB;AAAA,cACjD;AACA,mBAAK,kBAAkB,aAAa,SAAS,kBAAkB,OAAO,WAAW,CAAC;AAElF,kBAAI,QAAQ,cAAc,GAAG,OAAO,KAAK,oBAAoB,MAAM,KAAK,EAAE,OAAO,KAAK,oBAAoB,QAAQ,IAAI;AACtH,mBAAK,aAAa,aAAa,SAAS,KAAK;AAC7C,kBAAI,KAAK,QAAQ,kBAAkB;AACjC,oBAAI,WAAW,KAAK,oBAAoB,WAAW,IAAI,OAAO,KAAK,oBAAoB,QAAQ,IAAI;AACnG,qBAAK,iBAAiB,YAAY;AAElC,oBAAI,oBAAoB,KAAK,aAAa,eAAe,KAAK,4BAA4B;AAE1F,qBAAK,SAAS,MAAM,cAAc,GAAG,OAAO,oBAAoB,GAAG,IAAI;AAAA,cACzE;AAEA,mBAAK,mBAAmB;AAExB,kBAAI,KAAK,QAAQ,eAAe;AAC9B,oBAAI,WAAW,KAAK;AACpB,oBAAI,UAAU;AACZ,2BAAS,UAAU,OAAO,aAAa;AACvC,2BAAS,aAAa,iBAAiB,OAAO;AAAA,gBAChD;AACA,oBAAI,aAAa;AAEf,sBAAI,WAAW,KAAK,YAAY,cAAc,QAAQ,OAAO,KAAK,IAAI,SAAS,EAAE,OAAO,aAAa,YAAY,CAAC,KAAK,KAAK,YAAY,cAAc,QAAQ,OAAO,KAAK,IAAI,SAAS,EAAE,OAAO,WAAW,CAAC;AAC5M,2BAAS,aAAa,iBAAiB,MAAM;AAC7C,2BAAS,UAAU,IAAI,aAAa;AACpC,uBAAK,aAAa;AAClB,uBAAK,aAAa,aAAa,yBAAyB,SAAS,aAAa,IAAI,CAAC;AAAA,gBACrF;AAAA,cACF;AAEA,qBAAO,YAAY,SAAS;AAAA,YAC9B;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,8BAA8B;AAG5C,kBAAI,iBAAiB,KAAK,SAAS,WAAW,UAAU;AACxD,6BAAe,MAAM,aAAa;AAClC,uBAAS,KAAK,YAAY,cAAc;AACxC,kBAAI,sBAAsB,KAAK,eAAe,UAAU;AACxD,6BAAe,YAAY,mBAAmB;AAC9C,kBAAI,oBAAoB,KAAK,aAAa,UAAU,IAAI;AACxD,kCAAoB,YAAY,iBAAiB;AACjD,kBAAI,QAAQ,kBAAkB;AAC9B,6BAAe,WAAW,YAAY,cAAc;AACpD,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,qBAAqB;AACnC,kBAAI,uBAAuB,KAAK,QAAQ,oBAAoB,gBAAgB,CAAC,KAAK,yBAAyB,KAAK,QAAQ,oBAAoB;AAC5I,kBAAI,OAAO,qBAAqB,sBAAsB;AACpD,oBAAI,aAAa,kBAAkB,WAAW,KAAK,QAAQ,qBAAqB;AAChF,oBAAI,cAAc,KAAK,oBAAoB,OAAO,kBAAkB,iBAAiB,KAAK,oBAAoB,MAAM,KAAK,QAAQ,cAAc,UAAU,IAAI;AAC7J,8BAAc,KAAK,iBAAiB,WAAW;AAC/C,oBAAI,OAAO,KAAK,QAAQ,sBAAsB,YAAY;AACxD,gCAAc,KAAK,QAAQ,kBAAkB,aAAa,KAAK,mBAAmB;AAAA,gBACpF;AACA,qBAAK,SAAS,aAAa,eAAe,WAAW;AAAA,cACvD;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB,UAAU;AAExC,kBAAI,cAAc,KAAK,SAAS,SAAS,aAAa,mBAAmB,CAAC;AAC1E,mBAAK,eAAe;AACpB,mBAAK,gBAAgB,SAAS,aAAa,gBAAgB,GAAG,IAAI;AAElE,mBAAK,SAAS,MAAM;AAGpB,kBAAI,MAAM,KAAK,SAAS,MAAM;AAC9B,mBAAK,SAAS,kBAAkB,KAAK,GAAG;AACxC,kBAAI,aAAa;AACf,qBAAK,sBAAsB;AAAA,cAC7B;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB;AAC/B,mBAAK,YAAY,UAAU,IAAI,WAAW;AAC1C,mBAAK,aAAa,aAAa,iBAAiB,OAAO;AAEvD,mBAAK,cAAc,UAAU,OAAO,gBAAgB;AAEpD,uBAAS,oBAAoB,WAAW,KAAK,wBAAwB;AACrE,uBAAS,gBAAgB,oBAAoB,SAAS,KAAK,sBAAsB;AACjF,mBAAK,YAAY,oBAAoB,aAAa,KAAK,2BAA2B;AAClF,mBAAK,YAAY,oBAAoB,SAAS,KAAK,uBAAuB;AAE1E,kBAAI,KAAK,QAAQ,mBAAmB;AAClC,oBAAI,CAAC,KAAK,SAAU,QAAO,oBAAoB,UAAU,KAAK,mBAAmB;AACjF,oBAAI,KAAK,SAAS,WAAY,MAAK,SAAS,WAAW,YAAY,KAAK,QAAQ;AAAA,cAClF;AACA,mBAAK,SAAS,uBAAuB;AAAA,YACvC;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,UAAU,SAAS,QAAQ;AACzC,kBAAI,YAAY,KAAK;AAErB,kBAAI,YAAY,OAAO,eAAe,SAAS,gBAAgB;AAC/D,kBAAI,kBAAkB,UAAU;AAChC,kBAAI,eAAe,UAAU,sBAAsB,EAAE,MAAM;AAC3D,kBAAI,kBAAkB,eAAe;AACrC,kBAAI,gBAAgB,QAAQ;AAC5B,kBAAI,aAAa,QAAQ,sBAAsB,EAAE,MAAM;AACvD,kBAAI,gBAAgB,aAAa;AACjC,kBAAI,eAAe,aAAa,eAAe,UAAU;AACzD,kBAAI,eAAe,kBAAkB,IAAI,gBAAgB;AACzD,kBAAI,aAAa,cAAc;AAE7B,oBAAI,OAAQ,iBAAgB;AAC5B,0BAAU,YAAY;AAAA,cACxB,WAAW,gBAAgB,iBAAiB;AAE1C,oBAAI,OAAQ,iBAAgB;AAC5B,oBAAI,mBAAmB,kBAAkB;AACzC,0BAAU,YAAY,eAAe;AAAA,cACvC;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB,iBAAiB,qBAAqB;AACpE,kBAAI,WAAW,KAAK,SAAS;AAE7B,kBAAI,cAAc,IAAI,OAAO,eAAe;AAC5C,kBAAI;AACJ,kBAAI,SAAS,OAAO,CAAC,MAAM,KAAK;AAE9B,oBAAI,eAAe,KAAK,aAAa,QAAQ;AAC7C,oBAAI,cAAc;AAEhB,8BAAY,SAAS,QAAQ,cAAc,WAAW;AAAA,gBACxD,OAAO;AAGL,8BAAY;AAAA,gBACd;AAAA,cACF,WAAW,KAAK,QAAQ,gBAAgB,KAAK,QAAQ,kBAAkB;AAErE;AAAA,cACF,OAAO;AAEL,oBAAI,UAAU;AAEZ,8BAAY,cAAc;AAAA,gBAC5B,WAAW,uBAAuB,CAAC,KAAK,QAAQ,kBAAkB;AAGhE,8BAAY;AAAA,gBACd,OAAO;AACL;AAAA,gBACF;AAAA,cACF;AACA,mBAAK,SAAS,QAAQ;AAAA,YACxB;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,aAAa,QAAQ,iBAAiB;AACpD,kBAAI,WAAW;AAEf,kBAAI,OAAO,OAAO,CAAC,MAAM,KAAK;AAC5B,oBAAI,eAAe;AAEnB,yBAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,sBAAIM,KAAI,OAAO,OAAON,EAAC;AAEvB,sBAAI,CAAC,MAAM,SAASM,IAAG,EAAE,CAAC,GAAG;AAC3B,oCAAgBA;AAEhB,wBAAI,iBAAiB;AACnB,0BAAI,KAAK,aAAa,YAAY,GAAG;AAEnC,mCAAW,OAAO,OAAO,GAAGN,KAAI,CAAC;AAAA,sBACnC;AAAA,oBACF,OAAO;AACL,0BAAI,KAAK,UAAU,YAAY,GAAG;AAChC,mCAAW,OAAO,OAAO,GAAGA,KAAI,CAAC;AAEjC;AAAA,sBACF;AAAA,oBACF;AAEA,wBAAI,aAAa,WAAW,KAAK,mBAAmB;AAClD;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB;AAC/B,kBAAI,MAAM,KAAK,SAAS,MAAM,KAAK;AACnC,kBAAI,WAAW,KAAK,oBAAoB;AACxC,kBAAI;AACJ,kBAAI,aAAa,KAAK,YAAY,GAAG;AACrC,kBAAI,KAAK,QAAQ,oBAAoB,IAAI,OAAO,CAAC,MAAM,OAAO,YAAY,YAAY;AAEpF,yBAAS,IAAI,OAAO,QAAQ;AAAA,cAC9B,OAAO;AACL,yBAAS;AAAA,cACX;AACA,qBAAO,SAAS;AAAA,YAClB;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,iBAAiB,gBAAgB;AAC/C,kBAAI,SAAS;AACb,kBAAI,KAAK,QAAQ,kBAAkB;AACjC,oBAAI,WAAW,KAAK,aAAa,MAAM;AAEvC,oBAAI,UAAU;AAEZ,6BAAW,IAAI,OAAO,KAAK,oBAAoB,QAAQ;AAKvD,sBAAI,QAAQ,OAAO,SAAS,MAAM,MAAM,OAAO,OAAO,SAAS,MAAM,MAAM,MAAM,SAAS,SAAS,IAAI,SAAS;AAChH,2BAAS,OAAO,OAAO,KAAK;AAAA,gBAC9B;AAAA,cACF;AACA,qBAAO,KAAK,KAAK,MAAM;AAAA,YACzB;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,wBAAwB;AACtC,mBAAK,SAAS,eAAe;AAAA,YAC/B;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,oBAAoB;AAClC,kBAAI,KAAK,QAAQ,mBAAmB,QAAQ;AAG1C,qBAAK,iBAAiB,OAAO,oBAAoB;AAEjD,oBAAI,CAAC,KAAK,SAAS,OAAO;AACxB,uBAAK,WAAW,KAAK,cAAc;AAAA,gBACrC;AACA,qBAAK,0BAA0B;AAAA,cACjC;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,cAAc;AAE5B,kBAAI,OAAO,mBAAmB;AAE5B,oBAAI,KAAK,SAAS,OAAO;AACvB,uBAAK,qBAAqB,KAAK,SAAS,KAAK;AAAA,gBAC/C;AACA,qBAAK,mBAAmB;AAAA,cAC1B;AACA,mBAAK,0BAA0B;AAAA,YACjC;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,UAAU;AACxB,kBAAI,OAAO,KAAK,SAAS;AACzB,kBAAI,KAAK,QAAQ,eAAe;AAE9B,qBAAK,eAAe;AACpB,qBAAK,aAAa,oBAAoB,SAAS,KAAK,wBAAwB;AAC5E,qBAAK,eAAe,oBAAoB,WAAW,KAAK,4BAA4B;AAEpF,oBAAI,QAAQ,KAAK,iBAAiB;AAClC,oBAAI,MAAO,OAAM,oBAAoB,SAAS,KAAK,iBAAiB;AAAA,cACtE;AAEA,kBAAI,KAAK,eAAe,KAAM,MAAK,oBAAoB,UAAU,KAAK,wBAAwB;AAE9F,kBAAI,KAAK,QAAQ,kBAAkB;AACjC,oBAAI,KAAM,MAAK,oBAAoB,UAAU,KAAK,wBAAwB;AAC1E,qBAAK,SAAS,oBAAoB,QAAQ,KAAK,wBAAwB;AAAA,cACzE;AAEA,mBAAK,SAAS,oBAAoB,SAAS,KAAK,iBAAiB;AACjE,mBAAK,SAAS,oBAAoB,OAAO,KAAK,qBAAqB;AACnE,mBAAK,SAAS,oBAAoB,SAAS,KAAK,qBAAqB;AAErE,mBAAK,SAAS,gBAAgB,wBAAwB;AAEtD,kBAAI,UAAU,KAAK,SAAS;AAC5B,sBAAQ,WAAW,aAAa,KAAK,UAAU,OAAO;AACtD,sBAAQ,WAAW,YAAY,OAAO;AACtC,qBAAO,OAAO,oBAAoB,UAAU,KAAK,EAAE;AAAA,YACrD;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,eAAe;AAC7B,kBAAI,OAAO,mBAAmB;AAC5B,uBAAO,kBAAkB,aAAa,KAAK,eAAe,GAAG,KAAK,oBAAoB,IAAI;AAAA,cAC5F;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,UAAU,QAAQ;AAChC,kBAAI,OAAO,mBAAmB;AAC5B,oBAAI,OAAO,KAAK,oBAAoB;AACpC,uBAAO,kBAAkB,aAAa,KAAK,eAAe,GAAG,MAAM,MAAM;AAAA,cAC3E;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB;AAC9B,kBAAI,OAAO,mBAAmB;AAC5B,uBAAO,kBAAkB,cAAc,KAAK,eAAe,GAAG,KAAK,oBAAoB,IAAI;AAAA,cAC7F;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,yBAAyB;AACvC,qBAAO,KAAK;AAAA,YACd;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,qBAAqB;AACnC,kBAAI,OAAO,mBAAmB;AAC5B,oBAAI,OAAO,KAAK,oBAAoB;AACpC,uBAAO,kBAAkB,mBAAmB,KAAK,eAAe,GAAG,IAAI;AAAA,cACzE;AACA,qBAAO;AAAA,YACT;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,gBAAgB;AAC9B,kBAAI,MAAM,KAAK,eAAe,EAAE,KAAK;AACrC,kBAAI,cAAc,KAAK,QAAQ,eAAe,KAAK,oBAAoB,OAAO;AAC9E,qBAAO,OAAO,oBAAoB,kBAAkB,cAAc,KAAK,WAAW,IAAI;AAAA,YACxF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,WAAW,qBAAqB;AAC9C,kBAAI,cAAc,oBAAoB,YAAY;AAElD,kBAAI,CAAC,KAAK,kBAAkB,UAAU,SAAS,QAAQ,OAAO,WAAW,CAAC,GAAG;AAC3E,qBAAK,SAAS,WAAW;AACzB,qBAAK,gBAAgB,KAAK,oBAAoB,UAAU,KAAK;AAC7D,qBAAK,sBAAsB;AAAA,cAC7B;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,UAAU,QAAQ;AAGhC,kBAAI,cAAc,KAAK,sBAAsB,MAAM;AACnD,mBAAK,qBAAqB,MAAM;AAChC,kBAAI,aAAa;AACf,qBAAK,sBAAsB;AAAA,cAC7B;AAAA,YACF;AAAA,UACF,GAAG;AAAA,YACD,KAAK;AAAA,YACL,OAAO,SAAS,yBAAyB,MAAM;AAC7C,mBAAK,QAAQ,wBAAwB;AACrC,mBAAK,mBAAmB;AAAA,YAC1B;AAAA,UACF,CAAC,CAAC;AACF,iBAAOK;AAAA,QACT,EAAE;AAKF,QAAAJ,qBAAoB,iBAAiB,WAAY;AAC/C,iBAAO;AAAA,QACT;AAEA,YAAI,eAAe,SAASM,cAAa,MAAM,eAAe,eAAe;AAE3E,cAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,iBAAO,SAAS,WAAY;AAC1B,4BAAgB,aAAa;AAC7B,gBAAI,cAAe,eAAc;AAAA,UACnC;AACA,iBAAO,UAAU,WAAY;AAC3B,4BAAgB,0BAA0B;AAC1C,gBAAI,cAAe,eAAc;AAAA,UACnC;AACA,iBAAO,YAAY;AACnB,iBAAO,QAAQ;AACf,iBAAO,MAAM;AACb,mBAAS,KAAK,YAAY,MAAM;AAAA,QAClC;AAEA,QAAAN,qBAAoB,YAAY,SAAU,MAAM;AAK9C,cAAI,CAAC,OAAO,qBAAqB,CAAC,OAAO,oBAAoB,2BAA2B;AAEtF,mBAAO,oBAAoB,4BAA4B;AAEvD,gBAAI,OAAO,YAAY,aAAa;AAClC,qBAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,uBAAO,aAAa,MAAM,SAAS,MAAM;AAAA,cAC3C,CAAC;AAAA,YACH;AACA,yBAAa,IAAI;AAAA,UACnB;AACA,iBAAO;AAAA,QACT;AAEA,QAAAA,qBAAoB,WAAW;AAE/B,QAAAA,qBAAoB,UAAU;AAE9B,eAAO,SAAU,OAAO,SAAS;AAC/B,cAAI,MAAM,IAAI,IAAI,OAAO,OAAO;AAChC,cAAI,MAAM;AACV,gBAAM,aAAa,0BAA0B,IAAI,EAAE;AACnD,iBAAO,oBAAoB,UAAU,IAAI,EAAE,IAAI;AAC/C,iBAAO;AAAA,QACT;AAAA,MACF,EAAE;AAAA,IACJ,CAAC;AAAA;AAAA;;;AC/0CD;AAAA,kDAAAO,SAAA;AAGA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACHjB;AAAA,2DAAAC,SAAA;AAAA,KAAC,SAAU,GAAG,GAAG;AACf,UAAI,cAAc,OAAO,UAAU,OAAO,IAAK,QAAO,CAAC,GAAG,CAAC;AAAA,eAAW,eAAe,OAAO,QAAS,GAAE;AAAA,WAAO;AAC5G,UAAE,GAAG,EAAE,YAAY;AAAA,UACjB,SAAS,CAAC;AAAA,QACZ,EAAE;AAAA,MACJ;AAAA,IACF,GAAG,SAAM,WAAY;AACnB;AAEA,eAAS,EAAEC,IAAGC,IAAG;AACf,eAAO,eAAe,OAAOA,KAAIA,KAAI;AAAA,UACnC,SAAS;AAAA,QACX,IAAI,YAAY,OAAOA,OAAM,QAAQ,KAAK,oDAAoD,GAAGA,KAAI;AAAA,UACnG,SAAS,CAACA;AAAA,QACZ,IAAIA,GAAE,WAAW,6EAA6E,KAAKD,GAAE,IAAI,IAAI,IAAI,KAAK,CAAC,UAAUA,EAAC,GAAG;AAAA,UACnI,MAAMA,GAAE;AAAA,QACV,CAAC,IAAIA;AAAA,MACP;AACA,eAAS,EAAEA,IAAGC,IAAGC,IAAG;AAClB,YAAIC,KAAI,IAAI,eAAe;AAC3B,QAAAA,GAAE,KAAK,OAAOH,EAAC,GAAGG,GAAE,eAAe,QAAQA,GAAE,SAAS,WAAY;AAChE,YAAEA,GAAE,UAAUF,IAAGC,EAAC;AAAA,QACpB,GAAGC,GAAE,UAAU,WAAY;AACzB,kBAAQ,MAAM,yBAAyB;AAAA,QACzC,GAAGA,GAAE,KAAK;AAAA,MACZ;AACA,eAAS,EAAEH,IAAG;AACZ,YAAIC,KAAI,IAAI,eAAe;AAC3B,QAAAA,GAAE,KAAK,QAAQD,IAAG,KAAE;AACpB,YAAI;AACF,UAAAC,GAAE,KAAK;AAAA,QACT,SAASD,IAAG;AAAA,QAAC;AACb,eAAO,OAAOC,GAAE,UAAU,OAAOA,GAAE;AAAA,MACrC;AACA,eAAS,EAAED,IAAG;AACZ,YAAI;AACF,UAAAA,GAAE,cAAc,IAAI,WAAW,OAAO,CAAC;AAAA,QACzC,SAASE,IAAG;AACV,cAAID,KAAI,SAAS,YAAY,aAAa;AAC1C,UAAAA,GAAE,eAAe,SAAS,MAAI,MAAI,QAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,OAAI,OAAI,OAAI,OAAI,GAAG,IAAI,GAAGD,GAAE,cAAcC,EAAC;AAAA,QACxG;AAAA,MACF;AACA,UAAI,IAAI,YAAY,OAAO,UAAU,OAAO,WAAW,SAAS,SAAS,YAAY,OAAO,QAAQ,KAAK,SAAS,OAAO,OAAO,YAAY,OAAO,UAAU,OAAO,WAAW,SAAS,SAAS,QAC/L,IAAI,EAAE,aAAa,YAAY,KAAK,UAAU,SAAS,KAAK,cAAc,KAAK,UAAU,SAAS,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GACzI,IAAI,EAAE,WAAW,YAAY,OAAO,UAAU,WAAW,IAAI,WAAY;AAAA,MAAC,IAAI,cAAc,kBAAkB,aAAa,CAAC,IAAI,SAAUA,IAAGG,IAAG,GAAG;AACjJ,YAAI,IAAI,EAAE,OAAO,EAAE,WACjB,IAAI,SAAS,cAAc,GAAG;AAChC,QAAAA,KAAIA,MAAKH,GAAE,QAAQ,YAAY,EAAE,WAAWG,IAAG,EAAE,MAAM,YAAY,YAAY,OAAOH,MAAK,EAAE,OAAOA,IAAG,EAAE,WAAW,SAAS,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,IAAI,EAAEA,IAAGG,IAAG,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,QAAQ,MAAM,EAAE,OAAO,EAAE,gBAAgBH,EAAC,GAAG,WAAW,WAAY;AACxP,YAAE,gBAAgB,EAAE,IAAI;AAAA,QAC1B,GAAG,GAAG,GAAG,WAAW,WAAY;AAC9B,YAAE,CAAC;AAAA,QACL,GAAG,CAAC;AAAA,MACN,IAAI,sBAAsB,YAAY,SAAUI,IAAGD,IAAG,GAAG;AACvD,YAAIA,KAAIA,MAAKC,GAAE,QAAQ,YAAY,YAAY,OAAOA,GAAG,WAAU,iBAAiB,EAAEA,IAAG,CAAC,GAAGD,EAAC;AAAA,iBAAW,EAAEC,EAAC,EAAG,GAAEA,IAAGD,IAAG,CAAC;AAAA,aAAO;AAC7H,cAAI,IAAI,SAAS,cAAc,GAAG;AAClC,YAAE,OAAOC,IAAG,EAAE,SAAS,UAAU,WAAW,WAAY;AACtD,cAAE,CAAC;AAAA,UACL,CAAC;AAAA,QACH;AAAA,MACF,IAAI,SAAUJ,IAAGE,IAAGG,IAAGF,IAAG;AACxB,YAAIA,KAAIA,MAAK,KAAK,IAAI,QAAQ,GAAGA,OAAMA,GAAE,SAAS,QAAQA,GAAE,SAAS,KAAK,YAAY,mBAAmB,YAAY,OAAOH,GAAG,QAAO,EAAEA,IAAGE,IAAGG,EAAC;AAC/I,YAAI,IAAI,+BAA+BL,GAAE,MACvC,IAAI,eAAe,KAAK,EAAE,WAAW,KAAK,EAAE,QAC5C,IAAI,eAAe,KAAK,UAAU,SAAS;AAC7C,aAAK,KAAK,KAAK,KAAK,MAAM,eAAe,OAAO,YAAY;AAC1D,cAAI,IAAI,IAAI,WAAW;AACvB,YAAE,YAAY,WAAY;AACxB,gBAAID,KAAI,EAAE;AACV,YAAAA,KAAI,IAAIA,KAAIA,GAAE,QAAQ,gBAAgB,uBAAuB,GAAGI,KAAIA,GAAE,SAAS,OAAOJ,KAAI,WAAWA,IAAGI,KAAI;AAAA,UAC9G,GAAG,EAAE,cAAcH,EAAC;AAAA,QACtB,OAAO;AACL,cAAI,IAAI,EAAE,OAAO,EAAE,WACjB,IAAI,EAAE,gBAAgBA,EAAC;AACzB,UAAAG,KAAIA,GAAE,WAAW,IAAI,SAAS,OAAO,GAAGA,KAAI,MAAM,WAAW,WAAY;AACvE,cAAE,gBAAgB,CAAC;AAAA,UACrB,GAAG,GAAG;AAAA,QACR;AAAA,MACF;AACF,QAAE,SAAS,EAAE,SAAS,GAAG,eAAe,OAAOL,YAAWA,QAAO,UAAU;AAAA,IAC7E,CAAC;AAAA;AAAA;;;ACxED,oBAAmB;;;AC4DK,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF8C,IAAA,qBAAA,SAAA,WAAA,IAAA;AAC5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,MAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF6C,IAAA,qBAAA,SAAA,WAAA,IAAA;AAC3C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,MAAA,GAAA;;;;;AAHN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAiG,GAAA,cAAA,EAAA;AAE7F,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;AAHqB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,QAAA;;;;;AAMpC,IAAA,yBAAA,GAAA,kBAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAkBI,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF6C,IAAA,qBAAA,SAAA,UAAA,UAAA;AAC3C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,YAAA,GAAA;;;AD5FpB,IAAO,2BAAP,MAAO,0BAAwB;EAenC,YAAmB,eACV,gBACA,QACA,cACA,eACA,mBACA,2BACA,aACC,OACA,UACA,IACD,eACC,aAA8B;AAZrB,SAAA,gBAAA;AACV,SAAA,iBAAA;AACA,SAAA,SAAA;AACA,SAAA,eAAA;AACA,SAAA,gBAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACA,SAAA,WAAA;AACA,SAAA,KAAA;AACD,SAAA,gBAAA;AACC,SAAA,cAAA;AAtBH,SAAA,YAAY,CAAA;AACZ,SAAA,YAAY,CAAA;AACZ,SAAA,WAAW,CAAA;AAElB,SAAA,UAAU;AAEV,SAAA,QAAQ,oBAAI,KAAI;AAiBd,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,oBAAoB,sBAAsB,EAAE;AAChG,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,qBAAoB;IACxC;AACA,SAAK,SAAS,IAAI,WAAU;EAC9B;EAEA,WAAQ;AACN,SAAK,WAAU;AACf,YAAQ,IAAI,KAAK,QAAO,KAAK;AAC7B,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,gBAAgB;AAC5B,SAAK,OAAO,YAAY,KAAK,eAAe,gBAAgB;AAC5D,SAAK,OAAO,eAAe,aAAa;AACxC,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,SAAK,OAAO,gBAAgB;AAC5B,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,cAAc,wBAAwB,KAAK,MAAM,EAAE,UAAU,UAAO;AACvE,UAAI,KAAK,gBAAgB,KAAK,aAAa,eACtC,KAAK,aAAa,YAAY,QAAQ;AACzC,aAAK,UAAU,KAAK,aAAa,YAAY,SAAS,IAAI,KAAK,aAAa,YAAY,KAAK,OAAK,EAAE,gBAAgB,KAAK,eAAe,eAAe,YAAY,IAAI,KAAK,aAAa,YAAY,CAAC;AACtM,cAAM,kBAAuB,KAAK,YAAY,QAAQ;AACtD,aAAK,YAAY,gBAAgB;AAEjC,aAAK,YAAY,gBAAgB;AACjC,YAAI,KAAK,WAAW,KAAK,QAAQ,aAAa;AAC5C,eAAK,aAAa,KAAK,QAAQ,WAAW;QAC5C;AACA,aAAK,WAAU;MACjB;IACF,CAAC;EAEH;EAEA,aAAU;AACR,YAAQ,IAAI,KAAK,OAAO;AACxB,QAAI,KAAK,WAAW,KAAK,QAAQ,WAAW;AAC1C,WAAK,QAAQ,UAAM,cAAAQ,SAAO,KAAK,QAAQ,SAAS,EAAE,OAAO,YAAY;IACvE;AACA,SAAK,WAAW,KAAK,GAAG,MAAM;MAC5B,kBAAkB,CAAC,KAAK,UAAU,KAAK,QAAQ,YAAY,MAAM,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,QAAQ,WAAW,CAAC,CAAC,CAAC;MAC3I,iBAAiB,CAAE,KAAK,WAAW,KAAK,QAAQ,YAAY,iBAAkB,KAAK,QAAQ,WAAW,MAAM,WAAW,QAAQ,WAAW,CAAC;MAC3I,gBAAgB,CAAC,KAAK,UAAU,KAAK,QAAQ,iBAAiB,MAAM,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,QAAQ,WAAW,CAAC,CAAC,CAAC;MAC9I,eAAe,CAAC,KAAK,UAAU,KAAK,QAAQ,gBAAgB,MAAM,WAAW,QAAQ,WAAW,CAAC;MACjG,SAAS,CAAC,KAAK,UAAU,KAAK,QAAQ,cAAc,MAAM,WAAW,QAAQ,CAAC,WAAW,QAAQ,CAAC,CAAC;MACnG,OAAO,CAAC,KAAK,UAAU,KAAK,QAAQ,YAAY,EAAE;MAClD,KAAK,CAAC,KAAK,UAAU,KAAK,QAAQ,MAAM,MAAM,WAAW,QAAQ;MACjE,QAAQ,CAAC,KAAK,UAAU,KAAK,QAAQ,aAAa,MAAM,WAAW,QAAQ;KAC5E;EACH;EAEA,iBAAiB,SAAO;AACtB,QAAI,CAAC,QAAQ,aAAa;AACxB,aAAO,QAAQ;IACjB,OAAO;AACL,aAAO,QAAQ;IACjB;EACF;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEA,kBAAkB,IAAE;AAClB,QAAI,CAAC,KAAK,SAAS,SAAS,iBAAiB,EAAE,SAAS,GAAG,OAAO,OAAO;AACvE,WAAK,SAAS,SAAS,iBAAiB,EAAE,SAAS,GAAG,OAAO,KAAK;IACpE;EACF;EAEO,aAAa,aAAa,WAAW,OAAK;AAC/C,SAAK,WAAW,CAAA;AAChB,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,SAAK,cAAc,wBAAwB,aAAa,MAAM,EAAE,UAAU,SAAM;AAC9E,WAAK,WAAW,IAAI;AACpB,UAAI,YAAY,CAAC,KAAK,SAAS;AAAQ,aAAK,SAAS,SAAS,OAAO,EAAE,SAAS,EAAE;IACpF,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,qBAAoB;IACxC,CAAC;EACH;EAEA,gBAAa;AACX,SAAK,SAAS,WAAW;MACvB,kBAAkB,KAAK,SAAS,SAAS,kBAAkB,EAAE,OAAO,KAAI;MACxE,iBAAiB,KAAK,SAAS,SAAS,iBAAiB,EAAE,OAAO,KAAI;MACtE,gBAAe,KAAK,SAAS,SAAS,gBAAgB,EAAE,OAAO,KAAI;MACnE,eAAc,KAAK,SAAS,SAAS,eAAe,EAAE,OAAO,KAAI;MACjE,OAAM,KAAK,SAAS,SAAS,OAAO,EAAE,OAAO,KAAI;KAClD;AAED,QAAI,KAAK,SAAS,OAAO;AACvB,WAAK,SAAS,MAAM,UAAM,cAAAA,SAAO,KAAK,SAAS,MAAM,GAAG,EAAE,OAAO,YAAY;AAC7E,WAAK,eAAe,cAAc,OAAO,OAAO,KAAK,SAAS,OAAO,EAAE,WAAW,KAAK,QAAQ,cAAc,cAAc,KAAK,cAAc,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU,EAAC,CAAE,CAAC,EAAE,UAAU;QACvN,MAAK,MAAK;AACN,eAAK,QAAQ,KAAK,aAAa,oBAAoB,wBAAwB,MAAM,KAAK,QAAQ,YAAY,MAAM,KAAK,aAAa,oBAAoB,wBAAwB,GAAG;QACnL;QACA,OAAM,MAAK;AACT,eAAK,QAAQ,KAAK,aAAa,oBAAoB,wBAAwB,MAAM,KAAK,QAAQ,YAAY,MAAM,KAAK,aAAa,oBAAoB,wBAAwB,GAAG;QACnL;OACH;IACD;EACF;EAEO,QAAQ,KAAG;AAChB,QAAI,OAAO,UAAa,OAAO,QAAQ,OAAO;AAC5C,YAAM,KAAK,aAAa,oBAAoB;AAC9C,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK,EAC5G,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,cAAc,OAAM;MAC3B;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;;;uCA3JW,2BAAwB,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,WAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAUxB,WAAS,CAAA;;;;;;;;;ACzBtB,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,KAAA,EACzC,GAAA,KAAA;AAED,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,GAAA,WAAA,CAAA,EAAiC,GAAA,KAAA,CAAA;AACF,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,OAAA,CAAsB;QAAA,CAAA;AACzC,QAAA,iBAAA,CAAA;AAAyC,QAAA,uBAAA;AAC5D,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAkE,QAAA,iBAAA,EAAA;AAA6D,QAAA,uBAAA;AAC/H,QAAA,yBAAA,IAAA,KAAA,CAAA;AAAoB,QAAA,iBAAA,EAAA;AACyB,QAAA,uBAAA,EAAI;AAInD,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA8E,IAAA,OAAA,CAAA,EAE3D,IAAA,OAAA,CAAA,EACkB,IAAA,YAAA,EAAA,EACR,IAAA,OAAA,EAAA,EACK,IAAA,KAAA,EAAA;AAEH,QAAA,iBAAA,EAAA;AACwB,QAAA,uBAAA;AAE7C,QAAA,yBAAA,IAAA,MAAA,EAAA,EAAkB,IAAA,QAAA;AAAQ,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA,EAAS;AAEjF,QAAA,yBAAA,IAAA,QAAA,EAAA;AAAwC,QAAA,qBAAA,UAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,CAAe;QAAA,CAAA;AAC/D,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,OAAA,EAAA,EACE,IAAA,SAAA,EAAA;AAEb,QAAA,iBAAA,EAAA;AAAuD,QAAA,yBAAA,IAAA,KAAA;AAAK,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,KAAA;AAAE,QAAA,uBAAA;AACrF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAAyD,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAAqD,QAAA,yBAAA,IAAA,KAAA;AAAK,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,KAAA;AAAE,QAAA,uBAAA;AACvF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAAuD,QAAA,uBAAA;AAC1E,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAA8C,QAAA,yBAAA,IAAA,KAAA;AAAK,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,KAAA;AAAE,QAAA,uBAAA;AAChF,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyE,IAAA,cAAA,EAAA;AAC3D,QAAA,qBAAA,mBAAA,SAAA,yEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,aAAA,OAAA,OAA2B,IAAI,CAAC;QAAA,CAAA;AAC7D,QAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa,EACE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AAElE,QAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,kBAAA,EAAA,EAAiG,IAAA,qDAAA,GAAA,GAAA,kBAAA,EAAA;AAYnG,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAAgD,QAAA,yBAAA,IAAA,KAAA;AAAK,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,KAAA;AAAE,QAAA,uBAAA;AAClF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA,EAA6E,IAAA,yBAAA,EAAA,EACL,IAAA,kBAAA,MAAA,CAAA;AAE1E,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,aAAA,EAAA;AAET,QAAA,iBAAA,EAAA;AAA0C,QAAA,yBAAA,IAAA,KAAA;AAAK,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,KAAA;AAAE,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyE,IAAA,cAAA,EAAA;AAErE,QAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa,EACE,EAEb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmE,IAAA,UAAA,EAAA;AAG/D,QAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,OAAA,CAAsB;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AAC9E,QAAA,yBAAA,IAAA,UAAA,EAAA;AACe,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA,EAAS,EAE7D,EACD,EACH,EACG,EACP,EACF,EAEF,EACF;;;;AAvHiB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AAC+C,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,sBAAA;AAC9C,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,sCAAA,MAAA,IAAA,eAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,eAAA,WAAA,EAAA;AAYS,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,sCAAA,MAAA,IAAA,eAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,eAAA,WAAA,EAAA;AAGK,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,OAAA;AAEpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,QAAA;AAIe,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,kBAAA,EAAA;AAOI,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,iBAAA,KAAA;AAQA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,gBAAA,EAAA;AAQA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,eAAA,KAAA;AAQA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,SAAA,EAAA;AAGiB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,SAAA;AASjB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,OAAA,KAAA;AAEuD,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA,MAAA;AAQA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,SAAA,MAAA;AAOvD,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,WAAA,EAAA;AAEV,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,OAAA,IAAA,KAAA,EAAa,iBAAA,SAAA;AACa,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,SAAA;AAOhB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,KAAA,EAAA;AAGgB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,SAAA;AAWF,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,MAAA;AAEpB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;;;;;;6EDxGpB,0BAAwB,EAAA,WAAA,4BAAA,UAAA,gGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGGvB,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFE,IAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,OAAA,UAAA,CAAA,OAAA,QAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,uBAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;AAJS,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,OAAA,OAAA,OAAA,EAAA,UAAA,YAAA,OAAA,EAAA,UAAA,OAAA;;;;;AAOP,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,OAAA,UAAA,CAAA,OAAA,QAAA,CAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,mCAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAHS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,KAAA,OAAA,OAAA,OAAA,EAAA,cAAA,OAAA,SAAA;;;;;AAWH,IAAA,yBAAA,GAAA,YAAA,EAAA;AAAwD,IAAA,iBAAA,GAAA,QAAA;AAAK,IAAA,uBAAA;;;;;;AAY/D,IAAA,yBAAA,GAAA,UAAA,EAAA;AACmE,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AACvF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFE,IAAA,qBAAA,YAAA,CAAA,OAAA,cAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,QAAA,GAAA;;;ADrCZ,IAAO,iBAAP,MAAO,gBAAc;EAazB,YAAoB,aAAwC,cAAmC,aAAiC,QAAc;AAA1H,SAAA,cAAA;AAAwC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAAiC,SAAA,SAAA;AAVzH,SAAA,WAAW;AACX,SAAA,MAAM;AACN,SAAA,kBAAkB;AAElB,SAAA,OAAO,YAAY;AACnB,SAAA,aAAa;AACb,SAAA,UAAU;AACV,SAAA,YAAY;EAG+H;EAElJ,WAAQ;AACN,QAAI,KAAK,OAAO,IAAI,QAAQ,OAAO,KAAK,IAAI;AAC1C,YAAM,SAAS,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,OAAO,EAAE,CAAC,EAAE,MAAM,OAAO;AACrE,UAAI,OAAO,CAAC,KAAK,UAAa,OAAO,CAAC,KAAK,QAAQ,OAAO,CAAC,KAAK,IAAI;AAClE,aAAK,OAAO,SAAS,OAAO,CAAC,EAAE,MAAM,QAAQ,EAAE,CAAC,CAAC;AACjD;AACA,YAAI,OAAO,CAAC,EAAE,MAAM,QAAQ,EAAE,CAAC,KAAK,UAAa,OAAO,CAAC,EAAE,MAAM,QAAQ,EAAE,CAAC,EAAE,SAAQ,EAAG,kBAAiB,KAAM;AAE9G,cAAI,SAAS,QAAQ,qBAAqB;AACxC,iBAAK,YAAY;UACnB,WAAW,SAAS,QAAQ,wBAAwB;AAClD,iBAAK,YAAY;UACnB,OAAO;AACL,iBAAK,YAAY;UACnB;AACF,aAAK,aAAa,WAAW,KAAK,SAAS;MAC7C;AACA,WAAK,aAAa,mBAAmB,KAAK;AAC1C,WAAK,gBAAe;AACpB,WAAK,kBAAkB;AACvB,WAAK,cAAc,IAAI,YAAW;AAClC,WAAK,YAAY,WAAW,OAAO,CAAC;AACpC,WAAK,gBAAgB,KAAK,gBAAgB,IAAI,YAAW,CAAE;IAE7D,OACK;AACH,WAAK,kBAAkB;IACzB;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,cAAa;IACjC,CAAC;EACH;EAEA,IAAI,IAAC;AAAK,WAAO,KAAK,eAAe;EAAU;EAExC,cAAW;AAChB,QAAI,KAAK,cAAc,SAAS;AAC9B,WAAK,WAAW;AAChB;IACF;AAEA,QAAI,KAAK,cAAc,SAAS,WAAW,EAAE,UAAU,KAAK,cAAc,SAAS,eAAe,EAAE,OAAO;AACzG,WAAK,YAAY,YAAY,KAAK,cAAc,SAAS,WAAW,EAAE;AACtE,WAAK,YAAY,aAAa,KAAK,WAAW,EAAE,UAAU;QACxD,MAAM,MAAK;AACT,eAAK,WAAW;AAChB,eAAK,MAAM,KAAK,aAAa,aAAa;AAC1C,eAAK,mBAAmB,UAAS;QACnC;QAAG,OAAO,MAAK;AACb,eAAK,WAAW;AAChB,eAAK,MAAM,KAAK,aAAa,aAAa;AAC1C,eAAK,mBAAmB,UAAS;QACnC;OACD;IACH,OACK;AACH,WAAK,WAAW;AAChB,WAAK,cAAc,SAAS,eAAe,EAAE,SAAS,EAAE;AACxD,WAAK,MAAM,KAAK,aAAa,aAAa;IAC5C;EAEF;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,aAAa,CAAC,SAAS,QAAQ,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,GAAG,WAAW,UAAU,CAAC,GAAG,WAAW,QAAQ,2DAA2D,CAAC,CAAC,CAAC;MAC5M,iBAAiB,CAAC,IAAI,WAAW,QAAQ;OAEzC,EAAE,WAAW,KAAK,UAAU,aAAa,eAAe,EAAC,CAAE;EAC/D;EAEO,UAAU,aAAqB,qBAA2B;AAC/D,WAAO,CAAC,cAA+B;AACrC,YAAM,UAAU,UAAU,SAAS,WAAW;AAC9C,YAAM,kBAAkB,UAAU,SAAS,mBAAmB;AAC9D,UAAI,gBAAgB,UAAU,CAAC,gBAAgB,OAAO,WAAW;AAC/D;MACF;AAEA,UAAI,QAAQ,UAAU,gBAAgB,OAAO;AAC3C,wBAAgB,UAAU,EAAE,WAAW,KAAI,CAAE;MAC/C,OAAO;AACL,wBAAgB,UAAU,IAAI;MAChC;IACF;EACF;;;uCAxGW,iBAAc,4BAAA,kBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,CAAA;IAAA;EAAA;;yEAAd,iBAAc,WAAA,CAAA,CAAA,WAAA,CAAA,GAAA,WAAA,SAAA,qBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;ACb3B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACD,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EACnD,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA,EACpB,GAAA,OAAA,CAAA;AAEnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmD,GAAA,MAAA;AAC1C,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AACtD,QAAA,yBAAA,IAAA,YAAA,EAAA;AAAgF,QAAA,iBAAA,IAAA,OAAA;AAAI,QAAA,uBAAA,EAAW;AAEjG,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,OAAA,EAAA,EAAiC,IAAA,gCAAA,GAAA,GAAA,OAAA,EAAA;AAajC,QAAA,yBAAA,IAAA,QAAA,IAAA,CAAA,EAAsG,IAAA,OAAA,EAAA,EAEjE,IAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,YAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,UAAA,EAAA;AAKA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAEE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAI,EACA,EACD,EAEH,EACF,EACF,EAEF,EACF;;;AAvDa,QAAA,oBAAA,EAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,aAAA,mBAAA,EAAA;AACmB,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,aAAA,WAAA;AAEW,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAA,KAAA,IAAA,UAAA,CAAA,IAAA,QAAA,CAAA;AACrC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,KAAA,GAAA;AAGI,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,OAAA,OAAA,IAAA,EAAA,UAAA,MAAA;AAOA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,KAAA,OAAA,OAAA,IAAA,EAAA,UAAA,aAAA,IAAA,KAAA,OAAA,OAAA,IAAA,EAAA,cAAA,OAAA;AAMoB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,aAAA;AAIY,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,aAAA,WAAA;AAEL,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,EAAA,UAAA,OAAA;AAMK,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,aAAA,eAAA;AAMgB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA;AAMhD,QAAA,oBAAA;AAAA,QAAA,gCAAA,QAAA,IAAA,YAAA,uBAAA;AACA,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,aAAA,eAAA,GAAA;;;;;;6ED1CL,gBAAc,EAAA,WAAA,kBAAA,UAAA,mDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AEDrB,IAAO,kBAAP,MAAO,iBAAe;EAQ1B,YAAoB,aAAwC,aAAiC,cAAoC,eAA4B;AAAzI,SAAA,cAAA;AAAwC,SAAA,cAAA;AAAiC,SAAA,eAAA;AAAoC,SAAA,gBAAA;AAN1H,SAAA,iBAAiB,IAAI,aAAY;AAEjC,SAAA,WAAW;AACX,SAAA,MAAM;AAIX,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,UAAS;IAChB;EACF;EAEA,WAAQ;AACN,SAAK,mBAAmB,KAAK,gBAAgB,IAAI,mBAAkB,CAAE;EACvE;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,UAAS;IAChB,CAAC;EACH;EAEO,YAAS;AACd,SAAK,iBAAiB,IAAI,aAAY;AACtC,QAAI,KAAK,aAAa,YAAY,cAAc,KAAK,QAAW;AAC9D,WAAK,eAAe,qBAAqB,KAAK,aAAa,YAAY,cAAc,EAAE,KAAK,OAAK,EAAE,YAAY,oBAAoB,EAAE;AACrI,WAAK,eAAe,aAAa,KAAK,aAAa,YAAY,cAAc,EAAE,KAAK,OAAK,EAAE,YAAY,YAAY,EAAE;AACrH,WAAK,eAAe,SAAS,KAAK,aAAa,YAAY,cAAc,EAAE,KAAK,OAAK,EAAE,YAAY,QAAQ,EAAE;AAC7G,WAAK,eAAe,gBAAgB,KAAK,aAAa,YAAY,cAAc,EAAE,KAAK,OAAK,EAAE,YAAY,eAAe,EAAE;AAC3H,WAAK,eAAe,sBAAsB,KAAK,aAAa,SAAS,gBAAgB,uBAAuB,KAAK,eAAe,mBAAmB;AACnJ,WAAK,eAAe,WAAW,KAAK,aAAa,SAAS,gBAAgB,YAAY,KAAK,eAAe,QAAQ;AAClH,WAAK,eAAe,kBAAkB,KAAK,aAAa,SAAS,gBAAgB,mBAAmB,KAAK,eAAe,eAAe;IACzI;EACF;EAEO,iBAAc;AACnB,QAAI,CAAC,KAAK,iBAAiB,OAAO;AAChC,WAAK,MAAM,KAAK,eAAe;AAC/B,WAAK,WAAW;AAChB;IACF;AACA,SAAK,YAAY,mBAAmB,KAAK,iBAAiB,KAAK,EAAE,UAAU,EAAC,MAAK,MAAK;AACpF,WAAK,WAAW;AAChB,WAAK,MAAM,KAAK,eAAe;AAC/B,WAAK,mBAAmB,UAAS;IACnC,GAAG,OAAO,CAAC,QAAO;AAChB,UAAI,IAAI,SAAS,IAAI,MAAM,gBAAgB;AAEzC,aAAK,MAAM,KAAK,eAAe;AAC/B,aAAK,WAAW;MAClB,OAAO;AACL,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C;IACF,EAAC,CAAC;EACJ;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,SAAS,CAAC,SAAS,MAAM,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,GAAG,WAAW,QAAQ,oDAAoD,CAAC,CAAC,CAAC;MACvK,cAAc,KAAK,aAAa;KACjC;EACH;;;uCApEW,kBAAe,4BAAA,kBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,WAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;ACZ5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EAED,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EACnD,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA,EACpB,GAAA,OAAA,CAAA;AAEnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,iBAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,QAAA,IAAA,CAAA;AACE,QAAA,qBAAA,eAAA,SAAA,wDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,eAAA,CAAgB;QAAA,CAAA;AAC/B,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0E,IAAA,UAAA,EAAA;AAEtE,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,eAAA,CAAgB;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAyB,QAAA,uBAAA;AACtD,QAAA,yBAAA,IAAA,UAAA,EAAA;AACyB,QAAA,iBAAA,EAAA;AAAgC,QAAA,uBAAA,EAAS,EAC9D,EACD,EACH,EACF,EACF,EAEF,EACF;;;AA1BM,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,eAAA,oBAAA,GAAA;AAEqC,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,IAAA,UAAA,CAAA,IAAA,QAAA,CAAA;AACrC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,KAAA,GAAA;AAGwB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,gBAAA;AAIJ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,eAAA,UAAA;AAMW,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,eAAA,MAAA;AAEJ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,eAAA,aAAA;;;;;;6EDjB5B,iBAAe,EAAA,WAAA,mBAAA,UAAA,qDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEZ5B,IAAM,SAAS,OAAO,SAAS,KAAK,QAAQ,OAAO,EAAE,EAAE,QAAQ,QAAQ,QAAQ,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,QAAQ,aAAa,UAAU,EAAE,QAAQ,YAAY,cAAc;AAClK,IAAI,aAAa;AACjB,IAAI,gBAAgB;AACpB,IAAI,iBAAiB;AACrB,IAAI,kBAAkB;AAEtB,IAAI,UAAU;AACd,IAAI,gBAAqB;AACzB,IAAI,OAAO,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC,KAAK;AACzC,YAAU,OAAO,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC;AAE9C,IAAI,QAAQ,YAAW,KAAM,OAAO;AAElC,eAAa;AACb,kBAAgB;AAChB,mBAAiB;AACjB,kBAAiB;AACnB;AACA,IAAI,QAAQ,YAAW,KAAM,WAAW;AAEtC,eAAY;AACZ,kBAAgB;AAChB,mBAAiB;AACjB,kBAAc;AAChB;AACA,IAAI,QAAQ,YAAW,KAAM,iBAAiB;AAE5C,eAAa;AACb,kBAAgB;AAClB,WACS,QAAQ,YAAW,KAAM,cAAc;AAE9C,eAAa;AAEb,kBAAgB;AAChB,mBAAiB;AACnB,WACS,QAAQ,YAAW,KAAM,UAAU;AAE1C,eAAa;AAEf;AAEO,IAAMC,eAAc;EACzB,YAAY;EACZ;EACA,cAAc,SAAS,QAAQ;EAC/B,qBAAqB;EACrB,YAAY;;;EAIZ,SAAS;EAET,SAAS;;EACT,QAAQ;EACR,YAAY;EACZ;EACA;EACA,aAAa;;;;IAIX,kBAAkB;;;EAIpB,gBAAgB,CAAC,oBAAmB,cAAc,EAAE,SAAS,SAAS,IAAI,IAAG,iBAAkB,SAAS,QAAQ,sBAAsB,iBAAiB;EACvJ,cAAa;;EAEb,gBAAgB;;IAEd,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;;EAEjB,UAAU;;;;;;;;;;AE7BY,IAAA,yBAAA,GAAA,cAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AAF8C,IAAA,qBAAA,SAAA,WAAA,IAAA;AAC1C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,MAAA,GAAA;;;;;;AAkBJ,IAAA,yBAAA,GAAA,cAAA,EAAA;AAAY,IAAA,qBAAA,qBAAA,SAAA,wFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqB,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAGpD,IAAA,iBAAA,CAAA;AACL,IAAA,uBAAA;;;;AAHiE,IAAA,qBAAA,SAAA,MAAA,EAAA;AAE5D,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,OAAA,OAAA,MAAA,WAAA,KAAA,SAAA,OAAA,OAAA,MAAA,UAAA,GAAA;;;;;AAEL,IAAA,yBAAA,GAAA,KAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,gBAAA,GAAA;;;;;AAgDA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsE,GAAA,oBAAA,EAAA;AAE9D,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAmB;;;;AAFsB,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACrC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,KAAA,GAAA;;;;;AAYR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsE,GAAA,oBAAA,EAAA;AAE9D,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AACI,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEJ,IAAA,uBAAA,EAAO;;;;AANkC,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACrC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,QAAA,GAAA;;;;;AAuBZ,IAAA,yBAAA,GAAA,oBAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEI,IAAA,oBAAA,GAAA,OAAA,EAAA;AAAuD,IAAA,uBAAA,EAAO;;;;AAJ7B,IAAA,qBAAA,SAAA,UAAA,EAAA;AACrC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,QAAA,GAAA;AAC+B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,UAAA,IAAA;;;;;AAInC,IAAA,oBAAA,GAAA,QAAA,EAAA;;;;;AAA8B,IAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,OAAA,YAAA,UAAA,EAAA,GAAA,OAAA,WAAA,UAAA,EAAA,GAAA,OAAA,UAAA,UAAA,EAAA,CAAA,CAAA;;;;;AAPlC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACI,IAAA,qBAAA,GAAA,6DAAA,GAAA,GAAA,oBAAA,EAAA,EAAqF,GAAA,iDAAA,GAAA,GAAA,QAAA,EAAA;AAUzF,IAAA,uBAAA;;;;AAVkE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,QAAA;AAMvD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,QAAA;;;AD/JzB,IAAO,2BAAP,MAAO,0BAAwB;EAyBnC,YAAmB,eACV,eACA,gBACA,cACA,mBACA,aACA,eAA4B;AANlB,SAAA,gBAAA;AACV,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACA,SAAA,gBAAA;AA5BC,SAAA,cAAwC,IAAI,aAAY;AACxD,SAAA,mBAAsC,IAAI,aAAY;AACtD,SAAA,mBAAmB,IAAI,aAAY;AACtC,SAAA,aAAoB,CAAA;AACpB,SAAA,iBAAwB,CAAA;AACxB,SAAA,WAAkB,CAAA;AAClB,SAAA,YAAmB,CAAA;AACnB,SAAA,eAAsB,CAAA;AACtB,SAAA,UAAiB,CAAA;AACjB,SAAA,mBAA0B,CAAA;AAC1B,SAAA,YAAmB,CAAA;AAE1B,SAAA,aAAa;AACN,SAAA,OAAO;AAGd,SAAA,aAAa;AACb,SAAA,gBAAqB,CAAA;AACrB,SAAA,eAAoB,CAAA;AA4GpB,SAAA,oBAAoB,CAAA;AAjGlB,SAAK,QAAQ,KAAK,aAAa;AAC/B,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC5F,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACxF,SAAK,kBAAkB,OAAO,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAChG,SAAK,gBAAe;EAGtB;EAEA,SAAS,WAAW,MAAI;AACtB,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,sBAAsB;AAC/E,QAAI,CAAC,KAAK;AAAc,WAAK,kBAAkB,OAAO,kBAAkB,IAAI;AAC5E,SAAK,OAAO,iBAAiB,CAAC,UAAwB;AACpD,UAAI,MAAM,OAAO,OAAO,MAAM,QAAQ;AACpC;AACF,UAAI,CAAC,KAAK,OAAO,UAAU;AACzB,aAAK,OAAO,YACR,KAAK,OAAO,mBAAmB,KAAK,IACpC,KAAK,OAAO,qBAAqB,KAAK;MAC5C;IACF;AAGA,SAAK,iBAAiB,IAAI,KAAK,YAAY,IAAI,IAAI;AAEnD,SAAK,cAAc,oBAAoB,CAAC,EAAE,UAAU,UAAO;AACzD,WAAK,gBAAgB,KAAK,aAAa;AACvC,WAAK,eAAe,KAAK,aAAa;IACxC,CAAC;AACD,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,SAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,UAAO;AAC9D,WAAK,aAAa,eAAe,IAAI,KAAK;AAC1C,WAAK,aAAa,cAAc,IAAI,KAAK;AAEzC,YAAM,kBAAuB,KAAK;AAClC,WAAK,YAAY,QAAQ,qBAAqB;AAC9C,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,WAAK,UAAU,gBAAgB;AAC/B,WAAK,WAAW,gBAAgB;AAChC,WAAK,mBAAmB,gBAAgB;AACxC,WAAK,YAAY,gBAAgB;AAEjC,WAAK,iBAAiB,QAAQ,SAAM;AAClC,YAAI,IAAI,MAAM,kBAAkB,WAAW;AACzC,cAAI,SAAS,KAAK,aAAa,mBAAmB;AAElD,cAAI,OAAO,KAAK,aAAa,mBAAmB;QAClD;AACA,YAAI,IAAI,MAAM,kBAAkB,UAAU;AACxC,cAAI,SAAS,KAAK,aAAa,mBAAmB;AAElD,cAAI,OAAO,KAAK,aAAa,mBAAmB;QAClD;AACA,YAAI,IAAI,MAAM,kBAAkB;AAC9B,cAAI,SAAS,KAAK,aAAa,mBAAmB;MACtD,CAAC;AACD,WAAK,iBAAiB,KAAK,gBAAgB,kBAAkB;IAC/D,CAAC;AAED,QAAI,KAAK,YAAY,UAAU,UAAU,6BAA6B,UAAU;AAC9E,WAAK,kBAAkB,OAAO,aAAa,KAAK,YAAY,UAAU,UAAU;AAChF,WAAK,oBAAoB,KAAK,YAAY,UAAU,UAAU;IAChE;EACF;EAEO,YAAY,IAAE;AACnB,WAAQ,MAAM,kBAAkB;EAClC;EAEO,WAAW,IAAE;AAClB,WAAQ,MAAM,kBAAkB;EAClC;EAEO,UAAU,IAAE;AACjB,WAAQ,MAAM,kBAAkB;EAClC;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,SAAM;AAC1F,WAAK,aAAa,cAAc,IAAI;AACpC,WAAK,aAAa,oBAAmB;IACvC,CAAC;EACH;EAEA,aAAa,GAAC;AACZ,QAAI,KAAK,OAAO;AACd,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO,aAAa,KAAK;IAClD;EACF;EAEA,WAAQ;AACN,SAAK,kBAAkB,OAAO,aAAa,KAAK;EAClD;EAGO,uBAAoB;AACzB,SAAK,kBAAkB,OAAO,gBAAgB,KAAK,kBAAkB,KAAI;EAC3E;EAEA,iBAAiB,QAAM;AACrB,QAAI,OAAO,aAAa;AACtB,UAAI,KAAK,kBAAkB,QAAQ,OAAO,OAAO,KAAK,KAAK,IAAI;AAC7D,aAAK,kBAAkB,KAAK,OAAO,OAAO,KAAK;MACjD,OAAO;AACL,aAAK,kBAAkB,OAAO,KAAK,kBAAkB,QAAQ,OAAO,OAAO,KAAK,GAAG,CAAC;MACtF;IACF;EACF;EAEO,gBAAgB,OAAK;AAC1B,QAAI,KAAK,kBAAkB,OAAO,aAAa,QAAQ,KAAK,kBAAkB,OAAO,YAAY;AAC/F,WAAK,eAAe,KAAK,UAAU,KAAK,OAAK,EAAE,OAAO,KAAK,kBAAkB,OAAO,SAAS,EAAE,YAAY;;AAE3G,WAAK,eAAe,CAAA;AAEtB,SAAK,kBAAkB,OAAO,YAAY,MAAM;AAChD,SAAK,aAAa,MAAM,KAAK;EAC/B;EAEO,aAAa,WAAS;AAC3B,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,SAAK,cAAc,wBAAwB,WAAW,MAAM,EAAE,UAAU,SAAM;AAC5E,WAAK,kBAAkB,OAAO,QAAQ;AACtC,WAAK,YAAY,IAAI;IACvB,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;EAEO,iBAAiB,cAAY;AAClC,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,OAAO,mBAAmB,gBAAgB,YAAY,IAAI;EACnF;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,WAAW,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACpF,SAAK,kBAAkB,SAAS,KAAK,cAAc;AACnD,SAAK,eAAe,CAAA;AACpB,SAAK,YAAY,CAAA;AACjB,SAAK,kBAAkB,OAAO,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAChG,SAAK,kBAAkB,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC5F,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACxF,SAAK,kBAAkB,OAAO,mBAAmB,KAAK,YAAY,QAAQ,YAAY,sBAAsB,IAAI,IAAI;EACtH;EAEO,YAAY,UAAW,UAAS;AACrC,SAAK,cAAc,aAAa;AAChC,SAAK,cAAc,SAAS,UAAS,EAAG,SAAS,cAAc;AAC/D,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,WAAW,KAAK,kBAAkB,YAAY,OAAO,KAAK,cAAc,sBAAsB,KAAK,kBAAkB,QAAQ,IAAI;AAC/J,SAAK,kBAAkB,OAAO,SAAS,KAAK,kBAAkB,UAAU,OAAO,KAAK,cAAc,oBAAoB,KAAK,kBAAkB,MAAM,IAAI;AACvJ,UAAM,SAAS,mBAAK,KAAK,kBAAkB;AAE3C,QAAI,OAAO,cAAc,OAAO,WAAW,QAAQ;AACjD,WAAK,YAAY,UAAU,UAAU,4BAA4B,OAAO;AACxE,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,YAAM,aAAa,CAAA;AACnB,aAAO,WAAW,QAAQ,OAAI;AAC5B,cAAM,MAAM,KAAK,WAAW,KAAK,OAAK,EAAE,MAAM,CAAC;AAC/C,mBAAW,KAAK,IAAI,YAAY,MAAM,IAAI,QAAQ;MACpD,CAAC;AACD,aAAO,aAAa;AACpB,aAAO,gBAAgB,WAAW,KAAI;IACxC;AACA,SAAK,YAAY,KAAK,MAAM;AAC5B,QAAI;AAAU,WAAK,YAAW;EAChC;EAEO,cAAW;AAChB,SAAK,WAAW,cAAc,QAAQ;AACtC,SAAK,iBAAgB;AACrB,SAAK,YAAY,KAAK;AAEtB,SAAK,oBAAoB,CAAA;AACzB,SAAK,SAAS,KAAK;EACrB;EAEO,QAAQ,OAAa;AAC1B,SAAK,OAAO,KAAK,QAAQ,QAAQ,IAAI;EACvC;EAEA,cAAW;AACT,SAAK,iBAAiB,KAAK,IAAI;EACjC;EAEO,iBAAiB,YAAY,QAAQ,UAAU,kBAAgB;AACpE,QAAI,KAAK,kBAAkB,OAAO,oBAAoB,GAAG;AACvD,yBAAmB,KAAK,kBAAkB,OAAO;IACnD;AACA,UAAM,KAAK;MACT,gBAAgB,aAAa;MAC7B,oBAAoB;MACpB,YAAY;MACZ,UAAU;MACV,cAAc;;AAEhB,SAAK,cAAc,uBAAuB,EAAE,EAAE,UAAU,UAAO;AAE7D,YAAM,mBAAmB,CAAA;AACzB,YAAM,YAAY,oBAAI,IAAG;AACxB,WAAK,aAAa,WAAW,QAAQ,SAAM;AAC1C,YAAG,IAAI,WAAW,KAAK,IAAI,UAAU,GAAE;AACrC,cAAI,UAAU,IAAI;AAClB,cAAI,iBAAiB,IAAG,IAAI,WAAW;QACzC;AACA,cAAM,cAAc,IAAI,gBAAgB,QAAQ,iBAAiB,EAAE,EAAE,KAAI,EAAG,YAAW;AACvF,YAAI,CAAC,UAAU,IAAI,WAAW,GAAG;AAC/B,oBAAU,IAAI,WAAW;AACzB,2BAAiB,KAAK,iCACf,MADe;YAElB,iBAAiB;YACpB;QACL;AAAC;MACD,CAAC;AACD,WAAK,aAAa;AAClB,WAAK,cAAc;IACrB,GAAG,CAAC,QAAY;AACd,cAAQ,IAAI,GAAG;IACjB,CAAC;EACH;;;uCAlQW,2BAAwB,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,WAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;;;ACXrC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,GAAA;AAChB,QAAA,iBAAA,GAAA,IAAA;AAAE,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAM,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,CAAA;AAA4C,QAAA,uBAAA,EAAO,EAAI;AAG9F,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA,EACwB,GAAA,QAAA,CAAA;AACnB,QAAA,iBAAA,CAAA;AAA2C,QAAA,uBAAA;AACrE,QAAA,yBAAA,GAAA,KAAA,CAAA;AAA0C,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA,EAAI,EAChH;AAGV,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,OAAA,EAAA,EACoC,IAAA,QAAA,CAAA;AACzB,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AACrE,QAAA,yBAAA,IAAA,QAAA,EAAA;AAAqB,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA,EAAO;AAEpG,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,OAAA,EAAA;AACO,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,kBAAA,EAAA,EAC2C,IAAA,SAAA,EAAA;AAEjD,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,YAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAAmE,QAAA,qBAAA,eAAA,SAAA,kEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,YAAY,IAAI,CAAC;QAAA,CAAA;AADvG,QAAA,uBAAA,EAE2B,EACd;AAErB,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,OAAA,EAAA,EACiB,IAAA,kBAAA,EAAA,EAC2C,IAAA,SAAA,EAAA;AAElC,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,aAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,cAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACf,QAAA,qBAAA,eAAA,SAAA,kEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,YAAY,IAAI,CAAC;QAAA,CAAA;AAFpC,QAAA,uBAAA,EAE2D,EAC9C,EACf;AAEV,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACwD,IAAA,SAAA,EAAA;AAEjD,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,YAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAAkE,QAAA,qBAAA,eAAA,SAAA,kEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,YAAY,IAAI,CAAC;QAAA,CAAA;AADtG,QAAA,uBAAA,EAEyB,EACZ;AAGrB,QAAA,yBAAA,IAAA,SAAA,EAAS,IAAA,OAAA,EAAA;AAC8B,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACwD,IAAA,cAAA,EAAA;AACzC,QAAA,qBAAA,mBAAA,SAAA,yEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,gBAAA,MAAA,CAAuB;QAAA,CAAA;AAClD,QAAA,2BAAA,iBAAA,SAAA,uEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,YAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAGA,QAAA,yBAAA,IAAA,cAAA,EAAA;AAAqB,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AAChE,QAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,cAAA,EAAA;AAGJ,QAAA,uBAAA,EAAa,EACA;AAGrB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,OAAA,EAAA;AACqB,QAAA,iBAAA,EAAA;AAAqD,QAAA,uBAAA;AACxF,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyD,IAAA,cAAA,IAAA,CAAA;AAEjD,QAAA,qBAAA,mBAAA,SAAA,2EAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,qBAAA,CAAsB;QAAA,CAAA,EAAC,gBAAA,SAAA,sEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAC1B,IAAA,aAAA,MAAA,CAAoB;QAAA,CAAA;AAEpC,QAAA,2BAAA,iBAAA,SAAA,uEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,YAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,aAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAEA,QAAA,yBAAA,IAAA,SAAA,IAAA,CAAA;AAEyB,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,YAAA,MAAA,MAAA,IAAA,aAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAAyB,QAAA,qBAAA,iBAAA,SAAA,oEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,SAAA,CAAU;QAAA,CAAA;AAF7E,QAAA,uBAAA;AAGA,QAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,cAAA,EAAA;;AAKA,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,KAAA,EAAA;;AAGJ,QAAA,uBAAA,EAAa,EACA;AAGrB,QAAA,oBAAA,IAAA,IAAA;AACJ,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,SAAA,EAAS,IAAA,OAAA,EAAA,EAC0B,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AACxE,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,QAAQ,CAAC,CAAC;QAAA,CAAA;AACxC,QAAA,yBAAA,IAAA,QAAA,EAAA;AACI,QAAA,oBAAA,IAAA,OAAA,EAAA;AACJ,QAAA,uBAAA,EAAO,EACP;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,OAAA,EAAA,EACc,IAAA,OAAA,EAAA;AACD,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACwD,IAAA,SAAA,EAAA;AAEpB,QAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,gBAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAS,cAAA,KAAA,CAAiB;QAAA,CAAA;AACvD,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,UAAA,MAAA,MAAA,IAAA,kBAAA,WAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAFJ,QAAA,uBAAA;AAKA,QAAA,oBAAA,IAAA,yBAAA,EAAA,EAA4E,IAAA,kBAAA,MAAA,CAAA;AAEhF,QAAA,uBAAA,EAAiB;AAErB,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACwD,IAAA,SAAA,EAAA;AAEtB,QAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,cAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAS,YAAA,KAAA,CAAe;QAAA,CAAA;AACnD,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,QAAA,MAAA,MAAA,IAAA,kBAAA,SAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAFJ,QAAA,uBAAA;AAIA,QAAA,oBAAA,IAAA,yBAAA,EAAA,EAA0E,IAAA,kBAAA,MAAA,CAAA;AAE9E,QAAA,uBAAA,EAAiB,EACf;AAEV,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsC,IAAA,OAAA,EAAA;AACA,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,mBAAA,EAAA;AAExB,QAAA,2BAAA,iBAAA,SAAA,4EAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,kBAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,mBAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACA,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA;AAKA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiD,IAAA,oBAAA,EAAA;AAEzC,QAAA,iBAAA,EAAA;AACJ,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACI,QAAA,oBAAA,IAAA,OAAA,EAAA;AAEJ,QAAA,uBAAA,EAAO;AAEX,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA;AASJ,QAAA,uBAAA,EAAkB,EAChB,EACJ,EACJ;AAEV,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsC,IAAA,OAAA,EAAA;AACA,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,mBAAA,EAAA;AACgB,QAAA,2BAAA,iBAAA,SAAA,4EAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,kBAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,mBAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACxC,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiD,IAAA,oBAAA,EAAA;AAEzC,QAAA,iBAAA,EAAA;AACJ,QAAA,uBAAA,EAAmB;AAEvB,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA;AAYJ,QAAA,uBAAA,EAAkB,EAChB;AAEV,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,KAAA,UAAA,EAAA;AACP,QAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAY,MAAM,KAAK,CAAC;QAAA,CAAA;AACjF,QAAA,iBAAA,GAAA;AACJ,QAAA,uBAAA,EAAS;AAIb,QAAA,yBAAA,KAAA,OAAA,EAAA,EAA8D,KAAA,UAAA,EAAA;AACN,QAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAY,MAAM,IAAI,CAAC;QAAA,CAAA;AAChF,QAAA,iBAAA,GAAA;AACJ,QAAA,uBAAA,EAAS,EACP,EACJ;;;;;;AA9L6B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,MAAA;AAKL,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AACwC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,QAAA;AAMxC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AACmB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,QAAA;AAIV,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,SAAA,GAAA;AAGC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,SAAA;AACxB,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,SAAA;AAO4B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,WAAA;AACT,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,WAAA;AAOK,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,SAAA;AACxB,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,SAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,SAAA,GAAA;AAIvB,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,SAAA;AAEA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,OAAA;AACqB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AACW,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,SAAA;AAQL,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,kBAAA,GAAA;AAEnB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,sBAAA,EAAsE,cAAA,IAAA,aAAA,mBAAA,iBAAA,SAAA,KAAA,IAAA,aAAA,mBAAA,mBAAA,EAAA;AAI9E,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,UAAA;AAGI,QAAA,oBAAA,CAAA;AAAA,QAAA,gCAAA,eAAA,IAAA,aAAA,mBAAA,sBAAA;AACqB,QAAA,2BAAA,WAAA,IAAA,UAAA;AAEN,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,YAAA,IAAA,UAAA,CAAA;AAIa,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,YAAA,IAAA,UAAA,MAAA,OAAA,OAAA,SAAA,WAAA,CAAA;AAYX,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,QAAA,GAAA;AAEF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAA,KAAA,IAAA,SAAA,CAAA,CAAA;AAK1B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,EAAA,IAAA,SAAA,EAAA;AAEoC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,UAAA;AAGT,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,IAAA,EAAoD,iBAAA,aAAA;AAEhE,QAAA,2BAAA,WAAA,IAAA,kBAAA,QAAA;AACA,QAAA,qBAAA,OAAA,IAAA,kBAAA,WAAA,OAAA,IAAA,kBAAA,SAAA,IAAA,cAAA,eAAA,CAAA;AAE6B,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,aAAA;AAMjB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,EAAA,EAAkD,iBAAA,WAAA;AAE9D,QAAA,2BAAA,WAAA,IAAA,kBAAA,MAAA;AAAwD,QAAA,qBAAA,OAAA,IAAA,kBAAA,QAAA,EAAuC,OAAA,IAAA,cAAA,eAAA,CAAA;AAElE,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,WAAA;AAMP,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,MAAA;AAG1B,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,gBAAA;AACkD,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA;AAML,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,CAAA;AACrC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,UAAA,GAAA;AAO0C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA;AAgBhC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,MAAA;AAEc,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,gBAAA;AAEK,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,CAAA;AACrC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,KAAA,GAAA;AAG4D,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,gBAAA;AAkBxE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,OAAA,GAAA;AAOA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,OAAA,GAAA;;;;;;6EDjLH,0BAAwB,EAAA,WAAA,4BAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;AG0BnB,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,wBAAA,MAAA,OAAA,WAAA,QAAA,IAAA;;;;;AAuCI,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAGE,IAAA,yBAAA,GAAA,QAAA,EAAA;AACuC,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,GAAA;;;;;AAFzC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,QAAA,EAAA;AAEF,IAAA,uBAAA;;;;AADK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,KAAA;;;;;AAIL,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,cAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAC7D,IAAA,uBAAA;;;;;AAD+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,YAAA;AAA8B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,iBAAA,GAAA;;;;;AAK7D,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,WAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AAChD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,SAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,aAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA;AAClD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,WAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA;;;;;AAD+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,SAAA;AAA2B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAK1D,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,SAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AACxD,IAAA,uBAAA;;;;;AAD+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,OAAA;AAAyB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAKxD,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,OAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;;AAD+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,KAAA;AAAuB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,WAAA,GAAA;;;;;AAKtD,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAEA,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;;AA6BgB,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAGA,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAIE,IAAA,kCAAA,CAAA;AAAgE,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,QAAA;;;;;AADlE,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,gBAAA,EAAA;AAEF,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,uBAAA,WAAA;;;;;AAIf,IAAA,kCAAA,CAAA;AAA8D,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,MAAA;;;;;AADhE,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,gBAAA,EAAA;AAEF,IAAA,uBAAA;;;;AAFiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,uBAAA,SAAA;;;;;AAInB,IAAA,yBAAA,GAAA,MAAA,EAA4C,GAAA,QAAA,EAAA;AAExC,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;AAAO,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA,EAAO;;;;AAFhG,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,WAAA,YAAA,QAAA,OAAA,CAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,YAAA,WAAA,YAAA,MAAA,GAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,MAAA,WAAA,WAAA,SAAA,OAAA,CAAA;AAAqD,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,WAAA,WAAA,WAAA,IAAA;;;;;;AAIzD,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,YAAe,QAAM,WAAA,CAAU;IAAA,CAAA;AACmE,IAAA,iBAAA,CAAA;AACnG,IAAA,uBAAA;;;;AAFkC,IAAA,gCAAA,SAAA,OAAA,MAAA,YAAA;AACiE,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,GAAA;;;;;;AAEjH,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,YAAe,UAAQ,WAAA,CAAU;IAAA,CAAA;AAEsB,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;;;;AAFtC,IAAA,gCAAA,SAAA,OAAA,MAAA,SAAA;AAEoB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,MAAA;;;;;AACtE,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEyF,IAAA,iBAAA,CAAA;AAClC,IAAA,uBAAA;;;;;AADrD,IAAA,iCAAA,0BAAA,OAAA,cAAA,kBAAA,WAAA,UAAA,GAAA,EAAA;AAFI,IAAA,gCAAA,SAAA,OAAA,MAAA,WAAA,UAAA,CAAA;AAEmF,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,kBAAA,WAAA,UAAA,CAAA;;;;;;AAhD/F,IAAA,yBAAA,GAAA,OAAA,EAAA,EACgI,GAAA,YAAA,EAAA,EAG7C,GAAA,OAAA,EAAA,EACN,GAAA,QAAA,EAAA;AAEzC,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,YAAA,aAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,OAAA,aAAA,UAAA,CAAsC;IAAA,CAAA;AAC3E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+D,GAAA,QAAA,EAAA;AAG3D,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,OAAA,EAAA,EAEgE,IAAA,+DAAA,GAAA,GAAA,OAAA,EAAA,EAGZ,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA,EACI,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA;AAQ1D,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA;AAKF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA,EACiH,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA,EAI3C,IAAA,gEAAA,GAAA,GAAA,QAAA,EAAA;AAKtE,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,gFAAA;AAAA,YAAA,aAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,OAAA,aAAA,UAAA,CAAsC;IAAA,CAAA;AACnD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAEE,IAAA,oBAAA,IAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACJ,EACH,EACG;;;;;AAvDD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,CAAA,CAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,WAAA,aAAA,WAAA,MAAA,CAAA;AAEJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,kBAAA,GAAA;AAEI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,WAAA,aAAA,WAAA,MAAA,CAAA;AAEJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,iBAAA,GAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,WAAA,aAAA,WAAA,MAAA,CAAA;AAGG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,qBAAA,OAAA,aAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,qBAAA,CAAA;AACI,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,uBAAA,WAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,uBAAA,SAAA;AAKF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,qBAAA,CAAA;AAQsC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,SAAA,WAAA,qBAAA,CAAA;AAI1C,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,qBAAA,CAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,kBAAA,OAAA,cAAA,QAAA,UAAA,CAAA;AAKC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAF,MAAA,WAAA,uBAAA,cAAA,YAAA,WAAA,CAAA;;;;;;AAQV,IAAA,yBAAA,GAAA,OAAA,EAAA;AACsC,IAAA,qBAAA,SAAA,SAAA,8EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,UAAA,wBAAA,CAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,aAAA,KAAA,CAA2B;IAAA,CAAA;AACxE,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AAC7C,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA;;;;AAF6B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,UAAA,EAAA;;;;;AAG7B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2D,GAAA,MAAA;AACnD,IAAA,iBAAA,CAAA;AAAwB,IAAA,uBAAA,EAAO;;;;AAA/B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,cAAA;;;;;AAnEV,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wDAAA,IAAA,IAAA,OAAA,EAAA;;AA4DA,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA,EAC4E,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;;;;;AA5DvD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,GAAA,GAAA,YAAA,cAAA,YAAA,SAAA,GAAA,YAAA,QAAA,SAAA,KAAA,KAAA,YAAA,QAAA,MAAA,CAAA;AA4DlB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,QAAA,UAAA,CAAA;AAIoB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,QAAA,WAAA,CAAA;;;;;AAxE/B,IAAA,yBAAA,GAAA,MAAA,EAAA,EACmE,GAAA,OAAA,EAAA,EAEyB,GAAA,OAAA,EAAA;AAGtF,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,gBAAA,EAAA;AAsEF,IAAA,uBAAA,EAAM,EACF;;;;;;;AA3ED,IAAA,oBAAA;AAAA,IAAA,iCAAA,MAAA,OAAA,OAAA,EAAA;AACH,IAAA,qBAAA,iBAAA,UAAA,OAAA,mBAAA,OAAA,kBAAA,aAAA,WAAA;AAGiB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,OAAA;;;;;AA2EvB,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,YAAA,KAAA;AAAc,aAAA,sBAAA,OAAA,oBAAqB,OAAM,OAAA,wBAAA,WAAA,IAAgC,OAAA,IAAA;IAAA,CAAA;AAAO,IAAA,uBAAA;;;;;AAD7D,IAAA,sBAAA,wBAAA,OAAA,oBAAA,WAAA;;;;;AAE9B,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAIA,IAAA,yBAAA,GAAA,KAAA,EAA2B,GAAA,GAAA;AACtB,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA;AACtC,IAAA,yBAAA,GAAA,GAAA;AAAI,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AACxB,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,oBAAA,GAAA,IAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAK;;;;AANF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,yBAAA;AACC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,YAAA,EAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,0BAAA,GAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,2BAAA,GAAA;;;;;AAKA,IAAA,yBAAA,GAAA,KAAA;AAA2D,IAAA,iBAAA,CAAA;AAAsD,IAAA,uBAAA;;;;AAAtD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,cAAA;;;;;AAC3D,IAAA,yBAAA,GAAA,KAAA;AAA0D,IAAA,iBAAA,CAAA;AAA8D,IAAA,uBAAA;;;;AAA9D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,sBAAA;;;;;AAH9D,IAAA,yBAAA,GAAA,SAAA,EAAA,EAA+C,GAAA,IAAA;AAE3C,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAA2D,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA;AAE7D,IAAA,uBAAA,EAAK;;;;AAFG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,kBAAA,OAAA,iBAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,kBAAA,OAAA,iBAAA,IAAA;;;;;AAbZ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,OAAA,EAAA,EAA2B,GAAA,4CAAA,GAAA,GAAA,SAAA,EAAA;AAe7B,IAAA,uBAAA;;;;AAfQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AASmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,aAAA;;;AD1LzC,IAAO,qBAAP,MAAO,oBAAkB;EA8C7B,YACS,QACA,eACC,cACD,iBACA,2BACA,eACA,gBACA,cACA,mBACA,aACC,UACA,OACD,cACC,SAAsB;AAbvB,SAAA,SAAA;AACA,SAAA,gBAAA;AACC,SAAA,eAAA;AACD,SAAA,kBAAA;AACA,SAAA,4BAAA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACC,SAAA,WAAA;AACA,SAAA,QAAA;AACD,SAAA,eAAA;AACC,SAAA,UAAA;AA1DV,SAAA,kBAAkB;AAElB,SAAA,gBAAgB;AAChB,SAAA,yBAAyB;AACzB,SAAA,cAAc;AAGd,SAAA,mBAAmB;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;AAGF,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,mBAA0B,CAAA;AAEnB,SAAA,OAAc,CAAA;AACrB,SAAA,aAAa;AACN,SAAA,gBAAgB,kBAAkB;AAClC,SAAA,2BAA2B,kBAAkB;AAMpD,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,MAAc,KAAK,QAAQ,KAAK;AAEhC,SAAA,gBAA0B,CAAA;AACnB,SAAA,eAAsB,CAAA;AAE7B,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAsBlE,SAAK,gBAAgB,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACvE,SAAK,cAAc,KAAK,cAAc;AAEtC,SAAK,QAAQ,KAAK,aAAa;AAC/B,SAAK,SAAS,IAAI,WAAU;AAC5B,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAC/C,gBAAgB;AAElB,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,OAAO,eAAe,KAAK;AAChC,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,SAAK,YAAY,UAAU,QAAQ,gBAAgB,KAAK;AACxD,SAAK,YAAY,KAAK,YAAY,UAAU,UAAU;AAEtD,QAAI,CAAC,KAAK,YAAY,UAAU,UAAU,eAAe;AACvD,WAAK,YAAY,UAAU,UAAU,gBAAgB,KAAK;IAC5D;AACA,QAAI,KAAK,YAAY,UAAU,UAAU,eAAe;AACtD,UAAI,KAAK,YAAY,UAAU,UAAU,cAAc,UAAU;AAC/D,aAAK,kBAAkB,WAAW,IAAI,KACpC,KAAK,YAAY,UAAU,UAAU,cAAc,QAAQ;MAE/D;AACA,UAAI,KAAK,YAAY,UAAU,UAAU,cAAc,QAAQ;AAC7D,aAAK,kBAAkB,SAAS,IAAI,KAClC,KAAK,YAAY,UAAU,UAAU,cAAc,MAAM;MAE7D;IACF;AACA,SAAK,gBAAgB,mBAAmB,UAAU;EACpD;EAEA,WAAQ;AACN,SAAK,MAAM,SACT,cAAc,KAAK,aAAa,iBAAiB,SAAS,EAAE;AAK9D,QAAI,CAAC,KAAK,YAAY,QAAQ,YAAY,sBAAsB;AAC9D,WAAK,OAAO,kBAAkB,IAAI;AACpC,QAAI,KAAK,YAAY,QAAQ,YAAY,oBAAoB,GAAG;AAC9D,WAAK,0BACF,QACC,eACA,IACA,KAAK,aAAa,wBAAwB,YAC1C,UACA,MACA,MACA,IAAI,EAEL,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,cACF,oBAAoB;YACnB,UAAU,KAAK,MAAM,aAAa,WAAW,EAAE;YAC/C,QAAQ;WACT,EACA,UAAU;YACT,MAAM,CAAC,SAAQ;AACb,mBAAK,OAAO,KAAK;AACjB,mBAAK,YAAY,QAAQ,YACvB,oBAAoB,IAClB;AACJ,mBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;YACrD;YACA,OAAO,MAAK;AACV,mBAAK,0BAA0B,QAC7B,SACA,KAAK,aAAa,uBACf,kCACH,KAAK,aAAa,oBAAoB,IACtC,IACA,MACA,MACA,KAAK;YAET;WACD;QACL,OAAO;AACL,eAAK,gBAAgB,OAAM;AAC3B,eAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;AAC/B,iBAAO,SAAS,OAAM;QACxB;MACF,CAAC;IACL;AAEA,QACE,KAAK,YAAY,UAAU,UAAU,cAAc,YAAY,QAC/D,KAAK,YAAY,UAAU,UAAU,cAAc,YAAY,IAC/D;AACA,WAAK,kBAAkB,WAAW,IAAI,KACpC,KAAK,YAAY,UAAU,UAAU,cAAc,QAAQ;AAE7D,WAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,UAAU,UAAU,cAAc;IAC9F;AAEA,QACE,KAAK,YAAY,UAAU,UAAU,cAAc,UAAU,QAC7D,KAAK,YAAY,UAAU,UAAU,cAAc,UAAU,IAC7D;AACA,WAAK,kBAAkB,SAAS,IAAI,KAClC,KAAK,YAAY,UAAU,UAAU,cAAc,MAAM;AAE3D,WAAK,kBAAkB,OAAO,SAAS,KAAK,YAAY,UAAU,UAAU,cAAc;IAC5F;AAEA,QACE,KAAK,cAAc,wBAAwB,UAC3C,KAAK,cAAc,wBAAwB,MAC3C;AACA,WAAK,iCACH,KAAK,cAAc,oBAAoB;IAE3C,OAAO;AACL,UAAI,KAAK,YAAY,UAAU,UAAU,YAAY,SAAS,GAAG;AAG/D;AACA,aAAK,gBAAgB,KAAK,kBAAkB,WACxC,KAAK,kBAAkB,WACvB,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACtD,aAAK,cAAc,KAAK,kBAAkB,SACtC,KAAK,kBAAkB,SACvB,KAAK,cAAc;AAEvB,aAAK,kBAAkB,SAAS,KAAK,YAAY,UAAU,UAAU;AACrE,aAAK,aAAa,KAAK,YAAY,UAAU,UAAU;AACvD,aAAK,aAAa,KAAK,YAAY,UAAU,WAAW;AACxD,aAAK,eAAe,KAAK,YAAY,UAAU,UAAU;AACzD,aAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,aAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,aAAK,WAAW,OAAO,KAAK;AAC5B,aAAK,WAAU;AAEf,YACE,KAAK,YAAY,UAAU,aAC3B,KAAK,YAAY,UAAU,UAAU,aACrC;AACA,gBAAM,UAAU,KAAK,aACnB,KAAK,YAAY,UAAU,UAAU,WAAW;AAElD,kBAAQ,aACN,QAAQ,QAAQ,OAAO,CAAC,MAAK;AAC3B,mBAAO,EAAE,eAAe;UAC1B,CAAC,EAAE,SAAS;QAChB;MACF,OAAO;AACL,aAAK,kBAAkB,WAAW,IAAI,KACpC,KAAK,cAAc,sBAAsB;AAE3C,aAAK,kBAAkB,SAAS,KAAK,cAAc;AAEnD,aAAK,eAAe,KAAK,YAAY,UAAU,UAAU,aAAa;MACxE;IACF;AAEA,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KACjD,CAAC,MAAM,EAAE,aAAa,SAAS;AAEjC,YAAQ,IAAI,KAAK,kBAAkB,OAAO,aAAa;EACzD;EAEA,kBAAe;AACb,QAAI;AACF,WAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UACC,CAAC,SAAQ;AACP,aAAK,aAAa,cAAc,KAAK;AACrC,aAAK,aAAa,wBAAuB;AACzC,aAAK,aAAa,wBAAuB;AACzC,aAAK,aAAa,KAAK,aAAa,kBAAkB;AACtD,aAAK,QAAQ,kCACR,KAAK,aAAa,yBAClB,KAAK,aAAa;AAEvB,aAAK,yBAAyB,KAAK,OAChC,iCACC,KAAK,OAAO,iCACZ,KAAK,aAAa,kBAAkB;MAC1C,GACA,CAAC,QAAO;AACN,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IAEP,SAAS,OAAO;AACd,cAAQ,IAAI,KAAK;IACnB;AAEA,QAAI,KAAK,YAAY,UAAU,UAAU,YAAY,SAAS,GAAG;AAC/D,iBAAW,MAAK;AACd,aAAK,kBAAkB,KAAK,YAAY,UAAU,UAAU;AAC5D,cAAM,QAAa,SAAS,eAC1B,QAAQ,KAAK,eAAe;AAE9B,YAAI;AACF,gBAAM,eAAe;YACnB,UAAU;YACV,OAAO;YACP,QAAQ;WACT;AACH,cAAM,UAAU,KAAK,aAAa,KAAK,eAAe;AACtD,aAAK,wBAAwB,OAAO;MACtC,GAAG,GAAI;IACT;EACF;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;AAC9B,SAAK,kBAAkB,SAAS;AAChC,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS,IAAI,WAAU;EAChD;EAEO,YAAY,WAAS;AAC1B,QAAI,KAAK,mBAAmB,WAAW;AACrC,WAAK,kBAAkB;IACzB,OAAO;AACL,WAAK,kBAAkB;AACvB,WAAK,kBAAkB;IACzB;EACF;EAEO,mBAAmB,WAAW,KAAK,QAAM;AAC9C,SAAK,SAAS,gBAAgB;MAC5B,eAAe;MACf,sBAAsB;MACtB,YAAY,IAAI;MAChB,cAAc,IAAI;MAClB,YAAY,IAAI;MAChB,SAAS,IAAI;MACb,OAAO,IAAI;MACX,eAAe,OAAO;MACtB,eAAe,OAAO;MACtB,mBAAmB,OAAO;MAC1B,aAAa;KACd;AACD,YAAQ,IAAI,KAAK,WAAW;AAC5B,SAAK,YAAY,SAAS,eAAe,UAAU;AACnD,SAAK,YAAY,SAAS,eAAe,aAAa;AACtD,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,SAAK,kBAAkB;AACvB,SAAK,YAAY,UAAU,UAAU,cAAc;AAEnD,QAAI,OAAO,oBAAoB,KAAK,0BAA0B;AAC5D,WAAK,QAAQ,OAAO,aAAa;IACnC,OAAO;AACL,WAAK,YAAY,UAAU,UAAU,cAAc,KAAK;AACxD,WAAK,OAAO,QAAQ,MAAM;AAC1B,WAAK,eAAe,uBAClB,KACA,QACA,KAAK,cAAc,QACnB,KAAK,kBAAkB,QACvB,KAAK,KAAK,QACV,KAAK,KAAK,SAAS;IAEvB;AACA,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;EACvD;EAEO,WAAW,GAAC;AACjB,SAAK,kBAAkB;AACvB,SAAK,YAAY,UAAU,UAAU,YAAY;AACjD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,YAAY,IAAI;EACvB;EAEO,YAAY,QAAM;AACvB,UAAM,YAAY,SAAS,eAAe,qBAAqB;AAC/D,cAAU,YAAY;AACtB,SAAK,aAAa;EACpB;EAEO,qBAAqB,OAAK;AAC/B,SAAK,mBAAmB;EAC1B;EAEO,uBAAuB,KAAG;AAC/B,QAAI,OAAO,MAAM;AACf,WAAK,OAAO,mBAAmB,IAAI;IACrC,OAAO;AACL,WAAK,OAAO,mBAAmB;IACjC;EACF;EAEO,iBAAiB,OAAK;AAC3B,SAAK,eAAe,KAAK;EAC3B;EAEO,aAAU;AACf,SAAK,kBAAkB,QAAQ,CAAA;AAC/B,QAAI,KAAK,cAAc,MAAM;AAC3B,YAAM,SAAS,CAAA;AACf,UAAI,YAAY;AAChB,WAAK,WAAW,QAAQ,CAAC,YAAW;AAClC,YAAI,QAAQ,SAAS;AACnB,kBAAQ,QAAQ,QAAQ,CAAC,WAAU;AACjC,gBACE,OAAO,iBAAiB,QACxB,CAAC,OAAO,SAAS,OAAO,aAAa,GACrC;AACA,kBAAI,OAAO,iBAAiB,QAAQ;AAClC,4BAAY,OAAO;cACrB,OAAO;AACL,uBAAO,KAAK,OAAO,cAAc,KAAI,CAAE;AACvC,qBAAK,kBAAkB,MAAM,KAAK,OAAO,cAAc,KAAI,CAAE;cAC/D;YACF;UACF,CAAC;QACH;MACF,CAAC;AACD,WAAK,kBAAkB,QAAQ,KAAK,cAAc,2BAChD,MAAM;AAER,UAAI,aAAa,QAAQ,UAAU,KAAI,KAAM,IAAI;AAC/C,aAAK,kBAAkB,MAAM,OAAO,GAAG,GAAG,UAAU,KAAI,CAAE;MAC5D;IACF;EACF;EAEO,0BAA0B,OAAK;AACpC,SAAK,kBAAkB,SAAS,KAAK,YAAY,UAAU,QAAQ;AACnE,QAAI,MAAM,YAAY;AAAM,WAAK,kBAAkB,WAAW;AAC9D,QAAI,MAAM,UAAU;AAAM,WAAK,kBAAkB,SAAS;AAC1D,SAAK,gBAAgB;AACrB,SAAK,yBACH,MAAM,kCAAkC,OACpC,MAAM,iCACN,KAAK,aAAa,kBAAkB;AAC1C,SAAK,eAAe,KAAK;EAC3B;EAEO,wBAAqB;AAC1B,SAAK,iBAAgB;AACrB,SAAK,cAAc,oBAAmB;AACtC,SAAK,eAAe,KAAK,cAAc,MAAM;EAC/C;EAEO,cAAc,GAAC;AAEpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAEhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,UAAI,KAAK,YAAY,UAAU,UAAU,YAAY,UAAU,IAAI;AACjE,aAAK,SAAS,KAAK,YAAY,UAAU,UAAU,cAAc;AAGjE,aAAK,aAAa;AAClB,aAAK;AACL,aAAK,QAAQ,KAAK;AAClB,aAAK,MAAM,KAAK,QAAQ,KAAK;AAC7B,aAAK,YAAY,UAAU,UAAU,cACnC,QAAQ,IACN,KAAK;AACT,aAAK,eAAe,KAAK,YAAY,UAAU,UAAU,aAAa;MACxE;IACF;EACF;EAEa,eAAe,OAAK;;AAU/B,UAAI,KAAK,mBAAmB,UAAU;AACpC,aAAK,gBAAgB,KAAK,kBAAkB;MAC9C,OAAO;AACL,aAAK,gBAAgB,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACvE,aAAK,kBAAkB,WAAW,IAAI,KAAK,KAAK,cAAc,sBAAsB;MACtF;AACA,UAAI,KAAK,mBAAmB,QAAQ;AAClC,aAAK,cAAc,KAAK,kBAAkB;MAC5C,OAAO;AACL,aAAK,cAAc,KAAK,cAAc;AACtC,aAAK,kBAAkB,SAAS,KAAK,cAAc;MACrD;AAEA,WAAK,yBAAyB,MAAM,aAChC,MAAM,iCACN,KAAK,aAAa,kBAAkB;AACxC,WAAK,kBAAkB;AACvB,UAAI,CAAC,MAAM,YAAY;AACrB,aAAK,gBAAgB;MACvB;AAEA,YAAM,mBAAmB,KAAK;AAC9B,WAAK,SAAS,MAAM;AACpB,UAAI,MAAM,UAAU,GAAG;AACrB,aAAK,aAAa,CAAA;AAClB,aAAK,eAAe,CAAA;MAEtB;AAEA,YAAM,eAAe,IAAI,KAAK,yBAAyB,OAAO;AAC9D,YAAM,yBAAyB;AAI/B,WAAK,YAAY,UAAU,UAAU,gBAAgB;AACrD,WAAK,YAAY,SAAS,uBAAuB;AACjD,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,YAAM,SAAS,OAAO,OACpB,CAAA,GACA,KAAK,YAAY,UAAU,UAAU,aAAa;AAGpD,UAAI,OAAO,UAAU;AAEnB,eAAO,WACL,OAAO,YAAY,OACf,KAAK,cAAc,sBAAsB,OAAO,QAAQ,IACxD;MACR;AACA,UAAI,OAAO,QAAQ;AAEjB,eAAO,SACL,OAAO,UAAU,OACb,KAAK,cAAc,oBAAoB,OAAO,MAAM,IACpD;MACR;AAEA,WAAK,cACF,wBACC,KAAK,YAAY,UAAU,UAAU,aAAa,EAEnD,UACC,CAAC,SAAQ;AACP,aAAK,yBAAyB;AAC9B,YAAI,MAAM,UAAU,GAAG;AACrB,cACE,KAAK,aAAa,eAAe,QACjC,KAAK,aAAa,YAAY,SAAS,GACvC;AACA,iBAAK,eAAe,KAAK,aAAa;UAExC,OAAO;AACL,iBAAK,eAAe,CAAA;UAEtB;QACF,OAAO;AACL,cACE,KAAK,aAAa,eAAe,QACjC,KAAK,aAAa,YAAY,SAAS,GACvC;AACA,iBAAK,eAAe,KAAK,aAAa,OACpC,KAAK,aAAa,WAAW;UAGjC;QACF;AAEA,YACE,KAAK,aAAa,eAAe,QACjC,KAAK,aAAa,SAAS,IAC3B;AACA,gBAAM,UAAU;AAChB,eAAK,SAAS,MAAM;AACpB,eAAK,YAAY,UAAU,UAAU,cACnC,QAAQ,IACN,KAAK;AACT,eAAK,eAAe,KAAK;QAC3B;AACA,YAAI,KAAK,gBAAgB,KAAK,aAAa,SAAS,GAAG;AACrD,eAAK,eAAe,KAAK,aAAa,IAAI,CAAC,SAAQ;AACjD,gBAAI,CAAC,KAAK,iBAAiB,KAAK,cAAc,KAAI,KAAM;AACtD,mBAAK,gBAAgB,KAAK,aAAa,kBAAkB;AAC3D,mBAAO;UACT,CAAC;AAED,cAAI,KAAK,WAAW,SAAS,KAAK,KAAK,YAAY;AACjD,iBAAK,aACH,KAAK,aAAa,eAAe,OAAO,QAAQ;AAClD,iBAAK,YAAY,UAAU,UAAU,WAAW,KAAK;UACvD,OAAO;AACL,iBAAK,YAAY,IAAI;UACvB;AACA,eAAK,aAAa,KAAK;AACvB,eAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAE7D,eAAK,YAAY,UAAU,UAAU,cAAc,KAAK;AACxD,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,eAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,eAAK,WAAW,OAAO,KAAK;AAC5B,cAAI,KAAK,YAAY,UAAU,UAAU,aAAa;AACpD,kBAAM,qBAAqB,KAAK,YAAY,UAAU,UACnD;AACH,iBAAK,kBAAkB,KAAK,WAAW,KACrC,CAAC,MACC,EAAE,MAAM,mBAAmB,MAC3B,EAAE,aAAa,mBAAmB,aAClC,EAAE,eAAe,mBAAmB,eACpC,EAAE,OAAO,mBAAmB,OAC5B,EAAE,YAAY,mBAAmB,QAAQ;UAE/C;AACA,eAAK,YAAY,KAAK,YAAY,UAAU,UAAU;QACxD,OAAO;AACL,eAAK,WAAW,OAAO,CAAA;QACzB;MACF,GACA,CAAC,QAAO;AACN,aAAK,aAAa,CAAA;AAClB,aAAK,WAAW,OAAO,CAAA;AACvB,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;MACjC,CAAC;IAEP;;EAEA,wBAAwB,SAAO;AAE7B,QAAI;AACJ,QAAI,SAAS,WAAW;AACtB,gBAAU,KAAK,MACb,KAAK,UAAU,KAAK,YAAY,UAAU,UAAU,aAAa,CAAC;AAEpE,cAAQ,iBAAiB,KAAK,mBAAmB,OAAO;AACxD,cAAQ,SAAS;AACjB,cAAQ,gBAAgB;AACxB,cAAQ,gBAAgB;AACxB,cAAQ,YAAY,QAAQ;AAC5B,cAAQ,mBAAmB,QAAQ;AAGnC,WAAK,cAAc,qBAAqB,OAAO,EAAE,UAAU,CAAC,SAAQ;AAClE,cAAM,iBAAiB,CAAA;AACvB,YAAI,KAAK,aAAa,sBAAsB;AAC1C,eAAK,aAAa,qBAAqB,QAAQ,CAACG,UAAQ;AACtD,gBAAI,KAAK,gBAAgBA,KAAI,GAAG;AAC9B,6BAAe,KAAK,GAAGA,MAAK,OAAO;YACrC;UACF,CAAC;QACH;AACA,aAAK,aAAa,QAAQ,CAAC,YAAW;AACpC,cACE,QAAQ,aAAa,QAAQ,aAC7B,QAAQ,gBAAgB,QAAQ,cAChC;AACA,oBAAQ,UAAU;AAClB,oBAAQ,aACN,QAAQ,QAAQ,OAAO,CAAC,MAAK;AAC3B,qBAAO,EAAE,eAAe;YAC1B,CAAC,EAAE,SAAS;UAChB;QACF,CAAC;AAED,aAAK,aAAa,KAAK;AACvB,aAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,aAAK,YAAY,UAAU,UAAU,cAAc,KAAK;AACxD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,aAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,aAAK,WAAW,OAAO,KAAK;AAC5B,cAAM,QAAa,SAAS,eAC1B,QAAQ,KAAK,eAAe;AAE9B,YAAI;AACF,gBAAM,eAAe;YACnB,UAAU;YACV,OAAO;YACP,QAAQ;WACT;AAEH,aAAK,WAAU;MACjB,CAAC;IACH,OAAO;AACL,WAAK,kBAAkB;IACzB;EACF;EAEA,gBAAgB,MAAI;AAClB,WAAO,KAAK,WAAW,KAAK,QAAQ,SAAS;EAC/C;EAEA,mBAAmB,SAAO;AACxB,WAAO,QAAQ,kBAAkB,OAAO,IAAI,QAAQ;EACtD;EAEO,eAAe,SAAO;AAC3B,UAAM,UAAU,QAAQ,YAAY,QAAQ,YAAY;AACxD,SAAK,0BAA0B,QAC7B,mBACA,SACA,KAAK,aAAa,kBAAkB,IACpC,IACA,MACA,MACA,KAAK;EAKT;EAEO,iCAAiC,OAAK;AAC3C,SAAK,yBAAyB;AAE9B,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,YAAY,MAAM;AAChD,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAChE,UAAU;AAEZ,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,mBAAmB,MAAM;AACvD,SAAK,eAAe,KAAK,kBAAkB,MAAM;AACjD,SAAK,cAAc,uBAAuB;EAC5C;EAEO,mBAAgB;AACrB,SAAK,SAAS,IAAI,WAAU;AAC5B,SAAK,OAAO,eAAe,KAAK;AAChC,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,SAAK,OAAO,cAAc;AAC1B,SAAK,OAAO,YAAY;AACxB,SAAK,OAAO,YAAY;AACxB,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,SAAS;AACrB,SAAK,OAAO,mBAAmB,KAAK,YAAY,QAAQ,YACtD,sBAAsB,IAEpB,IACA;AACJ,SAAK,OAAO,iBAAiB;AAC7B,SAAK,OAAO,mBAAmB;AAC/B,SAAK,OAAO,YAAY;AACxB,SAAK,OAAO,QAAQ;AACpB,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,iCAAiC;AAC7C,SAAK,gBAAgB;AACrB,SAAK,yBAAyB,KAAK,aAAa,kBAAkB;AAClE,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS;EAClC;EAEO,QAAQ,eAAa;AAO1B,QAAI,iBAAiB,iBAAiB,KAAK,aAAa,GAAG;AACzD,sBAAgB,KAAK,aAAa,kBAAkB;IACtD,WAAW,iBAAiB,OAAO,KAAK,aAAa,GAAG;AACtD,sBAAgB,KAAK,aAAa,kBAAkB;IACtD,WAAW,iBAAiB,MAAM,KAAK,aAAa,GAAG;AACrD,sBAAgB,KAAK,aAAa,kBAAkB;IACtD,OAAO;AACL,sBAAgB,KAAK,aAAa,kBAAkB;IAEtD;AAEA,SAAK,0BAA0B,QAC7B,IACA,eACA,KAAK,aAAa,kBAAkB,IACpC,IACA,MACA,MACA,KAAK;EAIT;EAEO,SAAM;AACX,SAAK,kBAAkB,CAAC,KAAK;AAC7B,SAAK,kBAAkB;EACzB;EAEO,WAAW,GAAG,KAAG;AACtB,MAAE,gBAAe;AACjB,UAAM,cAAc,KAAK,YAAY,QAAQ;AAC7C,UAAM,UAAU,KAAK,kBAAkB,KAAK,gBAAgB,SAAS,IAAI;AACzE,UAAM,aACJ,IAAI,QAAQ,SAAS,KAAK,IAAI,QAAQ,CAAC,EAAE,gBACrC,IAAI,QAAQ,CAAC,EAAE,gBACf;AACN,QAAI,SACF,WACA,YAAY,OAAO,IACnB,qBACA,UACA,YACA,KAAK,MAAM,aAAa,WAAW,EAAE,eACrC,oBACA,KAAK,MAAM,aAAa,WAAW,EAAE,gBACrC,eACA,aAAa,SACb,iBACA,YAAY,cAAc,IAC1B,kBACA,YAAY,iBAAiB,IAC7B,iBACA,aACA,gBACA,IAAI,YACJ,kBACA,IAAI,cACJ,mBACA,KAAK,MAAM,aAAa,WAAW,EAAE,iBACrC,cACA,IAAI,cACJ,YACA,IAAI,YACJ,mBACC,IAAI,cAAc,IAAI,cAAc,MACrC,cACA,SAAS;AACX,aAAS,KAAK,SAAS,QAAQ,MAAM;AACrC,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,cAAc,kBAAkB,EAAE,aAAa,OAAM,CAAE,EAAE,UAAU;QACtE,MAAM,CAAC,SAAQ;AACb,iBAAO,SAAS,OACdC,aAAY,SACZ,qCACA,KAAK;QACT;QACA,OAAO,MAAK;AACV,eAAK,0BAA0B,QAC7B,SACA,KAAK,aAAa,uBACf,kCACH,KAAK,aAAa,oBAAoB,IACtC,IACA,MACA,MACA,KAAK;QAET;OACD;IACH,OAAO;AACL,WAAK,cAAc,iBAAiB,EAAE,cAAc,OAAM,CAAE,EAAE,UAAU;QACtE,MAAM,CAAC,QAAO;AACZ,iBAAO,SAAS,OACdA,aAAY,SACZ,qCACA,IAAI,aAAa;QACrB;QACA,OAAO,MAAK;AACV,eAAK,cAAc,sBAAqB;QAC1C;OACD;IACH;EACF;EAEA,cAAW;AACT,SAAK,OAAO,MAAK;EACnB;EAEA,iBAAiB,SAAS,UAAQ;AAChC,SAAK,YAAY,SAAS,eAAe,UAAU;AACnD,SAAK,kBAAkB;AACvB,SAAK,YAAY,UAAU,UAAU,cAAc;AACnD,SAAK,YAAY,UAAU,UAAU,cAAc,KAAK;AACxD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,eAAe,iBAClB,SACA,KAAK,cAAc,QACnB,KAAK,kBAAkB,QACvB,KAAK,KAAK,QACV,KAAK,KAAK,SAAS;EAEvB;EAEO,mBAAmB,SAAO;AAC/B,SAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,SAAK,eAAe,iBAClB,SACA,KAAK,kBAAkB,QACvB,KAAK,kBAAkB,OAAO,QAC9B,MACA,IAAI;EAER;EAEO,OAAO,MAAM,IAAI,MAAW,OAAK;AACtC,QAAI,KAAK,cAAc,gBAAe,GAAI;AACxC,YAAM,MAAM;QACV,cAAc,KAAK;QACnB,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;QACzD,mBAAmB;UACjB;YACE,QAAQ,KAAK;YACb,WAAW,KAAK;YAChB,KAAK;;;;AAIX,WAAK,cAAc,gBAAgB,GAAG,EAAE,UAAU;QAChD,MAAM,MAAK;AACT,eAAK,aAAa,MAAM;AACxB,cAAI,OAAO,IAAI,SAAS;AACtB,gBAAI,aACF,IAAI,QAAQ,OAAO,CAAC,MAAK;AACvB,qBAAO,EAAE,eAAe;YAC1B,CAAC,EAAE,SAAS;UAChB;QACF;OACD;IACH;EACF;;;uCAl3BW,qBAAkB,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BA4BlB,SAAO,CAAA;8BAWP,WAAS,CAAA;;;;;;;;;;ACrGtB,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA,EACrC,GAAA,cAAA,CAAA;AACS,QAAA,qBAAA,eAAA,SAAA,8DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,0BAAA,MAAA,CAAiC;QAAA,CAAA,EAAC,yBAAA,SAAA,wEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAClC,IAAA,iCAAA,MAAA,CAAwC;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAa;AAGpF,QAAA,yBAAA,GAAA,wBAAA,CAAA,EAAoE,GAAA,cAAA,GAAA,CAAA,EAC6B,GAAA,wBAAA,CAAA;AACvE,QAAA,qBAAA,oBAAA,SAAA,6EAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAoB,IAAA,qBAAA,MAAA,CAA4B;QAAA,CAAA,EAAC,eAAA,SAAA,wEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAgB,IAAA,iBAAA,MAAA,CAAwB;QAAA,CAAA,EAAC,oBAAA,SAAA,+EAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAC1F,IAAA,YAAA,CAAa;QAAA,CAAA;AACnC,QAAA,uBAAA,EAAuB;AAGzB,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgE,IAAA,OAAA,CAAA,EAEtC,IAAA,OAAA,CAAA,EAEY,IAAA,WAAA,EAAA,EACY,IAAA,IAAA,EACtC,IAAA,QAAA,EAAA;AAAqD,QAAA,iBAAA,EAAA;AAAc,QAAA,uBAAA,EAAO,EAAM;AAGtF,QAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFnD,QAAA,uBAAA,EAEuD;AAIzD,QAAA,yBAAA,IAAA,YAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACT,IAAA,OAAA,EAAA,EACqE,IAAA,OAAA,EAAA;AAEjF,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,QAAA,EAAA;AAIA,QAAA,yBAAA,IAAA,MAAA;AAEE,QAAA,iBAAA,EAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,iBAAA,EAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACF;AAET,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,QAAA,EAAA;AAA0B,QAAA,iBAAA,EAAA;AAAc,QAAA,uBAAA,EAAO;AACnD,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAqB,IAAA,QAAA,EAAA,EAC8B,IAAA,UAAA,EAAA;AACA,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,YAAA,sBAAA,CAAA;AAAA,iBAAA,sBAAS,UAAA,OAAA,CAAe;QAAA,CAAA;AACrE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AAE0B,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAF3E,QAAA,uBAAA,EAE+E,EAC1E,EACF;AAGT,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA;AAE/B,QAAA,oBAAA,IAAA,OAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,UAAA,SAAA,mDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,MAAA,CAAqB;QAAA,CAAA;AAC/B,QAAA,yBAAA,IAAA,SAAA,EAAA;AAEE,QAAA,qBAAA,iBAAA,SAAA,4DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,WAAA,MAAA,CAAkB;QAAA,CAAA;AAEnC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAiFF,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAGsB,IAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;AAE7F,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,OAAA,EAAA;AAiBF,QAAA,uBAAA,EAAM,EACF,EACF,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0G,IAAA,QAAA,EAAA;AAC/D,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAY,IAAI,CAAC;QAAA,CAAA;AAAG,QAAA,iBAAA,IAAA,gBAAA;AAAa,QAAA,uBAAA,EAAO,EACtF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,wBAAA,EAAA;AACP,QAAA,qBAAA,oBAAA,SAAA,8EAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAoB,IAAA,qBAAA,MAAA,CAA4B;QAAA,CAAA,EAAC,eAAA,SAAA,yEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBACtD,IAAA,eAAA,MAAA,CAAsB;QAAA,CAAA;AACvC,QAAA,uBAAA,EAAuB,EAEnB,EACF,EACe,EAEnB;;;AAzP+D,QAAA,oBAAA,EAAA;AAAA,QAAA,4BAAA,IAAA,UAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAUlC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,2BAAA,IAAA,MAAA,GAAA;AAMjB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,kBAAA,oBAAA,GAAA;AAEE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,sBAAA,IAAA,aAAA,GAAA,GAAA;AAEF,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,kBAAA,IAAA,GAAA;AAEE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,sBAAA,IAAA,WAAA,GAAA,GAAA;AAIwB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,UAAA;AAOxB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAYuC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA,EAAyB,iBAAA,IAAA,UAAA,MAAA,EAC9B,oBAAA,IAAA,UAAA,SAAA;AA8Jd,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAGJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,0BAAA,IAAAC,IAAA,CAAA;AAGZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;;2xuBD/L7B;MACV,QAAQ,gBAAgB;QACtB,MAAM,mBAAmB,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QACjE,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WACE,0BACA,QAAQ,sCAAsC,CAAC;QAEjD,WACE,qBACA,QAAQ,sCAAsC,CAAC;OAElD;MACF,EAAA,CAAA;EAAA;;;6EAEU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,2DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;AG9C3B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6C,GAAA,kBAAA,EAAA,EACc,GAAA,SAAA,EAAA;AAErD,IAAA,2BAAA,iBAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAiD,IAAA,qBAAA,eAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAY,IAAI,CAAC;IAAA,CAAA;AADnF,IAAA,uBAAA,EACuF,EACxE;;;;AAFa,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,SAAA;AAC1B,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,SAAA;;;;;;AAIJ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+C,GAAA,kBAAA,EAAA,EACY,GAAA,SAAA,EAAA;AAErD,IAAA,2BAAA,iBAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,aAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,cAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAmD,IAAA,qBAAA,eAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAY,IAAI,CAAC;IAAA,CAAA;AADrF,IAAA,uBAAA,EACyF,EAC1E;;;;AAFa,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,WAAA;AAC1B,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,WAAA;;;;;;AAIR,IAAA,yBAAA,GAAA,KAAA,EAAgC,GAAA,kBAAA,EAAA,EAC2B,GAAA,SAAA,EAAA;AAErD,IAAA,2BAAA,iBAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAiD,IAAA,qBAAA,eAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,YAAY,IAAI,CAAC;IAAA,CAAA;AADnF,IAAA,uBAAA,EACuF,EACxE;;;;AAFa,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,SAAA;AAC1B,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,SAAA;;;;;AAQA,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF8C,IAAA,qBAAA,SAAA,WAAA,IAAA;AAC5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,MAAA,GAAA;;;;;;AANR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2C,GAAA,kBAAA,EAAA,EACgB,GAAA,cAAA,EAAA;AAC3C,IAAA,qBAAA,mBAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,gBAAA,OAAA,KAAA,CAA6B;IAAA,CAAA;AAAE,IAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,WAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,YAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAE5D,IAAA,yBAAA,GAAA,cAAA,EAAA;AAAqB,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;AAChE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE;;;;AAP+C,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,SAAA;AAC5D,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,OAAA;AACqB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,OAAA;AACW,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,SAAA;;;;;AAWlC,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF4C,IAAA,qBAAA,SAAA,UAAA,EAAA;AAC1C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,YAAA,GAAA;;;;;;AAJR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0C,GAAA,kBAAA,EAAA,EACiB,GAAA,cAAA,EAAA;AACS,IAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,UAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC9D,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE;;;;AALH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,GAAA;AAAoD,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,QAAA;AAC/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,QAAA;;;;;;AAa/B,IAAA,yBAAA,GAAA,cAAA,EAAA;AAAY,IAAA,qBAAA,qBAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAqB,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAGvD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAHgE,IAAA,qBAAA,SAAA,OAAA,YAAA,MAAA,OAAA,QAAA;AAE9D,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,OAAA,OAAA,OAAA,WAAA,KAAA,UAAA,OAAA,OAAA,OAAA,UAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,gBAAA,GAAA;;;;;;AA6BR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,OAAA,EAAA;AAC1B,IAAA,iBAAA,CAAA;AAA0C,IAAA,uBAAA;AAC5E,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,mBAAA,EAAA;AACc,IAAA,2BAAA,iBAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC1C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,GAAA,oBAAA,EAAA;AAE7C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAmB;AAErB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,GAAA,oBAAA,EAAA;AAE7C,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AACE,IAAA,oBAAA,IAAA,OAAA,EAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiD,IAAA,oBAAA,EAAA;AAE7C,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AACE,IAAA,oBAAA,IAAA,OAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH,EACU,EACd;;;;AAzB4B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,MAAA;AAEY,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,gBAAA;AAEC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,KAAA,GAAA;AAIuC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,UAAA,GAAA;AAOuC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,QAAA,GAAA;;;;;AAcJ,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,SAAA,YAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,aAAA,qBAAA,GAAA;;;;;;AALR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4C,GAAA,kBAAA,EAAA,EACe,GAAA,cAAA,EAAA;AAErD,IAAA,qBAAA,mBAAA,SAAA,0EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,iBAAA,OAAA,KAAA,CAA8B;IAAA,CAAA;AACjD,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE;;;;AANH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,cAAA;AAEuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;;;;;AAUjC,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFwD,IAAA,qBAAA,SAAA,oBAAA,OAAA,OAAA,iBAAA,gBAAA;AACtD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,oBAAA,OAAA,OAAA,iBAAA,kBAAA,GAAA;;;;;;AALR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgD,GAAA,kBAAA,EAAA,EACW,GAAA,cAAA,EAAA;AAErD,IAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE;;;;AANH,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,mBAAA,YAAA;AACV,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,gBAAA;AACqC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;;;;;AAgBrC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyF,GAAA,oBAAA,EAAA;AAErF,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAC0B,IAAA,oBAAA,GAAA,OAAA,EAAA;AAAwC,IAAA,uBAAA,EAAO;AAE3E,IAAA,oBAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;;AAT2C,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,WAAA,EAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,QAAA,GAAA;AAC+B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,WAAA,IAAA,EAA0B,sBAAA,WAAA,aAAA,OAAA;AAGrD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,OAAA,YAAA,WAAA,EAAA,GAAA,OAAA,WAAA,WAAA,EAAA,GAAA,OAAA,UAAA,WAAA,EAAA,CAAA,CAAA;;;;;;AAfd,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,OAAA,EAAA;AAC1B,IAAA,iBAAA,CAAA;AAA0C,IAAA,uBAAA;AAC5E,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,mBAAA,EAAA;AACc,IAAA,2BAAA,iBAAA,SAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,kBAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC1C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,GAAA,oBAAA,EAAA;AAE7C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAmB;AAErB,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,OAAA,EAAA;AAWF,IAAA,uBAAA,EAAkB,EACd;;;;AApB4B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,MAAA;AAEY,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,kBAAA,OAAA,gBAAA;AAEC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,CAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,mBAAA,KAAA,GAAA;AAGgE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,gBAAA;;;ADrItE,IAAO,sBAAP,MAAO,qBAAmB;EAgC9B,YACS,eACA,cACA,mBACA,aACA,eACA,gBACA,eACC,QAAqB;AAPtB,SAAA,gBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,gBAAA;AACC,SAAA,SAAA;AAtCA,SAAA,cAAwC,IAAI,aAAY;AACxD,SAAA,mBAAsC,IAAI,aAAY;AACtD,SAAA,mBAAsC,IAAI,aAAY;AAEzD,SAAA,aAAoB,CAAA;AACpB,SAAA,iBAAwB,CAAA;AACxB,SAAA,WAAkB,CAAA;AAClB,SAAA,YAAmB,CAAA;AACnB,SAAA,eAAsB,CAAA;AACtB,SAAA,UAAiB,CAAA;AACjB,SAAA,mBAA0B,CAAA;AAC1B,SAAA,YAAmB,CAAA;AAE1B,SAAA,cAAc;AACP,SAAA,eAAe;AACf,SAAA,uBAAuB;AACvB,SAAA,qBAAqB;AACrB,SAAA,kBAAkB;AAClB,SAAA,kBAAkB;AAClB,SAAA,oBAAoB;AACpB,SAAA,wBAAwB;AACxB,SAAA,kBAAkB;AAClB,SAAA,mBAAmB;AACnB,SAAA,iBAAiB;AACjB,SAAA,qBAAqB;AAE5B,SAAA,aAAa;AAEb,SAAA,eAAe;AAiMf,SAAA,oBAAoB,CAAA;AArLlB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK,YAAY,QAAQ,YACpE,cAAc;AAEhB,SAAK,kBAAkB,OAAO,aAAa,KAAK,YAAY,QAAQ,YAClE,YAAY;AAEd,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAChE,UAAU;AAGZ,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,oBAAmB;IAEvC;AAEA,QAAI,OAAO,SAAS,KAAK,QAAQ,cAAc,IAAI,IAAI;AACrD,WAAK,eAAe;AACpB,WAAK,kBAAkB;AACvB,WAAK,kBAAkB;AACvB,WAAK,wBAAwB;AAC7B,WAAK,oBAAoB;AACzB,WAAK,kBAAkB;IACzB;AAEA,QAAI,OAAO,SAAS,KAAK,QAAQ,cAAc,IAAI,IAAI;AACrD,WAAK,uBAAuB;AAC5B,WAAK,qBAAqB;AAC1B,WAAK,oBAAoB;AACzB,WAAK,wBAAwB;AAC7B,WAAK,mBAAmB;AACxB,WAAK,iBAAiB;AACtB,WAAK,qBAAqB;AAC1B,WAAK,kBAAkB;IACzB;AAGA,SAAK,kBAAkB,WAAW,IAAI,KACpC,KAAK,cAAc,sBAAsB;AAE3C,SAAK,kBAAkB,SAAS,KAAK,cAAc;EAErD;;;;EAMA,WAAQ;AACN,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,QAAI,QAAQ;AACV,WAAK,cAAc,oBAAoB,MAAM,EAAE,UAC7C,CAAC,QAAO;AACN,aAAK,YAAY,QAAQ,qBAAqB,IAAI;AAClD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,gBAAQ,IAAI,KAAK,YAAY,OAAO;AACpC,aAAK,eAAe,KAAK,YAAY,QAAQ,YAC3C,sBAAsB;AAExB,YAAI,CAAC,KAAK;AACR,eAAK,kBAAkB,OAAO,kBAAkB,IAAI;AACtD,aAAK,OAAO,iBAAiB,CAAC,UAAwB;AACpD,cAAI,MAAM,OAAO,OAAO,MAAM,QAAQ;AAAS;AAC/C,cAAI,CAAC,KAAK,OAAO,UAAU;AACzB,iBAAK,OAAO,YACR,KAAK,OAAO,mBAAmB,KAAK,IACpC,KAAK,OAAO,qBAAqB,KAAK;UAC5C;QACF;AAGA,aAAK,iBAAiB,IAAI,KAAK,YAAY,IAAI,IAAI;AAWnD,YAAI,KAAK,YAAY,QAAQ,YAAY,kBAAkB,KAAK,MAAM;AACpE,gBAAM,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACxE,eAAK,eAAe,YAAY,YAAY,EAAE,UAAU;YACtD,MAAM,CAAC,SAAQ;AACb,mBAAK,aAAa,KAAK,aAAa,UAAU,OAC5C,CAAC,QAAO;AACN,oBAAI,IAAI,gBAAgB,aAAa,KAAK,cAAc;AACtD,yBAAO;gBACT;cACF,CAAC;YAEL;YACA,OAAO,MAAK;AAEV,mBAAK,cAAc,sBAAqB;YAC1C;WACD;QACH;AAEA,aAAK,YAAY,MAAM,UAAU,CAAC,SAAQ;AACxC,eAAK,iBAAiB,KAAK;QAC7B,CAAC;AAED,cAAM,kBAAuB,KAAK,YAAY,QAC3C;AACH,gBAAQ,IAAI,mBAAmB,eAAe;AAC9C,aAAK,WAAW,gBAAgB;AAChC,gBAAQ,IAAI,KAAK,QAAQ;AACzB,aAAK,YAAY,gBAAgB;AACjC,aAAK,UAAU,gBAAgB;AAE/B,aAAK,mBAAmB,gBAAgB,eAAe,OACrD,CAAC,QAAO;AACN,cACE,IAAI,MAAM,kBAAkB,aAC5B,IAAI,MAAM,kBAAkB,YAC5B,IAAI,MAAM,kBAAkB,SAC5B;AACA,mBAAO;UACT;QACF,CAAC;AAEH,gBAAQ,IAAI,KAAK,gBAAgB;AACjC,aAAK,iBAAiB,QAAQ,CAAC,QAAO;AACpC,cAAI,IAAI,UAAU,aAAa;AAC7B,gBAAI,SAAS,KAAK,aAAa,mBAAmB;AAClD,gBAAI,OAAO,KAAK,aAAa,mBAAmB;UAClD;AACA,cAAI,IAAI,UAAU,YAAY;AAC5B,gBAAI,SAAS,KAAK,aAAa,mBAAmB;AAClD,gBAAI,OAAO,KAAK,aAAa,mBAAmB;UAClD;AACA,cAAI,IAAI,UAAU,WAAW;AAC3B,gBAAI,SAAS,KAAK,aAAa,mBAAmB;AAClD,gBAAI,OAAO,KAAK,aAAa,mBAAmB;UAClD;QACF,CAAC;AACD,aAAK,iBAAiB,KAAK,gBAAgB,kBAAkB;MAC/D,GACA,CAAC,QAAO;AACN,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;MAEjC,CAAC;IAEL;EACF;EAEO,YAAY,IAAE;AACnB,WAAO,MAAM,kBAAkB;EACjC;EACO,WAAW,IAAE;AAClB,WAAO,MAAM,kBAAkB;EACjC;EACO,UAAU,IAAE;AACjB,WAAO,MAAM,kBAAkB;EACjC;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,oBAAmB;IAEvC,CAAC;EACL;EAEA,aAAa,GAAC;AACZ,QAAI,KAAK,OAAO;AACd,WAAK,cAAc;AACnB,WAAK,kBAAkB,OAAO,aAAa,KAAK;IAClD;EACF;EAEA,WAAQ;AACN,SAAK,kBAAkB,OAAO,aAAa,KAAK;EAClD;EAEO,uBAAoB;AACzB,SAAK,kBAAkB,OAAO,gBAAgB,KAAK,kBAAkB,KAAI;EAC3E;EACA,iBAAiB,QAAM;AACrB,QAAI,OAAO,aAAa;AACtB,cAAQ,IAAI,OAAO,OAAO,KAAK;AAC/B,UAAI,KAAK,kBAAkB,QAAQ,OAAO,OAAO,KAAK,KAAK,IAAI;AAC7D,aAAK,kBAAkB,KAAK,OAAO,OAAO,KAAK;MACjD,OAAO;AACL,aAAK,kBAAkB,OACrB,KAAK,kBAAkB,QAAQ,OAAO,OAAO,KAAK,GAClD,CAAC;MAEL;AACA,cAAQ,IAAI,KAAK,iBAAiB;IACpC;EACF;EAEO,gBAAgB,WAAS;AAC9B,QACE,KAAK,kBAAkB,OAAO,aAAa,QAC3C,KAAK,kBAAkB,OAAO,YAAY;AAE1C,WAAK,eAAe,KAAK,UAAU,KACjC,CAAC,MAAM,EAAE,OAAO,KAAK,kBAAkB,OAAO,SAAS,EACvD,YAAY;;AACX,WAAK,eAAe,CAAA;AAEzB,SAAK,kBAAkB,OAAO,YAAY;AAC1C,SAAK,aAAa,SAAS;EAC7B;EAEO,aAAa,WAAS;AAC3B,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,SAAK,cAAc,wBAAwB,WAAW,MAAM,EAAE,UAC5D,CAAC,QAAO;AACN,WAAK,kBAAkB,OAAO,QAAQ;AACtC,WAAK,YAAY,IAAI;IACvB,GACA,CAAC,QAAO;AACN,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EAEL;EAEO,iBAAiB,SAAO;AAG7B,SAAK,kBAAkB,OAAO,WAAW,QAAQ;AACjD,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,OAAO,mBAAmB,QAAQ,gBAAgB,YAAY,IAAI;AAEzF,SAAK,iBAAiB,KAAK,YAAY,UAAU,kBAAkB,OAAO,SAAM;AAC9E,UAAI,QAAQ,uBAAuB,sBAAsB,IAAI,OAAO,eAAe,GAAG,EAAE,KAAK,IAAI,mBAAmB,GAAG;AACrH,eAAO;MACT,OAAO;AACL,eAAO,IAAI,uBAAuB,QAAQ;MAC5C;IACF,CAAC;EACH;EAEO,YAAY,UAAW,UAAS;AACrC,SAAK,cAAc,aAAa;AAChC,SAAK,cAAc,SAAS,UAAS,EAAG,SAAS,cAAc;AAE/D,SAAK,kBAAkB,OAAO,WAC5B,KAAK,kBAAkB,YAAY,OAC/B,KAAK,cAAc,sBACnB,KAAK,kBAAkB,QAAQ,IAE/B;AACN,SAAK,kBAAkB,OAAO,SAC5B,KAAK,kBAAkB,UAAU,OAC7B,KAAK,cAAc,oBAAoB,KAAK,kBAAkB,MAAM,IACpE;AAEN,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,YAAY,KAAK,KAAK,kBAAkB,MAAM;AACnD,QAAI;AAAU,WAAK,YAAW;EAChC;EAIO,cAAW;AAChB,SAAK,WAAW,cAAc,QAAQ;AACtC,SAAK,iBAAiB,KAAK,IAAI;AAC/B,SAAK,iBAAgB;AACrB,SAAK,YAAY,KAAK;AACtB,SAAK,iBAAiB,IAAI,KAAK,YAAY,IAAI,IAAI;AACnD,SAAK,oBAAoB,CAAA;AACzB,SAAK,SAAQ;EACf;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK,YAAY,QAAQ,YACpE,cAAc;AAEhB,SAAK,kBAAkB,OAAO,aAAa,KAAK,YAAY,QAAQ,YAClE,YAAY;AAEd,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAChE,UAAU;AAEZ,SAAK,kBAAkB,OAAO,mBAAmB,KAAK,YAAY,QAC/D,YAAY,sBAAsB,IACjC,IACA;AACJ,SAAK,kBAAkB,OAAO,iBAAiB;AAG/C,SAAK,kBAAkB,WAAW,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACpF,SAAK,kBAAkB,SAAS,KAAK,cAAc;AACnD,SAAK,eAAe,CAAA;AACpB,SAAK,YAAY,CAAA;EACnB;EAEA,cAAW;AACT,SAAK,cAAc,sBAAsB,KAAK,IAAI;EACpD;EAEO,iBAAiB,YAAY,QAAQ,UAAU,kBAAgB;AACpE,UAAM,KAAK;MACT,cAAc,aAAa;MAC3B;MACA;MACA;MACA;;AAEF,SAAK,cAAc,uBAAuB,EAAE,EAAE,UAC5C,CAAC,SAAQ;AACP,UAAI,UAAU,GAAG;AAEf,cAAM,mBAAmB,CAAA;AACzB,cAAM,YAAY,oBAAI,IAAG;AACzB,aAAK,aAAa,WAAW,QAAQ,SAAM;AACzC,cAAI,IAAI,WAAW,KAAK,IAAI,UAAU,GAAG;AACvC,gBAAI,UAAU,IAAI;AAClB,gBAAI,iBAAiB,IAAI,IAAI,WAAW;UAC1C;AACA,gBAAM,cAAc,IAAI,gBAAgB,QAAQ,iBAAiB,EAAE,EAAE,KAAI,EAAG,YAAW;AACvF,cAAI,CAAC,UAAU,IAAI,WAAW,GAAG;AAC/B,sBAAU,IAAI,WAAW;AACzB,6BAAiB,KAAK,iCACjB,MADiB;cAEpB,iBAAiB;cAClB;UACH;AAAC;QACH,CAAC;AACD,aAAK,aAAa;MACpB;AACA,WAAK,cAAc;IACrB,GACA,CAAC,QAAY;AACX,cAAQ,IAAI,GAAG;IACjB,CAAC;EAEL;;;uCA/XW,sBAAmB,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,WAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;;;AC1BhC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,KAAA,CAAA;AAClB,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,GAAA,IAAA;AAAE,QAAA,yBAAA,GAAA,MAAA;AAAM,QAAA,iBAAA,CAAA;AAA4C,QAAA,uBAAA,EAAO,EAAI;AAE5F,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA,EACsB,GAAA,QAAA,CAAA;AACrB,QAAA,iBAAA,CAAA;AAA2C,QAAA,uBAAA;AACrE,QAAA,yBAAA,GAAA,KAAA,CAAA;AAAkB,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA,EAAI,EACtF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,OAAA,EAAA,EACiC,IAAA,QAAA,CAAA;AAC1B,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AACrE,QAAA,yBAAA,IAAA,KAAA,CAAA;AAAkB,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAA,CAAa;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA,EAAI;AAG5F,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA;AAMA,QAAA,yBAAA,IAAA,KAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA;AAMF,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA,EAAgC,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA;AAiBlC,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA;AASA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA2C,IAAA,kBAAA,EAAA,EACgB,IAAA,cAAA,IAAA,CAAA;AAErD,QAAA,qBAAA,mBAAA,SAAA,sEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,qBAAA,CAAsB;QAAA,CAAA,EAAC,gBAAA,SAAA,iEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAqC,IAAA,aAAA,MAAA,CAAoB;QAAA,CAAA;AACnG,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,OAAA,YAAA,MAAA,MAAA,IAAA,kBAAA,OAAA,aAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACA,QAAA,yBAAA,IAAA,SAAA,IAAA,CAAA;AACuB,QAAA,2BAAA,iBAAA,SAAA,6DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,aAAA,MAAA,MAAA,IAAA,cAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAA0B,QAAA,qBAAA,iBAAA,SAAA,+DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,SAAA,CAAU;QAAA,CAAA;AAD5E,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,cAAA,EAAA;;AAKA,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,KAAA,EAAA;;AAGF,QAAA,uBAAA,EAAa,EACE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsC,IAAA,OAAA,EAAA;AACH,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACsD,IAAA,SAAA,EAAA;AAErD,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,iBAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAS,eAAA,KAAA,CAAiB;QAAA,CAAA;AAAE,QAAA,2BAAA,iBAAA,SAAA,6DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,UAAA,MAAA,MAAA,IAAA,kBAAA,WAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAD9B,QAAA,uBAAA;AAIA,QAAA,oBAAA,IAAA,yBAAA,EAAA,EAA4E,IAAA,kBAAA,MAAA,CAAA;AAE9E,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,kBAAA,EAAA,EACsD,IAAA,SAAA,EAAA;AAErD,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,eAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAS,aAAA,KAAA,CAAe;QAAA,CAAA;AAAE,QAAA,2BAAA,iBAAA,SAAA,6DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,kBAAA,QAAA,MAAA,MAAA,IAAA,kBAAA,SAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAD5B,QAAA,uBAAA;AAGA,QAAA,oBAAA,IAAA,yBAAA,EAAA,EAA0E,IAAA,kBAAA,MAAA,CAAA;AAE5E,QAAA,uBAAA,EAAiB,EACb;AAGR,QAAA,qBAAA,IAAA,qCAAA,IAAA,GAAA,OAAA,EAAA,EAA8D,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA,EA6BlB,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA,EAUI,IAAA,qCAAA,GAAA,GAAA,OAAA,EAAA;AAkChD,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,UAAA,EAAA;AACT,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAY,MAAM,KAAK,CAAC;QAAA,CAAA;AACnF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS;AAGX,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8D,IAAA,UAAA,EAAA;AACR,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,YAAY,MAAM,IAAI,CAAC;QAAA,CAAA;AAClF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EACL;;;;;;AAtL6B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,MAAA;AAIP,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AACgB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,QAAA;AAKhB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AACgB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,QAAA;AAIvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA;AAOE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAOf,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA;AAMa,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA;AAaF,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA;AASD,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,CAAA,IAAA,YAAA;AAEF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,sBAAA;AAEV,QAAA,2BAAA,WAAA,IAAA,kBAAA,OAAA,UAAA;AAC2B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,sBAAA;AACJ,QAAA,2BAAA,WAAA,IAAA,WAAA;AAEN,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,YAAA,IAAA,WAAA,CAAA;AAIe,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,WAAA,sBAAA,IAAA,IAAA,IAAA,YAAA,IAAA,WAAA,MAAA,OAAA,OAAA,SAAA,WAAA,CAAA;AAQH,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,UAAA;AAGb,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,IAAA,EAAoD,iBAAA,cAAA;AACtC,QAAA,2BAAA,WAAA,IAAA,kBAAA,QAAA;AAC5B,QAAA,qBAAA,OAAA,IAAA,kBAAA,WAAA,OAAA,IAAA,kBAAA,SAAA,IAAA,cAAA,eAAA,CAAA;AAE+B,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,cAAA;AAMjB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,mBAAA,EAAA,EAAkD,iBAAA,YAAA;AACtC,QAAA,2BAAA,WAAA,IAAA,kBAAA,MAAA;AAA4C,QAAA,qBAAA,OAAA,IAAA,kBAAA,QAAA,EAAuC,OAAA,IAAA,cAAA,eAAA,CAAA;AAE9E,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,YAAA;AAMA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA;AA6BpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA;AAUA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,qBAAA;AAWoB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA;AAyBnC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,OAAA,GAAA;AAMA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,mBAAA,OAAA,GAAA;;;;;;6ED3JO,qBAAmB,EAAA,WAAA,uBAAA,UAAA,0DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEpB1B,IAAO,4BAAP,MAAO,2BAAyB;EAIpC,cAAA;AACE,SAAK,iBAAiB;EACxB;;;uCANW,4BAAyB;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,QAAA,UAAA,cAAA,UAAA,GAAA,OAAA,aAAA,QAAA,MAAA,GAAA,CAAA,GAAA,MAAA,eAAA,GAAA,CAAA,GAAA,OAAA,kBAAA,aAAA,GAAA,CAAA,eAAA,UAAA,GAAA,CAAA,GAAA,OAAA,cAAA,MAAA,GAAA,CAAA,QAAA,UAAA,cAAA,UAAA,GAAA,OAAA,WAAA,GAAA,CAAA,WAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,GAAA,OAAA,MAAA,GAAA,CAAA,cAAA,WAAA,cAAA,QAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,eAAA,mBAAA,aAAA,IAAA,GAAA,CAAA,OAAA,gCAAA,OAAA,OAAA,GAAA,QAAA,MAAA,GAAA,CAAA,OAAA,iCAAA,OAAA,OAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,UAAA,uBAAA,oBAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,UAAA,GAAA,QAAA,OAAA,GAAA,CAAA,GAAA,YAAA,cAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACNtC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AACV,QAAA,oBAAA,GAAA,YAAA;AAAyB,QAAA,uBAAA;AAE/B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA8B,GAAA,OAAA,CAAA,EACX,GAAA,OAAA,CAAA,EAEO,GAAA,UAAA,EACV,GAAA,OAAA,CAAA,EACU,IAAA,OAAA,CAAA,EACiC,IAAA,OAAA,CAAA,EAC9B,IAAA,UAAA,CAAA;AAEb,QAAA,oBAAA,IAAA,MAAA,CAAA;AAAmC,QAAA,iBAAA,IAAA,QAAA;AACrC,QAAA,uBAAA,EAAS;AAEX,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,MAAA,EAAA;AACf,QAAA,iBAAA,IAAA,wBAAA;AAAsB,QAAA,uBAAA,EAAK;AAExD,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiC,IAAA,UAAA,EAAA;AAE7B,QAAA,iBAAA,IAAA,cAAA;AACF,QAAA,uBAAA,EAAS,EACL;AAGR,QAAA,yBAAA,IAAA,SAAA,EAAA,EAAgC,IAAA,SAAA,EAAA,EACH,IAAA,IAAA,EACrB,IAAA,MAAA,EAAA;AACc,QAAA,iBAAA,IAAA,aAAA;AAAW,QAAA,uBAAA;AAC3B,QAAA,yBAAA,IAAA,MAAA,EAAA;AAAgB,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,MAAA,EAAA;AAAgB,QAAA,iBAAA,IAAA,UAAA;AAAQ,QAAA,uBAAA;AACxB,QAAA,yBAAA,IAAA,MAAA,EAAA;AAAgB,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA,EAAK,EAC3B;AAEP,QAAA,yBAAA,IAAA,OAAA,EAAO,IAAA,IAAA,EACD,IAAA,MAAA,EAAA;AACc,QAAA,iBAAA,IAAA,KAAA;AAAG,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AACV,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,iBAAA,IAAA,OAAA;AAAK,QAAA,uBAAA;AACT,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA,EAAK,EACf,EACC;AAGV,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA,CAAA,EACO,IAAA,OAAA,EAAA,EACE,IAAA,OAAA,CAAA,EACH,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA;AAC3B,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,QAAA,iBAAA,IAAA,aAAA;AAAW,QAAA,uBAAA;AACtB,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA;AACE,QAAA,oBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,OAAA,EAAA;AAExE,QAAA,uBAAA,EAAM,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,UAAA,EAAA;AAEhE,QAAA,iBAAA,IAAA,QAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACF,EACF,EACG;AAGb,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,gBAAA;AACF,QAAA,uBAAA,EAAM,EAEF,EACF,EACF;;;;;;6ED/EK,2BAAyB,EAAA,WAAA,6BAAA,UAAA,2EAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;;;AGCpC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAyD,IAAA,uBAAA;;;;;AAAzD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,kBAAA,GAAA;;;;;;AAEjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA8E,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,CAAW;IAAA,CAAA;AAC7E,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;AACvE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,CAAQ;IAAA,CAAA;AACpE,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;;;;;AAF5B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,WAAA,GAAA;AAEnB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;AAgCQ,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF+C,IAAA,qBAAA,SAAA,YAAA,EAAA;AAC7C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,UAAA,GAAA;;;;;AALR,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,kBAAA,CAAA,EAA4E,GAAA,WAAA;AAC/D,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;AACvD,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;;;AALF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,IAAA;AACU,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,aAAA,EAA0B,eAAA,OAAA,aAAA,uBAAA,MAAA;AACZ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,SAAA;;;;;;AAQvC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAwF,GAAA,WAAA;AAC3E,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;AACxD,IAAA,yBAAA,GAAA,SAAA,EAAA;AACE,IAAA,qBAAA,QAAA,SAAA,kEAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAQ,OAAA,oBAAA,QAAA,CAA0B;IAAA,CAAA;AADpC,IAAA,uBAAA,EACuE;;;;;;AAF5D,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;AACoC,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,gBAAA,EAAgC,eAAA,QAAA;;;AD5CrF,IAAO,mBAAP,MAAO,kBAAgB;EAgB3B,YACU,aACD,eACA,eACA,cACA,aACA,eACA,QACA,2BACA,aAA2B;AAR1B,SAAA,cAAA;AACD,SAAA,gBAAA;AACA,SAAA,gBAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACA,SAAA,gBAAA;AACA,SAAA,SAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AArBF,SAAA,eAAsB,CAAA;AACtB,SAAA,YAAmB,CAAA;AAInB,SAAA,YAAY;AACZ,SAAA,mBAAmB;AACnB,SAAA,UAAU;AAef,SAAK,cAAc,KAAK,YAAY,QAAQ;AAC5C,SAAK,OAAO,IAAI,YAAW;AAE3B,SAAK,mBAAmB,KAAK,aAAa,uBAAuB;EACnE;EAEA,WAAQ;AACN,UAAM,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAC1E,UAAM,YAAa,KAAK,YAAY,QAAQ,YAAY,gBAAgB,KAAK,mBAAmB,gBAAgB,YAAY,IAAK,gBAAgB,YAAY,IAAI,aAAa,QAAQ,eAAe;AACrM,SAAK,cAAc,iBAAiB,CAAC,IAAI,EAAE,EAAE,QAAQ,SAAS,SAAS,CAAC,MAAM,KAAK,QAAQ;AAC3F,SAAK,WAAW,KAAK,YAAY,MAAM;;MAErC,WAAW,CAAC,IAAI,WAAW,QAAQ,CAAC,WAAW,UAAU,EAAE,GAAG,WAAW,QAAQ,4BAA4B,CAAC,CAAC,CAAC;MAChH,UAAU,CAAC,IAAI,WAAW,QAAQ,CAAC,WAAW,UAAU,EAAE,GAAG,WAAW,QAAQ,4BAA4B,CAAC,CAAC,CAAC;MAE/G,YAAY,KAAK,YAAY,MAAM,CAAC,IAAI,CAAC;;MACzC,OAAO,KAAK,YAAY,MAAM,CAAC,IAAI,CAAC;MACpC,cAAc,KAAK,cAAc;KAClC;AAGD,SAAK,cAAc,2BAA2B,KAAK,aAAa,kBAAkB,IAAI,EAAE,UAAU,UAAO;AACvG,WAAK,eAAe,KAAK,aAAa;AACtC,UAAI,CAAC,KAAK,cAAc,gBAAgB;AAEtC,aAAK,YAAY,KAAK,aAAa,OAAO,UAAQ,CAAC,QAAQ,KAAK,KAAK,QAAQ,CAAC;MAChF,OAAO;AACL,aAAK,YAAY,KAAK,aAAa;MACrC;IAEF,CAAC;EAEH;EAEO,mBAAgB;AACrB,SAAK,mBAAmB;AACxB,SAAK,YAAY,KAAK,aAAa,uBAAuB;EAC5D;EAEO,WAAQ;AACb,SAAK,qBAAoB;AACzB,QAAI,KAAK,SAAS,OAAO;AACvB,WAAK,kBAAkB,IAAI,gBAAe;AAE1C,UAAI;AACF,aAAK,SAAS,mBAAmB;UAC/B,aAAa;UACb,WAAW,KAAK,SAAS,MAAM,YAAY,MAAM,KAAK,SAAS,MAAM;UACrE,WAAW,KAAK,SAAS,MAAM;UAC/B,eAAe,KAAK,SAAS,MAAM;UACnC,YAAY;UACZ,aAAa;UACb,aAAa;SACd;MACH,SAAS,OAAO;AACd,gBAAQ,IAAI,KAAK;MACnB;AAEA,UAAI,KAAK,eAAe,SAAS;AAE/B,aAAK,gBAAgB,eAAe,KAAK,aAAa;AACtD,aAAK,gBAAgB,cAAc;AACnC,aAAK,gBAAgB,aAAa;MACpC,OAAO;AAEL,aAAK,gBAAgB,eAAe,aAAa;AACjD,aAAK,gBAAgB,cAAc,KAAK,cAAc;AACtD,aAAK,gBAAgB,aAAa,KAAK,aAAa;MACtD;AAEA,WAAK,gBAAgB,gBAAgB,CAAA;AACrC,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,MAAM,MAAM,QAAQ,KAAK;AACzD,aAAK,WAAW,IAAI,SAAQ;AAC5B,aAAK,SAAS,YAAY,KAAK,SAAS,MAAM;AAC9C,aAAK,SAAS,WAAW,KAAK,SAAS,MAAM;AAC7C,aAAK,SAAS,QAAQ,KAAK,SAAS,MAAM,MAAM,CAAC;AACjD,aAAK,SAAS,SAAS,KAAK,SAAS,MAAM,WAAW,CAAC;AACvD,aAAK,gBAAgB,cAAc,KAAK,KAAK,QAAQ;MACvD;AAEA,WAAK,cAAc,uBAAuB,KAAK,eAAe,EAAE,UAAU,MAAK;AAC7E,YAAI;AACJ,YAAI,KAAK,eAAe,SAAS;AAC/B,mBAAS;QACX,OAAO;AACL,mBAAS,KAAK,aAAa,uBAAuB;QACpD;AAEA,aAAK,YAAY,MAAM,eAAe;AACtC,aAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,uBAAuB,uBAAuB,QAAQ,IAAI,MAAM,MAAM,KAAK,EACrI,KAAK,MAAK;QAEX,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,eAAe,CAAC;MAC7C,GAAG,WAAQ;AACT,YAAI,MAAM,MAAM,kBAAkB,kBAAkB;AAClD,cAAI,MAAM,MAAM,gBAAgB,QAAW;AACzC,iBAAK,UAAU;AACf,kBAAM,QAA4B,KAAK,SAAS,IAAI,OAAO,EAAG,SAAS;AACvE,kBAAM,WAAW,CAAA;AACjB,qBAAS,IAAI,GAAG,IAAI,MAAM,MAAM,aAAa,QAAQ,KAAK;AACxD,mBAAK,WAAW,MAAM,MAAM,aAAa,CAAC,EAAE;AAC5C,kBAAI,KAAK,MAAM,MAAM,aAAa,SAAS;AACzC,qBAAK,WAAW;AAElB,uBAAS,OAAO,GAAG,OAAO,OAAO,QAAQ;AACvC,oBAAI,KAAK,SAAS,MAAM,MAAM,IAAI,EAAE,KAAI,KAAM,MAAM,MAAM,aAAa,CAAC,EAAE,MAAM,KAAI;AAClF,2BAAS,KAAK,IAAI;cACtB;YACF;AACA,iBAAK,WAAW,MAAM,KAAK,aAAa,uBAAuB;UACjE;QACF;AAEE,eAAK,UAAU,KAAK,aAAa,uBAAuB;MAC5D,CAAC;IACH,OACK;AACH,WAAK,UAAU,KAAK,aAAa,uBAAuB;IAC1D;EACF;EAEA,SAAM;AACH,SAAK,SAAS,IAAI,YAAY,EAAuB,KAAK,KAAK,YAAY,QAAQ,IAAI,CAAC;AACxF,SAAK,SAAS,IAAI,OAAO,EAAuB,KAAK,KAAK,YAAY,QAAQ,IAAI,CAAC;EACtF;EAEA,YAAS;AACP,UAAM,QAA4B,KAAK,SAAS,IAAI,OAAO,EAAG,SAAS,SAAU;AACjF,QAAI,QAAQ,GAAG;AACZ,WAAK,SAAS,IAAI,YAAY,EAAuB,SAAS,KAAK;AACnE,WAAK,SAAS,IAAI,OAAO,EAAuB,SAAS,KAAK;IACjE;EAEF;EAEO,uBAAoB;AACzB,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,MAAM,MAAM,QAAQ,KAAK;AACzD,UAAI,CAAC,KAAK,gBAAmC,KAAK,SAAS,IAAI,OAAO,EAAG,SAAS,CAAC,EAAE,KAAK;AACrE,aAAK,SAAS,IAAI,OAAO,EAAG,SAAS,CAAC,EAAE,UAAU,EAAE,QAAQ,UAAS,CAAE;IAC9F;EACF;EAEO,gBAAgB,OAAK;AAC1B,UAAM,KAAK;AACX,WAAO,GAAG,KAAK,OAAO,KAAK,EAAE,YAAW,CAAE;EAC5C;EAEO,oBAAoB,OAAK;AAC9B,QAAI,MAAM;AACV,SAAK,SAAS,IAAI,OAAO,EAAE,MAAM,QAAQ,SAAM;AAC7C,UAAI,OAAO,MAAM,OAAO;AACtB;AACA,YAAI,MAAM;AACR,gBAAM,UAAU,EAAE,QAAQ,UAAS,CAAE;MACzC;IACF,CAAC;AACD,QAAI,OAAO,KAAK,CAAC,KAAK,gBAAgB,MAAM,KAAK;AAC/C,YAAM,UAAU,EAAE,QAAQ,UAAS,CAAE;EACzC;EAEA,4BAAyB;AACvB,WAA0B,KAAK,SAAS,IAAI,YAAY,EAAG;EAC7D;EAEA,uBAAoB;AAClB,WAA0B,KAAK,SAAS,IAAI,OAAO,EAAG;EACxD;;;uCAjMW,mBAAgB,4BAAA,kBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,QAAA,EAAA,aAAA,eAAA,cAAA,eAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,MAAA,oBAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,SAAA,UAAA,WAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,cAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,iBAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,OAAA,QAAA,GAAA,QAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,YAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,gBAAA,OAAA,mBAAA,aAAA,aAAA,MAAA,GAAA,aAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,gBAAA,OAAA,mBAAA,YAAA,aAAA,MAAA,GAAA,aAAA,GAAA,CAAA,GAAA,OAAA,kBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,QAAA,wBAAA,GAAA,CAAA,QAAA,UAAA,mBAAA,IAAA,SAAA,UAAA,GAAA,UAAA,YAAA,GAAA,OAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,UAAA,QAAA,QAAA,GAAA,CAAA,QAAA,UAAA,mBAAA,IAAA,SAAA,UAAA,GAAA,YAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,mBAAA,IAAA,SAAA,UAAA,GAAA,YAAA,GAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,mBAAA,IAAA,SAAA,UAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,eAAA,aAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,eAAA,YAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,gBAAA,OAAA,aAAA,OAAA,YAAA,IAAA,GAAA,QAAA,eAAA,aAAA,CAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACZ7B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,MAAA,CAAA;AACsB,QAAA,iBAAA,CAAA;AAAa,QAAA,uBAAA,EAAK;AAElE,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqE,GAAA,QAAA,CAAA;AACxC,QAAA,iBAAA,CAAA;AAAW,QAAA,uBAAA;AACtC,QAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,gBAAA,CAAA,EAAwC,GAAA,0CAAA,GAAA,GAAA,gBAAA,CAAA;AAU1C,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqC,GAAA,QAAA,CAAA;AAEmC,QAAA,qBAAA,YAAA,SAAA,qDAAA;AAAA,iBAAY,IAAA,SAAA;QAAU,CAAA;AAC1F,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAkD,IAAA,OAAA,CAAA,EAC/B,IAAA,kBAAA,CAAA,EAC6D,IAAA,WAAA;AAC/D,QAAA,iBAAA,EAAA;AAAkD,QAAA,uBAAA;AAC7D,QAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,kBAAA,EAAA,EAC8D,IAAA,WAAA;AAChE,QAAA,iBAAA,EAAA;AAAiD,QAAA,uBAAA;AAC5D,QAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwE,IAAA,OAAA,CAAA;AAEpE,QAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,gBAAA,EAAA;AAUF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,CAAA;AACE,QAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,gBAAA,EAAA;AASF,QAAA,uBAAA,EAAM;AAIR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA6C,IAAA,UAAA,EAAA;AAEzC,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,iBAAS,IAAA,YAAA,MAAkB,OAAO;QAAC,CAAA;AACnC,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,UAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EACL,EAED;;;AA3EuC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,SAAA;AAGnB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,OAAA;AACZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA;AAIA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA;AAUa,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,QAAA;AACJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,gBAAA;AAGL,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,uBAAA,WAAA,GAAA;AAET,QAAA,oBAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,uBAAA,cAAA;AAMS,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,uBAAA,UAAA,GAAA;AAET,QAAA,oBAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,uBAAA,aAAA;AAMwB,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,IAAA,gBAAA,CAAA;AAES,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,0BAAA,CAAA;AAYL,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,qBAAA,CAAA;AAgBhC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,uBAAA,OAAA,GAAA;AAGA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,uBAAA,YAAA,GAAA;;;;;;6ED5DK,kBAAgB,EAAA,WAAA,oBAAA,UAAA,sDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGkBT,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;AACzE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,IAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;AACzE,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA;AAC9B,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA;AACpC,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA,EAAO;;;;;AAHhB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,IAAA;AACtB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,GAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,kBAAA,GAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,oBAAA,GAAA;;;;;AAKT,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;;;;AAA/C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,EAAA;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AAC5E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,OAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;;;;AAA/C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,EAAA;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AAC5E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,OAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,SAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;AAIpD,IAAA,yBAAA,GAAA,MAAA;AACoE,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;;;;;AAA1B,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,UAAA,CAAA;;;;;;AAEpE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,oBAAA,EAAA;AAAkB,IAAA,2BAAA,iBAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,MAAA,6BAAA,WAAA,UAAA,MAAA,MAAA,WAAA,WAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAChB,IAAA,qBAAA,SAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,OAAA,QAAA,UAAA,CAA2C;IAAA,CAAA;AACpD,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;;;AAPH,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,CAAA,WAAA,WAAA,UAAA,MAAA,CAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,UAAA,GAAA;AAEgB,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,WAAA,QAAA;AAEV,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,MAAA,WAAA,WAAA,UAAA,MAAA,CAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;AAZR,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAwC,GAAA,QAAA,EAAA;AACT,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAC3E,IAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,QAAA,EAAA,EACoE,GAAA,iDAAA,GAAA,GAAA,gBAAA,EAAA;AAatE,IAAA,uBAAA;;;;;AAf+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;AAE1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,WAAA,oBAAA,CAAA,WAAA,mBAAA;AAEY,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,gBAAA;;;;;AAcjB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;;;;;;AAGpC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAuB,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,cAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,uBAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,sBAAA,WAAA,CAAoC;IAAA,CAAA;AAElE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAEE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA,EAAS;;;;AAH8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,IAAA;;;;;AAJ3C,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAC3E,IAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,QAAA,EAAA;AAMF,IAAA,uBAAA;;;;;AAP+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;AAE1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,CAAA,YAAA,oBAAA,YAAA,aAAA,CAAA,YAAA,mBAAA;;;;;AAQP,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAEF,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAwF,GAAA,IAAA,EAClF,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;AAAsD,IAAA,uBAAA,EAAK,EAC5D;;;;AADC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,cAAA;;;;;AAwDV,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF+C,IAAA,qBAAA,SAAA,aAAA,EAAA;AAC7C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,aAAA,UAAA,GAAA;;;;;;AA0BR,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAGrG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,cAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAClF,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,QAAA;;;;;;AATzB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0E,GAAA,UAAA,EAAA;AAEtE,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,YAAA,wBAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,QAAA,CAAe;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;AACzE,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,UAAA,EAAA,EACuB,GAAA,2DAAA,GAAA,GAAA,UAAA,EAAA;AAOvB,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAS;;;;AAVtB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;AAEzB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAGmB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA;;;;;;AAIxB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuF,GAAA,OAAA,EAAA,EAExD,GAAA,UAAA,EAAA;AACV,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAqD,IAAA,uBAAA,EAAS;AAE3G,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8B,GAAA,UAAA,EAAA;AAC1B,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,YAAA,wBAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,QAAA,CAAe;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA,EAAS;AACpF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4B,GAAA,UAAA,EAAA;AACxB,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAS,EAAM;;;;AALb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,aAAA;AAGf,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;AAEN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA;;;;;AAmBlB,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFkD,IAAA,qBAAA,SAAA,YAAA;AAChD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,aAAA,gBAAA,GAAA;;;;;AAoBF,IAAA,yBAAA,GAAA,cAAA,EAAA;AAAqD,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;;;;AAAnC,IAAA,qBAAA,SAAA,KAAA;AAAa,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,iBAAA,GAAA;;;;;;AApC/D,IAAA,yBAAA,GAAA,KAAA,EAAoB,GAAA,OAAA,EAAA,EACa,GAAA,OAAA,EAAA,EACwC,GAAA,SAAA,EAAA,EAC1C,GAAA,QAAA;AAErB,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAsE,GAAA,cAAA,EAAA;AACxD,IAAA,2BAAA,iBAAA,SAAA,qFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEV,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,gEAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE,EACb;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,OAAA,EAAA,EACwC,IAAA,SAAA,EAAA,EAC1C,IAAA,QAAA;AAGrB,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAAsE,IAAA,cAAA,EAAA;AACxD,IAAA,2BAAA,iBAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,MAAA,6BAAA,OAAA,kBAAA,MAAA,MAAA,OAAA,mBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACV,IAAA,yBAAA,IAAA,cAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,gEAAA,GAAA,GAAA,cAAA,EAAA;AACF,IAAA,uBAAA,EAAa,EACE,EACb,EACF;;;;AAnCE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,kBAAA,KAAA;AAKU,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,gBAAA;AAA+B,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,MAAA;AAGvC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAE+B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;AAajC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,oBAAA,KAAA;AAIU,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,gBAAA;AAA+B,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,MAAA;AAEvC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAEwB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,SAAA;;;;;;AA8BhC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuD,GAAA,gBAAA,EAAA;AAEnD,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,OAAA,OAAA,CAAoB;IAAA,CAAA;AAC7B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAe;;;;AADb,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,kBAAA,MAAA,OAAA,YAAA,kBAAA,GAAA;;;;;;AAGJ,IAAA,yBAAA,GAAA,KAAA,EAA4C,GAAA,gBAAA,EAAA;AAExC,IAAA,qBAAA,SAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,OAAA,WAAsB,IAAI,CAAC;IAAA,CAAA;AACpC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAe;;;;AADb,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,oBAAA,OAAA,OAAA,YAAA,oBAAA,GAAA;;;;;;AAfR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsD,GAAA,QAAA,EAAA,EACtB,GAAA,OAAA,EAAA,EACN,GAAA,QAAA;AAElB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;AACX,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA,EAAuD,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;AAYvD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgD,GAAA,UAAA,EAAA;AACmC,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,YAAA,wBAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,QAAA,CAAe;IAAA,CAAA;AACvG,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AACjD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AACvG,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA,EAAS,EACtD,EACD;;;;AAvBD,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,SAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,wBAAA,GAAA;AAEe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,gBAAA;AAMb,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,kBAAA;AAQF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;;AA7KV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,MAAA,EAAA;AACsB,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA,EAAK;AAGnE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqC,GAAA,QAAA,EAAA,EACqC,GAAA,OAAA,EAAA,EAChD,GAAA,OAAA,EAAA,EACH,GAAA,kBAAA,EAAA,EAC0C,GAAA,WAAA;AAC5C,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;AACxD,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,IAAA,uBAAA,EAAiB;AAGnB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiB,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,IAAA,iBAAA,EAAA;AAAkD,IAAA,uBAAA;AAC7D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiB,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,IAAA,iBAAA,EAAA;AAAiD,IAAA,uBAAA;AAC5D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,IAAA,uBAAA,EAAiB,EACb;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,OAAA,EAAA,EACH,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,IAAA,iBAAA,EAAA;AAA4C,IAAA,uBAAA;AACvD,IAAA,yBAAA,IAAA,cAAA,EAAA;AAEE,IAAA,qBAAA,IAAA,yDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa,EACE;AAEnB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA8D,IAAA,kBAAA,EAAA,EACH,IAAA,WAAA;AAC5C,IAAA,iBAAA,EAAA;AAA6C,IAAA,uBAAA;AACxD,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAAa,IAAA,uBAAA,EAAO;AAEjD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiB,IAAA,kBAAA,EAAA,EAC0C,IAAA,WAAA;AAC5C,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA;AAC3D,IAAA,yBAAA,IAAA,SAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA,EAAC,QAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;AAFvD,IAAA,uBAAA,EAEoE,EACrD,EACb;AAER,IAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAA0E,IAAA,kDAAA,IAAA,GAAA,OAAA,EAAA;AA0B5E,IAAA,uBAAA;AAEA,IAAA,qBAAA,IAAA,kDAAA,IAAA,IAAA,OAAA,EAAA;AA2CA,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyD,IAAA,UAAA,EAAA;AAC0B,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,QAAA,CAAe;IAAA,CAAA;AAC1E,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA;AAC9E,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,oBAAA,CAAqB;IAAA,CAAA;AAC/E,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA;AAC/E,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,QAAA,CAAe;IAAA,CAAA;AAC/E,IAAA,iBAAA,EAAA;AAA2C,IAAA,uBAAA,EAAS;AAE/E,IAAA,qBAAA,IAAA,kDAAA,IAAA,GAAA,OAAA,EAAA;AA2BF,IAAA,uBAAA;;;;AAjLgD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,UAAA;AAIxC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,WAAA,EAAyB,UAAA,OAAA,SAAA;AAIZ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;AACoC,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,KAAA,EAAyD,SAAA,OAAA,aAAA,UAAA;AAO7F,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,WAAA,GAAA;AAET,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,cAAA;AAMS,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,UAAA,GAAA;AAET,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,aAAA;AASS,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,IAAA;AAET,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,MAAA;AACiC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,SAAA;AAMtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,OAAA,eAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;AAET,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,UAAA,EAA8D,YAAA,OAAA,eAAA;AAGvC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,SAAA;AAId,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;AAET,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,uBAAA,UAAA;AAKsC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,mBAAA;AAgBc,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,mBAAA;AAYxD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,MAAA;AA2CD,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,CAAA,OAAA,UAAA;AAEH,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,sBAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,CAAA,OAAA,MAAA;AAEH,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,uBAAA,GAAA;AAKE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,UAAA,CAAA,OAAA,gBAAA;AAA6B,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAE7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,CAAA,OAAA,gBAAA;AAA6B,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;AAE7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,CAAA,OAAA,SAAA;AAAuB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,IAAA,GAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;;;AD7PjC,IAAO,oBAAP,MAAO,mBAAiB;EAqD5B,YACS,eACA,eACC,IACA,cACD,eACA,2BACA,cACC,OACD,aAAwB;AARxB,SAAA,gBAAA;AACA,SAAA,gBAAA;AACC,SAAA,KAAA;AACA,SAAA,eAAA;AACD,SAAA,gBAAA;AACA,SAAA,4BAAA;AACA,SAAA,eAAA;AACC,SAAA,QAAA;AACD,SAAA,cAAA;AA5DT,SAAA,SAAS;AACT,SAAA,SAAS;AACF,SAAA,eAAe;AACf,SAAA,aAAa;AACb,SAAA,SAAiB,aAAa,cAAc,KAAK,MAAM,aAAa,WAAW,EAAE,WAAS;AAC1F,SAAA,eAAsB,CAAA;AACtB,SAAA,aAAoB,CAAA;AACpB,SAAA,YAAmB,CAAA;AACnB,SAAA,UAAiB,CAAA;AAGjB,SAAA,eAAsB,CAAA;AACtB,SAAA,YAAmB,CAAA;AAInB,SAAA,kBAAkB;AAClB,SAAA,sBAAsB;AACtB,SAAA,eAAe;AACf,SAAA,eAAe;AACf,SAAA,YAAY;AACZ,SAAA,SAAS;AACT,SAAA,aAAa;AACb,SAAA,YAAY;AACZ,SAAA,SAAS;AAET,SAAA,mBAAmB;AACnB,SAAA,cAAc;AACd,SAAA,UAAU;AACV,SAAA,YAAY;AAOnB,SAAA,mBAA6B,CAAC,YAAY,YAAY,SAAS,WAAW,UAAU,QAAQ;AAC5F,SAAA,aAAa,IAAI,yBAAkB;AAI5B,SAAA,YAA8B,IAAI,iBAAiB,CAAA,CAAE;AAoB1D,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAE7E,SAAK,YAAY,GAAG,MAAM;MACxB,iBAAiB,CAAC,IAAI;MACtB,eAAe,CAAC,KAAK;KACtB;AACD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,wBAAuB;IAC3C;EACF;EAEA,WAAQ;AACN,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,uBAAuB,cAAc,EAAE;AAC3F,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KAAK,OAAK,EAAE,aAAa,iBAAiB;AAC7F,UAAM,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAC1E,UAAM,YAAa,KAAK,YAAY,QAAQ,YAAY,gBAAgB,KAAK,mBAAmB,gBAAgB,YAAY,IAAK,gBAAgB,YAAY,IAAI,aAAa,QAAQ,eAAe;AACrM,SAAK,cAAc,iBAAiB,CAAC,EAAE,EAAE,QAAQ,SAAS,SAAS,CAAC,MAAM,KAAK,QAAQ;AAEvF,QAAI,aAAa,QAAQ,aAAa,KAAK,QAAQ;AACjD,WAAK,aAAa,KAAK,uBAAuB;QAC5C,UAAU;QACV,UAAU;QACV,YAAY;OACb;IACH;AACA,SAAK,cAAc,2BAA2B,KAAK,aAAa,kBAAkB,IAAI,EAAE,UAAU,UAAO;AACvG,WAAK,eAAe,KAAK,aAAa;AACtC,WAAK,aAAa,KAAK,aAAa;AACpC,WAAK,UAAU,KAAK,aAAa;AACjC,UAAI,CAAC,KAAK,cAAc,gBAAgB;AACtC,aAAK,YAAY,KAAK,WAAW,OAAO,UAAQ,CAAC,QAAQ,KAAK,KAAK,QAAQ,CAAC;MAC9E,OAAO;AACL,aAAK,YAAY,KAAK,aAAa;MACrC;IACF,CAAC;AACD,SAAK,YAAW;EAElB;EAEO,mBAAgB;AACrB,UAAM,WAAW,KAAK,aAAa,KAAK,kBAAkB;MACxD,UAAU;MACV,UAAU;MACV,YAAY;KACb;AACD,aAAS,kBAAkB,YAAY,KAAK,aAAa,uBAAuB;AAChF,aAAS,kBAAkB,cAAc;AAEzC,aAAS,OAAO,KAAK,CAAC,WAAU;AAC9B,UAAI,UAAU,iBAAiB;AAC7B,aAAK,YAAW;MAClB;IACF,CAAC;EAEH;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,wBAAuB;IAC3C,CAAC;EACH;EAEO,cAAW;AAChB,SAAK,cAAc,YAAY,KAAK,cAAc,eAAe,KAAK,cAAc,sBAAsB,KAAK,eAAe,IAAI,KAAK,eAAe,MAAM,KAAK,aAAa,IAAI,KAAK,aAAa,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AACrQ,WAAK,aAAa,KAAK;AACvB,WAAK,aAAa,IAAI,yBAAgC,KAAK,UAAU;AACrE,WAAK,WAAW,YAAY,KAAK;AACjC,WAAK,WAAW,OAAO,KAAK;IAC9B,GAAG,OAAM,MAAK;AACZ,WAAK,aAAa;IAEpB,EAAC,CAAC;EACJ;EAEO,qBAAkB;AACvB,SAAK,cAAc,gBAAgB,aAAa,YAAY,EAAE,UAAU,UAAO;AAC7E,WAAK,eAAe,KAAK,aAAa;AACtC,WAAK,YAAY,KAAK,aAAa;IACrC,CAAC;EACH;EAEA,UAAU,aAAa,MAAI;AACzB,SAAK,eAAe;AACpB,SAAK,YAAY;AAEjB,QAAI,QAAQ,MAAM;AAChB,WAAK,cAAc,2BAA2B,KAAK,aAAa,kBAAkB,KAAK,YAAY,EAAE,UAAU,UAAO;AACpH,aAAK,UAAU,KAAK,aAAa;MACnC,CAAC;AACD,WAAK,cAAc;AACnB,WAAK,aAAa,KAAK,aAAa,uBAAuB;AAE3D,WAAK,kBAAkB,KAAK,aAAa,uBAAuB;AAChE,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,mBAAmB;AACxB,WAAK,aAAa;AAClB,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,eAAe;AACpB,WAAK,eAAe;AACpB,UAAI,KAAK,cAAc,YAAY,OAAO,KAAK,oBAAoB,MAAM,KAAK,sBAAsB,MAAM,KAAK,cAAc,MAAM,KAAK,oBAAoB,MAAM,KAAK,sBAAsB,IAAI;AAC/L,aAAK,eAAe;MACtB;AACA,UAAI,KAAK,cAAc,YAAY,OAAO,KAAK,oBAAoB,MAAM,KAAK,cAAc,YAAY,OAAO,KAAK,sBAAsB,MACxI,KAAK,cAAc,MAAM,KAAK,oBAAoB,MAAM,KAAK,cAAc,MAAM,KAAK,sBAAsB,IAAI;AAChH,aAAK,eAAe;MACtB;AAEA,UAAI,KAAK,YAAY,cAAc;AACjC,aAAK,sBAAsB;;AAE3B,aAAK,sBAAsB;AAC7B,WAAK,kBAAkB;AACvB,WAAK,cAAc,KAAK,gBAAgB,IAAI;IAC9C,OACK;AACH,WAAK,aAAa,KAAK,aAAa,uBAAuB;AAC3D,WAAK,eAAe;AACpB,WAAK,eAAe;AACpB,WAAK,kBAAkB,KAAK,aAAa,uBAAuB;AAChE,WAAK,sBAAsB;AAC3B,WAAK,kBAAkB;AACvB,WAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;AACzD,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,mBAAmB;AACxB,WAAK,aAAa;AAClB,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,eAAe;AACpB,WAAK,eAAe;IACtB;AAEA,SAAK,aAAa,KAAK,aAAa;MAClC,UAAU;MACV,UAAU;MACV,UAAU;KACX;EACH;EAEO,eAAY;AACjB,QAAI,KAAK,YAAY,oBAAoB,MAAM,KAAK,YAAY,sBAAsB,IAAI;AACxF,WAAK,mBAAkB;AACvB,WAAK,aAAa,KAAK,aAAa,uBAAuB;AAC3D,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,mBAAmB;IAC1B;EACF;EAEO,iBAAc;AACnB,QAAI,KAAK,YAAY,oBAAoB,MAAM,KAAK,YAAY,sBAAsB,IAAI;AACxF,WAAK,YAAY;AAEjB,WAAK,cAAc;AACnB,aAAO,KAAK,aAAa,KAAK,aAAa,uBAAuB;IACpE;EACF;EAEA,IAAI,IAAC;AACH,WAAO,KAAK,UAAU;EACxB;EAEA,YAAY,OAAO,IAAE;AACnB,QAAI,MAAM,QAAW;AACnB,WAAK,UAAU,CAAC;IAClB;AACA,QAAI,MAAM,QAAW;AACnB,WAAK,YAAY,CAAC;IACpB;EACF;EAEO,iBAAc;AACnB,QAAI,KAAK,YAAY,oBAAoB,MAAM,KAAK,UAAU,SAAS,iBAAiB,EAAE,SAAS,QAAQ,KAAK,YAAY,sBAAsB,MAAM,KAAK,UAAU,SAAS,eAAe,EAAE,SAAS,MAAM;AAC9M,UAAI,KAAK,YAAY,oBAAoB,MAAM,KAAK,UAAU,SAAS,iBAAiB,EAAE,SAAS,MAAM;AACvG,aAAK,cAAc;MACrB,OACK;AACH,aAAK,cAAc,KAAK,YAAY;MACtC;AACA,UAAI,KAAK,YAAY,sBAAsB,MAAM,KAAK,UAAU,SAAS,eAAe,EAAE,SAAS,MAAM;AACvG,aAAK,gBAAgB;MACvB,OAAO;AACL,aAAK,gBAAgB,KAAK,YAAY;MACxC;AACA,YAAM,WAAW;QACf,kBAAkB,KAAK;QACvB,kBAAkB,KAAK;QACvB,WAAW;QACX,UAAU;QACV,cAAc,aAAa;QAC3B,UAAU,KAAK,YAAY;;AAE7B,WAAK,cAAc,oBAAoB,QAAQ,EAAE,UAAU,MAAK;AAC9D,aAAK,YAAW;AAChB,aAAK,cAAc;AACnB,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,aAAK,YAAY;AACjB,aAAK,UAAU,IAAI,eAAe,EAAE,SAAS,KAAK;MACpD,CAAC;IACH;AACA,WAAO,KAAK,aAAa,KAAK,aAAa,uBAAuB;EACpE;EAEO,sBAAmB;AACxB,UAAM,kBAAkB;MACtB,kBAAkB,KAAK,mBAAmB,KAAK,iBAAiB,KAAK;MACrE,kBAAkB,KAAK,iBAAiB;MACxC,WAAW,KAAK,mBAAmB,KAAK,iBAAiB,YAAY,KAAK,iBAAiB;MAC3F,UAAU,KAAK,mBAAmB,KAAK,iBAAiB,WAAW,KAAK,iBAAiB;MACzF,cAAc,aAAa;MAC3B,UAAU,KAAK,YAAY;;AAI7B,SAAK,cAAc,oBAAoB,eAAe,EAAE,UAAU,UAAO;AACvE,UAAI,KAAK,cAAc,OAAO;AAC5B,aAAK,QAAQ,qFAAqF;MACpG,WAAW,KAAK,cAAc,OAAO;AACnC,aAAK,YAAW;AAChB,aAAK,SAAS;AACd,aAAK,mBAAmB;AACxB,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB,aAAK,mBAAmB;AACxB,aAAK,mBAAmB;MAC1B,OACK;AACH,aAAK,QAAQ,kBAAkB;MACjC;IAEF,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IACzC,CAAC;EAEJ;EAEO,UAAO;AACZ,QAAI,KAAK,YAAY,UAAU,SAAS;AACtC,WAAK,SAAS,mBAAmB;QAC/B,aAAa;QACb,WAAW,KAAK,YAAY,MAAM,YAAY,MAAM,KAAK,YAAY,MAAM;QAC3E,WAAW,KAAK,YAAY,MAAM;QAClC,eAAe,KAAK,YAAY,MAAM;QACtC,YAAY,KAAK,YAAY,MAAM;QACnC,aAAa,KAAK,YAAY,MAAM;QACpC,aAAa;OACd;AAED,WAAK,cAAc,cAAc,KAAK,YAAY,KAAK,EAAE,UAAU,EAAC,MAAK,MAAK;AAC5E,aAAK,eAAe,KAAK,YAAY,IAAI,YAAY,EAAE;AACvD,gBAAQ,IAAI,KAAK,cAAc,eAAe;AAC9C,aAAK,YAAW;AAChB,aAAK,aAAa,WAAU;AAC5B,YAAI,KAAK,YAAY,MAAM,YAAY;AACrC,eAAK,QAAQ,KAAK,aAAa,uBAAuB,uBAAuB;;AAE7E,eAAK,QAAQ,KAAK,aAAa,uBAAuB,sBAAsB;MAEhF,GAAG,OAAM,CAAC,UAAS;AAEjB,YAAI,SAAS,QAAQ,MAAM,MAAM,kBAAkB,yBAAyB;AAC1E,eAAK,YAAY,KAAK,aAAa,uBAAuB;QAC5D,WACS,SAAS,QAAQ,MAAM,MAAM,kBAAkB,sBAAsB;AAC5E,eAAK,YAAY,KAAK,aAAa,uBAAuB;QAC5D;AAEE,eAAK,YAAY,KAAK,aAAa,uBAAuB;MAC9D,EAAC,CAAC;IAEJ;EACF;EACO,gBAAa;AAClB,SAAK,aAAa,WAAU;AAC5B,SAAK,0BAA0B,QAAQ,kBAAkB,KAAK,aAAa,uBAAuB,sBAAsB,KAAK,aAAa,uBAAuB,KAAK,KAAK,aAAa,uBAAuB,EAAE,EAC9M,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,YAAY,SAAS,WAAW,EAAE,SAAS,IAAI;AACpD,aAAK,WAAW,KAAK,YAAY,KAAK;MACxC;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EAEvI;EAEO,qBAAqB,KAAU,SAAY;AAChD,UAAM,MAAM,QAAQ,WAAW,KAAK,aAAa,uBAAuB,8BAA8B,KAAK,aAAa,uBAAuB;AAE/I,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,uBAAuB,KAAK,KAAK,aAAa,uBAAuB,EAAE,EACtI,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,gBAAQ,WAAW,QAAQ,WAAW,cAAc,SAAS,cAAc;AAC3E,aAAK,WAAW,OAAO;MACzB,OACK;AACH,gBAAQ,WAAW,QAAQ,WAAW,CAAC,QAAQ;MACjD;IACF,CAAC,EACA,MAAM,MAAK;AACV,cAAQ,IAAI,yGAAyG;IACvH,CAAC;EACL;EAEO,WAAW,KAAG;AACnB,SAAK,cAAc,cAAc,GAAG,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AAC7D,UAAI,KAAK,kBAAkB;AACzB,aAAK,QAAQ,KAAK,aAAa,uBAAuB,sBAAsB;AAC9E,WAAK,YAAW;IAClB,GAAG,OAAM,MAAK;AACZ,WAAK,QAAQ,KAAK,aAAa,uBAAuB,KAAK;IAC7D,EAAC,CAAC;EACJ;EAEO,cAAc,KAAG;AACtB,QAAI,WAAW,IAAI;AACnB,YAAQ,IAAI,UAAU;MACpB,KAAK,cAAc;AACjB,mBAAW,KAAK,aAAa,uBAAuB;AACpD;MACF,KAAK,cAAc;AACjB,mBAAW,KAAK,aAAa,uBAAuB;AACpD;IACJ;AACA,WAAO;EACT;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,uBAAuB,IAAI,KAAK,aAAa,uBAAuB,QAAQ,MAAM,MAAM,KAAK;EAMjK;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,GAAG,MAAM;MACnB,gBAAgB,aAAa;MAC7B,gBAAgB,SAAS,KAAK,IAAI,SAAS,eAAe,SAAS;MACnE,SAAS,CAAC,SAAS,OAAO,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,GAAG,WAAW,QAAQ,oDAAoD,CAAC,CAAC,CAAC;MACxK,aAAa,CAAC,SAAS,WAAW,WAAW,QAAQ,0CAA0C,CAAC;MAChG,YAAY,CAAC,SAAS,UAAU,WAAW,QAAQ,0CAA0C,CAAC;MAC9F,gBAAgB,SAAS;MACzB,WAAW,CAAC,SAAS,OAAO;MAC5B,cAAc,SAAS,aAAa,IAAI,SAAS,aAAa,YAAY;MAC1E,aAAa,SAAS;MACtB,WAAW,SAAS;MACpB,YAAY,SAAS;MACrB,aAAa,SAAS;MACtB,YAAY,SAAS;MACrB,oBAAoB,SAAS;MAC7B,aAAa,SAAS;MACtB,cAAc,KAAK,aAAa;KACjC;EACH;;;uCA3aW,oBAAiB,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAwCjB,oBAAY,CAAA;8BACZ,SAAO,CAAA;;;;;;;;;;AC9DpB,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmC,GAAA,KAAA;AAE/B,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkC,GAAA,WAAA,CAAA,EACC,GAAA,QAAA,CAAA;AACiB,QAAA,iBAAA,CAAA;AAAwD,QAAA,uBAAA;AAExG,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFnD,QAAA,uBAAA,EAEuD,EAE/C;AAEZ,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAqC,IAAA,OAAA,CAAA,EAClB,IAAA,OAAA,CAAA,EACkB,IAAA,YAAA,EAAA,EACT,IAAA,OAAA,EAAA,EAE4D,IAAA,OAAA,EAAA,EACS,IAAA,UAAA,EAAA;AAEnF,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,iBAAA,CAAkB;QAAA,CAAA;AAAG,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA,EAAS,EACpF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,OAAA,EAAA,EACF,IAAA,SAAA,EAAA;AAG3B,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAUxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAoBxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;;AAYxC,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,kCAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,SAAA,EAAA;AAMA,QAAA,oBAAA,IAAA,iBAAA,EAAA;AAGF,QAAA,uBAAA,EAAM,EACF,EACG,EACP,EACF,EACF,EACF;AAGR,QAAA,qBAAA,IAAA,2CAAA,IAAA,IAAA,eAAA,MAAA,GAAA,gCAAA;;;AAlHwD,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,uBAAA,cAAA;AAEW,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAcnB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,uBAAA,OAAA;AAKf,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAwEK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAER,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;AAMZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,YAAA,EAAA,EAAe,gBAAA,IAAA;;;;;;6EDzFjC,mBAAiB,EAAA,WAAA,qBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGRZ,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAwC,IAAA,iBAAA,CAAA;AAEpC,IAAA,uBAAA;;;;AAFoC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,WAAA;;;;;AAGxC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA4C,IAAA,iBAAA,CAAA;AAExC,IAAA,uBAAA;;;;AAFwC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,WAAA;;;;;AAM9C,IAAA,yBAAA,GAAA,UAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,eAAA,GAAA;;;ADZZ,IAAO,kBAAP,MAAO,iBAAe;EAO1B,YAAmB,QAAuB,eAAqC,cAAmC,aAAwB;AAAvH,SAAA,SAAA;AAAuB,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAL3G,SAAA,aAAa;AACb,SAAA,cAAc;AAMnB,QAAI,KAAK,OAAO,IAAI,QAAQ,OAAO,KAAK,IAAI;AAC1C,YAAM,SAAS,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,OAAO,EAAE,CAAC,EAAE,MAAM,OAAO;AACrE,UAAI,OAAO,CAAC,KAAK,UAAa,OAAO,CAAC,KAAK,QAAQ,OAAO,CAAC,KAAK;AAC9D,aAAK,aAAa,mBAAmB,SAAS,OAAO,CAAC,CAAC;AAEzD,WAAK,WAAW,OAAO,CAAC;AACxB,WAAK,eAAe,OAAO,CAAC,EAAE,MAAM,WAAW,EAAE,CAAC;AAClD,WAAK,gBAAe;IACtB,WACS,KAAK,OAAO,IAAI,QAAQ,SAAS,KAAK,IAAI;AACjD,UAAI,YAAY,CAAA;AAChB,YAAM,SAAS,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,QAAQ;AACpD,UAAI,OAAO,CAAC,KAAK,UAAa,OAAO,CAAC,KAAK,QAAQ,OAAO,CAAC,KAAK,IAAI;AAClE,aAAK,YAAY,KAAK,KAAK,MAAK,CAAE,EAAE,UAAU,UAAO;AACnD,sBAAY,KAAK,iBAAiB;AAClC,gBAAM,gBAAgB,OAAO,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC;AAC5C,gBAAM,gBAAgB,KAAK,kBAAkB,eAAe,SAAS;AACrE,eAAK,aAAa,mBAAmB,gBAAgB,cAAc,KAAK,KAAK,aAAa;AAC1F,eAAK,gBAAgB,KAAK;AAC1B,eAAK,OAAO,cAAc,SAAS;AACnC,eAAK,aAAa;QACpB,CAAC;MACH;IACF,OACK;AACH,WAAK,OAAO,cAAc,SAAS;AACnC,WAAK,aAAa;IAEpB;EACF;EAEO,kBAAkB,KAAK,WAAS;AACrC,WAAO,UAAU,KAAK,OAAK,EAAE,kBAAkB,KAAK,OAAK,EAAE,iBAAiB,GAAG,CAAC;EAClF;EAEO,gBAAgB,SAAS,MAAI;AAClC,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AACnG,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,cAAa;AAC/B,UAAI;AAAQ,aAAK,WAAU;IAG7B,GAAG,OAAM,MAAK;AACZ,WAAK,cAAc,KAAK,aAAa,aAAa;IACpD,EAAC,CAAC;EACJ;EAEO,aAAU;AACf,SAAK,cAAc,iBAAiB,KAAK,UAAU,KAAK,YAAY,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AAC7F,UAAI,KAAK,aAAa,MAAM;AAC1B,aAAK,aAAa;AAClB,aAAK,YAAY,SAAS,sBAAsB;AAChD,aAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,YAAI,KAAK,kBAAkB,mBAAmB;AAC5C,eAAK,cAAc,KAAK,aAAa,aAAa;QACpD,OACK;AACH,eAAK,OAAO,cAAc,SAAS;QACrC;MAEF,OACK;AACH,aAAK,cAAc,KAAK,aAAa,aAAa;AAClD,aAAK,aAAa;AAClB,aAAK,YAAY,SAAS,sBAAsB;AAChD,aAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;MACvD;IACF,GAAG,OAAM,MAAK;AACZ,WAAK,cAAc,KAAK,aAAa,aAAa;AAClD,WAAK,aAAa;AAClB,WAAK,YAAY,SAAS,sBAAsB;AAChD,WAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;IACvD,EAAC,CAAC;EACJ;;;uCAnFW,kBAAe,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,gCAAA,SAAA,OAAA,OAAA,MAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,aAAA,GAAA,CAAA,GAAA,oBAAA,MAAA,GAAA,CAAA,GAAA,eAAA,QAAA,MAAA,GAAA,CAAA,SAAA,UAAA,GAAA,MAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,aAAA,GAAA,CAAA,SAAA,6DAAA,qBAAA,IAAA,SAAA,QAAA,cAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,cAAA,UAAA,GAAA,OAAA,QAAA,UAAA,eAAA,aAAA,kBAAA,MAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACZ5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACD,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EACnD,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA,EACpB,GAAA,OAAA,CAAA;AAEnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,QAAA,CAAA,EAA6C,GAAA,OAAA,CAAA,EACR,IAAA,OAAA,EAAA;AAE/B,QAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,QAAA,EAAA,EAAwC,IAAA,kCAAA,GAAA,GAAA,QAAA,EAAA;AAM1C,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,UAAA,EAAA;AAIF,QAAA,uBAAA,EAAM,EACD,EACH,EACF,EACF,EACF,EACF;;;AAnBgC,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,UAAA;AAGG,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AAMgD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,UAAA;;;;;;6EDV9E,iBAAe,EAAA,WAAA,mBAAA,UAAA,qDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEHtB,IAAO,kBAAP,MAAO,iBAAe;EAM1B,YAAmB,cAAmC,aAAiC,QAAuB,OAAqB;AAAhH,SAAA,eAAA;AAAmC,SAAA,cAAA;AAAiC,SAAA,SAAA;AAAuB,SAAA,QAAA;AAHvG,SAAA,iBAAiB;AACjB,SAAA,WAAW;EAIlB;EAEA,WAAQ;AACN,SAAK,MAAM,YACR,UAAU,YAAS;AAClB,WAAK,WAAW,OAAO,QAAQ,KAAK;IACtC,CAAC;AACH,SAAK,sBAAsB,KAAK,YAAY,SAAS;AACrD,SAAK,gBAAe;EAEtB;EACO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,cAAa;AAC/B,WAAK,WAAU;IACjB,CAAC;EACH;EAEO,aAAU;AAEf,QAAI,KAAK,OAAO,IAAI,QAAQ,SAAS,MAAM,IAAI;AAC7C,WAAK,iBAAiB,QAAQ,KAAK,aAAa,aAAa,cAAc;IAC7E;AACA,QAAI,KAAK,OAAO,IAAI,QAAQ,eAAe,MAAM,IAAI;AACnD,WAAK,iBAAiB,KAAK,aAAa,aAAa;AACrD,eAAS,eAAe,iBAAiB,EAAE,MAAM,QAAQ;IAC3D;AACA,QAAI,KAAK,OAAO,IAAI,QAAQ,kBAAkB,MAAM,IAAI;AACtD,WAAK,iBAAiB,KAAK,aAAa,aAAa;AACrD,eAAS,eAAe,iBAAiB,EAAE,MAAM,QAAQ;AACzD,eAAS,eAAe,iBAAiB,EAAE,MAAM,UAAU;AAC3D,eAAS,eAAe,iBAAiB,EAAE,MAAM,WAAW;IAC9D;EACF;EAEO,YAAS;AACd,SAAK,OAAO,cAAc,MAAM,KAAK,QAAQ;EAC/C;;;uCA9CW,kBAAe,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,MAAA,UAAA,sBAAA,0BAAA,eAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,sBAAA,QAAA,aAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,MAAA,mBAAA,GAAA,UAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,YAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,OAAA,sCAAA,OAAA,SAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,YAAA,GAAA,CAAA,OAAA,uCAAA,OAAA,UAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACT5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuF,GAAA,OAAA,CAAA,EACnE,GAAA,OAAA,CAAA,EACO,GAAA,OAAA,CAAA,EAC0D,GAAA,OAAA,CAAA;AAE3E,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA;AAAoB,QAAA,oBAAA,GAAA,aAAA;AAA2B,QAAA,uBAAA,EAAM;AAGvD,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmC,GAAA,OAAA,CAAA;AAE/B,QAAA,oBAAA,IAAA,OAAA,CAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsD,IAAA,QAAA,EAAA;AAC9C,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,UAAA;QAAW,CAAA;AACxB,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,MAAA;AACE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH,EACF,EACF,EACF,EACF;;;AAf2C,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,gBAAA,wBAAA;;;;;;6EDHtC,iBAAe,EAAA,WAAA,mBAAA,UAAA,qDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGUhB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,SAAyB,KAAG,OAAA,OAAA,CAAS;IAAA,CAAA;AACxD,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;;AAAzC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AAmDT,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,EAAA;;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAC3E,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,UAAA,CAA2B;IAAA,CAAA;AAC/D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;;;;;AAHyB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,SAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAMJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,aAAA,EAAA;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsD,GAAA,QAAA,EAAA;AACvB,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;AAC7E,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;;AAHsB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,WAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAMJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,EAAA;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAErF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,SAAA;AAAsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAKrF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,SAAA,EAAA;;;;;AACF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAEnF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,OAAA;AAAoD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAMnF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,OAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAA0C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAEjF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,KAAA;AAAkD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,WAAA,GAAA;;;;;AAMjF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,KAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAE/E,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,GAAA;AAAgD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,YAAA,GAAA;;;;;AAM/E,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;;;;AAAjD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,cAAA,EAAA;;;;;AAGA,IAAA,yBAAA,GAAA,KAAA,EAAqC,GAAA,QAAA,EAAA;AACT,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA,EAAO;;;;AAAlC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,iBAAA,EAAA;;;;;AAH9B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;AAC9E,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJ+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,YAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,eAAA;;;;;AAMV,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAKE,IAAA,yBAAA,GAAA,KAAA;AAA2D,IAAA,iBAAA,CAAA;AAAmD,IAAA,uBAAA;;;;AAAnD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,cAAA;;;;;AAC3D,IAAA,yBAAA,GAAA,KAAA;AAA0D,IAAA,iBAAA,CAAA;AAA2D,IAAA,uBAAA;;;;AAA3D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,sBAAA;;;;;AAH9D,IAAA,yBAAA,GAAA,SAAA,EAAA,EAA8D,GAAA,IAAA;AAE1D,IAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,OAAA,EAAA,EAA2D,GAAA,8CAAA,GAAA,GAAA,OAAA,EAAA;AAE7D,IAAA,uBAAA,EAAK;;;;AAFG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,kBAAA,OAAA,iBAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,kBAAA,OAAA,iBAAA,IAAA;;;ADvHxB,IAAO,uBAAP,MAAO,sBAAoB;EAuB/B,YACS,eACA,eACA,QACA,gBACA,iBACA,cACA,mBACA,2BACA,aACC,OACA,cAAgCC,WAAoC,KAAa;AAVlF,SAAA,gBAAA;AACA,SAAA,gBAAA;AACA,SAAA,SAAA;AACA,SAAA,iBAAA;AACA,SAAA,kBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACA,SAAA,eAAA;AAAgC,SAAA,WAAAA;AAAoC,SAAA,MAAA;AAhC9E,SAAA,eAAgB,aAAa,gBAAgB,UAAa,aAAa,gBAAgB,QAAQ,aAAa,gBAAgB,KAAK,aAAa,eAAe;AAC7J,SAAA,mBAAmB,CAAC,aAAa,eAAe,aAAa,eAAe,aAAa,cAAc,cAAc;AACrH,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AAKpB,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,MAAc,KAAK,QAAQ,KAAK;AAChC,SAAA,mBAA2B;AAInB,SAAA,eAA8B,IAAI,QAAO;AAmB/C,SAAK,gBAAgB,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACvE,SAAK,cAAc,KAAK,cAAc;AAEtC,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AAE/E,SAAK,SAAS,IAAI,WAAU;AAC5B,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAE7E,SAAK,OAAO,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAC9E,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,SAAK,YAAY,UAAU,QAAQ,gBAAgB,KAAK;AACxD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,qBAAoB;IACxC;AACA,QAAI,CAAC,KAAK,YAAY,UAAU,YAAY,eAAe;AACzD,WAAK,kBAAkB,SAAS,KAAK;IACvC;EACF;EAEA,WAAQ;AACN,UAAM,kBAAkB,aAAa,QAAQ,mBAAmB;AAChE,QAAI,iBAAgB;AAClB,WAAK,UAAU,gBAAgB,MAAM,UAAU,EAAE,CAAC,KAAK,SAAY,gBAAgB,MAAM,UAAU,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACxH,WAAK,UAAU,MAAI,KAAK,QAAQ,MAAM,GAAG,EAAE,CAAC,IAAE;IAChD;AACA,SAAK,oBAAmB;AACxB,QAAI,aAAa,QAAQ,aAAa,KAAK,QAAQ;AACjD,WAAK,aAAa,KAAK,uBAAuB;QAC5C,UAAU;QACV,UAAU;QACV,YAAY;OACb;IACH;AACA,QAAI,KAAK,YAAY,UAAU,YAAY,eAAe;AACxD,UAAI,KAAK,YAAY,UAAU,YAAY,cAAc,YAAY,QAAQ,KAAK,YAAY,UAAU,YAAY,cAAc,YAAY,IAAI;AAChJ,aAAK,kBAAkB,WAAW,IAAI,KAAK,KAAK,YAAY,UAAU,YAAY,cAAc,QAAQ;AACxG,aAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,UAAU,YAAY,cAAc;MAChG;AAEA,UAAI,KAAK,YAAY,UAAU,YAAY,cAAc,UAAU,QAAQ,KAAK,YAAY,UAAU,YAAY,cAAc,UAAU,IAAI;AAC5I,aAAK,kBAAkB,SAAS,IAAI,KAAK,KAAK,YAAY,UAAU,YAAY,cAAc,MAAM;AACpG,aAAK,kBAAkB,OAAO,SAAS,KAAK,YAAY,UAAU,YAAY,cAAc;MAC9F;IACF;AACA,QAAI,KAAK,YAAY,UAAU,YAAY,eAAe;AAExD,WAAK,kBAAkB,SAAS,KAAK,YAAY,UAAU,YAAY;AACvE,WAAK,kBAAkB,OAAO,SAAS;IACzC,OAAO;AACL,WAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,WAAK,kBAAkB,OAAO,eAAe,KAAK;IACpD;AACA,SAAK,eAAe,KAAK,kBAAkB,MAAM;AACjD,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KAAK,OAAK,EAAE,aAAa,UAAU;AACtF,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,oBAAoB,YAAY,EAAE;EACxF;;EAIA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;AAC9B,SAAK,YAAY,UAAU,YAAY,gBAAgB,KAAK,kBAAkB;AAC9E,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,kBAAkB,SAAS;AAChC,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,aAAa,KAAI;AACtB,QAAI,KAAK,kBAAkB;AACzB,eAAS,OAAM;IACjB;EACF;EAGA,aAAU;AACR,QAAI,KAAK,kBAAkB;AACzB,cAAQ,IAAI,qBAAqB;AACjC,cAAQ,UAAU,MAAM,EAAE;AAC1B,WAAK,gBAAgB,SAAS,GAAG;IACnC;EACF;EAEO,mBAAmB,SAAO;AAC/B,SAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,eAAe,iBAAiB,SAAS,KAAK,kBAAkB,QAAQ,KAAK,kBAAkB,OAAO,QAAQ,MAAM,IAAI;EAC/H;EAEO,WAAW,GAAC;AACjB,SAAK,YAAY,UAAU,YAAY,YAAY;AACnD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,YAAY,IAAI;EACvB;EAEO,mBAAgB;AACrB,SAAK,YAAY,UAAU,YAAY,gBAAgB;AACvD,SAAK,YAAY,UAAU,YAAY,cAAc,CAAA;AACrD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;EACvD;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;IACxC,CAAC;EACH;EAEO,WAAW,GAAC;AACjB,SAAK,eAAe,CAAC;EACvB;EAEO,eAAe,OAAK;AAEzB,SAAK,gBAAgB,KAAK,kBAAkB;AAC5C,SAAK,cAAc,KAAK,kBAAkB;AAE1C,UAAM,WAAW,KAAK,cAAc;AACpC,UAAM,aAAa,KAAK,aAAa;AACrC,UAAM,mBAAoB,KAAK,oBAAoB,KAAK,mBAAoB,OAAO;AAEnF,QAAI,MAAM,eAAe;AACvB,WAAK,kBAAkB,OAAO,SAAS,MAAM;IAC/C;AAEA,QAAI,MAAM,UAAU,GAAG;AACrB,WAAK,aAAa,CAAA;IACpB;AAEA,SAAK,YAAY,UAAU,YAAY,gBAAgB;AACvD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,SAAK,cAAc,eAAe,KAAK,EAAE,UAAU;MACjD,MAAM,CAAC,SAAQ;AAEb,YAAI,MAAM,UAAU,GAAG;AACrB,cAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,aAAa,YAAY,SAAS,GAAG;AACrF,iBAAK,aAAa,KAAK,aAAa;UACtC,OAAO;AACL,iBAAK,aAAa,CAAA;UACpB;QACF,OAAO;AACL,cAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,aAAa,YAAY,SAAS,GAAG;AACrF,iBAAK,aAAa,KAAK,WAAW,OAAO,KAAK,aAAa,WAAW;UACxE;QACF;AAEA,YAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,WAAW,SAAS,IAAI;AACxE,gBAAM,UAAU;AAChB,eAAK,kBAAkB,OAAO,SAAS,MAAM;AAC7C,eAAK,eAAe,KAAK;QAC3B;AAEA,YAAI,KAAK,WAAW,SAAS,GAAG;AAE9B,cAAI,KAAK,WAAW,SAAS,KAAK,KAAK,YAAY;AACjD,iBAAK,aAAa;UACpB,OAAO;AACL,iBAAK,YAAY,IAAI;UACvB;AAEA,eAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,eAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,eAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,eAAK,WAAW,OAAO,KAAK;QAE9B,OAAO;AACL,eAAK,WAAW,OAAO,CAAA;QACzB;MACF;MAAG,OAAO,MAAK;AACb,aAAK,WAAW,OAAO,CAAA;MACzB;KACD;EACH;EAEO,cAAc,GAAC;AACpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAGhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO;AAC9B,WAAK,kBAAkB,OAAO,WAAW;AACzC,WAAK,eAAe,KAAK,kBAAkB,MAAM;IACnD;EACF;EAEO,YAAY,QAAM;AACvB,UAAM,YAAY,SAAS,eAAe,wBAAwB;AAClE,cAAU,YAAY;EACxB;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,cAAc;AAC5C,SAAK,kBAAkB,OAAO,YAAY;AAC1C,SAAK,kBAAkB,OAAO,YAAY;AAC1C,SAAK,kBAAkB,OAAO,WAAW;AACzC,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,mBAAmB;AACjD,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,OAAO,mBAAmB;AACjD,SAAK,kBAAkB,OAAO,YAAY;AAC1C,SAAK,kBAAkB,OAAO,QAAQ;AACtC,SAAK,kBAAkB,OAAO,WAAW;AACzC,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS;EAClC;EAEA,sBAAsB,GAAG,KAAG;AAC1B,QAAI,KAAK,cAAc,yBAAyB,uBAAuB,gBAAgB;AACrF,WAAK,mBAAmB,EAAE,SAAS,GAAG;IACxC,OAAO;AACL,YAAM,MAAM,KAAK,aAAa,oBAAoB;AAClD,WAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,mBAAmB,KAAK,aAAa,oBAAoB,MAAM,EAClJ,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,YAAY,SAAS,MAAM,+BAA+B;AAC/D,eAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AACrD,eAAK,OAAO,cAAc,eAAe;QAC3C,OAAO;AACL,eAAK,WAAW,KAAK,QAAQ,UAAO;AAClC,gBAAI,KAAK,aAAa,IAAI,WAAW;AACnC,mBAAK,oBAAoB,CAAC,KAAK;YACjC;AACA,mBAAO;UACT,CAAC;QACH;MACF,CAAC;IACL;EACF;EAEO,mBAAmB,aAAa,KAAG;AACxC,UAAM,SAAS;MACb,UAAU,KAAK,cAAc;MAC7B,cAAc,KAAK,cAAc;MACjC,WAAW,IAAI;MACf,cAAc,IAAI;MAClB,UAAU;;AAEZ,SAAK,eAAe,mBAAmB,MAAM,EAAE,UAAU;MACvD,MAAM,MAAK;AACT,aAAK,eAAe,KAAK,kBAAkB,MAAM;MACnD;MAAG,OAAO,MAAK;AACb,aAAK,cAAc,sBAAqB;MAC1C;KACD;EACH;EAEA,sBAAmB;AACjB,SAAK,cAAc,sBAAsB,UAAU,QAAK;AACtD,UAAI,IAAI;AACN,aAAK,OAAO,MAAK;MACnB;IACF,CAAC;EACH;;;uCA7SW,uBAAoB,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAMpB,oBAAY,CAAA;8BACZ,SAAO,CAAA;8BAQP,WAAS,CAAA;;;;;;;;;;AAfT,QAAA,qBAAA,YAAA,SAAA,iDAAA,QAAA;AAAA,iBAAA,IAAA,WAAA,MAAA;QAAkB,GAAA,OAAA,yBAAA;;;;;AC3B/B,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA,EACrC,GAAA,cAAA,CAAA;AACS,QAAA,qBAAA,eAAA,SAAA,gEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,eAAA,MAAA,CAAsB;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAa;AAElE,QAAA,yBAAA,GAAA,wBAAA,CAAA,EAAoE,GAAA,cAAA,GAAA,CAAA,EAC6B,GAAA,kBAAA,CAAA;AAC7E,QAAA,qBAAA,eAAA,SAAA,oEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,WAAA,MAAA,CAAkB;QAAA,CAAA,EAAC,oBAAA,SAAA,2EAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAqB,IAAA,iBAAA,CAAkB;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAiB;AAG9G,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgE,IAAA,OAAA,CAAA,EAEtC,IAAA,WAAA,CAAA;AAGpB,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,gBAAA,EAAA;AAIA,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,QAAA,EAAA;AACuB,QAAA,iBAAA,EAAA;AAAiD,QAAA,uBAAA,EAAO;AACnF,QAAA,yBAAA,IAAA,OAAA,EAAA;AAEoB,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFrE,QAAA,uBAAA,EAEyE;AAI3E,QAAA,yBAAA,IAAA,YAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACT,IAAA,OAAA,EAAA;AAGd,QAAA,oBAAA,IAAA,MAAA;AACA,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,QAAA,EAAA;AAA0B,QAAA,iBAAA,EAAA;AAAiD,QAAA,uBAAA,EAAO;AAEtF,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAqB,IAAA,QAAA,EAAA,EAC8B,IAAA,UAAA,EAAA;AACA,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,YAAA,sBAAA,CAAA;AAAA,iBAAA,sBAAS,UAAA,OAAA,CAAe;QAAA,CAAA;AACrE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AAE0B,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAF3E,QAAA,uBAAA,EAE+E,EAC1E,EACF;AAGT,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA,EACU,IAAA,MAAA;AAGvC,QAAA,iBAAA,EAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,iBAAA,EAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACF;AAET,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,OAAA,EAAA;AAE6D,QAAA,qBAAA,UAAA,SAAA,qDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,MAAA,CAAqB;QAAA,CAAA;AAG7F,QAAA,yBAAA,IAAA,SAAA,EAAA;AACE,QAAA,qBAAA,iBAAA,SAAA,8DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,WAAA,MAAA,CAAkB;QAAA,CAAA;AACnC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAUxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAUxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAUxD,QAAA,qBAAA,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,SAAA,EAAA;AAMF,QAAA,uBAAA,EAAM,EACF,EACF,EACF,EACG;AAEb,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,kBAAA,CAAA;AACb,QAAA,qBAAA,eAAA,SAAA,qEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,WAAA,MAAA,CAAkB;QAAA,CAAA,EAAC,oBAAA,SAAA,4EAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAqB,IAAA,iBAAA,CAAkB;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAiB,EACxG,EAEF,EAEe,EAEnB;;;AAhJmB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA;AAKY,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,YAAA;AAEzB,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAUgC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,YAAA;AAQxB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAUF,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,oBAAA,GAAA;AAEE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,sBAAA,IAAA,aAAA,GAAA,GAAA;AAEF,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,IAAA,GAAA;AAEE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,sBAAA,IAAA,WAAA,GAAA,GAAA;AAS4C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAsExB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;;;;;;6EDpHjC,sBAAoB,EAAA,WAAA,wBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE3B3B,IAAO,cAAP,MAAkB;EAAxB,cAAA;AACW,SAAA,KAAK;AAaL,SAAA,YAAY;EACvB;;AAEM,IAAO,cAAP,MAAkB;;AAKlB,IAAO,kBAAP,MAAsB;;AAYtB,IAAO,gBAAP,MAAoB;;;;ACM1B,4BAAyB;AAIzB,IAAAC,iBAAmB;;;AE3BnB,IAAM,cAAN,MAAkB;AAAA,EAChB,YAAY,MAAM,WAAW;AAC3B,SAAK,YAAY;AACjB,UAAM,WAAW,KAAK,YAAY,KAAK,UAAU,cAAc,UAAU;AACzE,UAAM,SAAS,SAAS;AAIxB,WAAO,WAAW;AAClB,WAAO,MAAM,OAAO,UAAU;AAC9B,WAAO,OAAO;AACd,aAAS,aAAa,eAAe,MAAM;AAC3C,aAAS,QAAQ;AAEjB,aAAS,WAAW;AAGpB,KAAC,KAAK,UAAU,qBAAqB,KAAK,UAAU,MAAM,YAAY,QAAQ;AAAA,EAChF;AAAA;AAAA,EAEA,OAAO;AACL,UAAM,WAAW,KAAK;AACtB,QAAI,aAAa;AACjB,QAAI;AAEF,UAAI,UAAU;AACZ,cAAM,eAAe,KAAK,UAAU;AACpC,iBAAS,OAAO;AAChB,iBAAS,kBAAkB,GAAG,SAAS,MAAM,MAAM;AACnD,qBAAa,KAAK,UAAU,YAAY,MAAM;AAC9C,YAAI,cAAc;AAChB,uBAAa,MAAM;AAAA,QACrB;AAAA,MACF;AAAA,IACF,QAAQ;AAAA,IAGR;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,UAAU;AACR,UAAM,WAAW,KAAK;AACtB,QAAI,UAAU;AACZ,eAAS,OAAO;AAChB,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AACF;AAKA,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,YAAYC,WAAU;AACpB,SAAK,YAAYA;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,KAAK,MAAM;AACT,UAAM,cAAc,KAAK,UAAU,IAAI;AACvC,UAAM,aAAa,YAAY,KAAK;AACpC,gBAAY,QAAQ;AACpB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,UAAU,MAAM;AACd,WAAO,IAAI,YAAY,MAAM,KAAK,SAAS;AAAA,EAC7C;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,kBAAkB,mBAAmB;AACxD,aAAO,KAAK,qBAAqB,YAAc,mBAAS,QAAQ,CAAC;AAAA,IACnE;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,aAAuB,gBAAG,6BAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,WAAU;AAAA,MACnB,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,QACN,MAAM,CAAC,QAAQ;AAAA,MACjB,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAAG,IAAI;AACT,GAAG;AAGH,IAAM,+BAA+B,IAAI,eAAe,8BAA8B;AAKtF,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,YAAY,YAAY,SAAS,QAAQ;AACvC,SAAK,aAAa;AAClB,SAAK,UAAU;AAEf,SAAK,OAAO;AAKZ,SAAK,WAAW;AAKhB,SAAK,SAAS,IAAI,aAAa;AAE/B,SAAK,WAAW,oBAAI,IAAI;AACxB,QAAI,UAAU,OAAO,YAAY,MAAM;AACrC,WAAK,WAAW,OAAO;AAAA,IACzB;AAAA,EACF;AAAA;AAAA,EAEA,KAAK,WAAW,KAAK,UAAU;AAC7B,QAAI,WAAW,GAAG;AAChB,UAAI,oBAAoB;AACxB,YAAM,UAAU,KAAK,WAAW,UAAU,KAAK,IAAI;AACnD,WAAK,SAAS,IAAI,OAAO;AACzB,YAAM,UAAU,MAAM;AACpB,cAAM,aAAa,QAAQ,KAAK;AAChC,YAAI,CAAC,cAAc,EAAE,qBAAqB,CAAC,KAAK,YAAY;AAE1D,eAAK,kBAAkB,KAAK,QAAQ,kBAAkB,MAAM,WAAW,SAAS,CAAC,CAAC;AAAA,QACpF,OAAO;AACL,eAAK,kBAAkB;AACvB,eAAK,SAAS,OAAO,OAAO;AAC5B,kBAAQ,QAAQ;AAChB,eAAK,OAAO,KAAK,UAAU;AAAA,QAC7B;AAAA,MACF;AACA,cAAQ;AAAA,IACV,OAAO;AACL,WAAK,OAAO,KAAK,KAAK,WAAW,KAAK,KAAK,IAAI,CAAC;AAAA,IAClD;AAAA,EACF;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,iBAAiB;AACxB,mBAAa,KAAK,eAAe;AAAA,IACnC;AACA,SAAK,SAAS,QAAQ,UAAQ,KAAK,QAAQ,CAAC;AAC5C,SAAK,SAAS,MAAM;AACpB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO;AACL,SAAK,YAAO,SAAS,2BAA2B,mBAAmB;AACjE,aAAO,KAAK,qBAAqB,qBAAuB,4BAAkB,SAAS,GAAM,4BAAqB,MAAM,GAAM,4BAAkB,8BAA8B,CAAC,CAAC;AAAA,IAC9K;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,4BAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,CAAC;AAAA,MAC1C,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,YAAI,KAAK,GAAG;AACV,UAAG,qBAAW,SAAS,SAAS,8CAA8C;AAC5E,mBAAO,IAAI,KAAK;AAAA,UAClB,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,MAAM,CAAC,GAAG,sBAAsB,MAAM;AAAA,QACtC,UAAU,CAAC,GAAG,8BAA8B,UAAU;AAAA,MACxD;AAAA,MACA,SAAS;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAS;AAAA,IACX,GAAG;AAAA,MACD,MAAM;AAAA,MACN,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,MACR,GAAG;AAAA,QACD,MAAM;AAAA,QACN,MAAM,CAAC,4BAA4B;AAAA,MACrC,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC7B,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,4BAA4B;AAAA,IACrC,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,0BAA0B;AAAA,IACnC,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,OAAO;AACL,SAAK,YAAO,SAAS,wBAAwB,mBAAmB;AAC9D,aAAO,KAAK,qBAAqB,kBAAiB;AAAA,IACpD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB;AAAA,MAC7C,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,YAAsB,gBAAG,2BAAiB,CAAC,CAAC;AAAA,EACnD;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,cAAc,CAAC,kBAAkB;AAAA,MACjC,SAAS,CAAC,kBAAkB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;;;;;;;;;AE/Pe,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFY,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,QAAA,cAAA;AACV,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,gBAAA,GAAA;;;;;AAUR,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,mBAAA,GAAA;;;;;;AA0BR,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAiD,GAAA,UAAA,EAAA;AAE8C,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,aAAA,sBAAA,CAAA;AAAA,aAAA,sBAAA,OAAA,eAAuB,OAAA,UAAU,SAAS,IAAE,OAAA,WAAA,UAAA,CAAmB;IAAA,CAAA;AAC1J,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AADP,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,gBAAA,GAAA;;;;;AAOF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,MAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,gBAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,eAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAC1C,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,GAAA;;;;;AAKJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,QAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;AAClC,IAAA,iBAAA,CAAA;AACH,IAAA,uBAAA;;;;AADG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,QAAA,GAAA;;;;;AAYH,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,aAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,cAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,QAAA,GAAA;;;;;;AAcA,IAAA,kCAAA,CAAA;AACG,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,8EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAU,cAAY,WAAA,CAAS;IAAA,CAAA;AACzE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA;;;;;AADgD,IAAA,oBAAA,CAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,uBAAA,MAAA;;;;;AAdrD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA0D,GAAA,QAAA,EAAA;AAC3B,IAAA,iBAAA,CAAA;AAAoC,IAAA,uBAAA;AAWjE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,gBAAA,EAAA;AAKF,IAAA,uBAAA;;;;;AAhB+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,MAAA;AAWd,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,UAAA,WAAA;;;;;AAQnB,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAEF,IAAA,yBAAA,GAAA,SAAA,EAAA,EAA+F,GAAA,IAAA,EACzF,GAAA,IAAA;AAEA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAK,EACF;;;;AAFD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,gBAAA,GAAA;;;;;AAyBJ,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA+C,IAAA,iBAAA,CAAA;AAAsC,IAAA,uBAAA;;;;AAAtC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,QAAA;;;;;;AAXrD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,KAAA,EAAA,EACC,GAAA,QAAA;AAAQ,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA,EAAS;AACpF,IAAA,yBAAA,GAAA,WAAA,EAAA,EAAuD,GAAA,GAAA;AACjD,IAAA,iBAAA,CAAA;AAA0C,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA,EAAO;AACzE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqB,IAAA,GAAA,EAChB,IAAA,UAAA,MAAA,CAAA;AACgB,IAAA,iBAAA,EAAA;AAAW,IAAA,uBAAA;AAC5B,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,WAAA,CAAwB;IAAA,CAAA;AAC5D,IAAA,oBAAA,IAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAI;AAEN,IAAA,qBAAA,IAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAsC,IAAA,yBAAA,IAAA,QAAA;AAAQ,IAAA,iBAAA,EAAA;AAAW,IAAA,uBAAA;AAAU,IAAA,iBAAA,EAAA;AAAuC,IAAA,uBAAA,EAAI,EACzG;AAEZ,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2D,IAAA,UAAA,EAAA;AAEvD,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,MAAY,YAAY,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAA6C,IAAA,uBAAA,EAAS;;;;AAjB7D,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,cAAA;AAEzB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,aAAA,GAAA;AAGiB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA;AAKZ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAEN,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,aAAA,SAAA,GAAA;AAA8C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA;AAAqB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,WAAA,EAAA;AAKlC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;;;;;;AAOxC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,KAAA,EAAA,EACC,GAAA,QAAA;AAAS,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA,EAAS;AACjF,IAAA,yBAAA,GAAA,WAAA,EAAA,EAAmC,GAAA,KAAA;AAE/B,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,QAAA;AACrB,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;AACtD,IAAA,oBAAA,IAAA,IAAA;AAAK,IAAA,iBAAA,EAAA;AACP,IAAA,uBAAA,EAAM,EACE;AAEZ,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2D,IAAA,UAAA,EAAA;AACQ,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,YAAA,YAAA,wBAAA,IAAA,EAAA;AAAA,aAAA,sBAAS,UAAA,MAAY,YAAY,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAA6C,IAAA,uBAAA,EAAS;;;;AAZ3H,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,UAAA;AAMnB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,gBAAA,GAAA;AACJ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,YAAA,GAAA;AAK4F,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;;;;;;AAOvG,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsC,GAAA,MAAA,EAAA;AAElC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AACvF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,MAAA;AAAO,IAAA,uBAAA,EAAO,EACjD;AAGX,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkC,GAAA,OAAA,EAAA,EACgB,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA,EAAI;AAEjG,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2C,IAAA,OAAA,EAAA,EACO,IAAA,OAAA,EAAA;AACrB,IAAA,iBAAA,EAAA;AAAoC,IAAA,uBAAA;AAC7D,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAuB,IAAA,iBAAA,EAAA;AAA+B,IAAA,uBAAA,EAAM;AAE9D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2C,IAAA,OAAA,EAAA;AAChB,IAAA,iBAAA,EAAA;AAAoC,IAAA,uBAAA;AAC7D,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAuB,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA,EAAM,EAChD,EACF;AAGZ,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,UAAA,EAAA;AACmB,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAChH,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,aAAA,EAAA,CAA2B;IAAA,CAAA;AAClH,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAS;;;;AA5BP,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,aAAA,YAAA,GAAA;AAQiD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,gBAAA;AAIlB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,MAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,cAAA;AAGE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,aAAA,MAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,MAAA;AAO7B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;ADjNA,IAAO,0BAAP,MAAO,yBAAuB;EA+BlC,YACS,aACA,cACA,aACC,cACA,WACA,UACD,2BAA8D,IAA+B,eAA4B;AANzH,SAAA,cAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACC,SAAA,eAAA;AACA,SAAA,YAAA;AACA,SAAA,WAAA;AACD,SAAA,4BAAA;AAA8D,SAAA,KAAA;AAA+B,SAAA,gBAAA;AApCtG,SAAA,mBAA6B;MAC3B;MACA;MACA;MACA;MACA;;AAGF,SAAA,iBAAiB,IAAI,mBAAkB;AAChC,SAAA,kBAAuB;MAC5B,aAAa;MACb,UAAU;MACV,UAAU;;AASL,SAAA,cAAuB;AAE9B,SAAA,eAAwB;AAChB,SAAA,cAAc;AAcpB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,mBAAkB;AACpC,WAAK,aAAa,wBAAuB;IAC3C;EAEF;EAEA,WAAQ;AACN,SAAK,cAAa;AAClB,SAAK,sBAAqB;AAC1B,SAAK,WAAW,KAAK,oBAAoB,IAAI,YAAW,CAAE;EAC5D;EAEA,kBAAe;AACb,eAAW,MAAK;AACd,WAAK,cAAc,iBAAiB,UAAU,CAAC,SAAQ;AACrD,YAAI,MAAM;AACR,eAAK,IAAI,KAAI;AACb,eAAK,sBAAqB;AAC1B,mBAAS,eAAe,YAAY,EAAE,eAAe,EAAE,UAAU,UAAU,OAAO,QAAO,CAAE;QAC7F;MACF,CAAC;IACH,GAAG,GAAI;EAET;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,mBAAkB;IACtC,CAAC;EACH;EAEA,oBAAoB,MAAS;AAC3B,WAAO,KAAK,GAAG,MAAM;MACnB,gBAAgB,CAAC,KAAK,gBAAgB,WAAW,QAAQ;MACzD,eAAe,CAAC,KAAK,eAAe,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;KACpH;EACH;EACA,aAAU;AACR,SAAK,WAAW,IAAI,UAAU;MAC5B,aAAa,IAAI,YAAY,IAAI,WAAW,QAAQ,CAAC,WAAW,QAAQ,CAAC,CAAC;MAC1E,UAAU,IAAI,YAAY,IAAI,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;KAC9G;EACH;EACO,WAAW,QAAM;AACtB,SAAK,mBAAmB,UAAS;AACjC,WAAO,KAAI;AACX,SAAK,WAAW,KAAK,oBAAoB,IAAI,YAAW,CAAE;AAC1D,YAAQ,IAAI,KAAK,gBAAgB,IAAI;EACvC;;EAGA,gBAAa;AACX,SAAK,YAAY,YAAW,EAAG,UAAU,SAAM;AAC7C,WAAK,aAAa,IAAI;IACxB,CAAC;EACH;EAEA,WAAQ;AAGN,SAAK,YAAY,QAAQ,KAAK,SAAS,KAAK,EAAE,UAAU,SAAM;AAC5D;AACA,UAAI,IAAI,cAAc,OAAO,IAAI,kBAAkB,WAAW;AAC5D,YAAG,IAAI,aAAa,UAAU,MAAK;AACnC,eAAK,UAAU,IAAI,aAAa;AAChC,eAAK,UAAU,KAAK,cAAc;AAClC,eAAK,SAAS,MAAK;AACnB,eAAK,UAAU,cAAc;AAC7B,eAAK,QAAQ,MAAK;AAClB,eAAK,sBAAqB;QAC1B,WAAS,KAAK,cAAc,UAAU,UAAS;AAC7C,eAAK,aAAa,KAAK,cAAc,OAAO;QAC9C;MACF,OAAO;AACL,aAAK,UAAU,cAAc;AAC7B,aAAK,sBAAqB;MAC5B;IACF,GAAG,SAAM;AACP,WAAK,UAAU,cAAc;AAC7B,cAAQ,IAAI,GAAG;IACjB,CAAC;EACH;EAEA,UAAU,OAAO,WAAU;AACzB,QAAI,SAAS,cAAc;AACzB,YAAMC,SAAQ,KAAK,aAAa,KAAK,KAAK,iBAAiB,KAAK,eAAe;AAC/E,WAAK,eAAe;IACtB,WAAW,SAAS,gBAAgB;AAClC,WAAK,aAAa,KAAK,KAAK,cAAc,KAAK,eAAe;IAChE,WAAW,SAAS,WAAW;AAC7B,WAAK,aAAa,KAAK,aAAa,aAAa,WAAW;IAC9D,WAAW,SAAS,gBAAgB;AAClC,WAAK,aAAa,KAAK,KAAK,cAAc,KAAK,eAAe;IAChE;EAUF;EAEA,gBAAgB,YAAe;AAC7B,UAAM,OAAO,WAAW,UAAU,KAAI;AACtC,UAAM,WAAW,KAAK,UAAU,KAAK,IAAI;AACzC,QAAI,UAAU;AACZ,WAAK,cAAc;AACnB,iBAAW,MAAO,KAAK,cAAc,OAAQ,GAAI;IACnD;EACF;;EAIA,wBAAqB;AACnB,QAAI,QAAQ,KAAK,YAAY,QAAQ,YAAY,cAAc,GAAG,YAAW;AAC7E,QAAI,MAAM,EAAE,cAAc,MAAK;AAC/B,SAAK,YAAY,kBAAkB,GAAG,EAAE,UAAU,UAAO;AACvD,UAAI,KAAK,kBAAkB,WAAW;AAEpC,aAAK,eAAe,KAAK,cAAc,KAAK,OAAK,CAAC,WAAW,QAAQ,EAAE,SAAS,GAAG,MAAM,CAAC;AAE1F,YAAI,aAAa,oBAAI,IAAG;AAExB,aAAK,aAAa,QAAQ,UAAO;AAC/B,cAAI,KAAK,WAAW,UAAU;AAC5B,uBAAW,IAAI,GAAG,KAAK,QAAQ,IAAI,KAAK,cAAc,EAAE;UAC1D;QACF,CAAC;AAED,aAAK,eAAe,KAAK,aAAa,IAAI,UAAO;AAC/C,gBAAM,MAAM,GAAG,KAAK,QAAQ,IAAI,KAAK,cAAc;AACnD,cAAI,WAAW,IAAI,GAAG,KAAK,KAAK,WAAW,UAAU;AACnD,mBAAO,iCAAK,OAAL,EAAW,QAAQ,UAAS;UACrC;AACA,iBAAO;QACT,CAAC;AAED,aAAK,iBAAiB,IAAI,mBAAwB,KAAK,YAAY;AACnE,aAAK,eAAe,YAAY,KAAK;MACvC;IACF,CAAC;EAEH;EAEA,WAAQ;AACN,UAAM,OAAO,SAAS,cAAc,GAAG;AACvC,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,MAAK;EACZ;;EAGA,WAAW,IAAE;AACX,SAAK,aAAa,WAAU;AAC5B,SAAK,YAAY,WAAW,EAAE,oBAAoB,GAAE,CAAE,EAAE,UAAU,SAAM;AACtE,UAAI,IAAI,kBAAkB,WAAW;AACnC,aAAK,aAAa,KAAK,aAAa,aAAa,gBAAgB;AACjE,aAAK,sBAAqB;MAC5B,OAAO;AACL,aAAK,aAAa,KAAK,aAAa,aAAa,UAAU;MAC7D;IACF,GAAG,WAAQ;AACT,WAAK,aAAa,KAAK,aAAa,aAAa,UAAU;IAC7D,CAAC;EACH;EAEA,aAAa,KAAG;AACd,SAAK,0BACF,QACC,IACA,KACA,KAAK,aAAa,oBAAoB,IACtC,KAAK,aAAa,oBAAoB,QACtC,MACA,MACA,KAAK,EAEN,KAAK,CAAC,cAAa;AAClB,WAAK,aAAa,WAAU;IAG9B,CAAC,EACA,MAAM,MAAK;AACV,cAAQ,IAAI,UAAU;IACxB,CAAC;EACL;EAEA,cAAW;AACT,SAAK,cAAc,iBAAiB,KAAK,KAAK;EAChD;;;uCA5OW,0BAAuB,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,WAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;8BAqBvB,oBAAY,CAAA;;;;;;;;;;;;;;;;ACzCzB,QAAA,yBAAA,GAAA,wBAAA,CAAA,EAAgH,GAAA,cAAA,GAAA,CAAA,EACjC,GAAA,YAAA,CAAA,EAC5B,GAAA,OAAA,EAAA,EAC1B,GAAA,OAAA,EAAA,EAC0C,GAAA,QAAA,EAAA;AACnC,QAAA,iBAAA,CAAA;AAA4C,QAAA,uBAAA;AAClE,QAAA,yBAAA,GAAA,MAAA,EAAM,GAAA,OAAA,EAAA;AACqE,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,aAAA,sBAAA,CAAA;AAAA,iBAAA,sBAAS,WAAA,MAAA,CAAe;QAAA,CAAA;AAAjG,QAAA,uBAAA,EACc,EACT;AAGT,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiB,IAAA,QAAA,IAAA,CAAA,EAEgE,IAAA,OAAA,EAAA,EAC1C,IAAA,kBAAA,EAAA,EACwD,IAAA,cAAA,EAAA;AAGrF,QAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,gBAAA,EAAA;AAKF,QAAA,uBAAA,EAAa,EACE;AAEnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,KAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyD,IAAA,UAAA,EAAA;AACyE,QAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,SAAA,CAAU;QAAA,CAAA;AACjJ,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACD,EACH,EACF,EACG;AAIX,QAAA,yBAAA,IAAA,uBAAA,IAAA,CAAA,EAAkE,IAAA,8BAAA,EAAA,EACpB,IAAA,KAAA,EAAA;AACb,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA;AACzE,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,QAAA,EAAA,EAC0B,IAAA,OAAA,EAAA;AACO,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,UAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAA,QAAA,WAAA,CAAA,QAAA,QAAA;QAAA,CAAA;AAA1E,QAAA,uBAAA,EAAqH,EAC/G,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,QAAA,EAAA;AAMF,QAAA,uBAAA;AACF,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmD,IAAA,SAAA,EAAA;AAE/C,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;;AAOxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;;AAgBxD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAqD,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;;AAuBvD,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,wCAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,SAAA,EAAA;AAOA,QAAA,oBAAA,IAAA,iBAAA,EAAA;AAEF,QAAA,uBAAA,EAAM,EACgB;AAM1B,QAAA,qBAAA,IAAA,iDAAA,IAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAAqC,IAAA,iDAAA,IAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAyBA,IAAA,iDAAA,IAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;;;;;;AA9KL,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,aAAA,cAAA;AAShB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,QAAA;AAIY,QAAA,oBAAA,CAAA;AAAA,QAAA,gCAAA,eAAA,IAAA,aAAA,aAAA,eAAA;AACqB,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AAUgD,QAAA,oBAAA,CAAA;AAAA,QAAA,gCAAA,eAAA,IAAA,aAAA,aAAA,aAAA;AAEhC,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,WAAA,IAAA,SAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,UAAA,OAAA,OAAA,SAAA,OAAA,SAAA,QAAA,WAAA,IAAA,SAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,QAAA;AAKO,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,YAAA,CAAA,IAAA,SAAA,KAAA,EAA4B,WAAA,0BAAA,IAAA,KAAA,CAAA,IAAA,SAAA,KAAA,CAAA;AACpF,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,uBAAA,KAAA,GAAA;AAYqB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,aAAA,cAAA;AAEpB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAA,KAAA,QAAA,YAAA,IAAA,CAAA;AAOF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,WAAA,MAAA;AAQ2B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,cAAA;AAqEd,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAET,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,mBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,QAAA,OAAA,OAAA,IAAA,eAAA,KAAA,YAAA,CAAA;AAOX,QAAA,oBAAA;AAAA,QAAA,qBAAA,YAAA,EAAA,EAAe,gBAAA,IAAA;;;;;;6ED7HvB,yBAAuB,EAAA,WAAA,2BAAA,UAAA,uEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;;;;;;;AFGtB,IAAA,yBAAA,GAAA,OAAA,GAAA;AAAmF,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAAzG,IAAA,uBAAA;;;;;AAYE,IAAA,yBAAA,GAAA,MAAA;AAA4C,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA;;;;AAArC,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,iBAAA,cAAA,IAAA;;;;;AAC5C,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAuE,IAAA,iBAAA,CAAA;AAEjE,IAAA,uBAAA;;;;AAFiE,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,iBAAA,qBAAA,IAAA;;;;;AAKQ,IAAA,yBAAA,GAAA,MAAA;AACvD,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AADzB,IAAA,yBAAA,GAAA,MAAA;AAA4C,IAAA,iBAAA,CAAA;AAAmC,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,EAAA;AAC/C,IAAA,uBAAA;;;;AADY,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,iBAAA,cAAA,GAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,UAAA;;;;;AACuF,IAAA,yBAAA,GAAA,MAAA;AACpE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AADzB,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAyD,IAAA,iBAAA,CAAA;AAAmC,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,EAAA;AAC3D,IAAA,uBAAA;;;;AADwB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,iBAAA,YAAA;AACpD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,UAAA;;;;;AACyF,IAAA,yBAAA,GAAA,MAAA;AACtE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AADzB,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAmE,IAAA,iBAAA,CAAA;AAA2B,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,EAAA;AAC7D,IAAA,uBAAA;;;;AADkC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,iBAAA,IAAA;AAC9D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,UAAA;;;;;AACuF,IAAA,yBAAA,GAAA,MAAA;AACpE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AADzB,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAgE,IAAA,iBAAA,CAAA;AAA4B,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,EAAA;AAC3D,IAAA,uBAAA;;;;AAD+B,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,iBAAA,KAAA;AAC3D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,UAAA;;;;;AAC6E,IAAA,yBAAA,GAAA,MAAA;AAC1D,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;AADzB,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAoD,IAAA,iBAAA,CAAA;AAA8B,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,EAAA;AACjD,IAAA,uBAAA;;;;AADmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,iBAAA,OAAA;AAC/C,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,UAAA;;;;;AACL,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,eAAA,OAAA,iBAAA,SAAA,GAAA,GAAA;;;;;AAItD,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,oBAAA,GAAA,SAAA,GAAA;AACF,IAAA,uBAAA;;;;AAD0C,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,iBAAA,eAAA;;;;;AAE1C,IAAA,yBAAA,GAAA,QAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,iBAAA,cAAA,GAAA;;;;;AA0EM,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,cAAA,GAAA;;;;;AA4CR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiF,GAAA,OAAA,EAAA,EAC1D,GAAA,OAAA,EAAA,EACkB,GAAA,OAAA;AAC5B,IAAA,iBAAA,CAAA;AACH,IAAA,yBAAA,GAAA,KAAA;AAAM,IAAA,iBAAA,GAAA,IAAA;AAAC,IAAA,uBAAA;AAAO,IAAA,iBAAA,GAAA,IAAA;AAAC,IAAA,uBAAA,EAAQ;AAE7B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwD,GAAA,kBAAA,EAAA;AAEpD,IAAA,oBAAA,IAAA,SAAA,GAAA;AAGF,IAAA,uBAAA,EAAiB,EACb,EACF;;;;AAVK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;AAKc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,oBAAA,SAAA;;;;;AAWgC,IAAA,yBAAA,GAAA,KAAA;AACL,IAAA,iBAAA,GAAA,IAAA;AAAC,IAAA,uBAAA;;;;;AAK3C,IAAA,yBAAA,GAAA,cAAA,GAAA;AAA6D,IAAA,iBAAA,CAAA;AAC7D,IAAA,uBAAA;;;;AAD0C,IAAA,qBAAA,SAAA,SAAA,EAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,SAAA,WAAA,GAAA;;;;;AAVzE,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAgE,GAAA,OAAA,EAAA,EACzC,GAAA,OAAA,EAAA,EACkB,GAAA,OAAA;AAC5B,IAAA,iBAAA,CAAA;AAA4C,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;AACG,IAAA,iBAAA,GAAA,IAAA;AAAC,IAAA,uBAAA,EAAQ;AAEjE,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAgE,GAAA,kBAAA,EAAA,EACL,IAAA,cAAA,GAAA;AAErD,IAAA,qBAAA,IAAA,2DAAA,GAAA,GAAA,cAAA,GAAA;AAEF,IAAA,uBAAA,EAAa,EACE,EACb,EACF;;;;;AAXK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,KAAA;AACF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,cAAA,IAAA;AAK6B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA;;;;;;AAyD9C,IAAA,yBAAA,GAAA,OAAA,GAAA;AAAuE,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,UAAU,CAAC;IAAA,CAAA;AAAzG,IAAA,uBAAA;;;;;;AAcE,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAmE,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,SAAS,CAAC;IAAA,CAAA;AAElG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,kBAAA,GAAA;;;;;;AAIN,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,oBAAA,GAAA,OAAA,GAAA;AACA,IAAA,yBAAA,GAAA,UAAA,GAAA;AAA4B,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAS;AAE1D,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAwC,GAAA,UAAA,GAAA;AAEpC,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,UAAU,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA,EAAS;;;;;AAJnE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA;AAIU,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,QAAA;;;;;;AAyBtC,IAAA,yBAAA,GAAA,MAAA,EAA6B,GAAA,UAAA,GAAA;AAEzB,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,oBAAA,CAAqB;IAAA,CAAA;AAC9B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AAHD,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,CAAA,OAAA,cAAA,cAAA;AAEN,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,YAAA,GAAA;;;;;;AAGJ,IAAA,yBAAA,GAAA,MAAA,EAA4B,GAAA,UAAA,GAAA;AAES,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAC3D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AAHD,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,CAAA,OAAA,cAAA,cAAA;AAEN,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,aAAA,GAAA;;;;;;AA3BZ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2E,GAAA,uBAAA,IAAA,EAAA,EAER,GAAA,4BAAA,EAClC,GAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AAAwD,IAAA,uBAAA;AACrF,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAgE,GAAA,QAAA,EAAA,EACM,GAAA,OAAA,EAAA;AACQ,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,WAAA,sBAAA,CAAA;AAAA,aAAA,sBAAA,SAAA,WAAA,CAAA,SAAA,QAAA;IAAA,CAAA;AAA1E,IAAA,uBAAA,EAAqH,EAClH,EACD;AAIN,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAmD,IAAA,KAAA,EAC5C,IAAA,SAAA,GAAA,EACoB,IAAA,QAAA;AAAQ,IAAA,iBAAA,EAAA;AAAkD,IAAA,uBAAA,EAAS;AAC5F,IAAA,yBAAA,IAAA,QAAA,GAAA;AAA8B,IAAA,iBAAA,EAAA;AAAoC,IAAA,uBAAA,EAAO;AACzE,IAAA,yBAAA,IAAA,OAAA,GAAA;AACE,IAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA,EAA6B,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA;AAY/B,IAAA,uBAAA,EAAM,EACF,EACc;;;;;AA5BS,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,gBAAA;AAEpB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,SAAA,YAAA,IAAA,CAAA;AAS0B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,UAAA,IAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,gBAAA,EAAA;AAErB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,EAAA,OAAA,SAAA,OAAA,OAAA,OAAA,MAAA,OAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA,OAAA,OAAA,OAAA,MAAA,MAAA;;;;;;AA2ET,IAAA,yBAAA,GAAA,QAAA,GAAA,EAAgD,GAAA,UAAA,GAAA;AACmB,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,aAAA,sBAAA,GAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,UAAA,CAAkB;IAAA,CAAA;AAC1F,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AADP,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;;;;;AAOE,IAAA,yBAAA,GAAA,MAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,cAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,GAAA,EAAuC,GAAA,QAAA,GAAA;AACR,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AACjF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,YAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,cAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,WAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,GAAA,EAAuC,GAAA,QAAA,GAAA;AACR,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;AAC9E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,SAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,cAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,GAAA,EAAuC,GAAA,QAAA,GAAA;AACR,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AAC5E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,OAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,YAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,UAAA,GAAA;AAKE,IAAA,qBAAA,SAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,OAAA,QAAA,WAAA,CAA4C;IAAA,CAAA;AAErD,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA;;;;;AAJM,IAAA,sBAAA,UAAA,YAAA,QAAA;;;;;;AANR,IAAA,yBAAA,GAAA,MAAA,GAAA,EAA0D,GAAA,QAAA,GAAA;AAC3B,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAC3E,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,UAAA,GAAA;AASF,IAAA,uBAAA;;;;;AAV+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;AAKY,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,UAAA;;;;;AAQ7C,IAAA,oBAAA,GAAA,MAAA,GAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,SAAA,GAAA,EAAoF,GAAA,IAAA,EAC9E,GAAA,IAAA;AAEA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAK,EACF;;;;AAFD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,gBAAA,GAAA;;;;;AAad,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,qBAAA;AACF,IAAA,uBAAA;;;;;;AAgBI,IAAA,yBAAA,GAAA,KAAA,EAA6B,GAAA,SAAA,GAAA;AACF,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;AAC3E,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAyB,GAAA,kBAAA,EAAA,EAC4B,GAAA,SAAA,GAAA;AACZ,IAAA,2BAAA,iBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,MAAA,MAAA,OAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAArC,IAAA,uBAAA,EACqD,EACtC,EACb;;;;AANmB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,UAAA;AAGgB,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,UAAA;;;;;AAM3C,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAgF,GAAA,OAAA,GAAA,EACnC,GAAA,OAAA,GAAA;AAChB,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;AAC3E,IAAA,yBAAA,GAAA,OAAA,GAAA;AAAuB,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA,EAAM;AAEzD,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA2C,GAAA,OAAA,GAAA;AAChB,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AACxE,IAAA,yBAAA,GAAA,OAAA,GAAA;AAAuB,IAAA,iBAAA,EAAA;AAEvB,IAAA,uBAAA,EAAM;AAER,IAAA,yBAAA,IAAA,OAAA,GAAA,EAA2C,IAAA,OAAA,GAAA;AAChB,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA;AACxE,IAAA,yBAAA,IAAA,OAAA,GAAA;AAAuB,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA,EAAM,EAChD;;;;AAZqB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,UAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,MAAA;AAGE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,OAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,cAAA,WAAA,KAAA,OAAA,cAAA,WAAA,KAAA,OAAA,cAAA,MAAA,KAAA,OAAA,cAAA,OAAA,GAAA;AAKE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,OAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,GAAA;;;;;AAG3B,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,0BAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,qBAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,4BAAA,GAAA;;;;;AAGF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,aAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,cAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,iBAAA,GAAA;;;;;;AAQN,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAEtG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAEtG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,kBAAA,CAAmB;IAAA,CAAA;AAE1G,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAEpG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,IAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAE7G,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,eAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,oBAAA,CAAqB;IAAA,CAAA;AAE5G,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,eAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,GAAA;AAAgF,IAAA,qBAAA,SAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAEtG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,SAAA,GAAA;;;;;AA5FJ,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAsC,GAAA,MAAA,GAAA;AAElC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAK;AAGP,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAkC,GAAA,QAAA,GAAA,EACD,GAAA,OAAA,GAAA;AAE3B,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAA6B,GAAA,kDAAA,IAAA,GAAA,OAAA,GAAA,EAUmD,GAAA,kDAAA,GAAA,GAAA,OAAA,GAAA,EAgB1C,GAAA,kDAAA,GAAA,GAAA,OAAA,GAAA,EAIA,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,EAIH,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,EAIE,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,EAIF,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,EAGG,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA;AAOxC,IAAA,uBAAA,EAAM,EACD;AAGT,IAAA,yBAAA,IAAA,OAAA,GAAA;AACE,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EACuB,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EAIF,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EAIG,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EAIL,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EAIK,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA,EAIA,IAAA,sDAAA,GAAA,GAAA,UAAA,GAAA;AAO1B,IAAA,uBAAA;;;;AA5FI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,GAAA;AAKI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,UAAA;AAEI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AAUqD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AAgBrD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AAUP,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,QAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;;;;;;AAiBH,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAwC,GAAA,YAAA,GAAA,EACV,GAAA,KAAA;AAExB,IAAA,oBAAA,GAAA,OAAA,GAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA,EAAO;AAE7B,IAAA,yBAAA,GAAA,OAAA,GAAA;AAAiD,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAAtE,IAAA,uBAAA,EAA2F,EAClF;;;;AAHA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,GAAA;;;;;;AAOX,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,SAAA,GAAA;AACE,IAAA,qBAAA,UAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,SAAA,OAAA,OAAA,KAAA,CAA6B;IAAA,CAAA;AADzC,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA0B,GAAA,OAAA,GAAA;AAEtB,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA6B,GAAA,QAAA;AACnB,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AAC5D,IAAA,oBAAA,GAAA,IAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;AAAmD,IAAA,uBAAA;AACzD,IAAA,oBAAA,IAAA,IAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;AAAqD,IAAA,uBAAA,EAAO,EAC9D;;;;;AAZW,IAAA,oBAAA;AAAA,IAAA,gCAAA,UAAA,OAAA,eAAA;AAOP,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,YAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,WAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,aAAA;;;;;;AAKZ,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAiD,GAAA,KAAA;AAE7C,IAAA,oBAAA,GAAA,OAAA,GAAA;AACA,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAmB,IAAA,iBAAA,CAAA;AAAY,IAAA,uBAAA;AAC/B,IAAA,yBAAA,GAAA,OAAA,GAAA;AAA0D,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAA/E,IAAA,uBAAA,EAAgG,EAC5F;;;;AAFe,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,QAAA;;;;;;AAzC3B,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA6B,GAAA,MAAA,GAAA;AAEzB,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAW,OAAA,aAAA,CAAc;IAAA,CAAA;AACzE,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,GAAA;AASA,IAAA,yBAAA,GAAA,OAAA,GAAA;AAC4D,IAAA,qBAAA,eAAA,SAAA,sEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,SAAA,MAAA,CAAgB;IAAA,CAAA;AACzF,IAAA,qBAAA,GAAA,2DAAA,IAAA,GAAA,gBAAA,EAAA,EAAqC,GAAA,kDAAA,GAAA,GAAA,OAAA,GAAA;AAwBvC,IAAA,uBAAA,EAAM;AAER,IAAA,yBAAA,IAAA,OAAA,GAAA,EAC6D,IAAA,UAAA,GAAA;AAC5B,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AACT,IAAA,iBAAA,EAAA;AAA8C,IAAA,uBAAA,EAAS;;;;AAhDhG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,SAAA,OAAA,aAAA,uBAAA,iBAAA,OAAA,aAAA,uBAAA,kBAAA,GAAA;AAQqB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AAUrB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA,eAAA,WAAA;AACe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA,EAAA;AAiBY,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA,EAAA;AAU7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA,KAAA,gBAAA,WAAA;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,aAAA,KAAA,QAAA,IAAA;AAAyC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;;;;;;AAK7C,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA6B,GAAA,MAAA,GAAA;AAEzB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAClF,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAoE,GAAA,UAAA,GAAA;AAEhE,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA,EAAS;;;;AAX1F,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,aAAA,GAAA;AAOiD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,aAAA,uBAAA;AAIb,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,KAAA;;;;;;AAKxC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA6B,GAAA,MAAA,GAAA;AAEzB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,GAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAClF,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,GAAA,OAAA,GAAA;AACE,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAoE,GAAA,UAAA,GAAA;AAEhE,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,aAAA,WAAA;AAAyB,aAAA,sBAAC,OAAA,cAAc,SAAS,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAmD,IAAA,uBAAA;AAClH,IAAA,yBAAA,IAAA,UAAA,GAAA;AACE,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,aAAA,WAAA;AAAyB,aAAA,sBAAC,OAAA,cAAc,YAAY,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAA8C,IAAA,uBAAA,EAAS;;;;AAbvH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,gBAAA,GAAA;AAOgD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,aAAA,uBAAA;AAIa,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,WAAA;AAEG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;;;;;;AAKpE,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAiD,GAAA,QAAA,GAAA;AACG,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAClF,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA+F,GAAA,KAAA,GAAA;AAC5E,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA,EAAI;AAExE,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAoE,GAAA,UAAA,GAAA;AACZ,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AACzE,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,UAAA,GAAA;AACE,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,WAAA,CAAyB;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAA0C,IAAA,uBAAA,EAAS;;;;AANxE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,SAAA;AAIf,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,KAAA,EAAA;AAEoC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,EAAA;;;;;;AAKxC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAoB,GAAA,KAAA,GAAA;AAEhB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;AAEN,IAAA,yBAAA,GAAA,OAAA,GAAA,EAAwD,GAAA,KAAA,GAAA,EAE5B,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAsD,IAAA,uBAAA;AAAQ,IAAA,iBAAA,GAAA,aAAA;AAAc,IAAA,yBAAA,GAAA,QAAA,GAAA;AAA8E,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;AAEjN,IAAA,yBAAA,IAAA,YAAA,GAAA,EAAwG,IAAA,gBAAA,GAAA;AACZ,IAAA,qBAAA,kBAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAkB,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA;AAAE,IAAA,uBAAA,EAAe,EAC/I;AAEb,IAAA,yBAAA,IAAA,OAAA,GAAA,EAAqD,IAAA,UAAA,GAAA;AACmB,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AACnG,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,GAAA;AAAwE,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAW,IAAI,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA,EAAS;;;;AAf1J,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,oBAAA,GAAA;AAK8B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,uBAAA,YAAA,IAAA;AAA0J,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,UAAA;AAG1K,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,SAAA,MAAA,EAA2B,WAAA,OAAA,OAAA,EAAoB,YAAA,OAAA,cAAA;AAK7D,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AAEiG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,uBAAA,MAAA;;;AD5oBrG,IAAO,oBAAP,MAAO,mBAAiB;EA6G5B,YACS,eACA,eACA,aACC,IACD,2BACA,cACA,aACC,cACD,aACC,aACD,eACC,WACA,OAAY;AAZb,SAAA,gBAAA;AACA,SAAA,gBAAA;AACA,SAAA,cAAA;AACC,SAAA,KAAA;AACD,SAAA,4BAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACC,SAAA,eAAA;AACD,SAAA,cAAA;AACC,SAAA,cAAA;AACD,SAAA,gBAAA;AACC,SAAA,YAAA;AACA,SAAA,QAAA;AArHH,SAAA,MAAM;AACN,SAAA,SAAS,aAAa,QAAQ,YAAY;AAQ1C,SAAA,OAAO;AAGd,SAAA,mBAA6B;MAC3B;MACA;MACA;MACA;;AAEF,SAAA,aAAa,IAAI,yBAAkB;AAG5B,SAAA,kBAAkB;AAClB,SAAA,gBAAgB;AAChB,SAAA,eAAe;AACf,SAAA,WAAW;AACX,SAAA,gBAAgB;AAChB,SAAA,eAAe;AACf,SAAA,gBAAgB;AAChB,SAAA,YAAY;AACZ,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,eAAe;AACf,SAAA,aAAa;AACb,SAAA,gBAAgB;AAChB,SAAA,eAAe;AACf,SAAA,kBAAkB;AAClB,SAAA,YAAY;AACZ,SAAA,eAAe;AACf,SAAA,kBAAkB;AAClB,SAAA,gBAAgB;AAavB,SAAA,iBAAiB;AACV,SAAA,oBAAoB;AACpB,SAAA,uBAAuB;AACvB,SAAA,gBAAqB,CAAA;AACrB,SAAA,mBAAwB,CAAA;AAExB,SAAA,qBAAqB;AACrB,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,gBAAgB;AAGhB,SAAA,UAAiB,CAAA;AAIjB,SAAA,cAAc,oBAAoB,eAAc;AAChD,SAAA,kBAAkB,CAAC,YAAY,UAAU;AAEzC,SAAA,kBAAkB;MACvB,EAAE,OAAO,MAAM,MAAM,aAAY;MACjC,EAAE,OAAO,OAAO,MAAM,oBAAmB;;AAEpC,SAAA,sBAAsB,KAAK,YAAY,SAAS,KAAK;AAG5D,SAAA,gBAAgB;AAIhB,SAAA,kBAAkB,CAAC,cAAc,WAAW;AAC5C,SAAA,WAAW;AACX,SAAA,YAAY;AAEZ,SAAA,SAAS;AAKT,SAAA,YAAY;AACZ,SAAA,WAAW;AACX,SAAA,iBAAiB;AACV,SAAA,sBAA2B;AAIlC,SAAA,UAAU,oBAAI,KAAI;AAClB,SAAA,iBAAa,eAAAC,SAAO,oBAAI,KAAI,CAAE,EAAE,OAC9B,aAAa,kBAAkB,YAAY;AAE7C,SAAA,iBAAsB,oBAAI,KAAI;AAiB5B,SAAK,mBACH,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAEvD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;AACzC,WAAK,gBAAe;IACtB;AAEA,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;EACzE;EAEA,WAAQ;AACN,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,uBAAuB,gBAAgB,EAAE;AAC7F,YAAQ,IAAI,KAAK,UAAU;AAC3B,QAAI,aAAa,QAAQ,UAAU,KAAK,aAAa,QAAQ,UAAU,KAAK,QAAW;AACrF,WAAK,aACH,aAAa,QAAQ,UAAU,EAAE,YAAW,EAAG,QAAQ,IAAI,KAAK,KAC5D,OACA;IACR;AACA,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KACjD,CAAC,MAAM,EAAE,aAAa,mBAAmB;AAE3C,UAAM,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAC1E,UAAM,YACJ,KAAK,YAAY,QAAQ,YAAY,gBAAgB,KACnD,mBACA,gBAAgB,YAAY,IAC1B,gBAAgB,YAAY,IAC5B,aAAa,QAAQ,eAAe;AAC1C,SAAK,cAAc,iBACjB,CAAC,IAAI,EAAE,EAAE,QAAQ,SAAS,SAAS,CAAC,MAAM,KAAK,QAAQ;AACzD,SAAK,cAAc,KAAK,uBAAuB,IAAI,YAAW,CAAE;AAChE,SAAK,mBAAmB,IAAI,YAAW;AAEvC,SAAK,kBAAkB,IAAI;AAC3B,QAAI,aAAa,QAAQ,aAAa,KAAK,QAAQ;AACjD,WAAK,aAAa,KAAK,uBAAuB;QAC5C,UAAU;QACV,UAAU;QACV,YAAY;OACb;IACH;AAEA,SAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;AACzD,SAAK,aAAa,KAAK,mBAAmB,IAAI,cAAa,CAAE;AAC7D,SAAK,kBAAkB,IAAI,gBAAe;AAC1C,SAAK,gBAAgB,cAAc,CAAA;AACnC,SAAK,YAAW;AAChB,SAAK,eAAc;AACnB,SAAK,eAAc;AACnB,SAAK,gBAAgB,KAAK,YAAY,QAAQ,YAAY,YAAY,KAAK,IAAI,OAAO;EACxF;EAEA,kBAAe;AAEb,UAAM,YAAiB,aAAa,QAAQ,eAAe;AAC3D,UAAM,sBAAsB;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;AAGF,UAAM,oBAAoB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK;AAE1E,UAAM,oBAAoB;MACxB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;AAEF,UAAM,kBAAkB;MACtB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;AAEF,UAAM,mBAAmB,CAAC,IAAI;AAC9B,UAAM,kBAAkB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK;AACtE,UAAM,sBAAsB,CAAC,MAAM,IAAI;AACvC,UAAM,kBAAkB,CAAC,IAAI;AAC7B,UAAM,oBAAoB,CAAC,IAAI;AAC/B,UAAM,oBAAoB,CAAC,MAAM,KAAK;AACtC,UAAM,sBAAsB,CAAC,KAAK;AAClC,UAAM,uBAAuB,CAAC,KAAK;AACnC,UAAM,kBAAkB;MACtB,EAAE,IAAI,OAAO,MAAM,UAAS;;;AAE9B,UAAM,uBAAuB,CAAC,IAAI;AAClC,UAAM,WAAW,CAAC,KAAK,IAAI;AAC3B,QAAI,kBAAkB,QAAQ,SAAS,MAAM,IAAI;AAC/C,UACE,aAAa,cAAc,OAC3B,aAAa,iBAAiB,MAC9B;AACA,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;MAC1C,WACE,aAAa,cAAc,OAC3B,aAAa,iBAAiB,MAC9B;AACA,aAAK,aAAa,oBAAoB,QAAQ;MAChD,OAAO;AACL,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;MAC1C;IACF,WAAW,gBAAgB,QAAQ,SAAS,MAAM,IAAI;AACpD,UACE,aAAa,cAAc,OAC3B,aAAa,iBAAiB,MAC9B;AACA,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;MAC1C,WACE,aAAa,cAAc,OAC3B,aAAa,iBAAiB,MAC9B;AACA,cAAMC,SAAQ,KAAK,aAAa,oBAAoB;AACpD,aAAK,aAAa,oBAAoB,QAAQA;MAChD,OAAO;AACL,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;MAC1C;IACF,WAAW,iBAAiB,QAAQ,SAAS,MAAM,IAAI;AACrD,WAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,gBAAgB,QAAQ,SAAS,MAAM,IAAI;AACpD,WAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,gBAAgB,QAAQ,SAAS,MAAM,IAAI;AACpD,WAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,oBAAoB,QAAQ,SAAS,MAAM,IAAI;AACxD,UAAI,aAAa,cAAc,KAAK;AAClC,aAAK,aAAa,oBAAoB,QAAQ;MAChD,OAAO;AACL,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;MAC1C;IACF,WAAW,kBAAkB,QAAQ,SAAS,MAAM,IAAI;AACtD,WAAK,aAAa,oBAAoB,QAAQ;IAChD,WAAW,kBAAkB,QAAQ,SAAS,MAAM,IAAI;AACtD,WAAK,aAAa,oBAAoB,QAAQ;IAChD,WAAW,oBAAoB,QAAQ,SAAS,MAAM,IAAI;AACxD,WAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,qBAAqB,QAAQ,SAAS,MAAM,IAAI;AACzD,WAAK,aAAa,oBAAoB,QAAQ;IAChD;AAEA,QAAI,oBAAoB,QAAQ,SAAS,MAAM,IAAI;AACjD,UAAI,aAAa,cAAc,KAAK;AAClC,aAAK,aAAa,oBAAoB,eACpC,KAAK,aAAa,oBAAoB;MAC1C,OAAO;AACL,aAAK,aAAa,oBAAoB,eACpC,KAAK,aAAa,oBAAoB;MAC1C;AACA,WAAK,aAAa,oBAAoB,UACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,kBAAkB,QAAQ,SAAS,MAAM,IAAI;AACtD,UAAI,aAAa,cAAc,KAAK;AAClC,aAAK,aAAa,oBAAoB,eACpC,KAAK,aAAa,oBAAoB;MAC1C;AACA,WAAK,aAAa,oBAAoB,UACpC,KAAK,aAAa,oBAAoB;IAC1C;AACA,QAAI,CAAC,IAAI,EAAE,QAAQ,SAAS,MAAM,IAAI;AACpC,WAAK,aAAa,oBAAoB,eACpC,KAAK,aAAa,oBAAoB;AACxC,WAAK,aAAa,oBAAoB,UACpC,KAAK,aAAa,oBAAoB;IAC1C;AACA,oBAAgB,QAAQ,CAAC,MAAK;AAC5B,UAAI,EAAE,IAAI,KAAK,WAAW;AACxB,aAAK,aAAa,oBAAoB,QACpC,KAAK,aAAa,oBAAoB,EAAE,MAAM,CAAC;MACnD;IACF,CAAC;AAED,QAAI,qBAAqB,QAAQ,SAAS,MAAM,IAAI;AAClD,WAAK,aAAa,oBAAoB,OACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,SAAS,QAAQ,SAAS,MAAM,IAAI;AAC7C,WAAK,aAAa,oBAAoB,OACpC,KAAK,aAAa,oBAAoB;IAC1C,WAAW,CAAC,IAAI,EAAE,QAAQ,SAAS,MAAM,IAAI;AAC3C,WAAK,aAAa,oBAAoB,OAAO;IAC/C,WAAW,CAAC,IAAI,EAAE,QAAQ,SAAS,MAAM,IAAI;AAC3C,WAAK,aAAa,oBAAoB,OAAO;IAC/C;EACF;EAEO,iBAAc;AACnB,SAAK,YACF,sBACC,KAAK,cAAc,eACnB,KAAK,YAAY,EAElB,UAAU;MACT,MAAM,CAAC,SAAQ;AACb,aAAK,YAAY,0BAA0B,KAAK;AAChD,YACE,KAAK,YAAY,wBAAwB,iBACzC,UACA,KAAK,YAAY,wBAAwB,iBAAiB;AAE1D,eAAK,YAAY,wBAAwB,gBACvC,uBAAuB;AAC3B,aAAK,oBACH,KAAK,YAAY,wBAAwB,YAAY;AAEvD,aAAK,cAAa;MACpB;MACA,OAAO,MAAK;AACV,aAAK,YAAY,0BAA0B;AAC3C,aAAK,gBAAgB,CAAA;AACrB,aAAK,mBAAmB,CAAA;AACxB,aAAK,eAAe;AACpB,aAAK,gBAAgB;AACrB,aAAK,qBAAqB;MAC5B;KACD;AACH,SAAK,wBAAuB;EAC9B;EAEO,gBAAa;AAClB,SAAK,gBAAgB,OAAO,OAC1B,CAAA,GACA,KAAK,YAAY,uBAAuB;AAE1C,WAAO,OACL,KAAK,kBACL,KAAK,YAAY,uBAAuB;AAE1C,SAAK,gBAAgB,KAAK,YAAY,wBAAwB;AAC9D,SAAK,eAAe,KAAK,YAAY,wBAAwB;AAC7D,SAAK,YAAY,SAAS,qBAAqB,EAAE,SAC/C,KAAK,cAAc,mBAAmB;AAExC,SAAK,gBAAgB,KAAK,cAAc,UAAU,OAAO;AACzD,QAAI,KAAK,cAAc,cAAc,YAAY,UAAU;AACzD,WAAK,qBAAqB;AAC1B,UAAI,KAAK,YAAY,UAAU,QAAQ;AACrC,aAAK,UAAU,KAAK,YAAY,UAAU,KACxC,CAAC,MAAM,EAAE,MAAM,KAAK,cAAc,SAAS,EAC3C;AACF,YACE,KAAK,cAAc,aAAa,SAChC,CAAC,KAAK,cAAc,WACpB,KAAK,cAAc,MACnB;AACA,eAAK,cAAc,UAAU,KAAK,QAAQ,KACxC,CAAC,MAAM,EAAE,aAAa,KAAK,cAAc,IAAI,GAC5C;AACH,eAAK,cAAc,QAAQ,KAAK,cAAc;AAC9C,eAAK,iBAAiB,UAAU,KAAK,QAAQ,KAC3C,CAAC,MAAM,EAAE,aAAa,KAAK,cAAc,IAAI,GAC5C;AACH,eAAK,iBAAiB,QAAQ,KAAK,cAAc;QACnD;AACA,aAAK,YAAY,SAAS,SAAS,EAAE,SACnC,KAAK,cAAc,OAAO;MAE9B;IACF,OAAO;AACL,WAAK,qBAAqB;IAC5B;AAEA,YAAQ,IAAI,KAAK,cAAc,SAAS;AACxC,SAAK,wBAAwB,KAAK,cAAc,UAAU,SAAQ,CAAE;EACtE;EAEO,oBAAoB,UAAQ;AACjC,SAAK,YACF,kBACC,KAAK,aAAa,kBAClB,KAAK,aAAa,eAClB,QAAQ,EAET,UAAU,CAAC,SAAQ;AAClB,WAAK,YAAY,UAAU,KAAK,aAAa;IAC/C,CAAC;EACL;EAEA,wBAAwB,WAAkB;AACxC,UAAM,YAAiB;AACvB,UAAM,uBAAuB,CAAC,MAAM,KAAK;AACzC,UAAM,iBAAiB,CAAC,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AACtO,UAAM,gBAAgB,CAAC,OAAO,OAAO,KAAK;AAC1C,QAAI,qBAAqB,QAAQ,SAAS,MAAM,IAAI;AAClD,WAAK,aAAa,oBAAoB,QACpC,aAAa,KAAK,KAAK,aAAa,oBAAoB,OAAO;AACjE,WAAK,iBAAiB;AACtB,WAAK,WAAW;IAClB;AACA,QAAI,eAAe,QAAQ,SAAS,MAAM,IAAI;AAC5C,WAAK,YAAY;IACnB;AACA,QAAI,cAAc,QAAQ,SAAS,MAAM,IAAI;AAC3C,WAAK,WAAW;AAChB,WAAK,iBAAiB;IACxB;EACF;EAEO,QAAK;AACV,UAAM,kBAAkB,KAAK,iBAAiB,UAAS;AACvD,UAAM,UAAU,KAAK,cAAc;AACnC,QAAI,WAAW,KAAK;AAAK,WAAK,IAAI,UAAU,OAAO;AACnD,QAAI,mBAAmB,KAAK;AAC1B,WAAK,iBAAiB,UAAU,eAAe;AACjD,QAAI,mBAAmB,KAAK;AAC1B,WAAK,iBAAiB,WAAW,KAAK,mBAAmB;EAC7D;EAEO,cAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,cAAc,KAAK,uBAAuB,IAAI,YAAW,CAAE;AAChE,SAAK,YAAY,WAAW,KAAK,aAAa;AAG9C,SAAK,6BAA4B;EACnC;EAEO,oBAAiB;AACtB,SAAK,oBAAoB;AACzB,SAAK,YAAY,WAAW,KAAK,aAAa;AAC9C,SAAK,4BAA2B;AAChC,SAAK,6BAA4B;EACnC;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;AACzC,WAAK,gBAAe;IACtB,CAAC;EACL;EAEO,kBAAkB,UAAQ;AAC/B,SAAK,YACF,kBACC,KAAK,aAAa,kBAClB,KAAK,aAAa,eAClB,QAAQ,EAET,UAAU,CAAC,SAAQ;AAClB,WAAK,YAAY,YAAY,KAAK,aAAa;AAC/C,WAAK,YAAY,UAAU,KAAK,aAAa;AAC7C,WAAK,YAAY,WAAW,KAAK,aAAa;AAC9C,WAAK,YAAY,aAAa,KAAK,aAAa;AAChD,WAAK,YAAY,iBACf,KAAK,aAAa;AACpB,WAAK,eAAc;IACrB,CAAC;EACL;EAEO,kBAAe;AACpB,SAAK,UAAU,KAAK,YAAY,UAAU,KACxC,CAAC,MAAM,EAAE,MAAM,KAAK,YAAY,SAAS,WAAW,EAAE,KAAK,EAC3D;EACJ;EAEO,eAAe,KAAG;AACvB,WAAO,OAAO,KAAK,YAAY,UAAU,SACrC,KAAK,YAAY,UAAU,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,EAAE,cACpD;EACN;EAEO,0BAAuB;AAC5B,SAAK,YAAY,SAAS,iBAAiB,EAAE,SAC3C,KAAK,YAAY,SAAS,iBAAiB,EAAE,MAAM,QACjD,eACA,EAAE,CACH;AAEH,UAAM,kBAAkB,KAAK,iBAAiB,UAAS,EAAG,KAAI;AAC9D,UAAM,aAAa,KAAK,YAAY,SAAS,iBAAiB,EAAE;AAChE,UAAM,eAAe,YAAY,KAAK,UAAU;AAEhD,QAAI,iBAAiB;AACnB,UAAI,gBAAgB,KAAK,iBAAiB,cAAa,GAAI;MAE3D,OAAO;AAEL,aAAK,iBAAiB,mBAAkB;AACxC,aAAK,YAAY,SAAS,iBAAiB,EAAE,UAAU;UACrD,WAAW;SACZ;MACH;IACF;EACF;EAEO,oBAAiB;AACtB,QAAI,KAAK,uBAAuB,UAAc,KAAK,oBAAoB,YAAW,KAAM,KAAK,iBAAiB,gBAAiB;AAC7H,WAAK,YAAY,SAAS,iBAAiB,EAAE,UAAU;QACrD,WAAW;OACZ;IACH;AACA,QAAI,CAAC,KAAK,YAAY,OAAO;AAC3B,WAAK,YAAY,UAAU,EAAE,SAAS,KAAI,CAAE;AAC5C,YAAM,MAAM,KAAK,aAAa,oBAAoB;AAClD,WAAK,0BACF,QACC,IACA,KACA,KAAK,aAAa,oBAAoB,IACtC,KAAK,aAAa,oBAAoB,QACtC,MACA,MACA,KAAK,EAEN,KAAK,CAAC,cAAa;AAClB,gBAAQ,IAAI,SAAS;MACvB,CAAC,EACA,MAAM,MAAK;AACV,gBAAQ,IAAI,UAAU;MACxB,CAAC;AACH;IACF;AAEA,SAAK,YAAY,WACf,oBACA,IAAI,mBAAmB,IAAI,CAAC;AAE9B,SAAK,YAAY,kBAAkB,KAAK,YAAY,KAAK,EAAE,UAAU;MACnE,MAAM,CAAC,SAAQ;AACb,YAAI,KAAK,cAAc,KAAK;AAC1B,eAAK,cAAc,uBACjB,KAAK,YAAY,SAAS,cAAc,EAAE;AAC5C,uBAAa,QACX,gBACA,KAAK,cAAc,oBAAoB;AAEzC,uBAAa,QAAQ,YAAY,KAAK,cAAc,QAAQ;AAC5D,cAAI,KAAK,YAAY,SAAS,WAAW,EAAE,SAAS,MAAM;AACxD,yBAAa,QACX,iBACA,KAAK,YAAY,SAAS,WAAW,EAAE,KAAK;AAE9C,iBAAK,aAAa,gBAChB,KAAK,YAAY,SAAS,WAAW,EAAE;AACzC,iBAAK,YAAY,QAAQ,WAAW,gBAClC,KAAK,YAAY,SAAS,WAAW,EAAE;AACzC,iBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;UACrD;AACA,eAAK,cAAc,+BAA+B,KAAK,YAAY;AAGnE,eAAK,YAAY,QAAQ,YAAY,iBAAiB,IACpD,KAAK,YAAY,MAAM;AACzB,eAAK,YAAY,QAAQ,YAAY,OAAO,IAC1C,KAAK,YAAY,MAAM;AACzB,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,eAAK,kBAAkB,IAAI;AAC3B,eAAK,kBAAiB;AACtB,eAAK,QACH,KAAK,aAAa,oBAAoB,8BAA8B;QAExE,OAAO;AACL,eAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;QAC1D;MACF;MACA,OAAO,MAAK;AACV,aAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;MAC1D;KACD;EACH;EAEO,uBAAuB,UAAa;AACzC,WAAO,KAAK,YAAY,MAAM;MAC5B,cAAc,SAAS;MACvB,OAAO,SAAS;MAChB,cAAc;QACZ,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,KAAK,CAAC;;;MAEvC,WAAW,CAAC,SAAS,SAAS;;MAC9B,UAAU,CAAC,SAAS,QAAQ;;MAC5B,QAAQ,CAAC,SAAS,MAAM;MACxB,OAAO,CAAC,SAAS,KAAK;MACtB,SAAS,CAAC,SAAS,SAAS,CAAC,WAAW,QAAQ,iBAAiB,CAAC,CAAC;MACnE,WAAW,SAAS;MACpB,cAAc;QACZ,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;;;MAErE,cAAc;QACZ,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;;;MAErE,cAAc;QACZ,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,GAAG,CAAC,CAAC;;;MAEhD,MAAM;QACJ,SAAS;QACT,KAAK,qBACD,WAAW,QAAQ;UACnB,KAAK,WAAW,WAAW,WAAW,WAAW;UACjD,WAAW,UAAU,EAAE;SACxB,IACC,WAAW;;;MAEjB,SAAS;QACP,SAAS;QACT,KAAK,aAAa,aAAa,iBAAiB,OAC5C,WAAW,WACX,WAAW;;MAEjB,SAAS;QACP,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,CAAC,CAAC;;;MAEpE,iBAAiB,CAAC,SAAS,eAAe;MAC1C,kBAAkB,KAAK,cAAc;MACrC,cAAc,KAAK,cAAc;MACjC,aAAa,KAAK,cAAc;MAChC,YAAY,SAAS;MACrB,UAAU,SAAS;MACnB,WAAW,SAAS;MACpB,qBAAqB;QACnB,SAAS;QACT,WAAW,QAAQ;UACjB,WAAW,UAAU,GAAG;UACxB,WAAW,QAAQ,sBAAsB;SAC1C;;KAEJ;EACH;EAEA,kBAAe;AACb,UAAM,oBAAoB,KAAK,YAAY,QAAQ,YAAY,WAAW;AAC1E,QAAI,KAAK,YAAY,QAAQ,iBAAiB,kBAAkB,QAAW;AACzE,WAAK,sBACH,KAAK,YAAY,QAAQ,iBAAiB,eAAe,OACvD,CAAC,QAAQ,qBAAqB,IAAI,EAAE,EACpC,CAAC,EAAE;IACT;AAEA,aAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,YAAM,UAAU,KAAK,YAAY,CAAC;AAClC,cAAQ,OAAO;IACjB;AACA,SAAK,4BAA2B;AAChC,SAAK,6BAA4B;EACnC;EAEO,8BAA2B;AAChC,eAAW,MAAK;AACd,YAAM,SAAS,SAAS,cAAc,SAAS;AAC/C,UAAI,QAAQ;AACV,kCAAAC,SAAa,SAAS,cAAc,SAAS,GAAG;UAC9C,eAAe;UACf,kBAAkB;UAClB,gBAAgB,KAAK;UACrB,eAAe,CAAC,KAAK,mBAAmB;UACxC,iBAAiB;UACjB,aAAa;SACd;MACH;IACF,GAAG,GAAI;EACT;EAEO,+BAA4B;AACjC,eAAW,MAAK;AACd,WAAK,uBAAmB,sBAAAA,SACtB,SAAS,cAAc,gBAAgB,GACvC;QACE,eAAe;QACf,kBAAkB;QAClB,gBAAgB,KAAK;QACrB,eAAe,CAAC,KAAK,mBAAmB;QACxC,iBAAiB;QACjB,aAAa;OACd;IAEL,GAAG,GAAG;EACR;EAEO,cAAW;AAChB,UAAM,SAAS;MACb,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;MACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,kBAAkB,KAAK;;AAEzB,SAAK,YAAY,YAAY,MAAM,EAAE,UAAU;MAC7C,MAAM,CAAC,SAAQ;AACb,aAAK,kBAAkB,KAAK,aAAa,CAAC;AAC1C,aAAK,YAAY,QAAQ,YAAY,gBAAgB,IACnD,KAAK,gBAAgB;AACvB,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAInD,aAAK,gBAAgB,YAAY,IAAI,CAAC,GAAG,MAAK;AAC5C,YAAE,QAAQ,QAAI,eAAAF,SAAO,EAAE,WAAW,EAAE,MAAM,GAAG,EAAE,CAAC,GAAG,YAAY;AAC/D,YAAE,YAAY,IAAI,KAAK,oBAAoB,CAAC;QAC9C,CAAC;AACD,gBAAQ,IAAI,KAAK,gBAAgB,YAAY,OAAO,OAAK,EAAE,iBAAiB,WAAW,GAAG,IAAI;AAC9F,aAAK,aAAa,IAAI,yBACpB,KAAK,gBAAgB,WAAW;AAElC,aAAK,WAAW,YAAY,KAAK;AACjC,aAAK,WAAW,OAAO,KAAK;AAC5B,aAAK,QAAQ,KAAK,gBAAgB;AAClC,aAAK,OAAO;AAEZ,aAAK,SAAS,qBAAqB;UACjC,aAAa,KAAK,gBAAgB;UAClC,gBAAgB,KAAK,gBAAgB;UACrC,gBAAgB,KAAK,gBAAgB;UACrC,cAAc,KAAK,gBAAgB;UACnC,YAAY,KAAK,gBAAgB;UACjC,gBACE,KAAK,gBAAgB,YAAY,SAAS,IACtC,KAAK,gBAAgB,YAAY,cAAc,IAC/C;UACN,YACE,KAAK,gBAAgB,YAAY,SAAS,IACtC,KAAK,gBAAgB,YAAY,cAAc,IAC/C;UACN,UACE,KAAK,gBAAgB,YAAY,SAAS,IACtC,KAAK,gBAAgB,YAAY,YAAY,IAC7C;UACN,QACE,KAAK,gBAAgB,YAAY,SAAS,IACtC,KAAK,gBAAgB,YAAY,UAAU,IAC3C;SACP;MACH;MACA,OAAO,MAAK;AACV,aAAK,aAAa;MACpB;KACD;EACH;EAEO,WAAW,QAAM;AACtB,SAAK,MAAM;AACX,SAAK,mBAAmB,UAAS;AACjC,WAAO,KAAI;AACX,SAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;EAC3D;EAEO,cAAc,QAAM;AACzB,QAAI,KAAK,YAAY,UAAU,SAAS;AACtC,WAAK,YAAY,cAAc,KAAK,YAAY,KAAK,EAAE,UACrD,CAAC,SAAQ;AACP,YAAI,KAAK,kBAAkB,oBAAoB;AAC7C,eAAK,MACH,KAAK,aAAa,uBAAuB;AAC3C,eAAK,YAAY,SAAS,QAAQ,SAAS,EAAE;QAC/C,WAAW,KAAK,kBAAkB,yBAAyB;AACzD,eAAK,MACH,KAAK,aAAa,uBAAuB;QAC7C,WAAW,KAAK,kBAAkB,mCAAmC;AACnE,eAAK,MACH,KAAK,aAAa,uBAAuB;AAC3C,eAAK,YAAY,SAAS,QAAQ,SAAS,EAAE;QAC/C,OAAO;AACL,eAAK,YAAW;AAChB,iBAAO,MAAK;AACZ,eAAK,QACH,KAAK,aAAa,uBAAuB,qBAAqB;QAElE;MACF,GACA,CAAC,UAAS;AACR,YAAI,MAAM,MAAM,kBAAkB,yBAAyB;AACzD,eAAK,MACH,KAAK,aAAa,uBAAuB;QAC7C,WACE,MAAM,MAAM,kBAAkB,mCAC9B;AACA,eAAK,MACH,KAAK,aAAa,uBAAuB;AAC3C,eAAK,YAAY,SAAS,QAAQ,SAAS,EAAE;QAC/C;AAAO,eAAK,MAAM,KAAK,aAAa,uBAAuB;MAC7D,CAAC;IAEL;EACF;EAEA,cAAc,OAAU;AACtB,YAAQ,IAAI,KAAK;AACjB,QAAI,MAAM,OAAO,kBAAkB,KAAK,MAAM,QAAQ,SAAS;AAC7D,YAAM,eAAc;IACtB;EACF;EAEO,qBAAqB,KAAU,SAAY;AAChD,YAAQ,IAAI,SAAS,KAAK;AAE1B,SAAK,WAAW;AAChB,UAAM,cAAc,IAAI,aAAa,OAAO;AAC5C,QAAI,YAAY,SAAS,QAAQ,MAAM,MAAM;AAC3C,YAAM,IAAI;IACZ;AACA,UAAM,aAAa,IAAI,aAAa,OAAO;AAE3C,UAAM,UAAe,WAAW,SAAS,QAAQ;AACjD,UAAM,MAAM,UACR,KAAK,aAAa,uBAAuB,6BACzC,KAAK,aAAa,uBAAuB;AAE7C,SAAK,0BACF,QACC,aACA,KACA,KAAK,aAAa,uBAAuB,UACzC,KAAK,aAAa,uBAAuB,QACzC,IAAI,EAEL,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,YAAI,SAAS;AACX,eAAK,iBAAiB,oBAAI,KAAI;AAC9B,gBAAM,WAAW,KAAK,aAAa,KAAK,KAAK,sBAAsB;YACjE,aAAa;YACb,UAAU;YACV,MAAM;YACN,UAAU;WACX;AACD,mBAAS,kBAAkB,oBAAoB;QACjD,OAAO;AACL,eAAK,WAAW,OAAO;QACzB;MACF,OAAO;AACL,YAAI,aAAa,SAAS,UAAU;MACtC;IACF,CAAC,EACA,MAAM,MAAK;AACV,UAAI,aAAa,SAAS,UAAU;IACtC,CAAC;EACL;EACA,oBAAoB,IAAE;AACpB,SAAK,iBAAiB;EACxB;EACA,WAAW,SAAO;AAChB,SAAK,SAAS,WAAW,CAAC;AAC1B,SAAK,SAAS,eACZ,KAAK,YAAY,QAAQ,YAAY,cAAc;AACrD,SAAK,SAAS,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AAExE,SAAK,SAAS,iBAAa,eAAAA,SAAO,KAAK,cAAc,EAAE,OACrD,YAAY;AAGd,SAAK,YAAY,cAAc,KAAK,QAAQ,EAAE,UAAU;MACtD,MAAM,MAAK;AACT,YAAI,SAAS;AACX,eAAK,qBAAoB;AACzB,eAAK,QACH,GAAG,KAAK,aAAa,uBAAuB,SAAS,YAAY,KAAK,SAAS,YAC/E,aAAa,KAAK,aAAa,uBAAuB,oBAAoB;kBACxE,eAAAA,SAAO,KAAK,cAAc,EAAE,OAC5B,aAAa,kBAAkB,YAAY,CAC5C,QACD,KAAK,aAAa,uBAAuB,KAAK;QAElD;AACA,aAAK,YAAW;MAClB;MACA,OAAO,MAAK;AACV,aAAK,QAAQ,KAAK,aAAa,uBAAuB,KAAK;MAC7D;KACD;EACH;EAEO,QAAQ,KAAK,QAAQ,IAAI,YAAY,IAAE;AAC5C,YAAQ,SAAS,KAAK,aAAa,uBAAuB;AAC1D,gBAAY,aAAa,KAAK,aAAa,uBAAuB;AAClE,SAAK,0BAA0B,QAC7B,IACA,KACA,OACA,WACA,MACA,MACA,KAAK;EAKT;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,GAAG,MAAM;MACnB,IAAI,SAAS;MACb,cAAc;QACZ,SAAS;QACT,WAAW,QAAQ;UACjB,WAAW;UACX,WAAW,UAAU,EAAE;UACvB,WAAW,QAAQ,eAAe;SACnC;;MAEH,SAAS;QACP,SAAS;QACT,WAAW,QAAQ;UACjB,WAAW;UACX,WAAW,UAAU,EAAE;UACvB,WAAW,QAAQ,gBAAgB;SACpC;;MAEH,aAAa,KAAK,cAAc;MAChC,cAAc,KAAK,cAAc;MACjC,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;;MACjE,WAAW,SAAS;KACrB;EACH;EAEO,mBAAmB,UAAa;AACrC,WAAO,KAAK,GAAG,MAAM;MACnB,UAAU;QACR,SAAS;QACT,WAAW,QAAQ;UACjB,WAAW;UACX,WAAW,UAAU,EAAE;UACvB,WAAW,QAAQ,SAAS;SAC7B;;MAEH,QAAQ;QACN,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,CAAC,CAAC;;MAEpE,WAAW;QACT,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,CAAC,CAAC;;MAEpE,KAAK;QACH,SAAS;QACT,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,CAAC,CAAC;;KAErE;EACH;EAEA,YAAS;AACP,SAAK,aAAa,KAAK,KAAK,WAAW,KAAK,eAAe;EAC7D;EACA,uBAAoB;AAClB,SAAK,aAAa,WAAU;EAC9B;EAEA,sBAAmB;AACjB,SAAK,eAAe;AACpB,SAAK,gBAAgB,KAAK,aAAa,uBAAuB;AAC9D,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,WAAW,MAAK;AACrB,SAAK,aAAa;AAClB,UAAM,kBAAmC;MACvC,UAAU;MACV,UAAU;;AAEZ,SAAK,kBAAkB;AACvB,SAAK,aAAa,KAAK,KAAK,WAAW,eAAe;EACxD;EAEO,gBAAa;AAClB,QAAI,KAAK,WAAW,IAAI,UAAU,EAAE,SAAS,MAAM;AACjD,WAAK,YACF,iBACC,KAAK,WAAW,IAAI,UAAU,EAAE,OAChC,KAAK,YAAY,EAElB,UACC,CAAC,SAAQ;AACP,aAAK,gBAAgB,KAAK;AAC1B,aAAK,SAAS,KAAK;AACnB,YAAI,KAAK,cAAc,OAAO;AAC5B,eAAK,aAAa,KAAK,mBAAmB,KAAK,aAAa;AAC5D,eAAK,gBAAgB;AACrB,eAAK,kBAAkB;AACvB,eAAK,gBAAgB;AACrB,eAAK,aAAa;AAClB,eAAK,gBAAgB;QACvB;MACF,GACA,CAAC,UAAS;AACR,YACE,MAAM,MAAM,cAAc,SAC1B,MAAM,MAAM,kBAAkB,oBAC9B;AACA,eAAK,eAAe;AACpB,eAAK,aAAa;AAClB,eAAK,eAAe;AACpB,eAAK,gBAAgB;AACrB,eAAK,WAAW;QAClB;MACF,CAAC;IAEP;EACF;EAEO,gBAAa;AAClB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,gBAAgB,KAAK;AAC1B,WAAK,aAAa,KAAK,cAAc;IACvC;AAEA,SAAK,aAAa,WAAU;AAC5B,SAAK,WAAW,MAAK;AACrB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,aAAa;EACpB;EAEO,oBAAiB;AACtB,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,QAAI,KAAK,cAAc,iBAAiB,KAAK,WAAW;AACtD,WAAK,YAAY;IACnB,WAAW,KAAK,cAAc,aAAa,KAAK,SAAS;AACvD,WAAK,eAAe;IACtB,OAAO;AACL,UACE,KAAK,cAAc,iBAAiB,KAAK,WACzC,KAAK,cAAc,aAAa,KAAK,WACrC;AACA,cAAM,aAAa;UACjB,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;;UACjE,kBAAkB,KAAK,cAAc;UACrC,eAAe;;AAEjB,aAAK,YAAY,UAAU,UAAU,EAAE,UACrC,CAAC,SAAQ;AACP,cAAI,KAAK,cAAc,QAAQ;AAC7B,iBAAK,YAAY;UACnB,OAAO;AACL,iBAAK,YAAW;AAChB,iBAAK,eAAe;AACpB,iBAAK,eAAe;AACpB,iBAAK,gBAAgB;AACrB,iBAAK,YAAY,QAAQ,YAAY,sBAAsB,IACzD;AACF,iBAAK,YAAY,QAAQ,YAAY,gBAAgB,IAAI;AACzD,iBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;UACrD;QACF,GACA,CAAC,UAAS;AACR,cACE,MAAM,MAAM,cAAc,SAC1B,MAAM,MAAM,kBAAkB,yBAC9B;AACA,iBAAK,YAAY;UACnB;QACF,CAAC;MAEL;IACF;AAEA,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,WAAW;EAClB;EAEO,cAAW;AAChB,QAAI,KAAK,aAAa,MAAM;AAC1B,WAAK,gBAAgB,KAAK;AAC1B,WAAK,aAAa,KAAK,gBAAgB,KAAK,cAAc,YAAY;IACxE;AACA,SAAK,YAAY;AACjB,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,eAAe;AACpB,SAAK,aAAa,WAAU;AAC5B,QAAI,KAAK,aAAa;AACpB,WAAK,gBAAgB;AACrB,WAAK,eAAe;AACpB,WAAK,cAAc;IACrB;AACA,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB;AACrB,WAAK,eAAe;IACtB;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,KAAK,KAAK,WAAW,KAAK,eAAe;AAC3D,SAAK,gBAAgB,KAAK,aAAa,uBAAuB;AAC9D,QAAI,KAAK,iBAAiB,MAAM;AAC9B,WAAK,YACF,iBAAiB,KAAK,OAAO,KAAK,YAAY,EAC9C,UAAU,CAAC,SAAQ;AAClB,aAAK,gBAAgB,KAAK;AAC1B,aAAK,aAAa,KAAK,mBAAmB,KAAK,aAAa;AAC5D,aAAK,oBAAoB,KAAK;MAChC,CAAC;IACL;AACA,SAAK,gBAAgB;AACrB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,YAAY;AACjB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,kBAAkB;EACzB;EAEO,uBAAoB;AACzB,QACE,KAAK,cAAc,KAAK,cAAc,aACtC,KAAK,cAAc,QACnB;AACA,WAAK,gBAAgB;AACrB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAClB,WAAK,YAAY;IACnB;EACF;EAEO,gBAAa;AAClB,UAAM,MAAM;MACV,IAAI,KAAK,cAAc;;AAEzB,SAAK,YAAY,aAAa,GAAG,EAAE,UAAU,CAAC,SAAQ;AACpD,UAAI,KAAK,cAAc,OAAO;AAC5B,aAAK,YAAY,QAAQ,YAAY,sBAAsB,IAAI;AAC/D,aAAK,YAAY,QAAQ,YAAY,gBAAgB,IAAI;AACzD,aAAK,YAAY,QAAQ,YAAY,gBAAgB,IAAI;AAEzD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,aAAK,YAAW;AAChB,aAAK,aAAa;AAClB,aAAK,eAAe;AACpB,aAAK,YAAY;AACjB,aAAK,cAAc;AACnB,aAAK,WAAW;AAChB,aAAK,eAAe;MACtB;IACF,CAAC;EACH;EAEA,sBAAmB;AACjB,SAAK,gBACH,KAAK,aAAa,uBAAuB;AAC3C,SAAK,aAAa,KAAK,cAAc;AACrC,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AAErB,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,aAAa;EACpB;;EAGA,iBAAc;AACZ,SAAK,YAAY,gBAAgB,KAAK,YAAY,EAAE,UAClD,CAAC,SAAa;AACZ,UAAI,KAAK,cAAc,OAAO;AAC5B,aAAK,SAAS,KAAK,aAAa,WAAW,MAAM,OAAO,OAAO;AAC/D,aAAK,cAAc,KAAK,aAAa;AACrC,aAAK,kBAAkB,KAAK,aAAa;AAEzC,aAAK,cAAc,KAAK,UAAU,+BAChC,KAAK,WAAW;MAEpB,OAAO;AACL,aAAK,SAAS;MAChB;IACF,GACA,CAAC,QAAO;AACN,UAAI,IAAI,MAAM,cAAc;AAAK,aAAK,SAAS;IACjD,CAAC;EAEL;EAEA,cAAc,KAAW;AACvB,QAAI,OAAO,WAAW;AACpB,WAAK,aAAa,KAAK,KAAK,cAAc,KAAK,eAAe;IAChE,WAAW,OAAO,YAAY;AAC5B,WAAK,aAAa,KAAK,KAAK,eAAe,KAAK,eAAe;IACjE,WAAW,OAAO,YAAY;AAC5B,WAAK,aAAa,KAAK,KAAK,eAAe,KAAK,eAAe;IACjE,WAAW,OAAO,cAAc;AAC9B,WAAK,aAAa,KAAK,KAAK,iBAAiB,KAAK,eAAe;IACnE;EACF;EAEA,SAAS,MAAI;AACX,QAAI,KAAK,SAAS,GAAG;AACnB,YAAM,QAAQ,KAAK,CAAC;AAEpB,UAAI,MAAM,OAAO,SAAS;AACxB,aAAK,YAAY;AACjB,aAAK,WACH,KAAK,aAAa,uBAAuB;AAC3C,eAAO;MACT;AACA,UAAI,CAAC,KAAK,gBAAgB,SAAS,MAAM,IAAI,GAAG;AAC9C,aAAK,YAAY;AACjB,aAAK,WAAW,KAAK,aAAa,uBAAuB;AACzD,eAAO;MACT;AACA,YAAM,aAAa,IAAI,WAAU;AACjC,iBAAW,YAAY,MAAK;AAC1B,aAAK,cAAc,WAAW,OAAO,SAAQ;MAC/C;AACA,iBAAW,cAAc,KAAK;AAC9B,WAAK,YAAY;AACjB,WAAK,WAAW,MAAM;IACxB;EACF;EAEA,aAAU;AACR,UAAM,YAAY;MAChB,UAAU,KAAK,cAAc;MAC7B,cAAc,KAAK;MACnB,WAAW,KAAK;MAChB,UAAU,KAAK;MACf,WAAW;;AAEb,SAAK,YAAY,sBAAsB,SAAS,EAAE,UAAU;MAC1D,MAAM,CAAC,SAAQ;AACb,YAAI,KAAK,cAAc,OAAO;AAC5B,eAAK,aAAY;AACjB,eAAK,0BAA0B,gBAC7B,IACA,KAAK,aAAa,uBAAuB,gBACzC,MACA,MACA,MACA,MACA,KAAK;AAEP,eAAK,eAAc;QACrB,OAAO;AACL,eAAK,YAAY;AACjB,eAAK,WACH,KAAK,aAAa,uBAAuB;QAC7C;MACF;MACA,OAAO,MAAK;AACV,aAAK,YAAY;AACjB,aAAK,WACH,KAAK,aAAa,uBAAuB;MAC7C;KACD;EACH;EAEA,aAAU;AACR,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,WAAW;EAClB;EAEA,eAAY;AACV,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,aAAa,WAAU;EAC9B;EAEA,aAAU;AACR,UAAM,YAAY;MAChB,UAAU,KAAK,cAAc;MAC7B,cAAc,KAAK;MACnB,WAAW,KAAK;MAChB,UAAU,KAAK;MACf,WAAW;;AAEb,SAAK,YAAY,sBAAsB,SAAS,EAAE,UAAU,CAAC,SAAQ;AACnE,UAAI,KAAK,cAAc,OAAO;AAC5B,aAAK,eAAc;AACnB,aAAK,aAAa,WAAU;MAC9B;IACF,CAAC;EACH;EAEA,oBAAoB,MAAI;AACtB,QAAI,KAAK,cAAc,CAAC,KAAK,UAAU;AACrC,aAAO;IACT;AACA,UAAM,OAAO,KAAK,gBAAgB,YAAY,OAAO,OAAK,EAAE,iBAAiB,KAAK,YAAY;AAC9F,SAAK,KAAK,CAAC,GAAG,MAAK;AACjB,aAAO,OAAO,IAAI,KAAK,EAAE,OAAO,CAAC,IAAI,OAAO,IAAI,KAAK,EAAE,OAAO,CAAC;IACjE,CAAC;AACD,UAAM,SAAS,KAAK,KAAK,OAAK,EAAE,QAAQ;AACxC,QAAI,UAAU,OAAO,YAAY,OAAO,UAAU,KAAK,KAAK,UAAU;AACpE,aAAO;IACT;AACA,QAAI,CAAC,KAAK,WAAW,KAAK,SAAS,KAAK,KAAK,CAAC,EAAE,UAAU,KAAK,KAAK,UAAU;AAC5E,aAAO;IACT;AACA,WAAO;EACT;;;uCAp2CW,oBAAiB,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,KAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;8BAwBjB,oBAAY,CAAA;8BACZ,SAAO,CAAA;;;;;;;;;;;;;;;;;AC3EpB,QAAA,yBAAA,GAAA,OAAA,EAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,EAAA,EAAmC,GAAA,KAAA;AAE/B,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,EAAA,EAAkC,GAAA,WAAA,EAAA,EACC,GAAA,QAAA,EAAA;AACwB,QAAA,iBAAA,CAAA;AAA0D,QAAA,uBAAA;AAEjH,QAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFnD,QAAA,uBAAA,EAEuD,EAE/C;AAEZ,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EACP,IAAA,OAAA,EAAA,EACkB,IAAA,uBAAA,IAAA,CAAA,EACiD,IAAA,4BAAA,EACpD,IAAA,KAAA,EAAA;AACG,QAAA,iBAAA,EAAA;AAC3B,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqD,IAAA,QAAA,EAAA,EACgB,IAAA,OAAA,EAAA;AACS,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,SAAA,sBAAA,EAAA;AAAA,iBAAA,sBAAA,OAAA,WAAA,CAAA,OAAA,QAAA;QAAA,CAAA;AAA1E,QAAA,uBAAA,EAAmH,EAChH,EAED;AAEN,QAAA,yBAAA,IAAA,UAAA,EAAU,IAAA,OAAA,EAAA,EAC8C,IAAA,OAAA,EAAA;AAEpD,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAA4C,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA;AAI9C,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAA4C,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAEa,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAEU,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAEH,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAEZ,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA;AAItD,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA,EAA+C,IAAA,oCAAA,GAAA,GAAA,QAAA,EAAA;AAMjD,QAAA,uBAAA,EAAM;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiE,IAAA,QAAA,IAAA,CAAA;AAEb,QAAA,qBAAA,UAAA,SAAA,qDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,kBAAA,CAAmB;QAAA,CAAA;AAC7E,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgD,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACkB,IAAA,OAAA;AAC5B,QAAA,iBAAA,EAAA;AACH,QAAA,yBAAA,IAAA,KAAA;AAAM,QAAA,iBAAA,IAAA,IAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,IAAA;AAAC,QAAA,uBAAA,EAAQ;AAE7B,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,kBAAA,EAAA;AAEpD,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB,EACb,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8C,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACuB,IAAA,OAAA;AACjC,QAAA,iBAAA,EAAA;AAGD,QAAA,uBAAA,EAAQ;AAEhB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,kBAAA,EAAA;AAEpD,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqF,IAAA,OAAA,EAAA,EAC9D,IAAA,OAAA,EAAA,EACkB,IAAA,OAAA;AAC5B,QAAA,iBAAA,EAAA;AAGJ,QAAA,uBAAA,EAAQ;AAEb,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,kBAAA,EAAA;AAEpD,QAAA,oBAAA,IAAA,KAAA,EAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyE,IAAA,SAAA,EAAA;AAEtD,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,wBAAA,CAAyB;QAAA,CAAA;AADnD,QAAA,uBAAA,EACuD,EACnD,EACS,EACb,EACF,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgD,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACkB,IAAA,OAAA;AAC5B,QAAA,iBAAA,EAAA;AAAmD,QAAA,uBAAA,EAAQ;AAEpE,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,kBAAA,EAAA;AAEpD,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,aAAA,EAAA;AAGF,QAAA,uBAAA,EAAM,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8C,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACkB,IAAA,OAAA;AAC5B,QAAA,iBAAA,EAAA;AACH,QAAA,yBAAA,IAAA,KAAA;AAAM,QAAA,iBAAA,IAAA,IAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,IAAA,IAAA;AAAC,QAAA,uBAAA,EAAQ;AAE7B,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,kBAAA,EAAA;AAEpD,QAAA,oBAAA,IAAA,SAAA,EAAA;AAIF,QAAA,uBAAA,EAAiB,EACb,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8C,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACkB,IAAA,OAAA;AAC5B,QAAA,iBAAA,EAAA;AAED,QAAA,uBAAA,EAAQ;AAEhB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,kBAAA,EAAA;AAEzD,QAAA,oBAAA,IAAA,SAAA,EAAA;AAMF,QAAA,uBAAA,EAAiB,EACb,EACF,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,KAAA,oCAAA,IAAA,GAAA,OAAA,EAAA,EAAiF,KAAA,6CAAA,IAAA,GAAA,gBAAA,EAAA;AAiCjF,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAsD,KAAA,OAAA,EAAA,EAC/B,KAAA,OAAA,EAAA,EACkB,KAAA,OAAA;AAC5B,QAAA,iBAAA,GAAA;AAA8C,QAAA,yBAAA,KAAA,KAAA;AAAM,QAAA,iBAAA,KAAA,IAAA;AAAC,QAAA,uBAAA;AAAO,QAAA,iBAAA,KAAA,IAAA;AAAC,QAAA,uBAAA,EAAQ;AAE9E,QAAA,yBAAA,KAAA,OAAA,EAAA,EAA6D,KAAA,kBAAA,EAAA;AAEzD,QAAA,oBAAA,KAAA,SAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAgE,KAAA,OAAA,EAAA,EACzC,KAAA,OAAA,EAAA,EACkB,KAAA,OAAA;AAC5B,QAAA,iBAAA,GAAA;AAGJ,QAAA,uBAAA,EAAQ;AAEb,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA,EAAM,EACF,EACF;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA,EAA2D,KAAA,UAAA,EAAA;AAEvD,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,kBAAA,CAAmB;QAAA,CAAA;AAC5B,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,KAAA,UAAA,EAAA;AACE,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACD,EACH,EACG,EACS;AAItB,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAsC,KAAA,uBAAA,IAAA,CAAA,EAE2C,KAAA,4BAAA,EACjD,KAAA,KAAA,EAAA;AACC,QAAA,iBAAA,GAAA;AAC3B,QAAA,qBAAA,KAAA,oCAAA,GAAA,GAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAqD,KAAA,QAAA,EAAA,EACiB,KAAA,OAAA,EAAA;AACQ,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,UAAA,sBAAA,GAAA;AAAA,iBAAA,sBAAA,QAAA,WAAA,CAAA,QAAA,QAAA;QAAA,CAAA;AAA1E,QAAA,uBAAA,EAAqH,EAClH,EAMD;AAEP,QAAA,yBAAA,KAAA,MAAA;AACK,QAAA,qBAAA,KAAA,uCAAA,GAAA,GAAA,UAAA,EAAA;AAIJ,QAAA,uBAAA;AAEA,QAAA,qBAAA,KAAA,6CAAA,GAAA,GAAA,gBAAA,EAAA;AAUF,QAAA,uBAAA,EAAsB;AAIxB,QAAA,qBAAA,KAAA,oCAAA,IAAA,GAAA,OAAA,EAAA;AAoCA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAsC,KAAA,wBAAA,EAAA,EACY,KAAA,cAAA,IAAA,CAAA,EAC8B,KAAA,YAAA,EAAA,EAC3B,KAAA,QAAA,IAAA,CAAA,EAOiC,KAAA,OAAA,EAAA,EACzD,KAAA,OAAA,EAAA,EAC0C,KAAA,QAAA,EAAA;AACnC,QAAA,iBAAA,GAAA;AAElB,QAAA,uBAAA;AACJ,QAAA,yBAAA,KAAA,MAAA,EAAM,KAAA,OAAA,EAAA;AACmB,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,aAAA,sBAAA,GAAA;AAAA,iBAAA,sBAAS,WAAA,MAAA,CAAc;QAAA,CAAA;AAA9C,QAAA,uBAAA,EACgE,EAC3D;AAGT,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAiB,KAAA,OAAA,EAAA;AAEb,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAmC,KAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,KAAA,SAAA,EAAA;AAIF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAmC,KAAA,kBAAA,EAAA;AAE/B,QAAA,oBAAA,KAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb,EACF;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAgD,KAAA,UAAA,EAAA;AACtC,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,aAAA,sBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,UAAA,CAAqB;QAAA,CAAA;AACpC,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACD,EACE;AAIX,QAAA,yBAAA,KAAA,uBAAA,IAAA,CAAA,EAAiE,KAAA,4BAAA,EACpC,KAAA,KAAA,EAAA;AACA,QAAA,iBAAA,GAAA;AAAsD,QAAA,uBAAA;AACnF,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAsD,KAAA,QAAA,EAAA,EACgB,KAAA,OAAA,EAAA;AACQ,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,WAAA,sBAAA,GAAA;AAAA,iBAAA,sBAAA,SAAA,WAAA,CAAA,SAAA,QAAA;QAAA,CAAA;AAA1E,QAAA,uBAAA,EAAqH,EAClH,EACD;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,QAAA,EAAA;AAKF,QAAA,uBAAA;AACE,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAuC,KAAA,SAAA,EAAA;AAEnC,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAQxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;;AAiBxC,QAAA,qBAAA,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,KAAA,mCAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;AAEA,QAAA,qBAAA,KAAA,sCAAA,GAAA,GAAA,SAAA,EAAA;AAOA,QAAA,oBAAA,KAAA,iBAAA,EAAA;AAEF,QAAA,uBAAA,EAAM,EACc,EAED;AAIzB,QAAA,qBAAA,KAAA,oCAAA,GAAA,GAAA,OAAA,GAAA;AAIF,QAAA,uBAAA,EAAM;AAGR,QAAA,qBAAA,KAAA,4CAAA,IAAA,IAAA,eAAA,KAAA,GAAA,gCAAA,EAAoD,KAAA,4CAAA,IAAA,GAAA,eAAA,KAAA,GAAA,gCAAA,EAmGE,KAAA,4CAAA,IAAA,GAAA,eAAA,KAAA,GAAA,gCAAA,EAuDC,KAAA,4CAAA,IAAA,GAAA,eAAA,KAAA,GAAA,gCAAA,EAkBA,KAAA,4CAAA,IAAA,GAAA,eAAA,KAAA,GAAA,gCAAA,EAoBF,KAAA,4CAAA,IAAA,GAAA,eAAA,KAAA,IAAA,gCAAA;AAxpBvD,QAAA,uBAAA,EAAmC;;;;;;;AAM0B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,uBAAA,gBAAA;AAEI,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAW1B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,iBAAA,GAAA;AACrB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,iBAAA;AAGC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAD,MAAA,OAAA,YAAA,IAAA,CAAA;AAOkB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,iBAAA;AAEhB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,YAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,mBAAA;AAKA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,YAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,YAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,QAAA,IAAA,cAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,SAAA,IAAA,SAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,OAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,SAAA;AAIA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,eAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,YAAA;AAMwB,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,CAAA,IAAA,iBAAA;AAChB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,WAAA,EAAyB,WAAA,0BAAA,IAAA,KAAA,CAAA,IAAA,iBAAA,CAAA;AAMzB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,YAAA;AAKuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,iBAAA;AASvB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,iBAAA,IAAA;AAOuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,iBAAA;AAOkB,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,CAAA,IAAA,kBAAA;AAGzC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,iBAAA,IAAA;AAOU,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,qBAAA,IAAA,cAAA,eAAA;AAGV,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,EAAA,IAAA,cAAA,mBAAA,IAAA,kBAAA;AAcA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,cAAA,IAAA;AAIuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,UAAA;AAGlB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,IAAA,cAAA,EAAA,SAAA,SAAA,CAAA;AAUL,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,YAAA;AAKuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,iBAAA;AAWvB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,cAAA,IAAA;AAMuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,oBAAA,IAAA,aAAA,oBAAA,oBAAA,EAAA;AAaW,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,IAAA,QAAA;AAehC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AAqBF,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,OAAA;AAIuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,YAAA;AAUvB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,SAAA,IAAA;AAMP,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,eAAA,IAAA,iBAAA,SAAA,GAAA,GAAA;AAQJ,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,QAAA,GAAA;AAGA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,MAAA,GAAA;AAcqB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,uBAAA,YAAA,GAAA;AACrB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,MAAA;AAGC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,QAAA,YAAA,IAAA,CAAA;AAYF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,MAAA;AAKQ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,MAAA;AAcoB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,cAAA;AA8C3B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,WAAA;AAGwB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,uBAAA,OAAA;AAWpB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,KAAA,GAAA;AAI8B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,uBAAA,iBAAA;AAQA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,uBAAA,QAAA;AAShC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,uBAAA,KAAA,GAAA;AAUqB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,uBAAA,cAAA;AAEpB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,SAAA,YAAA,IAAA,CAAA;AAMF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,WAAA,MAAA;AAOY,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAgDK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAGV,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;AAOV,QAAA,oBAAA;AAAA,QAAA,qBAAA,YAAA,EAAA,EAAe,gBAAA,IAAA;AASC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,aAAA;;;;;;6EDlalC,mBAAiB,EAAA,WAAA,qBAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AK3CxB,IAAO,oBAAP,MAAO,mBAAiB;EAL9B,cAAA;AAME,SAAA,iBAAiB;;;;uCADN,oBAAiB;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,OAAA,KAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,QAAA,QAAA,MAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,GAAA,UAAA,aAAA,WAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,cAAA,WAAA,cAAA,QAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,SAAA,cAAA,GAAA,CAAA,QAAA,QAAA,YAAA,EAAA,GAAA,CAAA,GAAA,UAAA,QAAA,0BAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,QAAA,UAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,aAAA,SAAA,GAAA,CAAA,OAAA,IAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,QAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,cAAA,qBAAA,QAAA,MAAA,GAAA,CAAA,OAAA,4CAAA,OAAA,iBAAA,gBAAA,SAAA,cAAA,OAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,aAAA,WAAA,MAAA,GAAA,CAAA,MAAA,eAAA,GAAA,CAAA,QAAA,UAAA,eAAA,UAAA,gBAAA,SAAA,gBAAA,OAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACP9B,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AAEd,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,CAAA,EACuB,GAAA,KAAA,EAC/B,GAAA,eAAA,EACY,IAAA,uBAAA,CAAA,EACqB,IAAA,4BAAA,EACJ,IAAA,iBAAA;AACR,QAAA,iBAAA,IAAA,WAAA;AAAQ,QAAA,uBAAA,EAAkB;AAE9C,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAwC,IAAA,OAAA,CAAA,EACrB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACd,QAAA,yBAAA,IAAA,kBAAA,CAAA,EAAyD,IAAA,YAAA,EAC3C,IAAA,cAAA,CAAA;AACc,QAAA,iBAAA,IAAA,IAAA;AAAE,QAAA,uBAAA;AAC1B,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,OAAA;AAAI,QAAA,uBAAA;AACjB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA,EAAa,EACrB,EACE;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,cAAA;AAAY,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,aAAA;AAAW,QAAA,uBAAA;AAClB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACd,QAAA,yBAAA,IAAA,kBAAA,CAAA,EAAyD,IAAA,YAAA,EAC3C,IAAA,cAAA,CAAA;AACc,QAAA,iBAAA,IAAA,IAAA;AAAE,QAAA,uBAAA;AAC1B,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,OAAA;AAAI,QAAA,uBAAA;AACjB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA,EAAa,EACrB,EACE;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACd,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,aAAA;AAAW,QAAA,uBAAA;AAClB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA;AAChB,QAAA,yBAAA,IAAA,kBAAA,CAAA,EAAyD,IAAA,YAAA,EAC3C,IAAA,cAAA,CAAA;AACc,QAAA,iBAAA,IAAA,IAAA;AAAE,QAAA,uBAAA;AAC1B,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,OAAA;AAAI,QAAA,uBAAA;AACjB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA;AACnB,QAAA,yBAAA,IAAA,YAAA;AAAa,QAAA,iBAAA,IAAA,SAAA;AAAM,QAAA,uBAAA,EAAa,EACrB,EACE;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,gBAAA;AAAc,QAAA,uBAAA;AACrB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AACb,QAAA,yBAAA,IAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAEnB,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiB,IAAA,OAAA;AACR,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACd,QAAA,yBAAA,IAAA,kBAAA,CAAA,EAAyD,IAAA,YAAA,EAC3C,IAAA,cAAA,CAAA;AACc,QAAA,iBAAA,KAAA,IAAA;AAAE,QAAA,uBAAA;AAC1B,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,OAAA;AAAI,QAAA,uBAAA;AACjB,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,SAAA;AAAM,QAAA,uBAAA;AACnB,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,SAAA;AAAM,QAAA,uBAAA,EAAa,EACrB,EACE;AAGnB,QAAA,yBAAA,KAAA,OAAA,CAAA,EAAiB,KAAA,OAAA;AACR,QAAA,iBAAA,KAAA,YAAA;AAAU,QAAA,uBAAA;AACjB,QAAA,yBAAA,KAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,KAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB;AAGnB,QAAA,yBAAA,KAAA,OAAA,CAAA;AACE,QAAA,iBAAA,KAAA,QAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,KAAA,OAAA,CAAA;AACE,QAAA,iBAAA,KAAA,QAAA;AACF,QAAA,uBAAA,EAAM;AAGR,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAqD,KAAA,UAAA,EAAA;AACU,QAAA,iBAAA,KAAA,QAAA;AAAM,QAAA,uBAAA;AACnE,QAAA,yBAAA,KAAA,UAAA,EAAA;AAAuC,QAAA,iBAAA,KAAA,MAAA;AAAI,QAAA,uBAAA,EAAS,EAChD;AAIR,QAAA,yBAAA,KAAA,qBAAA,EAAqB,KAAA,4BAAA,EACS,KAAA,iBAAA;AACR,QAAA,iBAAA,KAAA,YAAA;AAAS,QAAA,uBAAA,EAAkB;AAa/C,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,OAAA,CAAA,EACC,KAAA,OAAA,EAAA,EACwC,KAAA,SAAA,EAAA;AAC5B,QAAA,iBAAA,KAAA,gBAAA;AAAc,QAAA,uBAAA;AACzC,QAAA,yBAAA,KAAA,kBAAA,CAAA;AACE,QAAA,oBAAA,KAAA,SAAA,EAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,KAAA,UAAA,EAAA;AAAuC,QAAA,iBAAA,KAAA,MAAA;AAAI,QAAA,uBAAA,EAAS,EAChD;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,iBAAA,KAAA,QAAA;AACF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,OAAA,CAAA,EACD,KAAA,OAAA,EAAA;AAEb,QAAA,iBAAA,KAAA,sDAAA;AACA,QAAA,oBAAA,KAAA,OAAA,EAAA;AAEF,QAAA,uBAAA,EAAM,EACF,EACF;AAIR,QAAA,yBAAA,KAAA,qBAAA,EAAqB,KAAA,4BAAA,EACS,KAAA,iBAAA;AACR,QAAA,iBAAA,KAAA,eAAA;AAAY,QAAA,uBAAA,EAAkB;AAGlD,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,OAAA,CAAA,EACC,KAAA,OAAA,EAAA,EACwC,KAAA,SAAA,EAAA;AAC5B,QAAA,iBAAA,KAAA,UAAA;AAAQ,QAAA,uBAAA;AACnC,QAAA,yBAAA,KAAA,kBAAA,CAAA,EAAyD,KAAA,YAAA,EAC3C,KAAA,cAAA,CAAA;AACc,QAAA,iBAAA,KAAA,IAAA;AAAE,QAAA,uBAAA;AAC1B,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,OAAA;AAAI,QAAA,uBAAA;AACjB,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,SAAA;AAAM,QAAA,uBAAA;AACnB,QAAA,yBAAA,KAAA,YAAA;AAAa,QAAA,iBAAA,KAAA,SAAA;AAAM,QAAA,uBAAA,EAAa,EACrB;AAGf,QAAA,yBAAA,KAAA,UAAA,EAAA;AAAuC,QAAA,iBAAA,KAAA,MAAA;AAAI,QAAA,uBAAA,EAAS,EAChD;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAwB,KAAA,OAAA,EAAA,EACwC,KAAA,SAAA,EAAA;AACjC,QAAA,iBAAA,KAAA,gBAAA;AAAc,QAAA,uBAAA;AACzC,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAwB,KAAA,UAAA,EAAA;AAGpB,QAAA,oBAAA,KAAA,OAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACF,EACF;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAqD,KAAA,UAAA,EAAA;AACU,QAAA,iBAAA,KAAA,QAAA;AAAM,QAAA,uBAAA;AACnE,QAAA,yBAAA,KAAA,UAAA,EAAA;AAAuC,QAAA,iBAAA,KAAA,MAAA;AAAI,QAAA,uBAAA,EAAS,EAChD,EACc,EA2CR,EACZ,EACF,EACF,EACF,EACF;;;;;;6EDhQK,mBAAiB,EAAA,WAAA,qBAAA,UAAA,yDAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;AEKxB,IAAO,uBAAP,MAAO,sBAAoB;EAO/B,YAAmB,cAAoC,aAAwC,aACtF,eAAqC,2BAAoD;AAD/E,SAAA,eAAA;AAAoC,SAAA,cAAA;AAAwC,SAAA,cAAA;AACtF,SAAA,gBAAA;AAAqC,SAAA,4BAAA;AALvC,SAAA,mBAAmB,IAAI,YAAW;AAClC,SAAA,iBAAiB;AAKtB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,qBAAoB;IACxC;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;IACxC,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,mBAAmB,IAAI,YAAW;AACvC,SAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;AACzD,SAAK,sBAAqB;EAC5B;EAEO,wBAAqB;AAE1B,SAAK,YAAY,sBAAsB,KAAK,cAAc,eAAe,aAAa,YAAY,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AAC3H,WAAK,mBAAmB,KAAK;AAC7B,WAAK,iBAAiB,KAAK,aAAa;AACxC,WAAK,cAAc,KAAK,gBAAgB,KAAK,gBAAgB;IAC/D,GAAG,OAAM,MAAK;AACZ,WAAK,mBAAmB;IAC1B,EAAC,CAAC;EACJ;EAEO,QAAK;AACV,SAAK,iBAAiB,cAAc;AACpC,SAAK,mBAAmB,UAAS;AACjC,SAAK,cAAc,KAAK,gBAAgB,KAAK,gBAAgB;EAE/D;EAEO,mBAAgB;AACrB,SAAK,YAAY,IAAI,aAAa,EAAE,cAAc,CAAC,WAAW,UAAU,GAAG,CAAC,CAAC;AAC7E,SAAK,YAAY,SAAS,aAAa,EAAE,SAAS,IAAI;EACxD;EAEO,qBAAkB;AACvB,SAAK,YAAY,IAAI,aAAa,EAAE,cAAc,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;EACpG;EAEO,wBAAqB;AAC1B,QAAI,KAAK,YAAY,SAAS,aAAa,EAAE,SAAS,QAAQ,KAAK,YAAY,SAAS,aAAa,EAAE,SAAS;AAC9G,WAAK,YAAY,IAAI,aAAa,EAAE,UAAU,EAAE,UAAU,KAAI,CAAE;EACpE;EAEO,oBAAiB;AAEtB,QAAI,KAAK,YAAY,SAAS,aAAa,EAAE,SAAS,QAAQ,KAAK,YAAY,SAAS,aAAa,EAAE,SAAS,IAAI;AAClH,UAAI,KAAK,YAAY,UAAU,SAAS;AAEtC,aAAK,iBAAiB,cAAc,KAAK,YAAY,SAAS,aAAa,EAAE;AAC7E,aAAK,iBAAiB,YAAY,IAAI,KAAK,aAAa;AACxD,aAAK,YAAY,kBAAkB,KAAK,gBAAgB,EAAE,UAAU,EAAC,MAAK,MAAK;AAC7E,eAAK,MAAK;AACV,eAAK,QAAQ,KAAK,aAAa,oBAAoB,qBAAqB;QAC1E,GAAG,OAAM,MAAK;AAEZ,eAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;QAC1D,EAAC,CAAC;MACJ;IACF,OACK;AACH,WAAK,YAAY,IAAI,aAAa,EAAE,UAAU,EAAE,UAAU,KAAI,CAAE;IAClE;EAEF;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,QAAQ,MAAM,MAAM,KAAK;EAM3J;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,QAAQ,SAAS,YAAY,MAAM,SAAS;MAC5C,SAAS,SAAS;MAClB,eAAe,CAAC,SAAS,aAAa,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC,CAAC;KAC3G;EACH;;;uCAnGW,uBAAoB,4BAAA,YAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,yBAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;ACZjC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AAEd,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACa,GAAA,OAAA,CAAA,EACU,GAAA,KAAA,EAC/B,GAAA,iBAAA,CAAA,EACkB,IAAA,uBAAA,CAAA,EAEsC,IAAA,4BAAA,EAC3B,IAAA,mBAAA,CAAA;AACe,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA,EAAkB;AAGzG,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA8C,IAAA,OAAA,EAAA,EAClB,IAAA,OAAA,EAAA,EACyC,IAAA,SAAA,EAAA;AAC5B,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AAClF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAM,EACF,EACF;AAIR,QAAA,yBAAA,IAAA,uBAAA,CAAA,EAAyD,IAAA,4BAAA,EAC3B,IAAA,iBAAA;AACR,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA,EAAkB;AAErF,QAAA,yBAAA,IAAA,QAAA,IAAA,CAAA,EAAgF,IAAA,OAAA,EAAA,EAChD,IAAA,OAAA,EAAA,EACF,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA;AACpE,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB,EAGb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,OAAA,EAAA,EACiD,IAAA,SAAA,EAAA;AAC5B,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA;AACjF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA8C,IAAA,OAAA,EAAA,EAClB,IAAA,OAAA,EAAA,EACkC,IAAA,SAAA,EAAA;AAC7B,QAAA,iBAAA,EAAA;AAAuD,QAAA,uBAAA;AAClF,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyD,IAAA,YAAA,EAAA;AAErD,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,mBAAA,CAAoB;QAAA,CAAA,EAAC,YAAA,SAAA,8DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAa,IAAA,sBAAA,CAAuB;QAAA,CAAA;AACO,QAAA,uBAAA,EAAW,EACvE,EACb,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,UAAA,EAAA;AAGnC,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA;AACrE,QAAA,yBAAA,IAAA,UAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,kBAAA,CAAmB;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA2C,QAAA,uBAAA,EAAS,EAChF,EACD,EAEa,EACR,EACZ,EACF,EACF,EACF,EACF;;;AAnEmD,QAAA,oBAAA,EAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,QAAA,GAAA;AAMF,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,UAAA;AACnC,QAAA,oBAAA;AAAA,QAAA,6BAAA,UAAA,IAAA,gBAAA,GAAA;AASc,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,WAAA,GAAA;AAEd,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,WAAA;AAI6B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AAUY,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,KAAA;AAWZ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,kBAAA;AAIvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,oBAAA,uBAAA;AAQkB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,MAAA;AAEM,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,MAAA;;;;;;6ED/DvC,sBAAoB,EAAA,WAAA,wBAAA,UAAA,mFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEE3B,IAAO,gBAAP,MAAO,eAAa;EAOxB,YAAmB,eAAqC,aAAiC,cAAoC,OAAsB,gBAAwC,QAAwB,cAAsB;AAAtN,SAAA,gBAAA;AAAqC,SAAA,cAAA;AAAiC,SAAA,eAAA;AAAoC,SAAA,QAAA;AAAsB,SAAA,iBAAA;AAAwC,SAAA,SAAA;AAAwB,SAAA,eAAA;AAJ5M,SAAA,SAAgB,CAAA;AACvB,SAAA,iBAAiB;AAIf,SAAK,MAAM,SAAS,eAAe;AACnC,SAAK,UAAU,YAAY,SAAS,SAAS,WAAW,aAAa,aAAa,SAAS,OAAO;AAClG,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,cAAa;IACjC;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,cAAa;IACjC,CAAC;EACH;EAEA,WAAQ;AACN,QAAI,aAAa,QAAQ,aAAa,KAAK,QAAQ;AACjD,WAAK,aAAa,KAAK,uBAAuB;QAC5C,UAAU;QACV,UAAU;QACV,YAAY;OACb;IACH;AACA,SAAK,cAAc,QAAQ,KAAK,aAAa,kBAAkB,KAAK,aAAa,aAAa,EAAE,UAAU,UAAO;AAC/G,WAAK,SAAS,KAAK;IACrB,CAAC;EAEH;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEO,gBAAa;AAClB,QAAI,UAAU;AACd,SAAK,OAAO,CAAC,EAAE,cAAc,QAAQ,aAAU;AAC7C,iBAAW;AACX,iBAAW;AACX,iBAAW,KAAK,OAAO,CAAC,EAAE;AAC1B,iBAAW;AACX,iBAAW;AACX,iBAAW,QAAQ;AACnB,iBAAW;AACX,iBAAW;IACb,CAAC;AAED,MAAE,eAAe,EAAE,MAAK;AACxB,MAAE,eAAe,EAAE,OAAO,OAAO;EAEnC;;;uCA5DW,gBAAa,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAAb,gBAAa,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,WAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,MAAA,QAAA,GAAA,KAAA,CAAA,GAAA,UAAA,SAAA,uBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACd1B,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAoC,GAAA,KAAA;AAGhC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA;AAEf,QAAA,oBAAA,GAAA,SAAA;AACF,QAAA,uBAAA,EAAM,EACF,EACF;;;;;;6EDDK,eAAa,EAAA,WAAA,iBAAA,UAAA,iDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGJR,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFkD,IAAA,qBAAA,SAAA,YAAA,EAAA;AAChD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,MAAA,GAAA;;;;;AASR,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;AAA2B,IAAA,qBAAA,aAAA,OAAA,eAAA,wBAAA;;;;;AAC3B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiG,GAAA,GAAA;AAC5F,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA,EAAI;;;ADX7B,IAAO,mCAAP,MAAO,kCAAgC;EAS3C,YAAmB,eAAqC,cAAoC,gBAAwC,QAAwB,2BAAoD;AAA7L,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAoC,SAAA,iBAAA;AAAwC,SAAA,SAAA;AAAwB,SAAA,4BAAA;AAPrJ,SAAA,4BAAmC,CAAA;AACnC,SAAA,gBAAgB;AACvB,SAAA,iBAAiB;AACV,SAAA,gBAAwB,aAAa,iBAAiB,SAAY,OAAO,aAAa,aAAa,IAAI,WAAW;AAKvH,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,iCAAgC;IACpD;AACA,SAAK,YAAW;EAClB;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,iCAAgC;IACpD,CAAC;EACH;EAEO,cAAW;AAChB,SAAK,cAAc,mBAAkB,EAAG,UAAU,UAAO;AACvD,WAAK,eAAe,KAAK;IAC3B,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;EAEO,iBAAiB,GAAC;AACvB,SAAK,gBAAgB,EAAE;AACvB,SAAK,OAAO,SAAS,CAAC,8BAA8B,KAAK,aAAa,CAAC;AACvE,SAAK,OAAO,KAAK,aAAa;EAEhC;EAEO,OAAO,QAAM;AAClB,SAAK,cAAc,2BAA2B,QAAQ,KAAK,aAAa,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AACjG,WAAK,4BAA4B,KAAK;AACtC,WAAK,gBAAgB,KAAK,aAAa,SAAS,KAAK,KAAK,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,EAAE,gBAAgB,KAAK,aAAa,CAAC,EAAE,gBAAgB;IACzJ,GAAG,OAAM,MAAK;AACZ,WAAK,0BAA0B,QAAQ,SAAS,KAAK,aAAa,uBAAuB,kCAAkC,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK;IAC5L,EAAC,CAAC;EACJ;EAEA,WAAQ;AACN,SAAK,eAAe,OAAO,UAAU,YAAS;AAC5C,WAAK,gBAAgB,OAAO,OAAO,YAAY,CAAC;AAChD,YAAM,YAAY,OAAO,WAAW;AACpC,UAAI,WAAW;AACb,aAAK,gBAAgB,OAAO,SAAS;MACvC;AACA,WAAK,OAAO,KAAK,aAAa;IAChC,CAAC;EAEH;;;uCA5DW,mCAAgC,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,yBAAA,CAAA;IAAA;EAAA;;yEAAhC,mCAAgC,WAAA,CAAA,CAAA,gCAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,QAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,cAAA,OAAA,GAAA,CAAA,cAAA,WAAA,cAAA,QAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,eAAA,mBAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,QAAA,QAAA,GAAA,CAAA,cAAA,UAAA,OAAA,yCAAA,OAAA,KAAA,GAAA,CAAA,GAAA,aAAA,GAAA,MAAA,GAAA,CAAA,SAAA,0DAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,SAAA,cAAA,UAAA,cAAA,KAAA,CAAA,GAAA,UAAA,SAAA,0CAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACX7C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACD,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EAClD,GAAA,OAAA,CAAA,EACsC,GAAA,OAAA,CAAA,EAC9B,GAAA,OAAA,CAAA,EAE4B,GAAA,kBAAA,CAAA,EACU,GAAA,cAAA,CAAA;AACxB,QAAA,2BAAA,eAAA,SAAA,4EAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,eAAA,MAAA,MAAA,IAAA,gBAAA;AAAA,iBAAA;QAAA,CAAA;AAA0B,QAAA,qBAAA,mBAAA,SAAA,gFAAA,QAAA;AAAA,iBAAmB,IAAA,iBAAA,MAAA;QAAwB,CAAA;AAClG,QAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,cAAA,CAAA;AAGF,QAAA,uBAAA,EAAa,EACE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAAuD,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA;AAIzD,QAAA,uBAAA,EAAM,EACF,EACF,EACF,EACF;;;AAnBuC,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,SAAA,IAAA,aAAA;AACI,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,YAAA;AAUjC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,aAAA;AAC+D,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,EAAA;;;;;;6EDVpE,kCAAgC,EAAA,WAAA,oCAAA,UAAA,6FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AG0CzB,IAAA,yBAAA,GAAA,aAAA,EAAA;AAC6B,IAAA,iBAAA,CAAA;AAAmE,IAAA,uBAAA;;;;AAAnE,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,wBAAA,0BAAA;;;;;AAsDnB,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,SAAA,WAAA,SAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFkD,IAAA,qBAAA,SAAA,cAAA,YAAA;AAChD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,gBAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFwD,IAAA,qBAAA,SAAA,eAAA,SAAA;AACtD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,eAAA,aAAA,GAAA;;;ADrH1B,IAAO,uBAAP,MAAO,sBAAoB;EAY/B,YAAoB,IAA+B,cAAmC,eAAsC,UAA2B,QAAuB,eAAsC,cAA+B,2BAA8D,MAAiB;AAA9S,SAAA,KAAA;AAA+B,SAAA,eAAA;AAAmC,SAAA,gBAAA;AAAsC,SAAA,WAAA;AAA2B,SAAA,SAAA;AAAuB,SAAA,gBAAA;AAAsC,SAAA,eAAA;AAA+B,SAAA,4BAAA;AAA8D,SAAA,OAAA;AAR1S,SAAA,cAAqB,CAAA;AACrB,SAAA,aAAoB,CAAA;AACpB,SAAA,kBAAyB,CAAA;AAEhC,SAAA,UAAU,oBAAI,KAAI;AAKhB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,qBAAoB;IACxC;EACF;EAEA,WAAQ;AACN,SAAK,YAAY,KAAK,gBAAgB,IAAI,aAAW;AACrD,SAAK,gBAAe;AACpB,SAAK,KAAK,QAAQ,UAAU,UAAO;AACjC,WAAK,OAAO;AACZ,WAAK,YAAY;IACnB,CAAC;AACD,SAAK,mBAAkB;EACzB;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,yBAAwB;IAC5C,CAAC;EACH;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,GAAG,MAAM;MACnB,UAAU,KAAK,cAAc;MAC7B,qBAAqB,CAAC,SAAS,qBAAqB,WAAW,UAAU,EAAE,CAAC;MAC5E,aAAa,CAAC,SAAS,aAAa,WAAW,QAAQ;MACvD,iBAAiB,CAAC,SAAS,iBAAiB,WAAW,UAAU,GAAG,CAAC;MACrE,MAAM,CAAC,SAAS,MAAM,WAAW,UAAU,EAAE,CAAC;MAC9C,wBAAwB,CAAC,SAAS,wBAAwB,WAAW,UAAU,EAAE,CAAC;MAClF,WAAW,CAAC,SAAS,WAAW,WAAW,UAAU,EAAE,CAAC;MACxD,gBAAgB,CAAC,SAAS,gBAAgB,WAAW,QAAQ;MAC7D,YAAY,CAAC,SAAS,YAAY,WAAW,QAAQ;MACrD,aAAa,CAAC,SAAS,aAAa,WAAW,QAAQ;MACvD,OAAO,CAAC,SAAS,OAAO,WAAW,UAAU,GAAG,CAAC;KAClD;EACH;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,wBAAwB,SAAS,KAAK,aAAa,uBAAuB,QAAQ,MAAM,MAAM,KAAK;EAIvK;EAEA,qBAAkB;AAChB,UAAM,aAAa,KAAK,SAAS,UAAU,KAAK,UAAU,IAAI,aAAa,EAAE,OAAO,YAAY;AAChG,UAAM,SAAS;MACb,QAAQ,KAAK,cAAc;MAC3B,qBAAqB,KAAK,UAAU,IAAI,qBAAqB,EAAE;MAC/D,aAAa;MACb,iBAAiB,KAAK,UAAU,IAAI,iBAAiB,EAAE;MACvD,MAAM,KAAK,UAAU,IAAI,MAAM,EAAE;MACjC,wBAAwB,KAAK,UAAU,IAAI,wBAAwB,EAAE;MACrE,WAAW,KAAK,UAAU,IAAI,WAAW,EAAE;MAC3C,gBAAgB,KAAK,UAAU,IAAI,gBAAgB,EAAE;MACrD,YAAY,KAAK,UAAU,IAAI,YAAY,EAAE;MAC7C,aAAa,KAAK,UAAU,IAAI,aAAa,EAAE;MAC/C,yBAAyB,KAAK;MAC9B,OAAO,KAAK,UAAU,IAAI,OAAO,EAAE;;AAIrC,QAAI,KAAK,UAAU,UAAU,WAAW,KAAK,aAAa,KAAK,aAAa,QAAQ,KAAK,aAAa,QAAW;AAC/G,WAAK,cAAc,iBAAiB,MAAM,EAAE,UAAU,MAAK;AACzD,aAAK,gBAAe;AACpB,aAAK,aAAa,WAAU;AAE5B,aAAK,OAAO,SAAS,CAAC,oBAAoB,CAAC;AAC3C,aAAK,YAAY;AACjB,aAAK,0BAA0B,QAAQ,SAAS,KAAK,aAAa,wBAAwB,2BAA2B,KAAK,aAAa,wBAAwB,SAAS,UAAU,MAAM,MAAM,KAAK;MAIrM,CAAC;IACH,WACS,KAAK,UAAU,UAAU,WAAW;AAC3C,WAAK,QAAQ,KAAK,aAAa,wBAAwB,0BAA0B;IACnF,WACS,KAAK,WAAW;AACvB,WAAK,QAAQ,KAAK,aAAa,wBAAwB,0BAA0B;AACjF,WAAK,YAAY;IACnB,OAAO;AACL,WAAK,QAAQ,KAAK,aAAa,wBAAwB,0BAA0B;AACjF,WAAK,UAAU,OAAM;AACrB,WAAK,YAAY;IACnB;EACF;EAEO,qBAAkB;AACvB,SAAK,cAAc,eAAe,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AACrF,WAAK,MAAM,KAAK,aAAa,CAAC,EAAE;IAClC,CAAC;EACH;EAEA,kBAAe;AACb,SAAK,cAAc,gBAAe,EAAG,UAAU,UAAO;AACpD,WAAK,cAAc,KAAK,aAAa;AACrC,WAAK,aAAa,KAAK,aAAa;AACpC,WAAK,kBAAkB,KAAK,aAAa;IAC3C,CAAC;EACH;EAEO,UAAU,KAAG;AAClB,UAAM,eAAe,IAAI,KAAK,GAAG;AACjC,UAAM,QAAQ,oBAAI,KAAI;AACtB,UAAM,aAAa,oBAAI,KAAI;AAC3B,eAAW,QAAQ,MAAM,QAAO,IAAK,EAAE;AACvC,eAAW,SAAS,CAAC;AACrB,eAAW,WAAW,CAAC;AACvB,eAAW,WAAW,CAAC;AAEvB,QAAI,aAAa,cAAc;AAC7B,WAAK,YAAY;IACnB,WAAW,OAAO,UAAa,OAAO,MAAM;AAC1C,WAAK,YAAY;AACjB,WAAK,QAAQ,KAAK,aAAa,wBAAwB,0BAA0B;IACnF,WAAW,QAAQ,QAAW;AAC5B,WAAK,YAAY;IACnB;EACF;;;uCAxIW,uBAAoB,4BAAA,kBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,UAAA,CAAA,6BAFpB,CAAC,QAAQ,CAAC,CAAA,GAAA,OAAA,KAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,MAAA,SAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,EAAA,GAAA,CAAA,YAAA,IAAA,cAAA,QAAA,YAAA,EAAA,GAAA,CAAA,eAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,QAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,QAAA,QAAA,WAAA,GAAA,CAAA,OAAA,OAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,aAAA,QAAA,GAAA,SAAA,KAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,WAAA,GAAA,CAAA,GAAA,OAAA,OAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,aAAA,WAAA,aAAA,GAAA,CAAA,OAAA,IAAA,GAAA,MAAA,GAAA,CAAA,cAAA,WAAA,cAAA,QAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,gBAAA,OAAA,mBAAA,uBAAA,aAAA,MAAA,GAAA,aAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,aAAA,WAAA,eAAA,WAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,SAAA,GAAA,CAAA,YAAA,IAAA,YAAA,IAAA,YAAA,IAAA,mBAAA,eAAA,YAAA,IAAA,GAAA,iBAAA,iBAAA,eAAA,KAAA,GAAA,CAAA,aAAA,IAAA,GAAA,KAAA,GAAA,CAAA,YAAA,OAAA,GAAA,CAAA,SAAA,sBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,mBAAA,aAAA,WAAA,aAAA,GAAA,CAAA,YAAA,IAAA,aAAA,OAAA,mBAAA,mBAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,gBAAA,OAAA,mBAAA,QAAA,aAAA,MAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,0BAAA,aAAA,MAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,aAAA,aAAA,MAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,kBAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,mBAAA,cAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,eAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,YAAA,IAAA,aAAA,OAAA,mBAAA,SAAA,GAAA,aAAA,GAAA,CAAA,GAAA,QAAA,aAAA,MAAA,GAAA,CAAA,GAAA,QAAA,WAAA,GAAA,CAAA,GAAA,UAAA,QAAA,0BAAA,QAAA,WAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,cAAA,sBAAA,GAAA,QAAA,UAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,KAAA,GAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;AChBvB,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AAEd,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACW,GAAA,OAAA,CAAA,EACY,GAAA,OAAA,CAAA,EACZ,GAAA,iBAAA,CAAA,EACD,IAAA,uBAAA,CAAA,EACsC,IAAA,4BAAA,EAC3B,IAAA,mBAAA,CAAA;AACc,QAAA,iBAAA,EAAA;AAA+D,QAAA,uBAAA,EAAkB;AAE3H,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,KAAA,EAAA;AACQ,QAAA,iBAAA,EAAA;AAAiE,QAAA,uBAAA;AAC3F,QAAA,yBAAA,IAAA,OAAA,EAAA;AAA+D,QAAA,oBAAA,IAAA,OAAA,EAAA;AAA6B,QAAA,uBAAA;AAC5F,QAAA,yBAAA,IAAA,KAAA,EAAA;AAA0B,QAAA,iBAAA,EAAA;AAAsD,QAAA,uBAAA;AAChF,QAAA,yBAAA,IAAA,KAAA,EAAA;AAA8C,QAAA,iBAAA,EAAA;AAC9C,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAiD,IAAA,OAAA,EAAA,EACjB,IAAA,OAAA,EAAA,EACF,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AAEpD,QAAA,iBAAA,EAAA;AAA4D,QAAA,uBAAA;AAC3E,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EACuD,IAAA,SAAA,EAAA;AAClD,QAAA,iBAAA,EAAA;AAAoD,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,kBAAA,EAAA,EACsB,IAAA,SAAA,EAAA;AAG0B,QAAA,qBAAA,iBAAA,SAAA,8DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,UAAA,MAAA,CAAiB;QAAA,CAAA;AAFhF,QAAA,uBAAA;AAIA,QAAA,oBAAA,IAAA,yBAAA,EAAA,EAA2E,IAAA,kBAAA,IAAA,CAAA;AAE7E,QAAA,uBAAA,EAAiB,EACb,EACF;AAER,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,aAAA,EAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,OAAA,EAAA,EACP,IAAA,OAAA,EAAA,EAC0C,IAAA,SAAA,EAAA;AACrC,QAAA,iBAAA,EAAA;AAAwD,QAAA,uBAAA;AACnF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,YAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,OAAA,EAAA,EACP,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAA6C,QAAA,uBAAA;AACxE,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEF,QAAA,uBAAA,EAAiB,EACb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AAEpD,QAAA,iBAAA,EAAA;AAA+D,QAAA,uBAAA;AAC9E,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAAkD,QAAA,uBAAA;AAC7E,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,OAAA,EAAA,EACP,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAAuD,QAAA,uBAAA;AAClF,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyD,IAAA,cAAA,EAAA;AAGrD,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa,EACE,EACb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAAmD,QAAA,uBAAA;AAC9E,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyD,IAAA,cAAA,EAAA;AAGrD,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa,EACE,EACb;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,OAAA,EAAA,EAC6C,IAAA,SAAA,EAAA;AACxC,QAAA,iBAAA,EAAA;AAAoD,QAAA,uBAAA;AAC/E,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAyD,IAAA,cAAA,EAAA;AAGrD,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa,EACE,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,OAAA,EAAA,EACP,IAAA,OAAA,EAAA,EAC0C,IAAA,SAAA,EAAA;AACrC,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA;AACzE,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,YAAA,EAAA;AAGF,QAAA,uBAAA,EAAiB,EACb,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiC,IAAA,IAAA;AAC3B,QAAA,iBAAA,EAAA;AAA0D,QAAA,uBAAA;AAC9D,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,GAAA;AAA8D,QAAA,uBAAA,EAAI;AAGvE,QAAA,yBAAA,KAAA,OAAA,EAAA,EAA4B,KAAA,IAAA;AACtB,QAAA,iBAAA,GAAA;AAA0D,QAAA,uBAAA;AAC9D,QAAA,yBAAA,KAAA,GAAA;AAAG,QAAA,iBAAA,GAAA;AAA8D,QAAA,uBAAA,EAAI;AAKvE,QAAA,yBAAA,KAAA,OAAA,EAAA,EAA+D,KAAA,UAAA,EAAA;AAE3B,QAAA,iBAAA,GAAA;AAA+C,QAAA,uBAAA;AACjF,QAAA,yBAAA,KAAA,UAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,mBAAA,CAAoB;QAAA,CAAA;AAAE,QAAA,iBAAA,GAAA;AAA+C,QAAA,uBAAA,EAAS,EACrF,EACD,EAEH,EACc,EACR,EACZ,EACF,EACF,EACF,EACF;;;;AAvKkD,QAAA,oBAAA,EAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,sBAAA;AAGd,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,wBAAA;AAC0C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,OAAA,IAAA,KAAA,uBAAA;AAC1C,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,aAAA;AACoB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,wBAAA,eAAA,GAAA;AAExC,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,SAAA;AAKiB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,mBAAA;AAGX,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,aAAA;AAQuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,WAAA;AACU,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAI,OAAA,IAAA,SAAA,CAAA;AAEnB,QAAA,oBAAA;AAAA,QAAA,qBAAA,iBAAA,YAAA,EAA2B,eAAA,IAAA,aAAA,wBAAA,WAAA,EACuB,OAAA,IAAA,OAAA;AAGjC,QAAA,oBAAA;AAAA,QAAA,qBAAA,OAAA,YAAA;AAM7B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;AAMqB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,eAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,oBAAA;AASuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,IAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,WAAA;AAOW,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,sBAAA;AAGX,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,6BAAA;AAOuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,SAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,gBAAA;AAUuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,cAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,qBAAA;AACgC,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,WAAA;AAST,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,UAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,mBAAA;AACmC,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AASZ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,WAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,oBAAA;AACoC,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,eAAA;AAYb,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,KAAA;AAGvB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,wBAAA,WAAA;AAQJ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,iBAAA;AACD,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,qBAAA;AAIC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,iBAAA;AACD,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,qBAAA;AAO+B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,MAAA;AAED,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,MAAA;;;;;;6ED1J1C,sBAAoB,EAAA,WAAA,wBAAA,UAAA,gFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AG4CP,IAAA,yBAAA,GAAA,aAAA,EAAA;AACuB,IAAA,iBAAA,CAAA;AAAqE,IAAA,uBAAA;;;;AAArE,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,wBAAA,4BAAA;;;;;AAGvB,IAAA,yBAAA,GAAA,aAAA,EAAA;AACuB,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA;;;;AAAvD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,wBAAA,cAAA;;;;;AAGvB,IAAA,yBAAA,GAAA,aAAA,EAAA;AACuB,IAAA,iBAAA,CAAA;AAA0D,IAAA,uBAAA;;;;AAA1D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,wBAAA,iBAAA;;;AD3D3C,IAAO,kCAAP,MAAO,iCAA+B;EAa1C,YAAmB,cAAoC,IAAgC,QAAuB,2BAA8D,MAAiB;AAA1K,SAAA,eAAA;AAAoC,SAAA,KAAA;AAAgC,SAAA,SAAA;AAAuB,SAAA,4BAAA;AAA8D,SAAA,OAAA;AAV5K,SAAA,WAAW;AACJ,SAAA,cAAc;AACd,SAAA,iBAAiB;AACjB,SAAA,oBAAoB;AAQzB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,yBAAwB;IAC5C;EACF;EAEA,WAAQ;AACN,SAAK,iBAAiB,KAAK,gBAAgB,IAAI,kBAAgB;EACjE;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK,aAAa;AAClD,WAAK,aAAa,yBAAwB;IAC5C,CAAC;EACH;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,GAAG,MAAM;MACnB,cAAc,CAAC,SAAS,cAAc,WAAW,QAAQ;KAC1D;EACH;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,wBAAwB,SAAS,KAAK,aAAa,uBAAuB,QAAQ,MAAM,MAAM,KAAK;EAIvK;EAEA,0BAAuB;AACrB,QAAI,KAAK,eAAe,UAAU,SAAS;AACzC,WAAK,OAAO,cAAc,QAAQ;IACpC,OACK;AACH,UAAI,KAAK,eAAe,UAAU,WAAW;AAC3C,aAAK,QAAQ,KAAK,aAAa,wBAAwB,4BAA4B;MACrF;IACF;EAEF;EAEA,cAAc,WAAc;AAC1B,SAAK,aAAa;AAElB,QAAI,UAAU,OAAO,SAAS,UAAU,OAAO,MAAM,CAAC,GAAG;AACvD,WAAK,WAAW;AAChB,WAAK,WAAW,UAAU,OAAO,MAAM,CAAC,EAAE;AAC1C,YAAM,KAAK,UAAU,OAAO,KAAK,EAAE,QAAQ,CAAC,SAAc;AACxD,YAAI,UAAU,OAAO,MAAM,CAAC,EAAE,OAAO,KAAS;AAE5C,cAAI,KAAK,YAAY,6EAA6E,KAAK,YAAY,qBACjH,KAAK,YAAY,wBAAwB,KAAK,YAAY,6EAC1D,KAAK,YAAY,gBAAgB,KAAK,YAAY,eAAe,KAAK,YAAY,eAAe,KAAK,YAAY,aAAa;AAC/H,iBAAK,YAAY,KAAK,OAAO;AAC7B,iBAAK,oBAAoB;AACzB,iBAAK,iBAAiB;UACxB,OACK;AACH,iBAAK,iBAAiB;AACtB,iBAAK,oBAAoB;AACzB,iBAAK,eAAe,SAAS,cAAc,EAAE,UAAU,EAAE,aAAa,KAAI,CAAE;UAC9E;QACF,OACK;AACH,cAAI,UAAU,OAAO,MAAM,CAAC,EAAE,OAAO,KAAS;AAE5C,iBAAK,oBAAoB;AACzB,iBAAK,iBAAiB;AACtB,iBAAK,eAAe,SAAS,cAAc,EAAE,UAAU,EAAE,aAAa,KAAI,CAAE;UAC9E;QACF;MACF,CAAC;AACD,YAAM,SAAS,IAAI,WAAU;AAE7B,aAAO,SAAS,CAAC,MAAU;AACzB,cAAM,QAAQ,IAAI,MAAK;AACvB,cAAM,MAAM,EAAE,OAAO;AACrB,aAAK,KAAK,QAAQ,KAAK,EAAE,OAAO,MAAM;MAExC;AACA,aAAO,cAAc,UAAU,OAAO,MAAM,CAAC,CAAC;IAChD,OACK;AACH,WAAK,WAAW;IAClB;EAEF;;;uCAvGW,kCAA+B,4BAAA,YAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAA/B,kCAA+B,WAAA,CAAA,CAAA,+BAAA,CAAA,GAAA,WAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;;ACZ5C,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AAEd,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACY,GAAA,OAAA,CAAA,EACW,GAAA,OAAA,CAAA,EACZ,GAAA,iBAAA,CAAA,EACD,IAAA,uBAAA,CAAA,EACsC,IAAA,8BAAA,CAAA,EACR,IAAA,mBAAA,EAAA;AACJ,QAAA,iBAAA,EAAA;AAA+D,QAAA,uBAAA,EAAkB;AAG5H,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AAE/B,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAgB,QAAA,iBAAA,EAAA;AAA4D,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,MAAA,EAAA,EAA4B,IAAA,IAAA;AACtB,QAAA,iBAAA,EAAA;AAAyD,QAAA,oBAAA,IAAA,OAAA,EAAA;AACO,QAAA,uBAAA;AACpE,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,iBAAA,EAAA;AACF,QAAA,yBAAA,IAAA,UAAA,EAAA;AACe,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA,EAAS;AAEzE,QAAA,yBAAA,IAAA,MAAA,EAAA,EAAqB,IAAA,MAAA;AAAM,QAAA,iBAAA,EAAA;AAAwD,QAAA,uBAAA;AACjF,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAiC,IAAA,UAAA,EAAA;AAEhB,QAAA,iBAAA,EAAA;AAAyD,QAAA,uBAAA;AACxE,QAAA,yBAAA,IAAA,UAAA,EAAA;AACe,QAAA,iBAAA,EAAA;AAA6C,QAAA,uBAAA;AAC5D,QAAA,yBAAA,IAAA,UAAA,EAAA;AACe,QAAA,iBAAA,EAAA;AAAiD,QAAA,uBAAA,EAAS,EACpE;AAET,QAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,KAAA;AACG,QAAA,iBAAA,EAAA;AAAiE,QAAA,uBAAA;AACtE,QAAA,yBAAA,IAAA,QAAA,EAAA,EAAsD,IAAA,kBAAA,EAAA,EAGE,IAAA,KAAA,EAC/C,IAAA,aAAA,EACU,IAAA,SAAA,IAAA,CAAA;AACK,QAAA,2BAAA,iBAAA,SAAA,yEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAAhB,QAAA,uBAAA;AAIA,QAAA,yBAAA,IAAA,YAAA,EAAA;AAAoB,QAAA,oBAAA,IAAA,OAAA,EAAA;AACH,QAAA,uBAAA,EAAW;AAE9B,QAAA,yBAAA,IAAA,SAAA,IAAA,CAAA;AACE,QAAA,qBAAA,UAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,MAAA,CAAqB;QAAA,CAAA;AADjC,QAAA,uBAAA,EAE6E,EACzE;AAER,QAAA,yBAAA,IAAA,KAAA;AACE,QAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,aAAA,EAAA;AAEF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA;AACE,QAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,aAAA,EAAA;AAEF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA;AACE,QAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,aAAA,EAAA;AAEF,QAAA,uBAAA,EAAM,EACD,EACJ;AAEP,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,UAAA,EAAA;AAEnC,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AACzE,QAAA,yBAAA,IAAA,UAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,wBAAA,CAAyB;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAA6C,QAAA,uBAAA,EAAS,EACxF,EACF,EAEc,EACR,EACZ,EACF,EACF,EACF,EACF;;;AA1EmD,QAAA,oBAAA,EAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,sBAAA;AAKvC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,wBAAA,2BAAA,GAAA;AAEc,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,mBAAA;AAEV,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,gBAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,wBAAA,QAAA,GAAA;AAEa,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,MAAA;AAEU,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,eAAA;AAGR,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,gBAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,IAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,QAAA;AAIZ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,wBAAA;AACC,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,cAAA;AAGF,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAC,MAAA,IAAA,WAAA,CAAA;AAGoB,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,QAAA;AAAuB,QAAA,qBAAA,kBAAA,0BAAA,IAAAC,IAAA,CAAA,EAAqC,eAAA,IAAA,aAAA,wBAAA,kCAAA;AAapE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA;AAIA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA;AAIA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA;AAQQ,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,MAAA;AAEY,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,wBAAA,IAAA;;;;;;6EDpE7C,iCAA+B,EAAA,WAAA,mCAAA,UAAA,0GAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;AGJhC,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA6D,GAAA,QAAA;AAAQ,IAAA,iBAAA,CAAA;AACV,IAAA,uBAAA,EAAS;;;;AADC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,cAAA;;;;;AAGrE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA2D,GAAA,QAAA;AAAQ,IAAA,iBAAA,CAAA;AAGN,IAAA,uBAAA,EAAS;;;;AAHH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,qBAAA,iBAAA,KAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA,KAAA,OAAA,aAAA,qBAAA,kBAAA,MAAA,OAAA,aAAA,qBAAA,kBAAA,EAAA;;;;;;AAYvD,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAE1B,IAAA,yBAAA,GAAA,UAAA;AAAU,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAW;;;;;;AAV1C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiF,GAAA,OAAA,EAAA,EACnD,GAAA,kBAAA,EAAA,EAC6E,GAAA,SAAA,EAAA;AACnE,IAAA,2BAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,MAAA,MAAA,OAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEhC,IAAA,qBAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAiB,OAAA,mBAAA,KAAA,MAAA,CAA+B;IAAA,CAAA;AAF5C,IAAA,uBAAA;AAGA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAgB,IAAA,oBAAA,GAAA,OAAA,EAAA;AAChB,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,UAAA,EAAA;AAIJ,IAAA,uBAAA,EAAiB,EACf;;;;AAV8B,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,UAAA;AAAyB,IAAA,qBAAA,eAAA,OAAA,aAAA,eAAA,mBAAA;AAKT,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;;;;;AAiChE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA8D,GAAA,QAAA;AAClD,IAAA,iBAAA,CAAA;AAA0D,IAAA,uBAAA,EAAS;;;;AAAnE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,kBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,GAAA,QAAA;AACJ,IAAA,uBAAA;;;;;;AAEI,IAAA,yBAAA,GAAA,gBAAA,EAAA;AAAc,IAAA,qBAAA,SAAA,SAAA,kFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAwB;IAAA,CAAA,EAAC,UAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,SACzB,OAAA,iBAAA,OAAA,MAAA,IAA+B,IAAI;IAAA,CAAA;AAE1D,IAAA,uBAAA;;;;;AAF4D,IAAA,qBAAA,WAAA,OAAA,WAAA,MAAA,CAAA;;;;;;AAG5D,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAiB,IAAA,2BAAA,iBAAA,SAAA,gGAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,MAAA,6BAAA,OAAA,gBAAA,MAAA,MAAA,OAAA,iBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACb,IAAA,yBAAA,GAAA,oBAAA,EAAA;AAAkB,IAAA,qBAAA,SAAA,SAAA,yFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAwB;IAAA,CAAA;AACnD,IAAA,uBAAA,EAAmB;;;;;AAFN,IAAA,2BAAA,WAAA,OAAA,cAAA;AAC8D,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,MAAA;;;;;AAI/E,IAAA,yBAAA,GAAA,KAAA;AACI,IAAA,oBAAA,GAAA,SAAA,EAAA,EACqB,GAAA,SAAA,EAAA;AAEzB,IAAA,uBAAA;;;AAFQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA;;;;;AAZZ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,gBAAA,EAAA,EAE4C,GAAA,wDAAA,GAAA,GAAA,mBAAA,EAAA,EAE2C,GAAA,4CAAA,GAAA,GAAA,OAAA,EAAA;AAU3F,IAAA,uBAAA;;;;;AAZS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,eAAA;AAE0C,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,gBAAA;AAKzC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,kBAAA,OAAA,iBAAA,OAAA,eAAA,YAAA;;;;;AASV,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,EAAA;;;;;AACJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAC3E,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;;AAHuC,IAAA,qBAAA,OAAA,YAAA,WAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,SAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAKJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,aAAA,EAAA;;;;;AACJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAkG,GAAA,QAAA,EAAA;AACjE,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;AAC7E,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;;AAHsD,IAAA,qBAAA,OAAA,YAAA,WAAA,YAAA,CAAA;AACrB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,WAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,EAAA;;;;;AACJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAEvF,IAAA,uBAAA;;;;;AAHuC,IAAA,qBAAA,OAAA,YAAA,YAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,SAAA;AAAsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,WAAA,GAAA;;;;;AAMvF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,SAAA,EAAA;;;;;AACJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAErF,IAAA,uBAAA;;;;;AAHuC,IAAA,qBAAA,OAAA,YAAA,YAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,OAAA;AAAoD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,eAAA,YAAA,SAAA,GAAA;;;;;AAMrF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,OAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAA0C,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAGnF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,OAAA,YAAA,YAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,KAAA;AAAkD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,aAAA,YAAA,OAAA,GAAA;;;;;AAOnF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,KAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAGjF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,OAAA,YAAA,YAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,GAAA;AAAgD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,cAAA,YAAA,QAAA,GAAA;;;;;AAOjF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AACtD,IAAA,uBAAA;;;;AADsD,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,KAAA,GAAA;;;;;AAEtD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAmF,GAAA,QAAA,EAAA;AAClD,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA;AAAQ,IAAA,iBAAA,CAAA;AAEjF,IAAA,uBAAA;;;;;AAHuC,IAAA,qBAAA,OAAA,YAAA,YAAA,YAAA,CAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,GAAA;AAAgD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,YAAA,KAAA,GAAA;;;;;AAKrF,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,SAAA,EAAA,EAA8D,GAAA,IAAA,EACtD,GAAA,IAAA;AACI,IAAA,iBAAA,CAAA;AAAmD,IAAA,uBAAA,EAAK,EAC3D;;;;AADG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,cAAA;;;;;;AAKZ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2B,GAAA,OAAA,EAAA;AAEnB,IAAA,oBAAA,GAAA,MAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoE,GAAA,OAAA,EAAA;AAE5D,IAAA,oBAAA,GAAA,OAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyC,GAAA,QAAA;AAAQ,IAAA,iBAAA,CAAA;AAEtC,IAAA,uBAAA,EAAS,EAAM;AAE9B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,IAAA,UAAA,EAAA;AACJ,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,SAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AACtB,IAAA,uBAAA;AAC/C,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AACD,IAAA,uBAAA,EAAS,EACjF;;;;AAT+C,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,qBAAA,qBAAA,GAAA;AAKoB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,MAAA;AAEM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,aAAA,QAAA,OAAA,IAAA,CAAA;;;;;;AAMnF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2B,GAAA,OAAA,EAAA;AAEnB,IAAA,oBAAA,GAAA,MAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoE,GAAA,OAAA,EAAA;AAE5D,IAAA,oBAAA,GAAA,OAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyC,GAAA,QAAA;AAAQ,IAAA,iBAAA,CAAA;AAEtC,IAAA,uBAAA,EAAS,EAAM;AAE9B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,IAAA,UAAA,EAAA;AAEzC,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,cAAA,OAAA,oBAAA,EAA0C,MAAA,CAAQ;IAAA,CAAA;AAAE,IAAA,iBAAA,EAAA;AAC3D,IAAA,uBAAA,EAAS,EACb;;;;AAR+C,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,qBAAA,qBAAA,GAAA;AAMgB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,kBAAA,EAAA;;;;;;AAO7E,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA4E,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AACzD,IAAA,uBAAA;;;;AADyD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,MAAA;;;;;;AAExG,IAAA,yBAAA,GAAA,UAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,eAAe,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,IAAA;;;;;;AAC7C,IAAA,yBAAA,GAAA,UAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,gBAAgB,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,IAAA;;;;;;AAC9C,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,gBAAgB,CAAC;IAAA,CAAA;AAC9C,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,QAAA;;;;;;AAC5C,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAc,cAAc,CAAC;IAAA,CAAA;AAC3C,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;;;;AAA/C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,OAAA;;;;;;AAC7C,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAAyC,IAAA,iBAAA,CAAA;AACxC,IAAA,uBAAA;;;;AADwC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,qBAAA,aAAA,QAAA,OAAA,IAAA,CAAA;;;ADlMhH,IAAO,wBAAP,MAAO,uBAAqB;EAyBhC,YACS,WACA,eACA,eACA,QACA,gBACA,cACA,mBACA,2BACA,aACC,OACD,QACC,eAA4B;AAX7B,SAAA,YAAA;AACA,SAAA,gBAAA;AACA,SAAA,gBAAA;AACA,SAAA,SAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACD,SAAA,SAAA;AACC,SAAA,gBAAA;AAlCV,SAAA,mBAAmB,CAAC,UAAU,aAAa,eAAe,aAAa,eAAe,aAAa,cAAc,KAAK;AACtH,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,oBAA2B,CAAA;AAK3B,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,MAAc,KAAK,QAAQ,KAAK;AAChC,SAAA,mBAA2B;AACpB,SAAA,cAAc;AACrB,SAAA,mBAAmB,IAAI,eAAoB,MAAM,CAAA,CAAE;AACnD,SAAA,iBAAiB;AACjB,SAAA,gBAAgB;AAChB,SAAA,uBAAuB;AACvB,SAAA,qBAAqB,IAAI,QAAO;AAEhC,SAAA,aAAa;AACb,SAAA,eAAoB;AAgBlB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,sBAAqB;IACzC;AACA,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,WAAW;AAEzC,SAAK,mBAAmB,KACtB,aAAa,GAAG,GAChB,qBAAoB,CAAE,EACrB,UAAU,WAAQ;AACjB,WAAK,kBAAkB,OAAO,aAAa;AAC3C,WAAK,kBAAkB,OAAO,SAAS;AACvC,WAAK,aAAa,IAAI,yBAAwB,CAAA,CAAE;AAChD,WAAK,eAAe,KAAK,kBAAkB,MAAM;IACnD,CAAC;EACL;EAEA,WAAQ;AACN,SAAK,eAAe,KAAK,kBAAkB,MAAM;EACnD;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,sBAAqB;IACzC,CAAC;EACH;EAEA,cAAW;AACT,SAAK,aAAa;AAClB,SAAK,mBAAmB,KAAK,KAAK,UAAU;EAC9C;EAEO,cAAc,SAAO;AAC1B,QAAI,KAAK,iBAAiB,SAAS,SAAS,GAAG;AAC7C,WAAK,QAAQ,KAAK,aAAa,qBAAqB,0BAA0B,GAAG;AAAG,aAAO;IAC7F,YAAY,KAAK,eAAe,oBAAoB,KAAK,eAAe,oBAAoB,CAAC,KAAK,kBAAkB,WAAW,gBAAgB;AAC7I,WAAK,QAAQ,KAAK,aAAa,qBAAqB,sBAAsB,GAAG;AAAG,aAAO;IACzF;AAEA,QAAI,WAAW,iBAAiB;AAC9B,UAAI,KAAK,cAAc;AACrB,aAAK,aAAa,KAAK;AACvB,aAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,aAAK,WAAW,OAAO,KAAK;MAC9B;IACF;AAEA,QAAI,KAAK,eAAe,iBAAiB;AACvC,WAAK,eAAe,KAAK;AACzB,WAAK,aAAa,IAAI,yBAAwB,KAAK,iBAAiB,QAAQ;AAC5E,WAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,WAAK,WAAW,OAAO,KAAK;AAC5B,WAAK,iBAAiB;IACxB;AACA,SAAK,cAAc;EACrB;EAEO,QAAQ,KAAG;AAChB,QAAI,OAAO,UAAa,OAAO,QAAQ,OAAO;AAC5C,YAAM,KAAK,aAAa,oBAAoB;AAC9C,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK,EAC5G,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,OAAO,cAAc,eAAe;MAC3C;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;EAEA,aAAa,KAAG;AACd,QAAI,OAAO,IAAI,KAAI,EAAG,QAAQ;AAC5B,YAAM,SAAS;QACb,cAAc,aAAa;QAC3B,QAAQ;;AAEV,WAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,UAAO;AAC9D,aAAK,aAAa,IAAI,yBAAwB,KAAK,aAAa,YAAY;AAC5E,aAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,aAAK,WAAW,OAAO,KAAK;MAC9B,CAAC;IACH,OAAO;AACL,WAAK,eAAe,KAAK,kBAAkB,MAAM;IACnD;EACF;EAEO,cAAc,GAAC;AACpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAGhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO;AAC9B,WAAK,kBAAkB,OAAO,WAAW;AACzC,WAAK,eAAe,KAAK,kBAAkB,MAAM;IACnD;EACF;EAEO,eAAe,OAAK;AACzB,UAAM,WAAW,KAAK,cAAc;AACpC,UAAM,aAAa,KAAK,aAAa;AACrC,UAAM,mBAAmB,KAAK;AAE9B,QAAI,MAAM,eAAe;AACvB,WAAK,kBAAkB,OAAO,SAAS,MAAM;IAC/C;AACA,QAAI,MAAM,UAAU,GAAG;AACrB,WAAK,aAAa,CAAA;IACpB;AAEA,SAAK,cAAc,eAAe,KAAK,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AAChE,UAAI,KAAK,eAAe,iBAAiB;AACvC,YAAI,MAAM,UAAU,GAAG;AACrB,cAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,aAAa,YAAY,SAAS,GAAG;AACrF,iBAAK,aAAa,KAAK,aAAa;UACtC,OAAO;AACL,iBAAK,aAAa,CAAA;UACpB;QACF,OAAO;AACL,cAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,aAAa,YAAY,SAAS,GAAG;AACrF,iBAAK,aAAa,KAAK,WAAW,OAAO,KAAK,aAAa,WAAW;UACxE;QACF;AACA,YAAI,KAAK,aAAa,eAAe,QAAQ,KAAK,WAAW,SAAS,IAAI;AACxE,gBAAM,UAAU;AAChB,eAAK,kBAAkB,OAAO,SAAS,MAAM;AAC7C,eAAK,eAAe,KAAK,kBAAkB,MAAM;QACnD;AACA,YAAI,KAAK,WAAW,SAAS,GAAG;AAE9B,cAAI,KAAK,WAAW,SAAS,KAAK,KAAK,YAAY;AACjD,iBAAK,aAAa;UACpB,OAAO;UAEP;AAEA,eAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,eAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,eAAK,WAAW,OAAO,KAAK;QAE9B,OAAO;AACL,eAAK,WAAW,OAAO,CAAA;QACzB;MACF;IAEF,GAAG,OAAM,MAAK;AACZ,WAAK,WAAW,OAAO,CAAA;IACzB,EAAC,CAAC;EACJ;EAEA,WAAW,KAAG;AACZ,WAAO,KAAK,iBAAiB,SAAS,KAAK,OAAK,EAAE,gBAAgB,IAAI,YAAY;EACpF;EAEO,aAAU;EAEjB;;;;;;EAQO,mBAAmB,SAAO;AAE/B,SAAK,eAAe,iBAAiB,SAAS,KAAK,kBAAkB,QAAQ,KAAK,kBAAkB,OAAO,QAAQ,MAAM,IAAI;EAC/H;EAMA,eAAY;AACV,UAAM,SAAS,KAAK,OAAO,KAAK,KAAK,aAAa;MAChD,OAAO;KACR;AACD,SAAK,gBAAgB,OAAO;EAC9B;EAEA,UAAO;AAEL,UAAM,MAAM;MACV,kBAAkB,KAAK,eAAe;MACtC,iBAAiB,CAAA;MACjB,cAAc,KAAK;MACnB,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;;AAG3D,SAAK,iBAAiB,SAAS,QAAQ,OAAI;AACzC,UAAI,EAAE,gBAAgB,IAAI,kBAAkB;AAC1C,YAAI,gBAAgB,KAAK,EAAE,YAAY;MACzC;IACF,CAAC;AAID,SAAK,eAAe,aAAa,GAAG,EAAE,UAAU,EAAC,MAAK,MAAK;AACzD,WAAK,OAAO,cAAc,KAAK,aAAa,EAAE,MAAK;AACnD,YAAM,SAAS,KAAK,OAAO,KAAK,KAAK,oBAAoB;QACvD,OAAO;OACR;AAED,WAAK,uBAAuB,OAAO;AAEnC,aAAO,YAAW,EAAG,UAAU,MAAK;AAClC,aAAK,UAAU,MAAM,KAAK,cAAc;MAC1C,CAAC;IACH,GAAG,OAAM,MAAK;AACZ,WAAK,QAAQ,KAAK,aAAa,qBAAqB,iBAAiB;IACvE,EAAC,CAAC;EAEJ;EAEA,YAAY,WAAS;AACnB,WAAQ,KAAK,eAAe,kBAAkB,aAAa,KAAK,eAAe,eAAgB,qBAAqB;EACtH;;;uCAzQW,wBAAqB,4BAAA,kBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,WAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAOrB,oBAAY,CAAA;8BACZ,SAAO,CAAA;;;;;;;;;;;;;;AC3BpB,QAAA,yBAAA,GAAA,MAAA,CAAA,EAAqB,GAAA,eAAA,CAAA,EAC+B,GAAA,QAAA,CAAA;AACI,QAAA,iBAAA,CAAA;AAA0E,QAAA,uBAAA,EAAO,EACvH;AAElB,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAwB,GAAA,OAAA,CAAA,EACK,GAAA,KAAA;AAEjB,QAAA,qBAAA,GAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAA6D,GAAA,qCAAA,GAAA,GAAA,MAAA,CAAA,EAGF,GAAA,sCAAA,GAAA,GAAA,OAAA,CAAA;AAmB/D,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA8B,IAAA,OAAA,EAAA,EAEqB,IAAA,KAAA,EAEgF,IAAA,OAAA,EAAA;AAC3F,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAc,eAAe,CAAC;QAAA,CAAA;AAAE,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA,EAAO;AACnF,QAAA,oBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA;AAExC,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAC0G,IAAA,OAAA,EAAA;AAC1E,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAc,gBAAgB,CAAC;QAAA,CAAA;AAAE,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA,EAAO;AACpF,QAAA,oBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA;AAExC,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAA0E,IAAA,OAAA,EAAA;AAC1C,QAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAc,cAAc,CAAC;QAAA,CAAA;AAAE,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA,EAAO;AAClF,QAAA,oBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA;AAExC,QAAA,uBAAA,EAAM,EACJ,EACJ;AAGV,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA;AAAgE,QAAA,qBAAA,UAAA,SAAA,sDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,MAAA,CAAqB;QAAA,CAAA;AAC3F,QAAA,yBAAA,IAAA,SAAA,EAAA;AAAyE,QAAA,qBAAA,iBAAA,SAAA,iEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAiB,IAAA,WAAA,CAAY;QAAA,CAAA;AAElG,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAqB1C,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAQ1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAO1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAQ1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAQ1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAS1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAS1D,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;;AAQ1D,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,sCAAA,GAAA,GAAA,MAAA,EAAA;AAEzE,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,SAAA,EAAA;AAKJ,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,+CAAA,IAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAA0B,IAAA,+CAAA,IAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AA2C9B,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACI,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA,EAAwG,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA,EAG3D,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA,EAEC,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA,EAEF,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA,EAEC,IAAA,0CAAA,GAAA,GAAA,UAAA,EAAA;AAGjD,QAAA,uBAAA;;;AArNwD,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,qBAAA,aAAA,QAAA,OAAA,IAAA,GAAA,GAAA;AAK3C,QAAA,oBAAA,CAAA;AAAA,QAAA,iCAAA,IAAA,IAAA,gBAAA,kBAAA,UAAA,SAAA,QAAA;AACoB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,gBAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,cAAA;AAIqB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,eAAA;AAqBlC,QAAA,oBAAA,CAAA;AAAA,QAAA,iCAAA,YAAA,0BAAA,IAAAC,IAAA,EAAA,QAAA,IAAA,WAAA,MAAA,KAAA,WAAA,IAAA,EAAA;AAMA,QAAA,oBAAA,CAAA;AAAA,QAAA,iCAAA,YAAA,0BAAA,IAAAC,IAAA,EAAA,QAAA,IAAA,WAAA,MAAA,KAAA,WAAA,IAAA,EAAA;AAKC,QAAA,oBAAA,CAAA;AAAA,QAAA,iCAAA,YAAA,IAAA,gBAAA,iBAAA,WAAA,IAAA,EAAA;AASM,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,eAAA;AAIoB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAwFf,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAGX,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;AAmDrB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,eAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,gBAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,cAAA;AAGJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,eAAA;AAEA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,gBAAA;AACuE,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,cAAA;;;;;;6EDlMnE,uBAAqB,EAAA,WAAA,yBAAA,UAAA,wFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGJ5B,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,aAAA,mBAAA,QAAA,GAAA;;;;;;AAOE,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,sFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,OAAA,YAAuB,QAAM,UAAA,CAAU;IAAA,CAAA;AAE2B,IAAA,iBAAA,CAAA;AAGjF,IAAA,uBAAA;;;;AAJE,IAAA,gCAAA,SAAA,OAAA,OAAA,aAAA,uBAAA,YAAA;AAC+E,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,aAAA,uBAAA,KAAA,GAAA;;;;;;AAIjF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAM,IAAA,qBAAA,SAAA,SAAA,sFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,OAAA,YAAuB,UAAQ,UAAA,CAAU;IAAA,CAAA;AAE2B,IAAA,iBAAA,CAAA;AAEnF,IAAA,uBAAA;;;;AAHE,IAAA,gCAAA,SAAA,OAAA,OAAA,aAAA,uBAAA,SAAA;AACiF,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;AATrF,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,QAAA,EAAA,EAEiF,GAAA,+DAAA,GAAA,GAAA,QAAA,EAAA;;;;;AAApC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,KAAA;AAMG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,IAAA;;;;;AAbpD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAIE,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,gBAAA,CAAA;AAaF,IAAA,uBAAA;;;;AAjBuC,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,CAAA,CAAA;AAItB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,qBAAA,CAAA;;;;;;AAmBf,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,gBAAA,EAAA;AACU,IAAA,qBAAA,UAAA,SAAA,4FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,OAAA,UAAA,MAAA,CAAwB;IAAA,CAAA;AACxG,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA,EAAO;;;;AAFvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA,aAAA;AAE/B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,GAAA;;;;;AALV,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;;;;AANE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;AACiD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;;;;;;AAMnD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,gBAAA,EAAA;AAGnC,IAAA,qBAAA,UAAA,SAAA,sFAAA,QAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,OAAA,qBAAA,QAAA,UAAA,CAA4C;IAAA,CAAA;AACxD,IAAA,uBAAA,EAAe;;;;AAFb,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,WAAA,uBAAA,WAAA,EAAuD,WAAA,WAAA,eAAA;;;;;AAX7D,IAAA,kCAAA,GAAA,EAAA;AACE,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,wDAAA,GAAA,GAAA,MAAA,EAAA;;;;;;AAoBtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA;;;;AAAvD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,WAAA;;;;;;AAEpC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,6EAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,QAAA,OAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAI3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA;AAAO,IAAA,yBAAA,GAAA,QAAA,EAAA;AACvB,IAAA,iBAAA,CAAA;AACxC,IAAA,uBAAA,EAAO;;;;;AAN0D,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,qBAAA,GAAA,YAAA,qBAAA,GAAA,YAAA,qBAAA,CAAA,CAAA;AAIhE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,WAAA;AAC3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAkE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,iBAAA,EAAA;;;;;AANxE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wDAAA,GAAA,IAAA,MAAA,EAAA;;;;;;;AAWA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,6EAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAC3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA;AAAO,IAAA,yBAAA,GAAA,QAAA,EAAA;AACvB,IAAA,iBAAA,CAAA;AACxC,IAAA,uBAAA,EAAO;;;;;AAFN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,WAAA;AAC3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAkE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,iBAAA,EAAA;;;;;AAHxE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,MAAA,CAAA;;;;;;AAgBF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAmD,IAAA,uBAAA;;;;AAAnD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,OAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAC3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAAmD,IAAA,uBAAA;AAAQ,IAAA,yBAAA,GAAA,QAAA,EAAA;AACrB,IAAA,iBAAA,CAAA;AACzC,IAAA,uBAAA,EAAO;;;;;AAFJ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,OAAA;AAC3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAiE,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA,aAAA;;;;;AAarE,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,aAAA,oBAAA,gBAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAQ3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAA0D,IAAA,uBAAA;AACvF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAuE,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA,EAAO;;;;;AADhF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,cAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAiE,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA,mBAAA;;;;;AAMzE,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAwD,IAAA,uBAAA;;;;AAAxD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,YAAA;;;;;AAOpC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAGiG,IAAA,iBAAA,CAAA;AAClC,IAAA,uBAAA;;;;;AAD7D,IAAA,iCAAA,0BAAA,OAAA,OAAA,cAAA,kBAAA,YAAA,UAAA,GAAA,EAAA;AAH2B,IAAA,gCAAA,SAAA,OAAA,OAAA,aAAA,uBAAA,YAAA,UAAA,CAAA;AAGoE,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,cAAA,kBAAA,YAAA,UAAA,CAAA;;;;;;AATnG,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAC3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAAwD,IAAA,uBAAA;AAErF,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA2G,IAAA,iBAAA,CAAA;AAE/F,IAAA,uBAAA;AACZ,IAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,OAAA,EAAA;AAMF,IAAA,uBAAA;;;;;AAX+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,YAAA;AAEa,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAiE,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,YAAA,kBAAA,QAAA;AAKxG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,eAAA,kBAAA,OAAA,OAAA,cAAA,QAAA,WAAA,CAAA;;;;;AAQL,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAwD,IAAA,uBAAA;;;;AAAxD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,gBAAA,OAAA,OAAA,OAAA,OAAA,aAAA,oBAAA,WAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,WAAA,OAAA,WAAA,CAA6B;IAAA,CAAA;AAC3F,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,CAAA;AAAwD,IAAA,uBAAA;AAAQ,IAAA,yBAAA,GAAA,QAAA,EAAA;AAC1B,IAAA,iBAAA,CAAA;AACvC,IAAA,uBAAA,EAAO;;;;;AAFN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,aAAA,oBAAA,WAAA;AAC3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,YAAA,aAAA,WAAA,MAAA,CAAA;AAAiE,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA,eAAA;;;;;AAKvE,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;AAAoE,IAAA,qBAAA,WAAA,0BAAA,GAAAD,OAAA,QAAA,qBAAA,GAAA,QAAA,qBAAA,GAAA,QAAA,qBAAA,CAAA,CAAA;;;;;AAQlE,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;AAA4D,IAAA,uBAAA;;;;AAA5D,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,aAAA,oBAAA,gBAAA,GAAA;;;;;AACF,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;AAAoE,IAAA,uBAAA;;;;AAApE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,aAAA,oBAAA,wBAAA,GAAA;;;;;AALN,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAuG,GAAA,IAAA;AAEnG,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,CAAA,EAAqE,GAAA,mDAAA,GAAA,GAAA,OAAA,CAAA;AAIvE,IAAA,uBAAA,EAAK;;;;AAJG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,qBAAA,OAAA,OAAA,OAAA,OAAA,kBAAA,UAAA,OAAA,OAAA,OAAA,OAAA,kBAAA,OAAA,kBAAA,KAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,qBAAA,OAAA,OAAA,OAAA,OAAA,kBAAA,UAAA,OAAA,OAAA,OAAA,OAAA,kBAAA,OAAA,kBAAA,IAAA;;;ADxJN,IAAO,4BAAP,MAAO,2BAAyB;EALtC,cAAA;AASE,SAAA,gBAAsB;;;EAGtB,YAAY,SAAsB;AAChC,YAAQ,IAAI,OAAO;AACnB,SAAK,gBAAc,QAAQ,OAAO,aAAa,kBAAkB,OAAO;EAC1E;;;uCAVW,4BAAyB;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,QAAA,EAAA,QAAA,SAAA,GAAA,UAAA,CAAA,8BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,MAAA,4BAAA,GAAA,qBAAA,QAAA,eAAA,GAAA,UAAA,SAAA,GAAA,CAAA,aAAA,IAAA,WAAA,IAAA,WAAA,IAAA,GAAA,iBAAA,eAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,YAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,WAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,KAAA,GAAA,MAAA,GAAA,CAAA,gBAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,gBAAA,gBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,oBAAA,GAAA,CAAA,gBAAA,kBAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,WAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,CAAA,SAAA,qCAAA,GAAA,SAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wCAAA,GAAA,SAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,qBAAA,QAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,cAAA,wBAAA,QAAA,GAAA,SAAA,OAAA,GAAA,CAAA,gBAAA,GAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,SAAA,sCAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,UAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,UAAA,SAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,kBAAA,gBAAA,aAAA,GAAA,UAAA,YAAA,SAAA,GAAA,CAAA,YAAA,IAAA,GAAA,WAAA,SAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,WAAA,QAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,WAAA,SAAA,SAAA,QAAA,GAAA,SAAA,GAAA,CAAA,SAAA,4CAAA,GAAA,SAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,WAAA,SAAA,mBAAA,GAAA,OAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,SAAA,GAAA,CAAA,GAAA,UAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACNtC,QAAA,yBAAA,GAAA,OAAA,CAAA;AACgC,QAAA,qBAAA,UAAA,SAAA,yDAAA,QAAA;AAAA,iBAAU,IAAA,OAAA,cAAA,MAAA;QAA4B,CAAA;AAEpE,QAAA,yBAAA,GAAA,SAAA,CAAA;AAWE,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA;;AAuBxC,QAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,gBAAA,CAAA;AAoBA,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,mDAAA,GAAA,GAAA,gBAAA,CAAA,EACS,GAAA,mDAAA,GAAA,GAAA,gBAAA,CAAA;;AA2BjD,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAexC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAiBxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAgBxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA,EAA6E,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA;AAK/E,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,SAAA,EAAA;AASF,QAAA,uBAAA;;;AAnKgD,QAAA,qBAAA,WAAA,EAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,oBAAA,KAAA,QAAA;AAG7B,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,UAAA;AAmCiB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,iBAAA;AAsBf,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,gBAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,iBAAA;AA4EG,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,gBAAA,EAA2C,yBAAA,IAAA;AAC9B,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,gBAAA;AAMT,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,gBAAA,SAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,WAAA,KAAA,YAAA,CAAA;;;;;;6EDpJf,2BAAyB,EAAA,WAAA,6BAAA,UAAA,kGAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;AEiBhC,IAAA,oBAAA,GAAA,cAAA,EAAA;;;;AAEE,IAAA,qBAAA,OAAA,OAAA,SAAA,EAAiB,eAAA,IAAA,EACG,YAAA,IAAA,EACH,cAAA,IAAA,EACE,gBAAA,KAAA;;;AAQrB,IAAO,oBAAP,MAAO,mBAAiB;EAK5B,YACU,WACD,aACC,cAAyB;AAFzB,SAAA,YAAA;AACD,SAAA,cAAA;AACC,SAAA,eAAA;AAPD,SAAA,YAA2B;AACpC,SAAA,SAAiC;AAQ/B,SAAK,QAAQ,KAAK,aAAa;AAE/B,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,uBAAsB;IAC1C;EACF;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,cAAQ,IAAI,IAAI;AAChB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,uBAAsB;IAC1C,CAAC;EACL;EAEA,WAAQ;EAMR;EAEA,QAAK;AACH,SAAK,YAAY,MAAK;EACxB;EAEO,sBAAsB,WAAW,gBAAc;AACpD,QAAI,CAAC,KAAK,WAAW;AACnB,YAAM,IAAI,MAAM,sCAAsC;IACxD;AACA,UAAM,OAAO,SAAS,cAAc,GAAG;AACvC,UAAM,OAAO,KAAK;AAClB,UAAM,oBAAoB,SAAS,QAAQ,eAAe,EAAE;AAC5D,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,cAAc,IAAI,WAAW,SAAS,EAAE,SAAS,KAAI,CAAE,CAAC;EAC/D;;;uCAnDW,oBAAiB,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,QAAA,EAAA,WAAA,YAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,UAAA,cAAA,SAAA,GAAA,SAAA,GAAA,OAAA,GAAA,CAAA,eAAA,MAAA,GAAA,CAAA,GAAA,cAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,SAAA,GAAA,CAAA,OAAA,uCAAA,OAAA,EAAA,GAAA,CAAA,GAAA,kBAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,uFAAA,GAAA,OAAA,eAAA,YAAA,cAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,mBAAA,aAAA,mBAAA,UAAA,SAAA,cAAA,QAAA,GAAA,OAAA,eAAA,YAAA,cAAA,cAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AA3B1B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,MAAA,CAAA;AACA,QAAA,iBAAA,CAAA;AAAgB,QAAA,uBAAA;AACxC,QAAA,yBAAA,GAAA,UAAA,CAAA;AAAuD,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,iBAAS,IAAA,MAAA;QAAO,CAAA;AACrE,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,QAAA,iBAAA,GAAA,MAAA;AAAO,QAAA,uBAAA,EAAO,EAChC;AAEX,QAAA,yBAAA,GAAA,UAAA,CAAA;AAAkC,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,iBAAS,IAAA,sBAAA;QAAuB,CAAA;AAChE,QAAA,yBAAA,GAAA,QAAA,CAAA;AACE,QAAA,oBAAA,GAAA,OAAA,CAAA;AACA,QAAA,yBAAA,GAAA,KAAA,CAAA;AAAmC,QAAA,iBAAA,EAAA;AAAkB,QAAA,uBAAA,EAAI,EACpD;AAET,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,CAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,cAAA,CAAA;AASF,QAAA,uBAAA;;;AAtB0B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,MAAA;AAQa,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,QAAA;AAMlC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;;;;;;6EAYI,mBAAiB,EAAA,WAAA,qBAAA,UAAA,uDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AEjCxB,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,OAAA,aAAA,oBAAA,mBAAA,GAAA,KAAA,OAAA,KAAA,oBAAA,OAAA,KAAA,mBAAA,OAAA,KAAA,mBAAA,MAAA,OAAA,KAAA,mBAAA,MAAA,GAAA;;;;;AAKA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,mBAAA,GAAA;;;;;AAuBJ,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAkD,GAAA,QAAA,EAAA;AAG9C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAHD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAE,OAAA,OAAA,KAAA,YAAA,IAAA,WAAA,EAAA,CAAA;AAEJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,SAAA,GAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAkD,GAAA,QAAA,EAAA;AAG9C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAHD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,OAAA,KAAA,YAAA,IAAA,UAAA,EAAA,CAAA;AAEJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,GAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAkD,GAAA,QAAA,EAAA;AAG9C,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAHD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,OAAA,KAAA,YAAA,IAAA,QAAA,EAAA,CAAA;AAEJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,UAAA,GAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,KAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,IAAA,GAAA;;;;;AAsBQ,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEA,IAAA,iBAAA,CAAA;AACE,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAKJ,IAAA,uBAAA,EAAO;;;;AAPP,IAAA,oBAAA;AAAA,IAAA,6BAAA,aAAA,OAAA,aAAA,oBAAA,UAAA,EAAA;AAEI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,MAAA,OAAA,KAAA,cAAA,OAAA,aAAA,oBAAA,QAAA,OAAA,aAAA,oBAAA,OAAA,IAAA;;;;;AAmCN,IAAA,yBAAA,GAAA,GAAA,EAAwE,GAAA,KAAA,EAAA;AAKlE,IAAA,iBAAA,CAAA;AACF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,oBAAA,GAAA,OAAA,EAAA;AAAkE,IAAA,uBAAA,EAAO,EAC1F;;;;AAND,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,OAAA,KAAA,YAAA,IAAA,WAAA,EAAA,EAA0C,QAAA,OAAA,KAAA,YAAA,IAAA,uEAAA,sBAAA,uBAAA;AAIzC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,OAAA,OAAA,OAAA,aAAA,iBAAA,aAAA,GAAA;;;;;AAIN,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AADL,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,GAAA;;;;;AAKJ,IAAA,yBAAA,GAAA,KAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,YAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AAAO,IAAA,oBAAA,GAAA,IAAA;AAC9B,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;;;;AAHpC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,IAAA,IAAA;AACM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,MAAA;AACN,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,UAAA,IAAA;AACM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,YAAA;;;;;AAGR,IAAA,yBAAA,GAAA,KAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,YAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAyE,GAAA,MAAA;AACjE,IAAA,iBAAA,CAAA;AAA+G,IAAA,uBAAA,EAAO;;;;AAAtH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,oBAAA,OAAA,KAAA,mBAAA,OAAA,KAAA,mBAAA,MAAA,OAAA,KAAA,mBAAA,IAAA;;;;;AAyLV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyD,GAAA,KAAA,CAAA;AAErD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAHI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,oBAAA,OAAA,OAAA,OAAA,aAAA,oBAAA,iBAAA,QAAA,yBAAA,sBAAA,GAAA,GAAA;AAEuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,UAAA,OAAA,KAAA,kBAAA,GAAA,wBAAA;;;;;AAczB,IAAA,yBAAA,GAAA,KAAA,EAAA,EAA8E,GAAA,KAAA,EAAA;AAC0B,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEpG,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA,EAAI;;;;AAFtC,IAAA,oBAAA;AAAA,IAAA,gCAAA,YAAA,cAAA,kBAAA;AAA+D,IAAA,gCAAA,QAAA,cAAA,aAAA,uBAAA;AAEhE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,oBAAA,EAAA;;;;;AARR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4D,GAAA,OAAA,EAAA,EACtC,GAAA,KAAA,CAAA;AAEhB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,KAAA,EAAA;AAKF,IAAA,uBAAA,EAAM;;;;AAPF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,aAAA,GAAA;AAEwB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,KAAA,iBAAA;;;ADlVhC,IAAO,+BAAP,MAAO,8BAA4B;EAEvC,YACU,UACwB,MACxB,aACA,eACD,cAAyB;AAJxB,SAAA,WAAA;AACwB,SAAA,OAAA;AACxB,SAAA,cAAA;AACA,SAAA,gBAAA;AACD,SAAA,eAAA;AAEP,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;IAC3C;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;IAC3C,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,gBAAe;AACpB,SAAK,iBAAkB,KAAK,MAAM,oBAAoB,KAAK,MAAM,mBAAmB,KAAK,MAAM,mBAAiB,MAAI,KAAK,MAAM,mBAAmB;EAWpJ;EAEA,qCAAqC,gBAAsB;AACzD,UAAM,UAAU;MACd,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;MACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,eAAe;;AAGjB,WAAO,KAAK,cAAc,kCAAkC,OAAO;EACrE;EAEA,aAAU;AACR,SAAK,SAAS,MAAK;EACrB;EAEA,UAAU,KAAU;AAClB,QAAG;AACD,aAAO,IAAI,QAAQ,OAAM,MAAM;EACnC;;;uCAzDW,+BAA4B,4BAAA,kBAAA,GAAA,4BAI7B,sBAAe,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAJd,+BAA4B,WAAA,CAAA,CAAA,0BAAA,CAAA,GAAA,OAAA,KAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,WAAA,GAAA,aAAA,GAAA,CAAA,eAAA,YAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,QAAA,UAAA,cAAA,SAAA,GAAA,SAAA,cAAA,GAAA,OAAA,GAAA,CAAA,eAAA,MAAA,GAAA,CAAA,GAAA,aAAA,OAAA,QAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,YAAA,YAAA,WAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,sBAAA,IAAA,GAAA,eAAA,cAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,oBAAA,eAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,UAAA,YAAA,UAAA,GAAA,CAAA,GAAA,0BAAA,kBAAA,GAAA,CAAA,GAAA,UAAA,YAAA,YAAA,SAAA,GAAA,CAAA,SAAA,kCAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,YAAA,YAAA,kBAAA,GAAA,CAAA,SAAA,0BAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,UAAA,2BAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,yBAAA,oBAAA,GAAA,CAAA,GAAA,0BAAA,MAAA,GAAA,CAAA,GAAA,UAAA,yBAAA,sBAAA,cAAA,OAAA,GAAA,CAAA,GAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,UAAA,yBAAA,sBAAA,MAAA,GAAA,CAAA,GAAA,UAAA,yBAAA,sBAAA,QAAA,MAAA,GAAA,CAAA,GAAA,OAAA,MAAA,GAAA,CAAA,GAAA,UAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,WAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,YAAA,GAAA,MAAA,GAAA,CAAA,SAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,kBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,UAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,oCAAA,OAAA,IAAA,SAAA,MAAA,GAAA,CAAA,OAAA,+CAAA,OAAA,IAAA,GAAA,YAAA,GAAA,CAAA,GAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,UAAA,MAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,QAAA,aAAA,GAAA,CAAA,UAAA,UAAA,GAAA,YAAA,MAAA,GAAA,CAAA,OAAA,sCAAA,OAAA,EAAA,CAAA,GAAA,UAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;ACTzC,QAAA,yBAAA,GAAA,MAAA,CAAA,EAA8C,GAAA,eAAA,CAAA,EACI,GAAA,QAAA,CAAA;AAE5C,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,QAAA,CAAA,EAAqE,GAAA,qDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAQvE,QAAA,uBAAA,EAAO;AAET,QAAA,yBAAA,GAAA,UAAA,CAAA;AAAkE,QAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,WAAA,CAAY;QAAA,CAAA;AACrF,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,QAAA,iBAAA,GAAA,MAAA;AAAO,QAAA,uBAAA,EAAO,EAChC;AAEX,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA+C,IAAA,OAAA,CAAA,EACJ,IAAA,KAAA,CAAA;AAErC,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA,EAAI;AAEzE,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAyC,IAAA,KAAA,CAAA;AAErC,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsC,QAAA,uBAAA,EAAI;AAErE,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAyC,IAAA,KAAA,CAAA;AACL,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AACzC,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAAkD,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAMA,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAMA,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA;AAUpD,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4D,IAAA,OAAA,EAAA,EACE,IAAA,OAAA,EAAA,EACzC,IAAA,OAAA,EAAA,EACK,IAAA,OAAA,EAAA,EACD,IAAA,OAAA,EAAA,EACuB,IAAA,KAAA,EAAA;AAElC,QAAA,iBAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AACE,QAAA,iBAAA,EAAA;;AACF,QAAA,uBAAA,EAAI;AAEN,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8C,IAAA,KAAA,CAAA;AAE1C,QAAA,iBAAA,EAAA;AACA,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,QAAA,EAAA;AAWF,QAAA,uBAAA;AA4BA,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAAwE,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA;AAe1E,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAA+E,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAGT,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA,EAOY,IAAA,4CAAA,GAAA,GAAA,KAAA,EAAA;AAMpF,QAAA,uBAAA,EAAM;AAKR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,OAAA,EAAA,EACrC,IAAA,OAAA,EAAA,EACuC,IAAA,KAAA,EAAA;AACpB,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AAC9C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAoB,QAAA,uBAAA,EAAI;AAEnD,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8E,IAAA,KAAA,EAAA;AAGnD,QAAA,iBAAA,EAAA;AAAqB,QAAA,uBAAA;AAE9C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsB,QAAA,uBAAA,EAAI,EAC/C;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA,EAAA,EACuC,IAAA,KAAA,EAAA;AACpB,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AAC9C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAA0B,QAAA,iBAAA,EAAA;AAAmB,QAAA,uBAAA,EAAI;AAEnD,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8E,IAAA,KAAA,EAAA;AACnD,QAAA,iBAAA,EAAA;AAAuB,QAAA,uBAAA;AAC/C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsB,QAAA,uBAAA;AAC/C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAoB,QAAA,uBAAA;AAC7C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsB,QAAA,uBAAA,EAAI,EAEhD,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,OAAA,EAAA,EACD,IAAA,OAAA,EAAA,EACkC,IAAA,OAAA,EAAA,EACO,IAAA,KAAA,EAAA;AAG9D,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA,EAAI;AAExE,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAuE,IAAA,KAAA,EAAA;AAC9B,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AAC7C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAkB,QAAA,uBAAA,EAAI,EAC3C;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8E,IAAA,KAAA,EAAA;AACnD,QAAA,iBAAA,EAAA;AAAmB,QAAA,uBAAA;AAE5C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAqB,QAAA,uBAAA;AAE9C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAuB,QAAA,uBAAA;AAEhD,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsB,QAAA,uBAAA;AAE/C,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA,EAAI,EACnE,EACF;AAkHR,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAsB,KAAA,OAAA,EAAA,EACK,KAAA,KAAA,CAAA;AAGrB,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA;AACA,QAAA,oBAAA,KAAA,KAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,qBAAA,KAAA,+CAAA,GAAA,GAAA,OAAA,EAAA;AAYF,QAAA,uBAAA;AACA,QAAA,qBAAA,KAAA,+CAAA,GAAA,GAAA,OAAA,EAAA;AAYF,QAAA,uBAAA,EAAM,EACF,EACF;AAGR,QAAA,yBAAA,KAAA,sBAAA,EAAA,EAAmC,KAAA,UAAA,EAAA;AACqB,QAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,WAAA,CAAY;QAAA,CAAA;AACzE,QAAA,iBAAA,GAAA;AACF,QAAA,uBAAA,EAAS;;;;AAvWE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,eAAA,IAAA,KAAA,WAAA,EAA8C,YAAA,YAAA;AAiBrD,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,WAAA,IAAA;AAEuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA,aAAA,IAAA,KAAA,aAAA,IAAA;AAIvB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,mBAAA,IAAA;AAEuB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA,WAAA,IAAA,KAAA,WAAA,IAAA;AAIC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,YAAA,CAAA;AAMA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,YAAA,CAAA;AAMA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,YAAA,CAAA;AAMA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,KAAA,QAAA;AAahB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,EAAA,IAAA,KAAA,eAAA,IAAA,KAAA,eAAA,IAAA,aAAA,oBAAA,gBAAA,IAAA,aAAA,oBAAA,iBAAA,GAAA;AAKA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,IAAA,KAAA,+BAAA,IAAA,GAAA,GAAA;AAKA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,MAAA,GAAA;AAED,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,eAAA,IAAA,KAAA,WAAA;AAsCG,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,KAAA,eAAA,IAAA,KAAA,gBAAA,IAAA,KAAA,YAAA,CAAA;AASuC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,KAAA,eAAA,IAAA,KAAA,YAAA;AAQR,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,eAAA,IAAA,KAAA,WAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,eAAA,IAAA,KAAA,WAAA;AAOS,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,KAAA,eAAA,IAAA,KAAA,YAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,EAAA,IAAA,KAAA,eAAA,IAAA,KAAA,YAAA;AAYC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,YAAA,GAAA;AAKA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,aAAA,GAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA,aAAA;AAMC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,KAAA,YAAA,EAAA;AAGD,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,eAAA,GAAA;AACC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,aAAA,GAAA;AACA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,YAAA,GAAA;AACA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA,aAAA;AAWtB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,SAAA,IAAA;AAEuB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,aAAA,OAAA,IAAA,KAAA,WAAA,EAAA;AAIA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,KAAA,SAAA;AAIF,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,SAAA,GAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,WAAA,GAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,YAAA,IAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,YAAA,GAAA;AAEA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,KAAA,eAAA,KAAA,IAAA,KAAA,YAAA,EAAA;AAwHzB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,aAAA,GAAA;AAEwB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,UAAA,IAAA,KAAA,kBAAA,GAAA,wBAAA;AAIF,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,kBAAA;AAaL,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,KAAA,kBAAA,MAAA;AAmB3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,OAAA,GAAA;;;;;;6EDhWS,8BAA4B,EAAA,WAAA,gCAAA,UAAA,yHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGHjC,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAGA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;AAAuC,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,WAAA,aAAA,GAAA,WAAA,aAAA,GAAA,WAAA,aAAA,CAAA,CAAA;;;;;AAavC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;;;;AAA3C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAwD,GAAA,KAAA,EAAA;AAClC,IAAA,iBAAA,CAAA;;AAAoC,IAAA,uBAAA,EAAI;;;;AAAxC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,WAAA,WAAA,GAAA,GAAA;;;;;AAKtB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA0D,IAAA,uBAAA;;;;AAA1D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,mBAAA;;;;;AAGpC,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA8C,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;;;;AAA1B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,YAAA,GAAA;;;;;AAFhD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAwD,GAAA,KAAA,EAAA;AACnC,IAAA,iBAAA,CAAA;AAA6D,IAAA,uBAAA;AAChF,IAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAFqB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,kBAAA,KAAA,WAAA,kBAAA,EAAA;AACC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,UAAA;;;;;AAItB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;;;;AAA3C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AAGlC,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAJJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAwD,GAAA,MAAA;AAEpD,IAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,OAAA,EAAA,EAAmF,GAAA,gDAAA,GAAA,GAAA,OAAA,EAAA,EACF,GAAA,gDAAA,GAAA,GAAA,OAAA,EAAA;AAEnF,IAAA,uBAAA,EAAO;;;;AAHmD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,WAAA;AACF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,WAAA;AACC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,WAAA,eAAA,CAAA,WAAA,WAAA;;;;;AAK3D,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA2D,IAAA,uBAAA;;;;AAA3D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,oBAAA;;;;;AAEpC,IAAA,yBAAA,GAAA,GAAA,EAAwD,GAAA,KAAA,EAAA;AAEhB,IAAA,oBAAA,GAAA,OAAA,EAAA;AACe,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA,EAAI;;;;AAFxF,IAAA,oBAAA;AAAA,IAAA,gCAAA,YAAA,cAAA,kBAAA;AACF,IAAA,gCAAA,QAAA,cAAA,aAAA,uBAAA;AACmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,oBAAA,EAAA;;;;;AAJzD,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,KAAA,EAAA;AAKF,IAAA,uBAAA;;;;AAL4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA,iBAAA;;;;;AAQ5B,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,MAAA;;;;;;AAEpC,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,UAAA,CAAmB;IAAA,CAAA;AAC5B,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAqC,IAAA,uBAAA;;;;;AAHzC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAHS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,KAAA,WAAA,kBAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,MAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAwD,GAAA,OAAA,EAAA;AACoB,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,WAAA,CAAoB;IAAA,CAAA;AAAvG,IAAA,uBAAA,EAAyG;;;;;AAK3G,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA+H,GAAA,GAAA;AAC1H,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA;AAC1D,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;;AAFK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,gBAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,UAAA,YAAA,kBAAA,GAAA,wBAAA;;;;;AAIP,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAIA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;AAAyF,IAAA,qBAAA,UAAA,CAAA,QAAA,kBAAA;;;;;AAG3F,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAuF,GAAA,IAAA,EACjF,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;AAA0D,IAAA,uBAAA,EAAK,EAChE;;;;AADC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA,aAAA,oBAAA,cAAA;;;ADhEN,IAAO,4BAAP,MAAO,2BAAyB;EAapC,YACU,QACA,eACA,aACA,cACD,cACC,gBAA8B;AAL9B,SAAA,SAAA;AACA,SAAA,gBAAA;AACA,SAAA,cAAA;AACA,SAAA,eAAA;AACD,SAAA,eAAA;AACC,SAAA,iBAAA;AAjBD,SAAA,gBAAgB,CAAA;AACzB,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,mBAAmB;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;;EASC;EAEH,WAAQ;AACN,SAAK,gBAAe;EACtB;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;IAC3C,CAAC;EACH;EACA,YAAY,SAAsB;AAChC,QAAI,WAAW,QAAQ,eAAe;AAEpC,WAAK,cAAc,IACjB,CAAC,MAAO,EAAE,cAAc,EAAE,+BAA+B,MAAM,GAAG,EAAE,CAAC,EAAE,KAAI,CAAG;AAEhF,cAAQ,IAAI,KAAK,aAAa;AAC9B,WAAK,aAAa,IAAI,yBAAwB,KAAK,aAAa;IAClE;EACF;EAEA,YAAY,MAAI;AACd,SAAK,oBAAoB,KAAK,cAAc;AAC5C,SAAK,OAAO,KAAK,8BAA8B;MAC7C,OAAO;MACP,MAAM;MACN,cAAc;KACf;EACH;EACA,WAAW,MAAI;AAMb,SAAK,qCACH,KAAK,mBAAmB,EACxB,UAAU;MACV,MAAM,CAAC,QAAY;AACjB,gBAAQ,IAAI,GAAG;AAEf,aAAK,aAAa,KAAK,cAAc,WAAW;MAClD;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,IAAI,KAAK;MACnB;KACD;EACH;EAEA,aAAa,cAA6B;AACxC,UAAM,WAAW,KAAK,aAAa,KAAK,mBAAmB;MACzD,MAAM;MACN,aAAa;KACd;AACD,aAAS,kBAAkB,YAAY;EACzC;EAEA,qCAAqC,gBAAsB;AACzD,UAAM,UAAU;MACd,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;MACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,eAAe;MACf,cAAc,KAAK,eAAe,gBAAgB;;AAGpD,WAAO,KAAK,cAAc,kCAAkC,OAAO;EACrE;EAEA,UAAU,KAAU;AAClB,QAAG;AACD,aAAO,IAAI,QAAQ,OAAM,MAAM;EACnC;;;uCA9FW,4BAAyB,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,QAAA,EAAA,QAAA,UAAA,eAAA,gBAAA,GAAA,UAAA,CAAA,8BAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,MAAA,4BAAA,GAAA,qBAAA,QAAA,OAAA,GAAA,CAAA,aAAA,IAAA,WAAA,IAAA,WAAA,IAAA,yBAAA,IAAA,GAAA,iBAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,GAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,WAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,+BAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,YAAA,GAAA,CAAA,gBAAA,MAAA,GAAA,CAAA,gBAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,OAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,gBAAA,kBAAA,GAAA,iBAAA,GAAA,CAAA,YAAA,IAAA,MAAA,IAAA,SAAA,mBAAA,GAAA,YAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,oBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,sBAAA,GAAA,UAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,OAAA,KAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sCAAA,OAAA,IAAA,GAAA,MAAA,GAAA,CAAA,OAAA,uCAAA,OAAA,IAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,EAAA,GAAA,CAAA,OAAA,sCAAA,OAAA,EAAA,GAAA,CAAA,OAAA,uCAAA,OAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,KAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,UAAA,UAAA,GAAA,YAAA,MAAA,GAAA,CAAA,OAAA,sCAAA,OAAA,EAAA,GAAA,CAAA,SAAA,WAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,aAAA,UAAA,GAAA,CAAA,OAAA,2CAAA,OAAA,IAAA,GAAA,WAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,MAAA,IAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,UAAA,SAAA,GAAA,CAAA,WAAA,IAAA,GAAA,sBAAA,GAAA,QAAA,GAAA,CAAA,GAAA,UAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACvBtC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACuD,GAAA,SAAA,CAAA;AAIpE,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA;;AAexC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,yCAAA,GAAA,GAAA,MAAA,CAAA;;AAMxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAMxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAOxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,0CAAA,GAAA,GAAA,MAAA,CAAA;;AAMxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA;;AAMF,QAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA,EACgB,IAAA,0CAAA,GAAA,GAAA,MAAA,EAAA;AAKvF,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,SAAA,EAAA;AAKF,QAAA,uBAAA,EAAM;;;AAvFa,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AA0EK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAIA,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,0BAAA,GAAAC,KAAA,CAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;;;;;;6ED9DjB,2BAAyB,EAAA,WAAA,6BAAA,UAAA,gGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AG4BpB,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;AAC3F,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAoF,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEhC,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;;AAHpD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,aAAA;AAGW,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;;;;AAuE5D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAC4D,GAAA,UAAA,EAAA;AAExD,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAgE,IAAA,uBAAA,EAAS;;;;AAAzE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,2BAAA;;;;;AAUoB,IAAA,yBAAA,GAAA,MAAA;AAAmC,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;;;;AAA5B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,QAAA,GAAA;;;;;AAOlF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuF,GAAA,KAAA,EAAA,EACxB,GAAA,MAAA;AACrD,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA,EAAO,EAClE;;;;AADI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,mBAAA,GAAA;;;;;;AAOJ,IAAA,yBAAA,GAAA,QAAA,EAAA,EAC2E,GAAA,OAAA,EAAA;AAEvE,IAAA,qBAAA,SAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AADnC,IAAA,uBAAA,EACqC;;;;AAFrC,IAAA,gCAAA,cAAA,OAAA,aAAA,uBAAA,mBAAA;;;;;AAG8E,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA;AACxC,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,wBAAA,CAAyB;IAAA,CAAA;AADM,IAAA,uBAAA;;;;;AAPlF,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAgF,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA;AAC9E,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAgF,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,OAAA,EAAA;AAEtC,IAAA,uBAAA;;;;;AARnC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,gBAAA;AAID,IAAA,oBAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,uBAAA,KAAA;AACmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,iBAAA,CAAA,OAAA,UAAA;AACnC,IAAA,oBAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,uBAAA,KAAA;AAED,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA,CAAA,OAAA,UAAA;;;;;;AAIT,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0F,GAAA,QAAA,EAAA,EAEvC,GAAA,UAAA,EAAA;AACA,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,MAAA,wBAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,UAAA,OAAA,CAAe;IAAA,CAAA;AACrE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsB,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA,EAAK,EACjE,EACJ;;;;AAFmB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,OAAA;;;;;AAO9B,IAAA,yBAAA,GAAA,MAAA;AAEE,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAPP,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,oBAAA,GAAA;AAEE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,sBAAA,OAAA,aAAA,GAAA,GAAA;AAEF,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,IAAA,GAAA;AAEE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,sBAAA,OAAA,WAAA,GAAA,GAAA;;;;;;AAIN,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAiD,GAAA,QAAA,EAAA,EACE,GAAA,UAAA,EAAA;AAC7C,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,MAAA,wBAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,UAAA,OAAA,CAAe;IAAA,CAAA;AACxB,IAAA,oBAAA,GAAA,OAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsB,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA,EAAK,EACjE,EACJ;;;;AAFmB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,OAAA;;;;;AAMxB,IAAA,oBAAA,GAAA,0BAAA,EAAA;;;;AAAwB,IAAA,qBAAA,UAAA,MAAA;;;;;AACxB,IAAA,oBAAA,GAAA,yBAAA,EAAA;;;;AAAuB,IAAA,qBAAA,UAAA,MAAA,EAAe,iBAAA,OAAA,aAAA;;;;;;AAOhD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmD,GAAA,kBAAA,CAAA;AACjC,IAAA,qBAAA,eAAA,SAAA,8EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAe,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,uBAAA,EAAiB;;;AD1LtE,IAAO,uBAAP,MAAO,sBAAoB;EAkC/B,YAAmB,eACV,gBACA,QACC,OACD,cACA,eACA,mBACA,2BACA,aACC,OACA,UACD,QACA,eACA,aACC,SAAiC;AAdxB,SAAA,gBAAA;AACV,SAAA,iBAAA;AACA,SAAA,SAAA;AACC,SAAA,QAAA;AACD,SAAA,eAAA;AACA,SAAA,gBAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACA,SAAA,WAAA;AACD,SAAA,SAAA;AACA,SAAA,gBAAA;AACA,SAAA,cAAA;AACC,SAAA,UAAA;AA5CV,SAAA,aAAa,CAAA;AAEb,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,UAAU;AACV,SAAA,MAAc,KAAK,QAAQ,KAAK;AAGhC,SAAA,mBAAmB,CAAC,cAAc,mBAAmB,kBAAkB,sBAAsB,oBAAoB,eAAe,GAAG;AACnI,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,gBAAgB;AAChB,SAAA,gBAAgB;AAET,SAAA,2BAA2B,kBAAkB;AAM7C,SAAA,UAAe,CAAA;AACtB,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAGpE,SAAA,aAAa;AACb,SAAA,gBAAgB,CAAA;AAoBd,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AAC/E,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,aAAa,KAAK,MAAM,SAAS,SAAS,IAAI,YAAY;AAC/D,QAAI,KAAK,kBAAkB;AACzB,WAAK,mBAAmB,CAAC,cAAc,mBAAmB,kBAAkB,sBAAsB,oBAAoB,aAAa;IACrI;AACA,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;IAC3C;AACA,SAAK,cAAc,IAAI,YAAW;AAClC,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,YAAY,KAAK,aAAa,KAAK,aAAa,KAAK,eAAe,gBAAgB;AAClH,SAAK,kBAAkB,OAAO,aAAa,KAAK,aAAa;AAC7D,SAAK,kBAAkB,OAAO,gBAAgB;AAE9C,SAAK,gBAAgB,IAAI,KAAK,KAAK,cAAc,sBAAsB;AACvE,SAAK,cAAc,KAAK,cAAc;EAExC;EAEA,WAAQ;AACN,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,oBAAoB,WAAW,EAAE;AACrF,QAAI,CAAC,KAAK,YAAY,QAAQ,YAAY,sBAAsB;AAC9D,WAAK,kBAAkB,OAAO,kBAAkB,IAAI;AACtD,SAAK,YAAY,YAAY,MAAM,MAAM,KAAK;AAC9C,UAAM,YAAa,KAAK,YAAY,QAAQ,YAAY,gBAAgB,KAAK,KAAK,mBAAmB,KAAK,gBAAgB,YAAY,IAAK,KAAK,gBAAgB,YAAY,IAAI,aAAa,QAAQ,eAAe;AACpN,SAAK,cAAc,iBAAiB,CAAC,IAAI,EAAE,EAAE,QAAQ,SAAS,SAAS,CAAC,MAAM,KAAK,QAAQ;AAE3F,SAAK,MAAM,YAAY,UAAU,YAAS;AACxC,MAAC,OAAO,MAAM,OAAO,MAAO,KAAK,eAAe,OAAO,IAAI,OAAO,GAAG,IAAI,KAAK,eAAc;IAC9F,CAAC;AAED,SAAK,oBAAmB;AACxB,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KAAK,OAAK,EAAE,aAAa,qBAAqB;AACjG,QAAI,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAOlE,SAAK,cAAc,kCAAkC;MACnD,cAAc,KAAK;MACnB,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,WAAW,KAAK,cAAc,KAAK,eAAe,gBAAgB;MAClE,YAAY;MACZ,cAAc,KAAK,eAAe,gBAAgB;KACnD,EAAE,UAAU,UAAO;AAClB,WAAK,gBAAgB,KAAK,cAAc,cAAc,CAAA;IAWxD,CAAC;EACH;EAEA,sBAAmB;AACjB,UAAM,SAAS;MACb,cAAc,aAAa;MAC3B,QAAQ,KAAK,aAAa,KAAK,aAAa,KAAK,eAAe,eAAe;;AAEjF,SAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,UAAO;AAC9D,WAAK,UAAU,KAAK,aAAa,aAAa,KAAK,OAAK,EAAE,aAAa,KAAK,eAAe,eAAe,SAAS;IACrH,CAAC;EACH;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,WAAK,aAAa,wBAAuB;IAC3C,CAAC;EACH;EAEO,YAAY,QAAM;AACvB,UAAM,YAAY,SAAS,eAAe,0BAA0B;AACpE,cAAU,YAAY;EACxB;EAEO,cAAc,GAAC;AACpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAEhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO;AAC9B,WAAK,kBAAkB,OAAO,WAAW;AACzC,WAAK,eAAc;IACrB;EACF;EAEA,iBAAc;AACZ,QAAI,CAAC,KAAK,YAAY,sBAAsB;AAC1C,YAAM,MAAM,KAAK,aAAa,iBAAiB;AAC/C,WAAK,0BAA0B,QAAQ,SAAS,KAAK,MAAM,UAAU,MAAM,MAAM,KAAK;AACtF,aAAO;IACT;AACA,SAAK,OAAO,SAAS,CAAC,qBAAqB,GAAG,EAAE,aAAa,EAAE,IAAI,KAAK,YAAY,UAAS,EAAE,CAAE;EACnG;EAEO,eAAe,IAAK,KAAI;AAQ7B,SAAK,gBAAgB,KAAK,kBAAkB;AAC5C,SAAK,cAAc,KAAK,kBAAkB;AAE1C,SAAK,kBAAkB,OAAO,eAAe,IAAI;AACjD,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,mBAAoB,KAAK,oBAAoB,KAAK,mBAAoB,OAAO;AAC3G,SAAK,kBAAkB,OAAO,YAAY,MAAM,KAAK,eAAe,eAAe;AACnF,SAAK,kBAAkB,OAAO,mBAAmB,OAAO,KAAK,eAAe,eAAe;AAC3F,QAAI,KAAK,kBAAkB,OAAO,UAAU,GAAG;AAC7C,WAAK,UAAU;AACf,WAAK,aAAa,CAAA;IACpB;AAEA,SAAK,YAAY,UAAU,YAAY,gBAAgB,KAAK,kBAAkB;AAC9E,SAAK,YAAY,SAAS,uBAAuB,KAAK,kBAAkB;AACxE,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,UAAM,SAAS,OAAO,OAAO,CAAA,GAAI,KAAK,kBAAkB,MAAM;AAE9D,QAAI,OAAO,UAAU;AACnB,aAAO,WAAW,OAAO,YAAY,OAAO,KAAK,cAAc,sBAAsB,OAAO,QAAQ,IAAI;IAC1G;AACA,QAAI,OAAO,QAAQ;AACjB,aAAO,SAAS,OAAO,UAAU,OAAO,KAAK,cAAc,oBAAoB,OAAO,MAAM,IAAI;IAClG;AAEA,SAAK,eAAe,eAAe,MAAM,EAAE,UAAU;MACnD,MAAM,CAAC,SAAQ;AACb,YAAI,KAAK,kBAAkB,OAAO,UAAU,GAAG;AAC7C,cAAI,KAAK,aAAa,wBAAwB,QAAQ,KAAK,aAAa,qBAAqB,SAAS,GAAG;AACvG,iBAAK,aAAa,KAAK,aAAa,qBAAqB,CAAC,EAAE;AAC5D,iBAAK,cAAc,KAAK,aAAa,qBAAqB,CAAC;UAC7D,OAAO;AACL,iBAAK,aAAa,CAAA;AAClB,iBAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;UAC/D;QACF,OAAO;AACL,cAAI,KAAK,aAAa,wBAAwB,QAAQ,KAAK,aAAa,qBAAqB,SAAS,GAAG;AACvG,iBAAK,aAAa,KAAK,WAAW,OAAO,KAAK,aAAa,qBAAqB,CAAC,EAAE,OAAO;UAC5F;QACF;AAEA,YAAI,KAAK,aAAa,wBAAwB,KAAK,aAAa,qBAAqB,SAAS,GAAG;AAC/F,eAAK,cAAc,KAAK,aAAa,qBAAqB,CAAC;AAC3D,eAAK,UAAU,KAAK,aAAa,qBAAqB,CAAC;AAEvD,eAAK,aAAa,KAAK,WAAW,IAAI,CAAC,MAAM,UAAS;AACpD,gBAAI,KAAK,iBAAiB,KAAK,cAAc,KAAI,KAAM,QAAQ;AAC7D,mBAAK,gBAAgB,KAAK,aAAa,uBAAuB;YAChE;AACA,gBAAI,KAAK,mBAAmB,eAAe;AACzC,mBAAK,sBAAsB,KAAK,sBAAsB;YACxD;AACA,mBAAO;UACT,CAAC;AAED,cAAI,KAAK,WAAW,SAAS,KAAK,KAAK,YAAY;AACjD,iBAAK,aAAa;UACpB,OAAO;AACL,iBAAK,YAAY,IAAI;UACvB;AAEA,eAAK,qBAAqB,KAAK,UAAU;AAEzC,eAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,eAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,eAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,eAAK,WAAW,OAAO,KAAK;AAC5B,eAAK,WAAU;QACjB;MACF;MAAG,OAAO,MAAK;AACb,aAAK,aAAa,CAAA;AAClB,aAAK,WAAW,OAAO,CAAA;AACvB,aAAK,kBAAkB,OAAO,UAAU;AACxC,aAAK,kBAAkB,QAAQ,CAAA;MACjC;KACD;EACH;EAEO,qBAAqB,SAAO;AACjC,QAAI,WAAW,CAAA;AACf,YAAQ,QAAQ,SAAM;AACpB,UAAI,CAAC,SAAS,KAAK,UAAQ,KAAK,oBAAoB,KAAK,gBAAgB,GAAG;AAC1E,cAAM,MAAM;UACV,YAAY,KAAK;UACjB,qBAAqB,KAAK;UAC1B,kBAAkB,KAAK;;AAEzB,iBAAS,KAAK,GAAG;MACnB;IACF,CAAC;AAED,SAAK,YAAY,SAAS,mBAAmB;AAE7C,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;EACvD;EAEO,aAAU;AAEf,SAAK,kBAAkB,QAAQ,CAAA;AAC/B,QAAI,KAAK,cAAc,MAAM;AAC3B,YAAM,SAAS,CAAA;AACf,UAAI,YAAY;AAChB,WAAK,WAAW,QAAQ,YAAS;AAC/B,YAAI,OAAO,iBAAiB,CAAC,OAAO,SAAS,OAAO,aAAa,GAAG;AAClE,cAAI,OAAO,iBAAiB,QAAQ;AAClC,wBAAY,OAAO;UACrB,OAAO;AACL,mBAAO,KAAK,OAAO,cAAc,KAAI,CAAE;AACvC,iBAAK,kBAAkB,MAAM,KAAK,OAAO,cAAc,KAAI,CAAE;UAC/D;QACF;MACF,CAAC;AAED,WAAK,kBAAkB,QAAQ,KAAK,cAAc,2BAA2B,MAAM;AACnF,UAAI,WAAW;AACb,aAAK,kBAAkB,MAAM,OAAO,GAAG,GAAG,SAAS;MACrD;IACF;EACF;EAEO,UAAU,GAAC;AAChB,SAAK,gBAAgB,EAAE;AACvB,SAAK,gBAAgB,EAAE;AACvB,SAAK,WAAW,KAAK,QAAQ,aAAU;AACrC,UAAI,QAAQ,sBAAsB;AAChC,gBAAQ,kBAAkB,EAAE;IAChC,CAAC;EACH;EAEO,WAAW,GAAC;AACjB,SAAK,YAAY,UAAU,YAAY,YAAY;AACnD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,YAAY,IAAI;EACvB;EAEO,WAAW,UAAU,KAAG;AAC7B,QAAI,IAAI,oBAAoB,KAAK,0BAA0B;AACzD,WAAK,QAAQ,IAAI,aAAa;IAChC,WAAW,IAAI,oBAAoB,kBAAkB,SAAS;AAC5D,WAAK,QAAQ,KAAK,aAAa,oBAAoB,qBAAqB,IAAI;IAC9E,OAAO;AAEL,WAAK,YAAY,SAAS,eAAe,UAAU,KAAK,eAAe;AACvE,WAAK,YAAY,SAAS,eAAe,aAAa;AACtD,WAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,WAAK,YAAY,UAAU,YAAY,cAAc;AACrD,WAAK,YAAY,UAAU,YAAY,gBAAgB,KAAK,kBAAkB;AAC9E,WAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,WAAK,YAAY,SAAS,eAAe,QAAQ,UAAU,KAAK;AAChE,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,WAAK,OAAO,KAAK,MAAM;AACvB,WAAK,eAAe,uBAAuB,KAAK,eAAe,gBAAgB,KAAK,MAAM,KAAK,kBAAkB,QAAQ,MAAM,IAAI;IACrI;EACF;EAEO,qBAAqB,GAAG,aAAW;AACxC,gBAAY,kBAAkB,EAAE;AAChC,QAAI,EAAE,SAAS;AACb,WAAK,gBAAgB;AACrB,YAAM,cAAc,KAAK,WAAW,KAAK,KAAK,OAAK,CAAE,EAAE,mBAAoB,EAAE,sBAAsB,WAAW;AAC9G,UAAI,eAAe;AACjB,aAAK,gBAAgB;;AAErB,aAAK,gBAAgB;IACzB,OACK;AACH,WAAK,gBAAgB;AACrB,YAAM,mBAAmB,KAAK,WAAW,KAAK,KAAK,OAAK,EAAE,mBAAmB,EAAE,sBAAsB,WAAW;AAChH,UAAI,oBAAoB;AACtB,aAAK,gBAAgB;IACzB;AACA,SAAK,cAAc,GAAG,WAAW;EACnC;EAEO,cAAc,OAAO,cAAY;AACtC,QAAI,MAAM,YAAY,MAAM;AAC1B,WAAK;AACL,UAAI,KAAK,UAAU,GAAG;AACpB,aAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,oBAAoB,gBAAgB,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK,EAC7J,KAAK,CAAC,cAAa;AAClB,cAAI,WAAW;AACb,iBAAK;AACL,yBAAa,kBAAkB;UACjC;QACF,CAAC;MACL;IACF;AACA,QAAI,MAAM,YAAY,OAAO;AAC3B,WAAK;IACP;EACF;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,WAAW;AACzC,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,mBAAmB;AACjD,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS;AAChC,SAAK,kBAAkB,OAAO,mBAAmB,KAAK,YAAY,QAAQ,YAAY,sBAAsB,IAAI,IAAI;EACtH;EAEO,0BAAuB;AAC5B,SAAK,iCAAiC,IAAI,+BAA8B;AACxE,SAAK,+BAA+B,YAAY,KAAK,eAAe,eAAe;AACnF,SAAK,+BAA+B,aAAa,KAAK,aAAa;AACnE,SAAK,+BAA+B,eAAe,KAAK;AACxD,SAAK,+BAA+B,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AAC9F,SAAK,+BAA+B,SAAS,KAAK,kBAAkB,OAAO;AAC3E,SAAK,+BAA+B,WAAW;AAC/C,SAAK,+BAA+B,mBAAmB,KAAK;AAE5D,SAAK,+BAA+B,sBAAsB,CAAA;AAC1D,SAAK,WAAW,KAAK,QAAQ,SAAM;AACjC,UAAI,IAAI,mBAAmB,IAAI,sBAAsB,aAAa;AAChE,aAAK,kBAAkB,IAAI,gBAAe;AAC1C,aAAK,gBAAgB,iBAAiB,IAAI;AAC1C,aAAK,gBAAgB,cAAc,IAAI;AACvC,aAAK,gBAAgB,aAAa,IAAI;AACtC,aAAK,gBAAgB,cAAc,IAAI;AACvC,aAAK,gBAAgB,UAAU,IAAI;AACnC,aAAK,gBAAgB,aAAa,IAAI;AACtC,aAAK,gBAAgB,eAAe,IAAI,IAAI;AAC5C,aAAK,+BAA+B,oBAAoB,KAAK,KAAK,eAAe;MACnF;IACF,CAAC;AACD,SAAK,0BAA0B,QAAQ,SAAS,KAAK,aAAa,oBAAoB,yBAAyB,KAAK,aAAa,oBAAoB,SAAS,IAAI,MAAM,MAAM,KAAK;AACnL,SAAK,eAAe,+BAA+B,KAAK,8BAA8B,EAAE,UAAU;MAChG,MAAM,CAAC,QAAO;AACZ,cAAM,WAAW,KAAK,eAAe,eAAe;AACpD,aAAK,YAAY,KAAK,QAAQ;MAChC;MAAG,OAAO,MAAK;AACb,aAAK,0BAA0B,QAAO;AACtC,aAAK,0BAA0B,QAAQ,SAAS,KAAK,aAAa,oBAAoB,YAAY,IAAI,KAAK,aAAa,oBAAoB,IAAI,MAAM,OAAO,IAAI;MACnK;KACD;AAED,eAAW,MAAK;AACd,WAAK,QAAQ,KAAI;IACnB,GAAG,GAAG;EAER;EAEA,YAAY,KAAK,UAAQ;AAEvB,SAAK,cAAc,eAAe,KAAK;MACrC,MAAM;MACN;KACD;AACD,WAAO;EACT;EAEA,sBAAsB,GAAC;AACrB,QAAI,KAAK,cAAc,yBAAyB,uBAAuB,gBAAgB;AACrF,WAAK,mBAAmB,EAAE,OAAO;IACnC,OAAO;AACL,YAAM,MAAM,KAAK,aAAa,oBAAoB;AAClD,WAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,mBAAmB,KAAK,aAAa,oBAAoB,MAAM,EAClJ,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,YAAY,SAAS,MAAM,+BAA+B;AAC/D,eAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AACrD,eAAK,OAAO,cAAc,eAAe;QAC3C,OAAO;AACL,eAAK,eAAe,eAAe,oBAAoB,CAAC,KAAK,eAAe,eAAe;QAC7F;MACF,CAAC;IACL;EACF;EAEO,mBAAmB,aAAW;AACnC,UAAM,SAAS;MACb,UAAU,KAAK,cAAc;MAC7B,cAAc,KAAK;MACnB,WAAW,KAAK,eAAe,eAAe;MAC9C,cAAc,KAAK,eAAe,eAAe;MACjD,UAAU;;AAEZ,SAAK,eAAe,mBAAmB,MAAM,EAAE,UAAU;MACvD,MAAM,MAAK;AACT,aAAK,eAAe,eAAe,oBAAoB;AACvD,qBAAa,QAAQ,kBAAkB,KAAK,UAAU,KAAK,eAAe,cAAc,CAAC;MAC3F;MAAG,OAAO,CAAC,QAAO;AAChB,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C;KACD;EACH;EAEO,QAAQ,eAAe,QAAQ,OAAK;AAOzC,QAAI,CAAC,OAAO;AACV,UAAI,iBAAiB,iBAAiB,KAAK,aAAa,GAAG;AACzD,wBAAgB,KAAK,aAAa,oBAAoB;MACxD,WAAW,iBAAiB,OAAO,KAAK,aAAa,GAAG;AACtD,wBAAgB,KAAK,aAAa,oBAAoB;MACxD,WAAW,iBAAiB,MAAM,KAAK,aAAa,GAAG;AACrD,wBAAgB,KAAK,aAAa,oBAAoB;MACxD,OAAO;AACL,wBAAgB,KAAK,aAAa,oBAAoB;MAExD;IACF;AACA,SAAK,0BAA0B,QAAQ,IAAI,eAAe,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK;EAG3H;EAEO,iBAAiB,GAAC;AAEvB,YAAQ,IAAI,KAAK,WAAW;AAC5B,MAAE,gBAAe;AACjB,SAAK,YAAY,QAAQ,UAAU;AACnC,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,UAAM,cAAc,KAAK,YAAY,QAAQ;AAC7C,UAAM,UAAU,KAAK,kBAAkB,KAAK,gBAAgB,SAAS,IAAI;AACzE,UAAM,aAAa,KAAK,YAAY,QAAQ,SAAS,KAAK,KAAK,YAAY,QAAQ,CAAC,EAAE,gBAAgB,KAAK,YAAY,QAAQ,CAAC,EAAE,gBAAgB;AAClJ,QAAI,SAAS,WAAW,YAAY,OAAO,IACvC,qBAAqB,UACrB,YAAY,KAAK,MAAM,aAAa,WAAW,EAAE,eACjD,oBAAoB,KAAK,MAAM,aAAa,WAAW,EAAE,gBACzD,eAAgB,aAAa,SAC7B,mBAAmB,KAAK,MAAM,aAAa,WAAW,EAAE,eACxD,iBAAiB,YAAY,cAAc,IAC3C,kBAAkB,YAAY,iBAAiB,IAC/C,iBAAiB,aACjB,gBAAgB,KAAK,YAAY,YACjC,kBAAkB,KAAK,YAAY,cACnC,cAAc,KAAK,YAAY,cAC/B,YAAY,KAAK,YAAY,YAC7B,gBAAgB,KAAK,YAAY,YACjC,0BACa,KAAK,YAAY,SAC9B,UAAU,KAAK,YAAY,MAC3B,mBAAoB,KAAK,YAAY,eACrC,qBAAsB,KAAK,YAAY,iBACvC,oBAAqB,KAAK,YAAY,gBACtC,gBAAiB,KAAK,YAAY,YAClC,eAAgB,KAAK,YAAY,WACjC,gBAAe,KAAK,YAAY,YAChC,iBAAiB,KAAK,cAAc,eAAc,EAAG,aACrD,mBAAmB,KAAK,cAAc,eAAc,EAAG,eACvD,mBAAmB,KAAK,MAAM,aAAa,WAAW,EAAE,iBACxD,cAAc,SAAS,OACvB,oBAAoB,KAAK,cAAc,oBAAmB,IAC1D,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc,IACtE,iBAAiB,KAAK,YAAY,QAAQ,YAAY,YAAY,IAClE,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc,IACtE,aAAa,KAAK,cAAc,UAAS;AAC7C,aAAS,KAAK,SAAS,QAAQ,MAAM;AACrC,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,cAAc,kBAAkB,EAAE,eAAe,OAAM,CAAE,EAAE,UAAU,SAAM;AAC9E,eAAO,SAAS,OAAO,YAAY,SAAS,qCAAqC,IAAI;MACvF,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH,OACK;AACH,WAAK,cAAc,iBAAiB,EAAE,cAAc,OAAM,CAAE,EAAE,UAAU,UAAO;AAC7E,eAAO,SAAS,OAAO,YAAY,SAAS,qCAAqC,KAAK,aAAa;MACrG,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH;EAIF;EAEA,sBAAmB;AACjB,SAAK,cAAc,sBAAsB,UAAU,QAAK;AACtD,UAAI,IAAI;AACN,aAAK,OAAO,MAAK;MACnB;IACF,CAAC;EACH;EAEA,uBAAoB;AAClB,UAAM,SAAS,KAAK,OAAO,KAAK,uBAAuB;MACrD,OAAO;KACR;AAED,WAAO,YAAW,EAAG,UAAU,UAAO;AACpC,UAAI,MAAM;AACR,aAAK,eAAe,iBAAiB,MAAM,MAAM,MAAM,MAAM,IAAI;AACjE,aAAK,OAAO,cAAc,YAAY,EAAE,oBAAoB,KAAI,CAAE,EAAE,KAAK,MAAK;AAC5E,eAAK,OAAO,cAAc,cAAc;QAC1C,CAAC;MACH;IACF,CAAC;EACH;EAEO,OAAO,MAAM,IAAE;AACpB,QAAI,KAAK,cAAc,gBAAe,GAAI;AACxC,YAAM,MAAM;QACV,cAAc,KAAK;QACnB,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;QACzD,mBAAmB;UACjB;YACE,QAAQ,KAAK;YACb,WAAW,KAAK;YAChB,KAAK;;;;AAGX,WAAK,cAAc,gBAAgB,GAAG,EAAE,UAAU;QAChD,MAAM,MAAK;AACT,eAAK,aAAa,MAAM;AAExB,cAAI,KAAK,YAAY,UAAU,UAAU,eAAe,KAAK,YAAY,UAAU,UAAU,YAAY,QAAQ;AAC/G,kBAAM,UAAU,KAAK,YAAY,UAAU,UAAU,YAAY,KAAK,OAAK,EAAE,gBAAgB,KAAK,QAAQ,YAAY;AACtH,gBAAI,SAAS;AACX,oBAAM,SAAS,QAAQ,QAAQ,KAAK,OAAK,EAAE,SAAS,KAAK,KAAK;AAC9D,qBAAO,aAAa,MAAM;YAC5B;UAEF;QACF;OACD;IACH;EACF;EAEA,SAAM;AACJ,QAAI,KAAK,kBAAkB;AACzB,WAAK,OAAO,SAAS,CAAC,gBAAgB,CAAC;IACzC,OAAO;AACL,WAAK,cAAc,sBAAqB;IAC1C;EACF;;;uCAxmBW,uBAAoB,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,wBAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAiBpB,SAAO,CAAA;8BASP,WAAS,CAAA;;;;;;;;;;AClDtB,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA;AAExC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,wBAAA,CAAA,EAA2E,GAAA,cAAA,GAAA,CAAA,EACsB,GAAA,kBAAA,CAAA;AAC7E,QAAA,qBAAA,eAAA,SAAA,sEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,eAAA,CAAgB;QAAA,CAAA;AAAE,QAAA,uBAAA,EAAiB;AAGpE,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgE,IAAA,KAAA,EACJ,IAAA,WAAA,CAAA,EACN,IAAA,KAAA,CAAA;AACnB,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,OAAA,CAAQ;QAAA,CAAA;AAC3B,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA;AAC5D,QAAA,yBAAA,IAAA,QAAA,CAAA;AAAgD,QAAA,iBAAA,EAAA;AAAgD,QAAA,uBAAA;AAEhG,QAAA,yBAAA,IAAA,OAAA,EAAA;AAEoB,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFrE,QAAA,uBAAA,EAEyE;AAG3E,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA,EAC+C,IAAA,OAAA,EAAA,EAClD,IAAA,KAAA,EAAA;AAA6B,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,OAAA,CAAsB;QAAA,CAAA;AAC3D,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA,EAAI;AAClE,QAAA,yBAAA,IAAA,OAAA,EAAA;AAAqB,QAAA,iBAAA,EAAA;AAAgD,QAAA,uBAAA;AACrE,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,QAAA,EAAA,EAC6B,IAAA,UAAA,EAAA;AACA,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,YAAA,sBAAA,CAAA;AAAA,iBAAA,sBAAS,UAAA,OAAA,CAAe;QAAA,CAAA;AACrE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AAE0B,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAF3E,QAAA,uBAAA,EAE+E,EAC1E,EACH,EACF;AAGR,QAAA,yBAAA,IAAA,WAAA,EAAA,EAAoC,IAAA,OAAA,EAAA,EACe,IAAA,OAAA,EAAA,EAC9B,IAAA,QAAA,EAAA;AAEb,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,gBAAA,EAAA;AAMF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,QAAA,EAAA,EACnB,IAAA,UAAA,EAAA;AACA,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,gBAAA,YAAA,sBAAA,CAAA;AAAA,iBAAA,sBAAS,UAAA,OAAA,CAAe;QAAA,CAAA;AACrE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACA,QAAA,yBAAA,IAAA,MAAA,EAAA;AAAsB,QAAA,iBAAA,EAAA;AAA6C,QAAA,uBAAA,EAAK,EACjE,EACJ,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwD,IAAA,OAAA,EAAA,EACvB,IAAA,OAAA,EAAA,EACX,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAAgD,QAAA,uBAAA;AAC7E,QAAA,yBAAA,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,OAAA,EAAA,EACxB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAAkD,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAEpF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,OAAA,EAAA,EACxB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAEjF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,OAAA,EAAA,EACxB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAEhF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqC,IAAA,OAAA,EAAA,EACjB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAA4C,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAE9E,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqC,IAAA,OAAA,EAAA,EACjB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAE3E,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqC,IAAA,OAAA,EAAA,EACjB,IAAA,QAAA,EAAA;AACa,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA;AAAO,QAAA,yBAAA,IAAA,QAAA,EAAA;AAE3E,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACH,EACF;AAER,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,OAAA,EAAA;AAKF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,MAAA,EACtB,IAAA,MAAA;AAEF,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,oBAAA,EAAA;AAAkB,QAAA,2BAAA,iBAAA,SAAA,yEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,YAAA,MAAA,MAAA,IAAA,aAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAAyB,QAAA,uBAAA;AAC3C,QAAA,yBAAA,IAAA,MAAA;AACE,QAAA,iBAAA,EAAA;AAA+C,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,QAAA,EAAA;AACjD,QAAA,uBAAA,EAAO,EACF;AAET,QAAA,yBAAA,IAAA,YAAA,EAAA,EAAgC,IAAA,OAAA,EAAA,EACZ,IAAA,OAAA,EAAA;AAEd,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,OAAA,EAAA;AAKA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsG,IAAA,OAAA,EAAA;AAGlG,QAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,gBAAA,EAAA;AAWF,QAAA,uBAAA;AAEA,QAAA,qBAAA,KAAA,uCAAA,GAAA,GAAA,OAAA,EAAA;AASF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,KAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,wCAAA,GAAA,GAAA,QAAA,EAAA;AAWF,QAAA,uBAAA;AACA,QAAA,qBAAA,KAAA,wCAAA,GAAA,GAAA,QAAA,EAAA;AAQA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAkC,KAAA,KAAA;AAE9B,QAAA,qBAAA,KAAA,0DAAA,GAAA,GAAA,0BAAA,EAAA,EAA4D,KAAA,yDAAA,GAAA,GAAA,yBAAA,EAAA;AAG9D,QAAA,uBAAA,EAAM,EACF,EACF,EACG;AAEb,QAAA,qBAAA,KAAA,uCAAA,GAAA,GAAA,OAAA,EAAA;AAGF,QAAA,uBAAA,EAAM,EACe,EACnB;AAGR,QAAA,oBAAA,KAAA,UAAA,EAAA;;;AA1Ma,QAAA,oBAAA,EAAA;AAAA,QAAA,iCAAA,eAAA,IAAA,aAAA,YAAA,IAAA,EAAA;AAGkB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AAC6B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,WAAA;AAG9C,QAAA,oBAAA;AAAA,QAAA,gCAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAOqB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AACA,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,WAAA;AAOf,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAWF,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,SAAA,GAAA;AAGe,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA;AAYS,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,mBAAA,OAAA;AAQK,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,WAAA,IAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,WAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,aAAA,IAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,aAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,WAAA,GAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,WAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,SAAA,IAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,aAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,OAAA,IAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,WAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,KAAA,GAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,KAAA,GAAA;AAM2B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,KAAA,GAAA;AAE3B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,QAAA,QAAA,GAAA;AAML,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,kBAAA,CAAA,IAAA,gBAAA;AAOK,QAAA,oBAAA,CAAA;AAAA,QAAA,iCAAA,sBAAA,CAAA,IAAA,aAAA,cAAA,IAAA,EAAA;AACJ,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,gBAAA,GAAA;AAEgB,QAAA,oBAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,UAAA;AACZ,QAAA,oBAAA;AAAA,QAAA,iCAAA,sBAAA,IAAA,aAAA,cAAA,IAAA,EAAA;AACJ,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,UAAA,GAAA;AAAsD,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,MAAA;AAOP,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA,CAAA,IAAA,UAAA;AAQ5B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA;AAasD,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AAYlE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AAYqB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AAUe,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AAEtC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,UAAA;AAMmB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;;;;;;6EDzL3B,sBAAoB,EAAA,WAAA,wBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEfjC,wBAAuB;;;;;AC+FP,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8F,GAAA,OAAA,EAAA,EAC1E,GAAA,QAAA,EAAA;AAEd,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA,EAA4B,GAAA,oBAAA,EAAA;AAC6B,IAAA,2BAAA,iBAAA,SAAA,6FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,MAAA,6BAAA,OAAA,YAAA,mBAAA,MAAA,MAAA,OAAA,YAAA,oBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACrD,IAAA,qBAAA,UAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,sBAAA,MAAA,CAA6B;IAAA,CAAA;AACzC,IAAA,uBAAA,EAAmB,EACd,EACH;;;;AAPF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,eAAA,GAAA;AAGuD,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,YAAA,iBAAA;;;;;AAlE/D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkF,GAAA,OAAA,EAAA,EAC1D,GAAA,OAAA,EAAA,EACF,GAAA,QAAA,EAAA;AACa,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;AAC7E,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsB,GAAA,OAAA,EAAA,EACF,GAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAAkD,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAEpF,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,OAAA,EAAA,EACF,IAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAEjF,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,OAAA,EAAA,EACF,IAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAA8C,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAEhF,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqD,IAAA,OAAA,EAAA,EACjC,IAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAA4C,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAE9E,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqD,IAAA,OAAA,EAAA,EACjC,IAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAAyC,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAE3E,IAAA,iBAAA,EAAA;AAGF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqD,IAAA,OAAA,EAAA,EACjC,IAAA,QAAA,EAAA;AACa,IAAA,iBAAA,EAAA;AAAyC,IAAA,uBAAA;AAAO,IAAA,yBAAA,IAAA,QAAA,EAAA;AAE3E,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,OAAA,EAAA;AAYF,IAAA,uBAAA;;;;AArEmC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,WAAA,IAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,YAAA,OAAA,YAAA,YAAA,OAAA,GAAA;AAM2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,aAAA,IAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,cAAA,OAAA,YAAA,cAAA,OAAA,GAAA;AAM2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,WAAA,GAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,YAAA,OAAA,YAAA,YAAA,OAAA,GAAA;AAO2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,SAAA,IAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,cAAA,OAAA,YAAA,cAAA,OAAA,GAAA;AAM2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,OAAA,IAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,YAAA,OAAA,YAAA,YAAA,OAAA,GAAA;AAM2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,KAAA,GAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,MAAA,OAAA,YAAA,MAAA,OAAA,GAAA;AAQ2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,KAAA,GAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,SAAA,OAAA,YAAA,SAAA,OAAA,GAAA;AAI+D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,gBAAA;;;;;;AA0B3D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,gBAAA,EAAA;AAE1D,IAAA,qBAAA,UAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAC7B,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA,EAAO;;;;AAHhB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA;AAG/B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,GAAA;;;;;AALV,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA;AAMF,IAAA,uBAAA;;;AANmD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;;;;;AAOnD,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;AAAuC,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,CAAA,CAAA;;;;;AAavC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,WAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,OAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,MAAA,UAAA,CAAsB;IAAA,CAAA;AACpF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAqB,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA,EAAO;;;;AAApC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,iBAAA,EAAA;;;;;AAKvB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,OAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,cAAA,OAAA;AAAA,YAAA,QAAA,OAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,WAAA,CAAsB;IAAA,CAAA;AACpF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,eAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,QAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,WAAA,CAAsB;IAAA,CAAA;AACpF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,qBAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;;;;AAAjD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,YAAA;;;;;;AACtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,WAAA,CAAsB;IAAA,CAAA;AACpF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,kBAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,gBAAA,GAAA;;;;;AAIE,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;AAEA,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;;AAJJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuD,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,YAAA,UAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,QAAA;AAAA,YAAA,QAAA,QAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,WAAA,CAAsB;IAAA,CAAA;AACpF,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAC6B,GAAA,kDAAA,GAAA,GAAA,OAAA,EAAA;AAG7B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AALC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,qBAAA,CAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,qBAAA,CAAA;AAEN,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,oBAAA,GAAA;;;;;AAKN,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAGF,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAuF,GAAA,IAAA,EACjF,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA,EAAK,EAC1D;;;;AADC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,oBAAA,gBAAA,GAAA;;;;;AAcxB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,6BAAA;AACF,IAAA,uBAAA;;;ADpME,IAAO,8BAAP,MAAO,6BAA2B;EAkCtC,YACS,eACA,gBACA,QACC,OACD,cACA,eACA,mBACA,2BACA,aACC,OACA,UAAyB;AAV1B,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,SAAA;AACC,SAAA,QAAA;AACD,SAAA,eAAA;AACA,SAAA,gBAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACA,SAAA,WAAA;AAzCV,SAAA,aAAa,CAAA;AAEb,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,UAAU;AACV,SAAA,MAAc,KAAK,QAAQ,KAAK;AAGhC,SAAA,mBAAmB;MACjB;MACA;MACA;MACA;MACA;MACA;;AAEF,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,gBAAgB;AAChB,SAAA,gBAAgB;AAET,SAAA,2BAA2B,kBAAkB;AAOpD,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAclE,SAAK,MAAM,SAAS,uBAAuB;AAC3C,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,mBACH,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AACvD,SAAK,mBACH,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AACzD,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,aAAa,KAAK,MAAM,SAAS,SAAS,IAAI,YAAY;AAC/D,SAAK,eAAe,KAAK,MAAM,SAAS,SAAS,IAAI,cAAc;AACnE,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,qBAAoB;IACxC;AAEA,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,YAAY,KAAK;AAC/C,QAAI,KAAK,gBAAgB;AACvB,WAAK,kBAAkB,OAAO,mBAAmB,KAAK;AACxD,SAAK,kBAAkB,OAAO,aAC5B,KAAK,aAAa;AACpB,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,YAAQ,IAAI,OAAO,OAAO,KAAK,YAAY;EAC7C;EAEA,WAAQ;AACN,SAAK,eAAc;EACrB;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;IACxC,CAAC;EACL;EAEO,iBAAc;AACnB,SAAK,kBAAkB,OAAO,eAAe,IAAI;AACjD,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,eAC5B,KAAK,YAAY,QAAQ,YAAY,cAAc;AACrD,SAAK,kBAAkB,OAAO,WAC5B,KAAK,YAAY,QAAQ,YAAY,UAAU;AACjD,SAAK,kBAAkB,OAAO,YAAY,KAAK;AAC/C,SAAK,kBAAkB,OAAO,mBAC5B,KAAK,oBAAoB,KAAK,mBAAmB,OAAO;AAC1D,QAAI,KAAK,kBAAkB,OAAO,UAAU,GAAG;AAC7C,WAAK,UAAU;AACf,WAAK,aAAa,CAAA;IACpB;AAEA,SAAK,eAAe,eAAe,KAAK,kBAAkB,MAAM,EAAE,KAChE,UAAU,CAAC,SAAQ;AACjB,YAAM,eAAe,KAAK,aAAa,qBAAqB,CAAC,EAAE;AAC/D,WAAK,kBAAkB,OAAO,mBAAmB;AAEjD,aAAO,KAAK,eAAe,eAAe,KAAK,kBAAkB,MAAM;IACzE,CAAC,CAAC,EACF,UACA;MACE,MAAM,CAAC,SAAQ;AACb,YAAI,KAAK,kBAAkB,OAAO,UAAU,GAAG;AAC7C,cACE,KAAK,aAAa,wBAAwB,QAC1C,KAAK,aAAa,qBAAqB,SAAS,GAChD;AACA,iBAAK,aAAa,KAAK,aAAa,qBAAqB,CAAC,EAAE;UAC9D,OAAO;AACL,iBAAK,aAAa,CAAA;UACpB;QACF,OAAO;AACL,cACE,KAAK,aAAa,wBAAwB,QAC1C,KAAK,aAAa,qBAAqB,SAAS,GAChD;AACA,iBAAK,aAAa,KAAK,WAAW,OAChC,KAAK,aAAa,qBAAqB,CAAC,EAAE,OAAO;UAErD;QACF;AAEA,YAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,eAAK,cAAc,KAAK,aAAa,qBAAqB,CAAC;AAE3D,eAAK,aAAa,KAAK,WAAW,IAAI,CAAC,SAAQ;AAC7C,gBAAI,KAAK,iBAAiB,KAAK,cAAc,KAAI,KAAM,QAAQ;AAC7D,mBAAK,gBACH,KAAK,aAAa,uBAAuB;YAC7C;AACA,mBAAO;UACT,CAAC;AAED,eAAK,YAAY,SAAS,mBAAmB,CAAA;AAC7C,eAAK,WAAW,QAAQ,CAAC,QAAO;AAC9B,gBACE,CAAC,KAAK,YAAY,SAAS,iBAAiB,SAC1C,IAAI,gBAAgB,GAEtB;AACA,mBAAK,YAAY,SAAS,iBAAiB,KACzC,IAAI,gBAAgB;YAExB;UACF,CAAC;AACD,eAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,eAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,eAAK,WAAW,sBACd,KAAK,cAAc;AACrB,eAAK,WAAW,OAAO,KAAK;AAC5B,eAAK,WAAU;QACjB,OAAO;AACL,eAAK,WAAW,OAAO,CAAA;QACzB;MACF;MACA,OAAO,MAAK;AACV,aAAK,aAAa,CAAA;AAClB,aAAK,WAAW,OAAO,CAAA;AACvB,aAAK,kBAAkB,OAAO,UAAU;AACxC,aAAK,kBAAkB,QAAQ,CAAA;MACjC;KACD;EACL;EAEO,aAAU;AACf,SAAK,kBAAkB,QAAQ,CAAA;AAC/B,QAAI,KAAK,cAAc,MAAM;AAC3B,YAAM,SAAS,CAAA;AACf,UAAI,YAAY;AAChB,WAAK,WAAW,QAAQ,CAAC,WAAU;AACjC,YAAI,OAAO,iBAAiB,CAAC,OAAO,SAAS,OAAO,aAAa,GAAG;AAClE,cAAI,OAAO,iBAAiB,QAAQ;AAClC,wBAAY,OAAO;UACrB,OAAO;AACL,mBAAO,KAAK,OAAO,cAAc,KAAI,CAAE;AACvC,iBAAK,kBAAkB,MAAM,KAAK,OAAO,cAAc,KAAI,CAAE;UAC/D;QACF;MACF,CAAC;AACD,WAAK,kBAAkB,QACrB,KAAK,cAAc,2BAA2B,MAAM;AACtD,UAAI,WAAW;AACb,aAAK,kBAAkB,MAAM,OAAO,GAAG,GAAG,SAAS;MACrD;IACF;EACF;EAEO,UAAU,GAAC;AAChB,SAAK,gBAAgB,EAAE;AACvB,SAAK,gBAAgB,EAAE;AACvB,SAAK,WAAW,KAAK,QAAQ,CAAC,YAAW;AACvC,UAAI,QAAQ,sBAAsB;AAChC,gBAAQ,kBAAkB,EAAE;IAChC,CAAC;EACH;EAEO,WAAW,GAAC;AACjB,SAAK,YAAY,UAAU,YAAY,YAAY;AACnD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;EACvD;EAEO,WAAW,UAAU,KAAG;AAC7B,QAAI,IAAI,oBAAoB,KAAK,0BAA0B;AACzD,WAAK,QAAQ,IAAI,aAAa;IAChC,WAAW,IAAI,oBAAoB,kBAAkB,SAAS;AAC5D,WAAK,QAAQ,KAAK,aAAa,oBAAoB,mBAAmB;IACxE,OAAO;AACL,WAAK,YAAY,UAAU,YAAY,cAAc;AACrD,WAAK,YAAY,UAAU,YAAY,gBACrC,KAAK,kBAAkB;AACzB,WAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,UAAI,KAAK,eAAe,KAAK,YAAY,UAAU;AACjD,aAAK,YAAY,SAAS,eAAe,UAAU,KAAK;AACxD,aAAK,YAAY,SAAS,eAAe,aAAa;AACtD,aAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;MACvD;AACA,WAAK,eAAe,uBAClB,KAAK,aACL,KACA,MACA,KAAK,kBAAkB,QACvB,MACA,IAAI;IAER;EACF;EAEO,qBAAqB,GAAG,aAAW;AACxC,gBAAY,kBAAkB,EAAE;AAChC,QAAI,EAAE,SAAS;AACb,WAAK,gBAAgB;AACrB,YAAM,cAAc,KAAK,WAAW,KAAK,KACvC,CAAC,MAAM,CAAC,EAAE,mBAAmB,EAAE,sBAAsB,WAAW;AAElE,UAAI,eAAe;AAAW,aAAK,gBAAgB;;AAC9C,aAAK,gBAAgB;IAC5B,OAAO;AACL,WAAK,gBAAgB;AACrB,YAAM,mBAAmB,KAAK,WAAW,KAAK,KAC5C,CAAC,MAAM,EAAE,mBAAmB,EAAE,sBAAsB,WAAW;AAEjE,UAAI,oBAAoB;AAAW,aAAK,gBAAgB;IAC1D;AACA,SAAK,cAAc,GAAG,WAAW;EACnC;EAEO,cAAc,OAAO,cAAY;AACtC,QAAI,MAAM,YAAY,MAAM;AAC1B,WAAK;AACL,UAAI,KAAK,UAAU,GAAG;AACpB,aAAK,0BACF,QACC,IACA,KAAK,aAAa,oBAAoB,gBACtC,KAAK,aAAa,oBAAoB,IACtC,IACA,MACA,MACA,KAAK,EAEN,KAAK,CAAC,cAAa;AAClB,cAAI,WAAW;AACb,iBAAK;AACL,yBAAa,kBAAkB;UACjC;QACF,CAAC;MACL;IACF;AACA,QAAI,MAAM,YAAY,OAAO;AAC3B,WAAK;IACP;EACF;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,WAAW;AACzC,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,mBAAmB;AACjD,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS;EAClC;EAEO,0BAAuB;AAC5B,SAAK,iCAAiC,IAAI,+BAA8B;AACxE,SAAK,+BAA+B,YAClC,KAAK,YAAY,QAAQ;AAC3B,SAAK,+BAA+B,aAClC,KAAK,aAAa;AACpB,SAAK,+BAA+B,eAAe,KAAK;AACxD,SAAK,+BAA+B,WAClC,KAAK,YAAY,QAAQ,YAAY,UAAU;AACjD,SAAK,+BAA+B,SAClC,KAAK,kBAAkB,OAAO;AAChC,SAAK,+BAA+B,WAAW;AAC/C,SAAK,+BAA+B,mBAClC,KAAK,oBAAoB,KAAK,mBAAmB,OAAO;AAE1D,SAAK,+BAA+B,sBAAsB,CAAA;AAC1D,SAAK,WAAW,KAAK,QAAQ,CAAC,QAAO;AACnC,UAAI,IAAI,mBAAmB,IAAI,sBAAsB,aAAa;AAChE,aAAK,kBAAkB,IAAI,gBAAe;AAC1C,aAAK,gBAAgB,iBAAiB,IAAI;AAC1C,aAAK,gBAAgB,cAAc,IAAI;AACvC,aAAK,gBAAgB,UAAU,IAAI;AACnC,aAAK,gBAAgB,aAAa,IAAI;AACtC,aAAK,gBAAgB,cAAc,IAAI;AACvC,aAAK,gBAAgB,aAAa,IAAI;AACtC,aAAK,+BAA+B,oBAAoB,KACtD,KAAK,eAAe;MAExB;IACF,CAAC;AAED,SAAK,eACF,+BAA+B,KAAK,8BAA8B,EAClE,UAAU,CAAC,QAAO;AACjB,YAAM,WAAW,KAAK,YAAY,QAAQ;AAC1C,WAAK,YAAY,KAAK,QAAQ;IAChC,CAAC;EACL;EAEA,YAAY,KAAK,UAAQ;AACvB,UAAM,OAAO,IAAI,KAAK,CAAC,GAAG,GAAG,EAAE,MAAM,kBAAiB,CAAE;AAGxD,QAAI,UAAU,UAAU,QAAQ,QAAQ,KAAK,IAAI;AAC/C,YAAM,YAAY,IAAI,gBAAgB,IAAI;AAC1C,YAAM,SACJ,SAAS,cAAc,cAAc;AAEvC,aAAO,MAAM;AACb,iBAAW,WAAA;AACT,eAAO,cAAc,MAAK;MAC5B,GAAG,GAAI;IACT,OAAO;AACL,iBACE,YACA,oBAAI,KAAI,GAAG,eAAc,EAAG,QAAQ,KAAK,EAAE,EAAE,MAAM,GAAG,EAAE,KAAK,GAAG,IAChE;AACF,UAAI,OAAO,aAAa,OAAO,UAAU,kBAAkB,GAAG;AAC5D,eAAO,UAAU,kBAAkB,EAAE,MAAM,QAAQ;MACrD,OAAO;AACL,sCAAO,KAAK,QAAQ;MACtB;IACF;EACF;EAEA,sBAAsB,GAAC;AACrB,QACE,KAAK,cAAc,yBACnB,uBAAuB,gBACvB;AACA,WAAK,mBAAmB,EAAE,OAAO;IACnC,OAAO;AACL,YAAM,MAAM,KAAK,aAAa,oBAAoB;AAClD,WAAK,0BACF,QACC,IACA,KACA,KAAK,aAAa,oBAAoB,mBACtC,KAAK,aAAa,oBAAoB,MAAM,EAE7C,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,YAAY,SAAS,MAAM,+BAA+B;AAC/D,eAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AACrD,eAAK,OAAO,cAAc,eAAe;QAC3C,OAAO;AACL,eAAK,YAAY,QAAQ,oBACvB,CAAC,KAAK,YAAY,QAAQ;QAC9B;MACF,CAAC;IACL;EACF;EAEO,mBAAmB,aAAW;AACnC,UAAM,SAAS;MACb,UAAU,KAAK,cAAc;MAC7B,cAAc,KAAK;MACnB,WAAW,KAAK,YAAY;MAC5B,cAAc,KAAK,YAAY;MAC/B,UAAU;;AAEZ,SAAK,eAAe,mBAAmB,MAAM,EAAE,UAC7C,CAAC,QAAO;AACN,cAAQ,IAAI,GAAG;AACf,WAAK,YAAY,eAAe,oBAAoB;AACpD,mBAAa,QACX,kBACA,KAAK,UAAU,KAAK,YAAY,cAAc,CAAC;IAEnD,GACA,CAAC,QAAO;AACN,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;IACjC,CAAC;EAEL;EAEO,QAAQ,eAAa;AAO1B,QAAI,iBAAiB,iBAAiB,KAAK,aAAa,GAAG;AACzD,sBAAgB,KAAK,aAAa,oBAAoB;IACxD,WAAW,iBAAiB,OAAO,KAAK,aAAa,GAAG;AACtD,sBAAgB,KAAK,aAAa,oBAAoB;IACxD,WAAW,iBAAiB,MAAM,KAAK,aAAa,GAAG;AACrD,sBAAgB,KAAK,aAAa,oBAAoB;IACxD,OAAO;AAEL,sBAAgB,gBAAgB,gBAAgB,KAAK,aAAa,oBAAoB;IACxF;AAEA,SAAK,0BAA0B,QAAQ,IAAI,eAAe,KAAK,aAAa,oBAAoB,IAAI,IAAI,MAAM,MAAM,KAAK;EAG3H;EAEO,iBAAiB,GAAC;AACvB,MAAE,gBAAe;AAEjB,SAAK,YAAY,QAAQ,UAAU;AACnC,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,UAAM,cAAc,KAAK,YAAY,QAAQ;AAC7C,UAAM,UAAU,KAAK,kBAAkB,KAAK,gBAAgB,SAAS,IAAI;AACzE,UAAM,aACJ,KAAK,YAAY,QAAQ,SAAS,KAChC,KAAK,YAAY,QAAQ,CAAC,EAAE,gBAC1B,KAAK,YAAY,QAAQ,CAAC,EAAE,gBAC5B;AACN,QAAI,SACF,WACA,YAAY,OAAO,IACnB,qBACA,UACA,YACA,KAAK,MAAM,aAAa,WAAW,EAAE,eACrC,oBACA,KAAK,MAAM,aAAa,WAAW,EAAE,gBACrC,eACA,aAAa,SACb,mBACA,KAAK,MAAM,aAAa,WAAW,EAAE,eACrC,iBACA,YAAY,cAAc,IAC1B,kBACA,YAAY,iBAAiB,IAC7B,iBACA,aACA,gBACA,KAAK,YAAY,YACjB,kBACA,KAAK,YAAY,cACjB,cACA,KAAK,YAAY,cACjB,YACA,KAAK,YAAY,YACjB,gBACA,KAAK,YAAY,YACjB,0BAGA,KAAK,YAAY,SACjB,UACA,KAAK,YAAY,MACjB,mBACA,KAAK,MAAM,aAAa,WAAW,EAAE,iBACrC,cACA,SAAS,OACP,oBAAoB,KAAK,cAAc,oBAAmB;AAE9D,aAAS,KAAK,SAAS,QAAQ,MAAM;AACrC,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,cAAc,kBAAkB,EAAE,aAAa,OAAM,CAAE,EAAE,UAC5D,CAAC,SAAQ;AACP,eAAO,SAAS,OACd,YAAY,SACZ,qCACA,KAAK;MACT,GACA,CAAC,QAAO;AACN,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;MACjC,CAAC;IAEL,OAAO;AACL,WAAK,cAAc,iBAAiB,EAAE,cAAc,OAAM,CAAE,EAAE,UAC5D,CAAC,QAAO;AACN,eAAO,SAAS,OACd,YAAY,SACZ,qCACA,IAAI,aAAa;MACrB,GACA,CAAC,QAAO;AACN,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;MACjC,CAAC;IAEL;EACF;EAEO,mBAAgB;AACrB,QAAI,aAAa,wBAAwB,aAAa,wBAAwB,KAAK;AACjF,WAAK,OAAO,cAAc,eAAe;AACzC;IACF;AACA,UAAM,cAAc,aAAa,QAAQ,mBAAmB;AAC5D,UAAM,sBACJ,YAAY,MAAM,mCAAmC,EAAE,CAAC,KAAK,SACzD,YACC,MAAM,mCAAmC,EAAE,CAAC,EAC5C,MAAM,GAAG,EAAE,CAAC,IACb;AACN,UAAM,sBACJ,YAAY,MAAM,sBAAsB,EAAE,CAAC,KAAK,SAC5C,YAAY,MAAM,sBAAsB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IACzD;AAEN,UAAM,SACJ,WACA,KAAK,MAAM,aAAa,WAAW,EAAE,QACrC,YACA,KAAK,MAAM,aAAa,WAAW,EAAE,eACrC,oBACA,KAAK,MAAM,aAAa,WAAW,EAAE,gBACrC,eACA,aAAa,SACb,uCACA,sBACA,0BACA,sBACE,oBAAoB,KAAK,cAAc,oBAAmB,IAC1D,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc,IACtE,iBAAiB,KAAK,YAAY,QAAQ,YAAY,YAAY,IAClE,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc;AAC1E,UAAM,kBAAkB,KAAK,SAAS,QAAQ,MAAM;AACpD,UAAM,UAAU,KAAK,YAAY,SAAS;AAE1C,SAAK,cACF,kBAAkB,EAAE,aAAa,gBAAe,CAAE,EAClD,UACC,CAAC,SAAQ;AACP,WAAK,qBAAqB,SAAS,IAAI;IACzC,GACA,CAAC,QAAO;AACN,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;IACjC,CAAC;EAEP;EAEA,qBAAqB,SAAS,MAAI;AAChC,QAAI,CAAC,KAAK,cAAc,+BAA+B;AACrD,aAAO,SAAS,OAAO,UAAU,UAAU,KAAK;IAClD,OAAO;AACL,aAAO,WAAW,MAAK;AACrB,aAAK,qBAAqB,SAAS,IAAI;MACzC,GAAG,GAAG;IACR;EACF;;;uCAhkBW,8BAA2B,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,eAAA,CAAA;IAAA;EAAA;;yEAA3B,8BAA2B,WAAA,CAAA,CAAA,0BAAA,CAAA,GAAA,WAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAwB3B,SAAO,CAAA;;;;;;;;AC1CpB,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA;AAGxC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,wBAAA,CAAA,EAAoE,GAAA,OAAA,CAAA,EACF,GAAA,OAAA,CAAA,EAEzB,GAAA,YAAA,CAAA,EACb,GAAA,OAAA,CAAA,EACF,IAAA,OAAA,CAAA,EAC2E,IAAA,QAAA,CAAA,EACxB,IAAA,KAAA,CAAA;AAC3C,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,iBAAA;QAAkB,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA,EAAI;AAEhG,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkE,IAAA,MAAA,EAAA,EACY,IAAA,QAAA,EAAA;AAExE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAO,EACJ,EACD;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,OAAA,EAAA,EAae,IAAA,GAAA;AAC/B,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA,EAAI;AAEhB,QAAA,qBAAA,IAAA,6CAAA,IAAA,IAAA,OAAA,EAAA;AAyEF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,KAAA,EAAA;AAEnB,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAC5B,IAAA,OAAA,EAAA,EAC+D,IAAA,SAAA,EAAA;AAI9D,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAoBxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAMxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAMxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAMxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAMxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;;AAcxC,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,4CAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;AAEA,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,SAAA,EAAA;AAKF,QAAA,uBAAA,EAAM,EAEF,EACF,EACF,EACA,EACG,EACP,EACF;AAGR,QAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,OAAA,EAAA;AAIF,QAAA,uBAAA,EAAM;;;AAtM2D,QAAA,oBAAA,EAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AAK7C,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,aAAA,GAAA;AAqBuD,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA;AA4E7D,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,mBAAA,KAAA,IAAA,SAAA,KAAA;AAMqB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAkEK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;AAgB2C,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,iBAAA,OAAA,OAAA,IAAA,cAAA,mBAAA,CAAA;;;;;;6EDlM5E,6BAA2B,EAAA,WAAA,+BAAA,UAAA,sGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGApB,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;;;;AADmB,IAAA,qBAAA,SAAA,WAAA,EAAA;AAC5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,EAAA;;;ADRhB,IAAO,kCAAP,MAAO,iCAA+B;EAI1C,YAAoB,aAAwC,QAAuB,eAAqC,cAAmC,aAAwB;AAA/J,SAAA,cAAA;AAAwC,SAAA,SAAA;AAAuB,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAFpJ,SAAA,YAAmB,CAAA;AAGxB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,iCAAgC;IACpD;EACF;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,iCAAgC;IACpD,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,6BAA6B,KAAK,gBAAgB,IAAI,uBAAsB,CAAE;AACnF,SAAK,cAAc,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,IAAI,EAAE,UAAU,UAAO;AAC/H,WAAK,YAAY,KAAK,aAAa;AACnC,WAAK,YAAY,SAAS,cAAc,KAAK,aAAa;AAC1D,WAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;IACvD,CAAC;EACH;EAEO,OAAI;AACT,QAAI,KAAK,2BAA2B,UAAU,SAAS;AACrD,mBAAa,QAAQ,iBAAiB,KAAK,2BAA2B,SAAS,WAAW,EAAE,KAAK;AACjG,WAAK,aAAa,gBAAgB,KAAK,2BAA2B,SAAS,WAAW,EAAE;AACxF,WAAK,YAAY,QAAQ,WAAW,gBAAgB,KAAK,2BAA2B,SAAS,WAAW,EAAE;AAC1G,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,OAAO,cAAc,WAAW;IACvC;EACF;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,aAAa,CAAC,SAAS,WAAW,WAAW,QAAQ;KACtD;EACH;;;uCA3CW,kCAA+B,4BAAA,kBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAA/B,kCAA+B,WAAA,CAAA,CAAA,8BAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,sBAAA,QAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,eAAA,GAAA,eAAA,WAAA,GAAA,CAAA,GAAA,oBAAA,QAAA,MAAA,GAAA,CAAA,cAAA,WAAA,GAAA,OAAA,GAAA,CAAA,mBAAA,aAAA,gBAAA,OAAA,YAAA,IAAA,GAAA,aAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,cAAA,UAAA,GAAA,OAAA,QAAA,UAAA,eAAA,aAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,OAAA,UAAA,eAAA,aAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,yCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;ACX5C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EAED,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EACnD,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA,EAEpB,GAAA,OAAA,CAAA;AAGnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,QAAA,GAAA,CAAA;AACqB,QAAA,qBAAA,eAAA,SAAA,uEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAe,IAAA,KAAA,CAAM;QAAA,CAAA;AACxC,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwC,IAAA,kBAAA,EAAA,EACa,IAAA,cAAA,EAAA;AAG/C,QAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,cAAA,EAAA;AAEF,QAAA,uBAAA,EAAa,EACE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgE,IAAA,UAAA,EAAA;AAExC,QAAA,iBAAA,EAAA;AAA8D,QAAA,uBAAA;AACpF,QAAA,yBAAA,IAAA,UAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,KAAA,CAAM;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAqD,QAAA,uBAAA,EAAS,EAE7E,EACD,EACH,EACF,EACF,EAEF,EACF;;;AAzB8B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,0BAAA;AAIR,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,aAAA,gCAAA,aAAA;AAEsB,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,SAAA;AAQd,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,gCAAA,aAAA;AAEH,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,gCAAA,IAAA;;;;;;6EDjBtB,iCAA+B,EAAA,WAAA,mCAAA,UAAA,yFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEF5C,IAAAC,yBAAyB;;;;;;;AGCf,IAAA,yBAAA,GAAA,SAAA,EAAA;AACgC,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,OAAA,iBAAA,UAAA,CAAA;;;;;AAI5B,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,SAAA,YAAA,EAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,MAAA,GAAA;;;;;;AAJN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAwG,GAAA,cAAA,EAAA;AACvE,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,YAAA,MAAA,MAAA,OAAA,iBAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC7B,IAAA,qBAAA,mBAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AACpC,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;AALkB,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA,UAAA;AAEI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;;;;;AAcrC,IAAA,yBAAA,GAAA,SAAA,EAAA;AACgC,IAAA,iBAAA,CAAA;AAChC,IAAA,uBAAA;;;;AADgC,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,iBAAA,2BAAA,GAAA;;;;;AAK5B,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFkD,IAAA,qBAAA,SAAA,YAAA,EAAA;AAChD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,2BAAA,GAAA;;;;;;AAJN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAwG,GAAA,cAAA,EAAA;AACvE,IAAA,qBAAA,mBAAA,SAAA,wFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,oBAAA,CAAqB;IAAA,CAAA;AACrE,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,YAAA,MAAA,MAAA,OAAA,iBAAA,aAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;AAJX,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA,UAAA;AACiC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;AAcnC,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAyE,IAAA,iBAAA,CAAA;AACzE,IAAA,uBAAA;;;;AADyE,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,iBAAA,gBAAA,GAAA;;;;;AAKrE,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFwD,IAAA,qBAAA,SAAA,eAAA,EAAA;AACtD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,eAAA,gBAAA,GAAA;;;;;;AAJN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAC+B,GAAA,cAAA,EAAA;AACE,IAAA,2BAAA,iBAAA,SAAA,oFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,cAAA,MAAA,MAAA,OAAA,iBAAA,eAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAC7B,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;AAJkB,IAAA,oBAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,iBAAA,YAAA;AACO,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA;;;;;AAQxC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6D,IAAA,iBAAA,CAAA;;AAAgD,IAAA,uBAAA;;;;AAAhD,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,iBAAA,cAAA,CAAA;;;;;;AAG3D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAC2C,GAAA,oBAAA,EAAA;AACsB,IAAA,qBAAA,UAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAU,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA;AAClG,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA,EAAmB;;;;AAFsB,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,aAAA,EAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,aAAA,cAAA,GAAA,GAAA;;;;;;AALN,IAAA,yBAAA,GAAA,mBAAA,EAAA;AACE,IAAA,2BAAA,iBAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,cAAA,MAAA,MAAA,OAAA,iBAAA,eAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACA,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;AAMF,IAAA,uBAAA;;;;AAPE,IAAA,2BAAA,WAAA,OAAA,iBAAA,YAAA;AAEuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA;;;;;AAkB3B,IAAA,yBAAA,GAAA,QAAA,EAAA;AACkE,IAAA,iBAAA,CAAA;AAA8D,IAAA,uBAAA;;;;AAA9D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,2BAAA,OAAA,iBAAA,aAAA,CAAA;;;;;AAIhE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmG,GAAA,oBAAA,EAAA;AAE/F,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAmB;;;;AAFmC,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,SAAA,EAAA;AACpD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,eAAA,GAAA;;;;;;AAJN,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAkE,IAAA,2BAAA,iBAAA,SAAA,0FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,eAAA,MAAA,MAAA,OAAA,iBAAA,gBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAEhE,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;;;;AAPkE,IAAA,2BAAA,WAAA,OAAA,iBAAA,aAAA;AAEO,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,uBAAA;;;;;;AAa/E,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,OAAA,EAAA;AAC3B,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;AAAzC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,MAAA,EAAA;;;;;;AACF,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;;;;AAA3C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,MAAA;;;;;;AACnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;AAAzC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;AD/FjC,IAAO,uBAAP,MAAO,sBAAoB;EAiC/B,YAAmB,aAAiC,eAAqC,eAAqC,iBACpH,aAAwC,2BACzC,cAAmC,aAAwB;AAFjD,SAAA,cAAA;AAAiC,SAAA,gBAAA;AAAqC,SAAA,gBAAA;AAAqC,SAAA,kBAAA;AACpH,SAAA,cAAA;AAAwC,SAAA,4BAAA;AACzC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAjC5C,SAAA,iBAAiB;AACV,SAAA,oBAAoB;AACpB,SAAA,uBAAuB;AACvB,SAAA,gBAAqB,CAAA;AAGrB,SAAA,qBAAqB;AACrB,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,gBAAgB;AAGhB,SAAA,UAAiB,CAAA;AACjB,SAAA,eAAsB,CAAA;AACtB,SAAA,kBAAyB,CAAA;AAEzB,SAAA,kBAAyB,CAAA;AACzB,SAAA,sBAAsB,KAAK,YAAY,SAAS,KAAK;AACrD,SAAA,SAAiB,aAAa,cAAa,KAAK,MAAM,aAAa,WAAW,EAAE,KAAG;AACnF,SAAA,WAAmB,aAAa,cAAa,KAAK,MAAM,aAAa,WAAW,EAAE,WAAS;AAC3F,SAAA,eAAe;AACf,SAAA,aAAa;AAGpB,SAAA,gBAAgB;AAKP,SAAA,aAAoB,CAAA;AAK3B,SAAK,uBAAuB,KAAK,YAAY,QAAQ,YAAY,sBAAsB;AACvF,SAAK,gBAAgB,KAAK,YAAY,QAAQ,YAAY,YAAY;AACtE,SAAK,oBAAoB,KAAK,YAAY,SAAS,MAAM;AAEzD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAgB,OAAO,KAAK;IACnC,OAAO;AACL,WAAK,aAAa,qBAAoB;IACxC;EACF;EAEO,sBAAmB;AACxB,QAAI,KAAK,YAAY,wBAAwB,cAAc,KAAK,iBAAiB,YAAY,GAAG;AAC9F,YAAM,UAAU,KAAK,aAAa,oBAAoB;AACtD,WAAK,0BAA0B,QAAQ,IAAI,SAAS,KAAK,aAAa,oBAAoB,SAAS,KAAK,aAAa,oBAAoB,MAAM,EAC5I,KAAK,CAAC,cAAa;AAChB,oBAAW,OAAK,KAAK,iBAAiB,YAAY,IAAI,KAAK,YAAY,wBAAwB;MAMnG,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;IACvI;EACF;EAEO,oBAAoB,GAAC;AAC1B,SAAK,sBAAsB,EAAE;EAC/B;EAEO,kBAAkB,UAAQ;AAE/B,SAAK,YAAY,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,QAAQ,EAAE,UAAU,UAAO;AACjI,WAAK,eAAe,KAAK,aAAa;AACtC,WAAK,YAAY,aAAa,KAAK,aAAa;AAChD,WAAK,kBAAkB,KAAK,aAAa;AACzC,WAAK,gBAAgB,QAAQ,CAAC,MAAK;AACjC,YAAI,EAAE,IAAI,KAAK,KAAK,iBAAiB,cAAc;AACjD,uBAAa,QAAQ,kBAAiB,EAAE,eAAe,EAAE,QAAQ,iBAAiB,IAAI,EAAE,YAAW,CAAG;QACxG;MACF,CAAC;AACD,WAAK,kBAAkB,KAAK,aAAa;AACzC,WAAK,YAAY,iBAAiB,KAAK,aAAa;AAEpD,WAAK,0BAA0B,KAAK,aAAa,0BAA0B,OAAO,UAAO;AACvF,YAAI,KAAK,YAAY,QAAQ,YAAY,YAAY,KAAK,YAAY,YAAY,KAAK,YAAY,QAAQ,YAAY,YAAY,KAAK,YAAY,KAAK;AACvJ,iBAAO;QACT,OAAO;AACL,iBAAO,KAAK,MAAM,KAAK,KAAK,MAAM;QACpC;MACF,CAAC;AACD,WAAK,eAAc;IAErB,CAAC;EACH;EAEO,oBAAoB,UAAQ;AACjC,SAAK,YAAY,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,QAAQ,EAAE,UAAU,UAAO;AACjI,WAAK,YAAY,UAAU,KAAK,aAAa;IAC/C,CAAC;EACH;;EAGO,cAAW;AAChB,SAAK,cAAc,YAAY,KAAK,cAAc,eAAe,aAAa,cAAc,KAAK,eAAe,IAAI,KAAK,eAAe,MAAM,KAAK,aAAa,IAAI,KAAK,aAAa,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC/O,WAAK,aAAa,KAAK;IACzB,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,mBAAmB,IAAI,YAAW;AACvC,SAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;AACzD,SAAK,kBAAkB,IAAI;AAC3B,SAAK,YAAW;EAClB;EAEA,cAAW;EAGX;EAEO,gBAAgB,eAAe,gBAAgB,MAAM,eAAe,OAAK;AAC9E,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,kBAAkB,YAAY,EAAE,UAAU,UAAO;AACzG,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,aAAa,qBAAoB;AACtC,UAAI,eAAe;AACjB,aAAK,aAAa,kBAAiB;AACnC,aAAK,aAAa,gBAAe;AACjC,YAAI;AAAe,eAAK,QAAQ,KAAK,aAAa,oBAAoB,iCAAiC;MACzG;IACF,CAAC;EACH;EAEO,gBAAgB,QAAM;AAC3B,QAAI,UAAU,UAAa,KAAK,YAAY,WAAW;AACrD,aAAO,KAAK,YAAY,WAAW,KAAK,OAAK,EAAE,MAAM,MAAM,EAAE;;AAE7D,aAAO;EACX;EAEO,2BAA2B,iBAAe;AAC/C,SAAK,mBAAmB,UAAa,mBAAmB,QAAQ,mBAAmB,MAAM,KAAK,YAAY,eAAe,UAAU,mBAAmB;AACpJ,aAAO,KAAK,YAAY,eAAe,KAAK,OAAK,EAAE,MAAM,eAAe,EAAE;;AAE1E,aAAO;EACX;EAEO,iBAAc;AACnB,SAAK,YAAY,sBAAsB,KAAK,cAAc,eAAe,aAAa,YAAY,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AAC3H,WAAK,YAAY,0BAA0B,KAAK;AAChD,UAAI,KAAK,YAAY,wBAAwB,iBAAiB,UAAa,KAAK,YAAY,wBAAwB,iBAAiB;AACnI,aAAK,YAAY,wBAAwB,gBAAgB,uBAAuB;AAClF,WAAK,oBAAoB,KAAK,YAAY,wBAAwB,YAAY;AAC9E,WAAK,cAAa;IACpB,GAAG,OAAM,MAAK;AACZ,WAAK,YAAY,0BAA0B;AAC3C,WAAK,gBAAgB;AACrB,WAAK,mBAAmB;AACxB,WAAK,eAAe;AACpB,WAAK,gBAAgB;AACrB,WAAK,qBAAqB;IAC5B,EAAC,CAAC;EACJ;EAEO,gBAAa;AAClB,SAAK,cAAc,KAAK,gBAAgB,KAAK,aAAa;AAE1D,SAAK,YAAY,wBAAwB,gBAAgB,IAAE,KAAK,gBAAgB,KAAK,OAAI,EAAE,IAAI,KAAK,KAAK,YAAY,wBAAwB,cAAc,CAAC,EAAE;AAC9J,SAAK,gBAAgB,OAAO,OAAO,CAAA,GAAI,KAAK,YAAY,uBAAuB;AAC/E,WAAO,OAAO,KAAK,kBAAkB,KAAK,YAAY,uBAAuB;AAC7E,QAAI,CAAC,KAAK,iBAAiB,YAAY;AACrC,WAAK,iBAAiB,aAAa;AACnC,WAAK,kBAAkB,KAAK;AAC5B,WAAK,eAAc;AACnB,aAAO;IACT;AACA,SAAK,iBAAiB,4BAA4B,KAAK,aAAa,KAAK,OAAK,EAAE,MAAM,KAAK,iBAAiB,UAAU,EAAE;AACxH,SAAK,gBAAgB,KAAK,YAAY,wBAAwB;AAC9D,SAAK,eAAe,KAAK,YAAY,wBAAwB;AAC7D,SAAK,gBAAgB,KAAK,cAAc,UAAU,OAAO;AACzD,QAAI,KAAK,cAAc,cAAc,YAAY,UAAU;AACzD,WAAK,qBAAqB;AAC1B,UAAI,KAAK,YAAY,UAAU,QAAQ;AACrC,aAAK,UAAU,KAAK,YAAY,UAAU,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,SAAS,EAAE;AAC1F,aAAK,YAAY,SAAS,SAAS,EAAE,SAAS,KAAK,cAAc,OAAO;MAC1E;IACF,OACK;AACH,WAAK,qBAAqB;IAC5B;EAEF;EAEO,iBAAc;AACnB,SAAK,uBAAuB;EAC9B;EAEO,uBAAoB;AACzB,SAAK,uBAAuB;AAC5B,SAAK,iBAAiB,YAAY,IAAI,KAAK,YAAY,wBAAwB;AAC/E,SAAK,iBAAiB,gBAAgB,IAAI,KAAK,YAAY,wBAAwB;AACnF,SAAK,iBAAiB,eAAe,IAAI,KAAK,YAAY,wBAAwB;AAClF,SAAK,iBAAiB,2BAA2B,IAAI,KAAK,YAAY,wBAAwB;AAE9F,SAAK,iBAAiB,gBAAgB,IAAI,KAAK,gBAAgB,KAAK,OAAI,EAAE,IAAI,KAAK,KAAK,YAAY,wBAAwB,cAAc,CAAC,EAAE;AAC7I,SAAK,iBAAiB,gBAAgB,IAAI,KAAK,YAAY,wBAAwB;AACnF,SAAK,iBAAiB,YAAY,IAAI,KAAK,YAAY,wBAAwB;AAC/E,SAAK,iBAAiB,cAAc,IAAI,KAAK,YAAY,wBAAwB;AACjF,SAAK,iBAAiB,cAAc,IAAI,KAAK,YAAY,wBAAwB;EACnF;EAEO,uBAAoB;AACzB,SAAK,iBAAkB,gBAAgB,IAAE,KAAK,gBAAgB,KAAK,OAAI,EAAE,IAAI,KAAK,KAAK,iBAAiB,YAAY,EAAE;AACtH,QAAI,KAAK,YAAY,wBAAwB,cAAc,KAAK,iBAAiB,YAAY,KAAK,KAAK,YAAY,wBAAwB,iBAAiB,KAAK,iBAAiB,eAAe,GAAG;AAClM,YAAM,mBAAmB,MAAM,KAAK,gBAAgB,KAAK,iBAAiB,YAAY,CAAC,IAAI;AAC3F,YAAM,UAAU,KAAK,aAAa,oBAAoB,kCAAkC,QAAQ,MAAM,gBAAgB;AACtH,WAAK,0BAA0B,QAAQ,IAAI,SAAS,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,MAAM,EACvI,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,kBAAiB;QACxB;MACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;IACvI,WAES,KAAK,YAAY,wBAAwB,cAAc,KAAK,iBAAiB,YAAY,KAAK,KAAK,YAAY,wBAAwB,iBAAiB,KAAK,iBAAiB,eAAe,KAAK,KAAK,iBAAiB,eAAe,KAAK,uBAAuB,gBAAgB;AAC1R,WAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,oBAAoB,2BAA2B,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,MAAM,EAC/L,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,kBAAiB;QACxB;MACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;IACvI,OACK;AACH,WAAK,kBAAiB;IACxB;EAEF;EAEO,kBAAkB,gBAAgB,MAAI;AAC3C,SAAK,YAAY,qBAAqB,KAAK,gBAAgB,EAAE,UAAU,EAAC,MAAK,MAAK;AAEhF,WAAK,YAAY,QAAQ,YAAY,YAAY,IAAI,KAAK,iBAAiB;AAC3E,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,YAAM,iBAAiB,aAAa,iBAAiB,SAAY,SAAS,aAAa,aAAa,IAAI,WAAW;AACnH,UAAI,WAAW;AACf,WAAK,aAAa,mBAAmB,KAAK,iBAAiB,YAAY;AACvE,WAAK,gBAAgB,MAAM,eAAe,IAAI;AAC9C,YAAM,gBAAgB,KAAK,WAAW,KAAK,OAAK,EAAE,MAAM,KAAK,aAAa,gBAAgB,EAAE;AAC5F,UAAI,iBAAiB,UAAa,iBAAiB,QAAQ,cAAc,SAAS,GAAG;AACnF,mBAAW,cAAc,KAAK,OAAK,EAAE,aAAa,cAAc,KAAK,SAAY,cAAc,KAAK,OAAK,EAAE,aAAa,cAAc,EAAE,gBAAgB,KAAK,WAAW,KAAK,OAAK,EAAE,MAAM,KAAK,aAAa,gBAAgB,EAAE;MAChO,OACK;AACH,mBAAW,KAAK,WAAW,KAAK,OAAK,EAAE,MAAM,KAAK,aAAa,gBAAgB,EAAE;MACnF;AAEA,mBAAa,QAAQ,YAAY,QAAQ;AACzC,WAAK,YAAY,QAAQ,WAAW,WAAW;AAC/C,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,mBAAa,QAAQ,cAAc,KAAK,aAAa,iBAAiB,SAAQ,CAAE;AAChF,WAAK,YAAY,QAAQ,WAAW,aAAa,KAAK,aAAa,iBAAiB,SAAQ;AAC5F,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,WAAK,YAAY,QAAQ,YAAY,cAAc,IAAI,KAAK,iBAAiB,aAAa,SAAQ;AAClG,WAAK,gBAAgB,QAAQ,CAAC,MAAK;AACjC,YAAI,EAAE,IAAI,KAAK,KAAK,iBAAiB,cAAc;AACjD,eAAK,iBAAkB,gBAAgB,IAAG,EAAE,gBAAgB;AAC5D,uBAAa,QAAQ,kBAAiB,EAAE,eAAe,EAAE,QAAQ,iBAAiB,IAAI,EAAE,YAAW,CAAG;QACxG;MACF,CAAC;AAED,WAAK,YAAY,QAAQ,YAAY,YAAY,IAAI,KAAK,iBAAiB,YAAY;AACvF,WAAK,YAAY,QAAQ,YAAY,cAAc,IAAI,KAAK,sBAAsB,KAAK,sBAAsB,KAAK,iBAAiB;AACnI,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,mBAAa,QAAQ,yBAAyB,KAAK,iBAAiB,eAAe,EAAE,SAAQ,CAAE;AAC/F,WAAK,cAAc,wBAAwB,KAAK,iBAAiB,eAAe;AAChF,WAAK,kBAAkB,KAAK,iBAAiB,YAAY;AACzD,WAAK,uBAAuB;AAC5B,WAAK,gBAAgB,YAAY,KAAK,cAAc,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,KAAK;AAE1I,UAAI,EAAE,SAAS,EAAE,CAAC,KAAK;AACrB,UAAE,SAAS,EAAE,CAAC,EAAE,OAAM;AACxB,WAAK,cAAc,kBAAkB;AACrC,WAAK,cAAc,oBAAoB;AACvC,UAAI;AACF,YAAI;AAAmB,YAAI;AAC3B,aAAK,cAAc,oBAAoB,CAAC,EAAE,UAAU,SAAM;AACxD,yBAAe,IAAI,aAAa,YAAY;AAC5C,0BAAgB,IAAI,aAAa,aAAa;QAChD,GAAG,SAAM;AACP,kBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,eAAK,cAAc,sBAAqB;QAC1C,CAAC;AACD,cAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,YAAI,QAAQ;AACV,eAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,SAAM;AAC7D,gBAAI,aAAa,cAAc,IAAI;AACnC,gBAAI,aAAa,eAAe,IAAI;AACpC,iBAAK,YAAY,QAAQ,qBAAqB,IAAI;AAClD,iBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;UACrD,GAAG,SAAM;AACP,oBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,iBAAK,cAAc,sBAAqB;UAC1C,CAAC;QACH;MACF,SAAS,KAAK;AACZ,aAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;MAC1D;IACF,GAAG,OAAM,MAAK;AACZ,WAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;IAC1D,EAAC,CAAC;EACJ;EAEO,2BAAwB;AAC7B,SAAK,qBAAqB,IAAI,mBAAkB;AAChD,SAAK,mBAAmB,QAAQ,KAAK,YAAY,wBAAwB;AACzE,SAAK,mBAAmB,aAAa,KAAK,aAAa;AACvD,SAAK,YAAY,mBAAmB,KAAK,kBAAkB,EAAE,UAAU,EAAC,MAAK,MAAK;AAChF,WAAK,cAAc,KAAK,aAAa,oBAAoB;IAC3D,GAAG,OAAM,MAAK;AACZ,WAAK,cAAc,KAAK,aAAa,oBAAoB;IAC3D,EAAC,CAAC;EACJ;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,QAAQ,MAAM,MAAM,KAAK,EACtJ,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;MAEf;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,gBAAgB,KAAK,cAAc;MACnC,eAAe,KAAK,cAAc;MAClC,cAAc,SAAS;MACvB,YAAY,KAAK,cAAc;MAC/B,oBAAoB,SAAS;MAC7B,aAAa,SAAS;MACtB,WAAW,SAAS;KACrB;EACH;;;uCA1VW,uBAAoB,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;ACbjC,QAAA,yBAAA,GAAA,uBAAA,CAAA,EAAwD,GAAA,8BAAA,CAAA,EACP,GAAA,mBAAA,CAAA;AACoC,QAAA,iBAAA,CAAA;AACjF,QAAA,uBAAA,EAAkB;AAEpB,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAsC,GAAA,OAAA,CAAA,EACiC,GAAA,OAAA,CAAA,EAC9B,GAAA,OAAA,CAAA,EACiC,GAAA,SAAA,CAAA;AAC5B,QAAA,iBAAA,CAAA;AAAgD,QAAA,uBAAA;AACtF,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,SAAA,CAAA,EACgC,IAAA,iDAAA,GAAA,GAAA,kBAAA,CAAA;AASlC,QAAA,uBAAA,EAAM,EACF;AAIR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0E,IAAA,OAAA,EAAA,EAC5C,IAAA,OAAA,EAAA,EACyC,IAAA,SAAA,CAAA;AAC3B,QAAA,iBAAA,EAAA;AAAgD,QAAA,uBAAA;AACtF,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,SAAA,EAAA,EACgC,IAAA,iDAAA,GAAA,GAAA,kBAAA,CAAA;AAUlC,QAAA,uBAAA,EAAM,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0E,IAAA,OAAA,EAAA,EAC5C,IAAA,OAAA,EAAA,EACY,IAAA,OAAA,EAAA,EACL,IAAA,SAAA,CAAA;AACS,QAAA,iBAAA,EAAA;AAAkD,QAAA,uBAAA;AACxF,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,SAAA,EAAA,EAAyE,IAAA,iDAAA,GAAA,GAAA,kBAAA,EAAA;AAU3E,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0D,IAAA,SAAA,EAAA;AACZ,QAAA,iBAAA,EAAA;AAAkD,QAAA,uBAAA;AAC9F,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,QAAA,EAAA,EAA6D,IAAA,kDAAA,GAAA,GAAA,mBAAA,EAAA;AAU/D,QAAA,uBAAA,EAAM,EACF,EAEF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0E,IAAA,OAAA,EAAA,EAC5C,IAAA,OAAA,EAAA,EAE6D,IAAA,SAAA,CAAA;AAC/C,QAAA,iBAAA,EAAA;AACtC,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,QAAA,EAAA,EACkE,IAAA,kDAAA,GAAA,GAAA,mBAAA,EAAA;AAWpE,QAAA,uBAAA,EAAM,EACF,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,UAAA,EAAA,EAC6B,IAAA,yCAAA,GAAA,GAAA,UAAA,EAAA,EAGM,IAAA,yCAAA,GAAA,GAAA,UAAA,EAAA;AAGrC,QAAA,uBAAA,EAAM;;;AA7Ga,QAAA,qBAAA,YAAA,IAAA,sBAAA,CAAA;AAEgE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,aAAA,GAAA;AAI7D,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,CAAA,IAAA,oBAAA,CAAA;AAGwB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,UAAA,KAAA;AAEnC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA;AACyE,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAazD,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,CAAA,IAAA,oBAAA,CAAA;AAGmB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,UAAA,KAAA;AAEnC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA;AAEyE,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAYzD,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,CAAA,IAAA,oBAAA,CAAA;AAIqB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,YAAA,KAAA;AACM,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA;AAGzC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AASyC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,YAAA,KAAA;AACZ,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA;AAEe,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAc9B,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,CAAA,IAAA,oBAAA,CAAA;AAImB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,oBAAA,eAAA,KAAA;AAGnC,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,wBAAA,IAAA,iBAAA,aAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAc8D,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,oBAAA;AAGT,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;AAEtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA;;;;;;6ED9F/B,sBAAoB,EAAA,WAAA,wBAAA,UAAA,iFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;ADaT,IAAA,yBAAA,GAAA,SAAA,EAAA;AACgC,IAAA,iBAAA,CAAA;AAC0C,IAAA,uBAAA;;;;AAD1C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,mBAAA,OAAA,cAAA,mBAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AAW5B,IAAA,yBAAA,GAAA,cAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAHkD,IAAA,qBAAA,SAAA,YAAA,EAAA;AAEhD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,gBAAA,GAAA;;;;;AAXN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EACoB,GAAA,cAAA,EAAA,EAGsC,GAAA,cAAA,EAAA;AAGpD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,yFAAA,GAAA,GAAA,cAAA,EAAA;AAIF,IAAA,uBAAA,EAAa;;;;AATX,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,oBAAA,IAAA;AAGE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,MAAA,GAAA;AAE+B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;AAerC,IAAA,yBAAA,GAAA,SAAA,EAAA;AACgC,IAAA,iBAAA,CAAA;AAC4C,IAAA,uBAAA;;;;AAD5C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,qBAAA,OAAA,cAAA,qBAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AAU5B,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,SAAA,UAAA,EAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,iBAAA,GAAA;;;;;AATN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EACoB,GAAA,cAAA,EAAA,EAGwC,GAAA,cAAA,EAAA;AAEtD,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,yFAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;;;;AAPX,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,aAAA,oBAAA,MAAA;AAEE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,MAAA,GAAA;AAE6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;;AAWzC,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,oBAAA,GAAA,OAAA,EAAA;AAC3B,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;AAAzC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,MAAA,EAAA;;;;;;AACF,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAA2C,IAAA,uBAAA;;;;AAA3C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,MAAA;;;;;;AACnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;;;;AAAzC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,IAAA;;;;;AApEvC,IAAA,yBAAA,GAAA,uBAAA,CAAA,EAEqC,GAAA,4BAAA,EACP,GAAA,mBAAA,CAAA;AAEiB,IAAA,iBAAA,CAAA;AAAuD,IAAA,uBAAA,EAAkB;AAEtH,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAqD,GAAA,OAAA,EAAA,EACmB,GAAA,OAAA,EAAA,EACzC,GAAA,OAAA,EAAA,EACyC,GAAA,SAAA,EAAA;AACzB,IAAA,iBAAA,CAAA;AACwB,IAAA,uBAAA;AAC/D,IAAA,qBAAA,IAAA,mEAAA,GAAA,GAAA,SAAA,EAAA,EACgC,IAAA,4EAAA,GAAA,GAAA,kBAAA,EAAA;AAiBlC,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,OAAA,EAAA,EACgD,IAAA,SAAA,EAAA;AAG9D,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,mEAAA,GAAA,GAAA,SAAA,EAAA,EACgC,IAAA,4EAAA,GAAA,GAAA,kBAAA,EAAA;AAelC,IAAA,uBAAA,EAAM,EACF,EAEF;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,oEAAA,GAAA,GAAA,UAAA,EAAA,EAC6B,IAAA,oEAAA,GAAA,GAAA,UAAA,EAAA,EAGM,IAAA,oEAAA,GAAA,GAAA,UAAA,EAAA;AAGrC,IAAA,uBAAA,EAAM;;;;AAnEN,IAAA,qBAAA,YAAA,OAAA,sBAAA,CAAA;AAG6C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,oBAAA,kBAAA;AAEvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,WAAA;AACiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,CAAA,OAAA,oBAAA,CAAA;AAGwB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,mBAAA,OAAA,aAAA,oBAAA,mBAAA,OAAA,IAAA;AAGpC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,oBAAA;AAEuD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,oBAAA;AAsBxD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,oBAAA,KAAA;AAGC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,oBAAA;AAEuD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,oBAAA;AAmBO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,oBAAA;AAGT,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,oBAAA;AAEtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,oBAAA;;;ADhEpD,IAAO,2BAAP,MAAO,0BAAwB;EAkCnC,YAAmB,aAAiC,aAAiC,eAAqC,iBAChH,aAAwC,2BACzC,cAAmC,aAAiC,eAA4B;AAFtF,SAAA,cAAA;AAAiC,SAAA,cAAA;AAAiC,SAAA,gBAAA;AAAqC,SAAA,kBAAA;AAChH,SAAA,cAAA;AAAwC,SAAA,4BAAA;AACzC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAAiC,SAAA,gBAAA;AAjC7E,SAAA,iBAAiB;AACV,SAAA,oBAAoB;AACpB,SAAA,uBAAuB;AACvB,SAAA,gBAAqB,CAAA;AAGrB,SAAA,qBAAqB;AACrB,SAAA,cAAc;AACd,SAAA,eAAe;AACf,SAAA,gBAAgB;AAGhB,SAAA,UAAiB,CAAA;AACjB,SAAA,eAAsB,CAAA;AAItB,SAAA,cAAc,oBAAoB,eAAc;AAChD,SAAA,kBAAkB,CAAC,YAAY,UAAU;AAEzC,SAAA,kBAAkB,CAAC,EAAE,OAAO,MAAM,MAAM,aAAY,GAAI,EAAE,OAAO,OAAO,MAAM,oBAAmB,CAAE;AACnG,SAAA,sBAAsB,KAAK,YAAY,SAAS,KAAK;AACrD,SAAA,aAAoB,CAAA;AAE3B,SAAA,gBAAgB;AAWd,SAAK,sBAAsB,KAAK,YAAY,SAAS,KAAK;AAC1D,SAAK,oBAAoB,KAAK,YAAY,SAAS,MAAM;AAEzD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAgB,OAAO,KAAK;IACnC,OAAO;AACL,WAAK,aAAa,qBAAoB;IACxC;AAEA,SAAK,iBAAiB,aAAa,iBAAiB,SAAY,SAAS,aAAa,aAAa,IAAI,WAAW;EACpH;EAEO,oBAAoB,GAAC;AAC1B,SAAK,sBAAsB,EAAE;AAC7B,SAAK,YAAY,SAAS,KAAK,sBAAsB,EAAE;AACvD,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;EACvD;EAEO,oBAAoB,GAAC;AAC1B,SAAK,sBAAsB,EAAE;AAC7B,SAAK,YAAY,SAAS,KAAK,YAAY,EAAE;AAC7C,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;EACvD;EAEO,kBAAkB,UAAQ;AAC/B,SAAK,YAAY,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,QAAQ,EAAE,UAAU,UAAO;AACjI,WAAK,YAAY,YAAY,KAAK,aAAa;AAC/C,WAAK,YAAY,UAAU,KAAK,aAAa;AAC7C,WAAK,YAAY,WAAW,KAAK,aAAa;AAC9C,WAAK,YAAY,aAAa,KAAK,aAAa;AAChD,WAAK,YAAY,iBAAiB,KAAK,aAAa;AACpD,WAAK,eAAc;IACrB,CAAC;EACH;EACO,oBAAoB,UAAQ;AACjC,SAAK,YAAY,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,QAAQ,EAAE,UAAU,UAAO;AACjI,WAAK,YAAY,UAAU,KAAK,aAAa;IAC/C,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,mBAAmB,IAAI,YAAW;AACvC,SAAK,cAAc,KAAK,gBAAgB,IAAI,YAAW,CAAE;AAEzD,SAAK,kBAAkB,IAAI;AAC3B,SAAK,mBAAkB;AACvB,SAAK,eAAc;EACrB;EAEA,cAAW;EAGX;EAEA,kBAAe;AACb,aAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,YAAM,UAAU,KAAK,YAAY,CAAC;AAClC,cAAQ,OAAO;IACjB;AACA,SAAK,aAA+B,SAAS,cAAc,QAAQ;AACnE,UAAM,aAA+B,SAAS,cAAc,gBAAgB;AAC5E,eAAW,MAAK;AACd,WAAK,UAAM,uBAAAC,SAAa,KAAK,YAAY;QACvC,oBAAoB,CAAC,MAAM,MAAM,IAAI;QACrC,kBAAkB;QAClB,aAAa;OACd;AACD,WAAK,uBAAmB,uBAAAA,SAAa,YAAY;QAC/C,oBAAoB,CAAC,MAAM,MAAM,IAAI;QACrC,kBAAkB;QAClB,aAAa;OACd;IACH,GAAG,IAAI;EAET;EAEO,QAAK;AACV,UAAM,UAAU,KAAK,cAAc;AACnC,UAAM,kBAAkB,KAAK,cAAc;AAC3C,QAAI;AAAS,WAAK,IAAI,UAAU,OAAO;AACvC,QAAI;AAAiB,WAAK,iBAAiB,UAAU,eAAe;EACtE;EAEA,oBAAoB,GAAC;AACnB,QAAI,EAAE,OAAO,MAAM,iBAAiB;AAClC,WAAK,YAAY,SAAS,iBAAiB,EAAE,SAAS,EAAE;IAC1D,OAAO;AACL,WAAK,YAAY,SAAS,SAAS,EAAE,SAAS,EAAE;IAClD;EACF;EAEO,kBAAe;AACpB,SAAK,YAAY,SAAS,SAAS,EAAE,SAAS,KAAK,YAAY,SAAS,SAAS,EAAE,MAAM,QAAQ,eAAe,EAAE,CAAC;AACnH,UAAM,UAAU,KAAK,IAAI,UAAS,EAAG,KAAI;AAEzC,QAAI,SAAS;AACX,UAAI,KAAK,IAAI,cAAa,GAAI;MAE9B,OAAO;AAEL,aAAK,IAAI,mBAAkB;AAC3B,aAAK,YAAY,SAAS,SAAS,EAAE,UAAU,EAAE,aAAa,KAAI,CAAE;AACpE,aAAK,YAAY,OAAO,SAAS,IAAI;MACvC;IACF;EACF;EAEO,0BAAuB;AAC5B,SAAK,YAAY,SAAS,iBAAiB,EAAE,SAAS,KAAK,YAAY,SAAS,iBAAiB,EAAE,MAAM,QAAQ,eAAe,EAAE,CAAC;AACnI,UAAM,kBAAkB,KAAK,iBAAiB,UAAS,EAAG,KAAI;AAE9D,QAAI,iBAAiB;AACnB,UAAI,KAAK,iBAAiB,cAAa,GAAI;MAE3C,OAAO;AAEL,aAAK,iBAAiB,mBAAkB;AACxC,aAAK,YAAY,SAAS,iBAAiB,EAAE,UAAU,EAAE,aAAa,KAAI,CAAE;AAC5E,aAAK,YAAY,OAAO,SAAS,IAAI;MACvC;IACF;EACF;EAEO,gBAAgB,eAAe,cAAY;AAChD,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,kBAAkB,YAAY,EAAE,UAAU,UAAO;AACzG,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,UAAI,eAAe;AACjB,aAAK,aAAa,kBAAiB;AACnC,aAAK,aAAa,gBAAe;AACjC,aAAK,QAAQ,KAAK,aAAa,oBAAoB,iCAAiC;MACtF;IACF,CAAC;EACH;EAEO,gBAAgB,QAAM;AAC3B,QAAI,UAAU,UAAa,KAAK,YAAY,WAAW;AACrD,aAAO,KAAK,YAAY,WAAW,KAAK,OAAK,EAAE,MAAM,MAAM,EAAE;;AAE7D,aAAO;EACX;EAEO,iBAAc;AACnB,SAAK,YAAY,sBAAsB,KAAK,cAAc,eAAe,aAAa,YAAY,EAAE,UAAU,UAAO;AACnH,WAAK,YAAY,0BAA0B,KAAK;AAEhD,WAAK,cAAc,mBAAkB,EAAG,UAAU,CAAAC,UAAO;AAKvD,aAAK,aAAaA,MAAK,aAAa,OAAO,SACzC,IAAI,kBAAkB,KAAK,YAAU,OAAO,aAAa,KAAK,cAAc,CAAC;AAG/E,aAAK,aAAY;MAEnB,CAAC;AAED,UAAI,KAAK,YAAY,wBAAwB,iBAAiB,UAAa,KAAK,YAAY,wBAAwB,iBAAiB;AACnI,aAAK,YAAY,wBAAwB,gBAAgB,uBAAuB;AAClF,WAAK,oBAAoB,KAAK,YAAY,wBAAwB,YAAY;AAC9E,WAAK,cAAa;IACpB,CAAC;EAEH;EAEO,eAAY;AACjB,UAAM,iBAAiB,KAAK;AAC5B,QAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,WAAK,WAAW,QAAQ,SAAU,KAAG;AACnC,cAAM,WAAW,IAAI,kBAAkB,KAAK,YAAU,OAAO,aAAa,cAAc;AACxF,YAAI,YAAY,QAAW;AACzB,cAAI,YAAY,SAAS;QAC3B;MACF,CAAC;IACH;AACA,SAAK,WAAW,KAAK,CAAC,GAAG,MAAM,EAAE,YAAY,EAAE,SAAS;EAC1D;EAEO,gBAAa;AAClB,SAAK,cAAc,KAAK,gBAAgB,KAAK,aAAa;AAC1D,SAAK,gBAAgB,OAAO,OAAO,CAAA,GAAI,KAAK,YAAY,uBAAuB;AAC/E,WAAO,OAAO,KAAK,kBAAkB,KAAK,YAAY,uBAAuB;AAC7E,SAAK,gBAAgB,KAAK,YAAY,wBAAwB;AAC9D,SAAK,eAAe,KAAK,YAAY,wBAAwB;AAC7D,SAAK,gBAAgB,KAAK,cAAc,UAAU,OAAO;AACzD,QAAI,KAAK,cAAc,cAAc,YAAY,UAAU;AACzD,WAAK,qBAAqB;AAC1B,UAAI,KAAK,YAAY,UAAU,QAAQ;AACrC,aAAK,UAAU,KAAK,YAAY,UAAU,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,SAAS,EAAE;AAC1F,aAAK,YAAY,SAAS,SAAS,EAAE,SAAS,KAAK,cAAc,OAAO;MAC1E;IACF,OACK;AACH,WAAK,qBAAqB;IAC5B;AAEA,SAAK,MAAK;EACZ;EAEO,kBAAe;AACpB,SAAK,UAAU,KAAK,YAAY,UAAU,KAAK,OAAK,EAAE,MAAM,KAAK,YAAY,SAAS,WAAW,EAAE,KAAK,EAAE;EAC5G;EAEO,wBAAwB,KAAQ;AACrC,UAAM,cAAc,IAAI,aAAa,OAAO;AAC5C,QAAI,YAAY,SAAS,QAAQ,MAAM,MAAM;AAC3C,YAAM,IAAI;IACZ;AACA,UAAM,aAAa,IAAI,aAAa,OAAO;AAE3C,UAAM,UAAe,WAAW,SAAS,QAAQ;AACjD,UAAM,MAAM,UAAU,KAAK,aAAa,oBAAoB,qCAAqC,KAAK,aAAa,oBAAoB;AAEvI,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,KAAK,KAAK,aAAa,oBAAoB,EAAE,EAChI,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AAEb,YAAI;AACF,eAAK,iBAAiB,gBAAgB,IAAI;;AAE1C,eAAK,iBAAiB,gBAAgB,IAAI;MAC9C,OACK;AACH,YAAI,aAAa,SAAS,UAAU;MACtC;IACF,CAAC,EACA,MAAM,MAAK;AACV,UAAI,aAAa,SAAS,UAAU;AACpC,cAAQ,IAAI,yGAAyG;IACvH,CAAC;EAEL;EAEQ,cAAW;AACjB,SAAK,oBAAoB;AACzB,SAAK,YAAY,WAAW,KAAK,aAAa;EAChD;EAEQ,oBAAiB;AACvB,SAAK,oBAAoB;AACzB,SAAK,YAAY,WAAW,KAAK,aAAa;AAC9C,SAAK,IAAI,UAAU,KAAK,cAAc,OAAO;AAC7C,SAAK,iBAAiB,UAAU,KAAK,cAAc,eAAe;AAClE,SAAK,MAAK;EACZ;EAEO,uBAAoB;AACzB,UAAM,kBAAkB;MACtB,kBAAkB,KAAK,YAAY,SAAS,kBAAkB,EAAE;MAChE,kBAAkB,KAAK,YAAY,SAAS,kBAAkB,EAAE;MAChE,WAAW;MACX,UAAU;MACV,cAAc,aAAa;MAC3B,UAAU,KAAK,cAAc;;AAG/B;AACE,WAAK,cAAc,oBAAoB,eAAe,EAAE,UAAU,UAAO;AAEvE,YAAI,KAAK,cAAc,OAAO;AAC5B,eAAK,QAAQ,KAAK,aAAa,oBAAoB,kBAAkB;AACrE,eAAK,uBAAuB;AAC5B,eAAK,eAAc;QACrB,WAAW,KAAK,cAAc,OAAO;AACnC,eAAK,QAAQ,KAAK,aAAa,oBAAoB,8BAA8B;AACjF,eAAK,uBAAuB;AAC5B,eAAK,eAAc;QACrB,OACK;AACH,eAAK,QAAQ,kBAAkB;QACjC;MAEF,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MACzC,CAAC;IACJ;EAEF;EAEO,qBAAkB;AACvB,SAAK,cAAc,gBAAgB,aAAa,YAAY,EAAE,UAAU,UAAO;AAC7E,WAAK,eAAe,KAAK,aAAa;AACtC,WAAK,eAAe,KAAK,aAAa;AACtC,UAAI,KAAK,aAAa,aAAa,KAAK,aAAa,UAAU,QAAQ;AACrE,aAAK,iBAAiB,KAAK,aAAa,UAAU,CAAC,EAAE,iBAAiB;MACxE;IACF,CAAC;EACH;EAEO,iBAAc;AACnB,SAAK,uBAAuB;AAE5B,SAAK,mBAAmB,KAAK,YAAY;AACzC,SAAK,cAAc,KAAK,gBAAgB,KAAK,aAAa;AAC1D,SAAK,YAAY,IAAI,kBAAkB,EAAE,WAAW,KAAK,cAAc,wBAAwB;AAC/F,SAAK,YAAY,IAAI,kBAAkB,EAAE,WAAW,KAAK,cAAc,0BAA0B;EACnG;EAEO,uBAAoB;AACzB,SAAK,uBAAuB;AAC5B,SAAK,iBAAiB,YAAY,IAAI,KAAK,YAAY,wBAAwB;AAC/E,SAAK,iBAAiB,gBAAgB,IAAI,KAAK,YAAY,wBAAwB;AACnF,SAAK,iBAAiB,eAAe,IAAI,KAAK,YAAY,wBAAwB;EAEpF;EAEO,uBAAoB;AACzB,SAAK,iBAAiB,mBAAmB,KAAK,cAAc;AAC5D,QAAI,KAAK,YAAY,wBAAwB,cAAc,KAAK,iBAAiB,YAAY,KAAK,KAAK,YAAY,wBAAwB,iBAAiB,KAAK,iBAAiB,eAAe,GAAG;AAClM,YAAM,mBAAmB,MAAM,KAAK,gBAAgB,KAAK,iBAAiB,YAAY,CAAC,IAAI;AAC3F,YAAM,UAAU,KAAK,aAAa,oBAAoB,kCAAkC,QAAQ,MAAM,gBAAgB;AACtH,WAAK,0BAA0B,QAAQ,IAAI,SAAS,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,MAAM,EACvI,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,kBAAiB;QACxB;MACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;IAEvI,WACS,KAAK,YAAY,wBAAwB,cAAc,KAAK,iBAAiB,YAAY,KAAK,KAAK,YAAY,wBAAwB,iBAAiB,KAAK,iBAAiB,eAAe,KAAK,KAAK,iBAAiB,eAAe,KAAK,uBAAuB,gBAAgB;AAC1R,WAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,oBAAoB,2BAA2B,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,MAAM,EAC/L,KAAK,CAAC,cAAa;AAClB,YAAI,WAAW;AACb,eAAK,kBAAiB;QACxB;MACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;IAEvI,OACK;AACH,WAAK,kBAAiB;IACxB;EAEF;EAEO,oBAAiB;AACtB,SAAK,YAAY,qBAAqB,KAAK,gBAAgB,EAAE,UAAU,EAAC,MAAK,MAAK;AAChF,mBAAa,QAAQ,cAAc,KAAK,iBAAiB,YAAY,EAAE,SAAQ,CAAE;AACjF,WAAK,YAAY,QAAQ,WAAW,aAAa,KAAK,iBAAiB,YAAY,EAAE,SAAQ;AAC7F,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,mBAAa,QAAQ,yBAAyB,KAAK,iBAAiB,eAAe,EAAE,SAAQ,CAAE;AAC/F,WAAK,cAAc,wBAAwB,KAAK,iBAAiB,eAAe;AAChF,WAAK,aAAa,mBAAmB,KAAK,iBAAiB,YAAY;AACvE,WAAK,gBAAgB,MAAM,IAAI;AAE/B,WAAK,kBAAkB,KAAK,iBAAiB,YAAY;AACzD,WAAK,uBAAuB;AAE5B,WAAK,gBAAgB,YAAY,KAAK,cAAc,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,KAAK;IAC5I,GAAG,OAAM,MAAK;AAEZ,WAAK,QAAQ,KAAK,aAAa,oBAAoB,KAAK;IAC1D,EAAC,CAAC;EACJ;EAEO,2BAAwB;AAC7B,SAAK,qBAAqB,IAAI,mBAAkB;AAChD,SAAK,mBAAmB,QAAQ,KAAK,YAAY,wBAAwB;AACzE,SAAK,mBAAmB,aAAa,KAAK,aAAa;AACvD,SAAK,YAAY,mBAAmB,KAAK,kBAAkB,EAAE,UAAU,EAAC,MAAK,MAAK;AAChF,WAAK,cAAc,KAAK,aAAa,oBAAoB;IAC3D,GAAG,OAAM,MAAK;AACZ,WAAK,cAAc,KAAK,aAAa,oBAAoB;IAC3D,EAAC,CAAC;EACJ;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,QAAQ,MAAM,MAAM,KAAK,EACtJ,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,MAAK;MACZ;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EAEvI;EAEO,iBAAc;AACnB,SAAK,YAAY,SAAS,SAAS,EAAE,SAAS,KAAK,YAAY,SAAS,SAAS,EAAE,MAAM,QAAQ,eAAe,EAAE,CAAC;EACrH;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;MAC5B,MAAM,SAAS;MACf,gBAAgB,SAAS;MACzB,oBAAoB,CAAC,SAAS,gBAAgB;MAC9C,oBAAoB,CAAC,SAAS,gBAAgB;MAC9C,oBAAoB,KAAK,cAAc;MACvC,gBAAgB,KAAK,cAAc;MACnC,eAAe,SAAS;MACxB,cAAc,SAAS;MACvB,YAAY,SAAS;MACrB,kBAAkB,SAAS;MAC3B,aAAa,SAAS;MACtB,WAAW,SAAS;KACrB;EACH;;;uCAvbW,2BAAwB,4BAAA,WAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,WAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;AChBrC,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkC,GAAA,KAAA;AAE9B,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,CAAA,EACuB,GAAA,OAAA,CAAA,EAClB,GAAA,eAAA;AAEd,QAAA,oBAAA,IAAA,mBAAA,CAAA;AACA,QAAA,qBAAA,IAAA,0DAAA,IAAA,IAAA,uBAAA,CAAA;AAuEF,QAAA,uBAAA,EAAgB,EACZ,EACF,EACF,EACF,EACF;;;AA7EuB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAEd,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,cAAA,eAAA,KAAA,IAAA,cAAA,eAAA,KAAA,IAAA,cAAA,eAAA,EAAA;;;;;;6EDEJ,0BAAwB,EAAA,WAAA,4BAAA,UAAA,2FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AIV/B,IAAO,sBAAP,MAAO,qBAAmB;EAE9B,YAC4BC,WAAkB;AAAlB,SAAA,WAAAA;EACxB;;;;;;;EASG,aAAa,UAAqB,KAAW;AAClD,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,OAAO;AACd,WAAO,MAAM;AACb,WAAO,MAAM;AACb,aAAS,YAAY,KAAK,SAAS,MAAM,MAAM;AAC/C,WAAO;EACT;EAEO,oBAAoB,IAAY,KAAW;AAChD,UAAM,OAAO,SAAS,cAAc,QAAQ;AAC5C,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,KAAK;AACV,aAAS,KAAK,YAAY,IAAI;AAC9B,WAAO;EACT;;;uCA9BW,sBAAmB,mBAGpB,QAAQ,CAAA;IAAA;EAAA;;4EAHP,sBAAmB,SAAnB,qBAAmB,WAAA,YAHlB,OAAM,CAAA;EAAA;;;;;;AEmBE,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFiD,IAAA,qBAAA,SAAA,UAAA,EAAA;AAC/C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,MAAA,GAAA;;;;;AAQF,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFgD,IAAA,qBAAA,SAAA,YAAA,EAAA;AAC9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,MAAA,GAAA;;;ADVlB,IAAO,sBAAP,MAAO,6BAA4B,OAAM;EA0B7C,YAAY,cAAsC,eAAqC,cAAmC,eAAqC,iBAAyC,aAAiC,2BAA6D,QAAwB,YAClS,WAA6B,OAAsB,UAA6B,cAA2C,MAAsB,WAAuB;AAClM,UAAK;AAF2C,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAmC,SAAA,gBAAA;AAAqC,SAAA,kBAAA;AAAyC,SAAA,cAAA;AAAiC,SAAA,4BAAA;AAA6D,SAAA,SAAA;AAAwB,SAAA,aAAA;AAClS,SAAA,YAAA;AAA6B,SAAA,QAAA;AAAsB,SAAA,WAAA;AAA6B,SAAA,eAAA;AAA2C,SAAA,OAAA;AAAsB,SAAA,YAAA;AA1BtK,SAAA,gBAAuB,CAAA;AACvB,SAAA,wBAA+B,CAAA;AAC/B,SAAA,aAAoB,CAAA;AAEpB,SAAA,aAAa;AACb,SAAA,SAAS;AAGT,SAAA,MAAM;AACN,SAAA,WAAW;AAIlB,SAAA,SAAS,aAAa,UAAU,SAAY,aAAa,SAAS;AAClE,SAAA,WAAW,aAAa,YAAY,SAAY,aAAa,WAAW;AACxE,SAAA,uBAAuB,KAAK,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW;AAC9D,SAAA,sBAAsB;AACd,SAAA,YAAY,IAAI,QAAO;AACvB,SAAA,eAAe;AACf,SAAA,aAAa;AACd,SAAA,uBAAuB;AACvB,SAAA,SAAU,aAAa,UAAU,aAAa,UAAU,cAAe,KAAK,MAAM,aAAa,MAAM,IAAI,CAAA;AACzG,SAAA,gBAAgB;AAChB,SAAA,oBAAoB;AACpB,SAAA,qBAAqB;AAU5B,SAAA,cAAc;MACZ,WAAW,KAAK,wBAAwB,OAAO,yBAAyB;MACxE,aAAa;MACb,MAAM,KAAK;MACX,aAAa;MACb,SAAS,CAAC,OAAM;AAAG,aAAK,aAAa,EAAE;MAAE;MACzC,gBAAgB,CAAC,OAAM;AAAG,aAAK,UAAU,EAAE;MAAE;MAC7C,eAAe,CAAC,OAAM;AAAG,aAAK,gBAAgB,EAAE;MAAE;;;;AAKpD,SAAA,wBAAwB;MACtB,WAAW,KAAK,wBAAwB,OAAO,yBAAyB;;MAExE,aAAa;;MAEb,MAAM,KAAK;MACX,aAAa;MACb,SAAS,CAAC,OAAM;AAAG,aAAK,aAAa,EAAE;MAAE;MACzC,gBAAgB,CAAC,OAAM;AAAG,aAAK,UAAU,EAAE;MAAE;;MAE7C,eAAe,CAAC,OAAM;AAAG,aAAK,gBAAgB,EAAE;MAAE;;AAGpD,SAAA,wBAAwB;MACtB,WAAW,KAAK,wBAAwB,OAAO,yBAAyB;MACxE,aAAa;MACb,MAAM,KAAK;MACX,aAAa;MACb,SAAS,CAAC,OAAM;AAAG,aAAK,aAAa,EAAE;MAAE;MACzC,gBAAgB,CAAC,OAAM;AAAG,aAAK,UAAU,EAAE;MAAE;;MAE7C,eAAe,CAAC,OAAM;AAAG,aAAK,gBAAgB,EAAE;MAAE;;AAGpD,SAAA,eAAe;MACb,OAAO;;AA3CP,QAAI,CAAC,KAAK,sBAAqB,GAAI;AACjC,WAAK,iBAAgB;IACvB;EACF;EA2CA,WAAQ;AAEN,SAAK,cAAc,gBAAe;AAClC,SAAK,cAAc,kBAAkB,YAAY,SAAS,WAAW,cAAc,IAAI,EAAE,UAAU,SAAM;AACvG,WAAK,YAAY,QAAQ,mBAAmB,IAAI;AAChD,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,kBAAiB;AACtB,WAAK,MAAM,SAAS,UAAU;AAC9B,WAAK,gBAAgB,KAAK,aAAa,gBAAgB;AACvD,UAAI,KAAK,gBAAgB,aAAa,iBAAiB,QAAQ;AAC7D,aAAK,aAAa,OAAO;MAC3B,OAAO;AACL,aAAK,aAAa,QAAQ;MAC5B;AAEA,WAAK,YAAY,KAAK,UAAU,UAAO;AACrC,aAAK,UAAU,KAAK,WAAW,KAAK,OAAK,EAAE,aAAa,iBAAiB;MAC3E,CAAC;IACH,CAAC;EAEH;EAEO,yBAAsB;AAC3B,QAAI,aAAa,eAAe;AAC9B,WAAK,iBAAiB,SAAS,aAAa,aAAa;AACzD;IACF;AACA,QAAI,SAAS,UAAU,SAAS,YAAW,EAAG,MAAM,GAAG;AACvD,QAAI,KAAK;AACT,QAAI,OAAO,SAAS,KAAK,KAAK,YAAY,QAAQ,iBAAiB,gBAAgB;AACjF,YAAM,UAAU,KAAK,YAAY,QAAQ,iBAAiB,eAAe,KAAK,CAAC,QAAQ,IAAI,YAAY,YAAW,KAAM,OAAO,CAAC,CAAC;AACjI,UAAI,SAAS;AACX,aAAK,QAAQ;MACf;IACF,WACS,OAAO,UAAU,GAAG;AAC3B,YAAM,WAAW,KAAK,YAAY,QAAQ,iBAAiB,gBAAgB,OAAO,CAAC,QAAa,IAAI,KAAK,YAAW,KAAM,OAAO,CAAC,CAAC;AACnI,UAAI,SAAS,UAAU,GAAG;AACxB,cAAM,SAAS,kBAAkB,SAAS,CAAC;AAC3C,YAAI,QAAQ;AACV,mBAAS,SAAS,CAAC,EAAE,aAAa,YAAW,EAAG,MAAM,GAAG;AACzD,cAAI,OAAO,SAAS,GAAG;AACrB,kBAAM,UAAU,KAAK,YAAY,QAAQ,iBAAiB,eAAe,OAAO,CAAC,QAAQ,IAAI,YAAY,YAAW,KAAM,OAAO,CAAC,CAAC;AACnI,gBAAI,QAAQ,UAAU,GAAG;AACvB,mBAAK,QAAQ,CAAC,EAAE;YAClB;UACF;QACF;MACF;IACF;AAEA,SAAK,iBAAiB,MAAM,IAAI,KAAK,WAAW;EAClD;EAEO,oBAAiB;AACtB,QAAI,aAAa,iBAAiB,UAAU,aAAa,QAAQ,QAAQ,KAAK,aAAa;AACzF,mBAAa,WAAW,eAAe;AACvC,mBAAa,WAAW,QAAQ;AAChC,WAAK,oBAAoB,IAAI;IAC/B;AACA,UAAM,SAAS,aAAa,QAAQ,QAAQ;AAC5C,UAAM,WAAW,aAAa,QAAQ,UAAU;AAChD,UAAM,aAAa,aAAa,QAAQ,YAAY;AACpD,UAAM,SAAS,aAAa,QAAQ,QAAQ;AAC5C,QAAI,UAAU,YAAY,cAAc,QAAQ;AAC9C,WAAK,eAAe;AACpB,WAAK,SAAS,KAAK,MAAM,MAAM;AAC/B,WAAK,iBAAiB,KAAK,OAAO;AAClC,WAAK,aAAa,mBAAmB,OAAO,UAAU;AACtD,WAAK,aAAa,gBAAgB,KAAK;AACvC,WAAK,WAAW;AAChB,WAAK,SAAS;IAChB,OAAO;AACL,WAAK,uBAAsB;IAC7B;EACF;EAEO,uBAAoB;AACzB,SAAK,SAAS,KAAK,cAAc,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,KAAK,SAAY,KAAK,cAAc,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,IAAI;AACnJ,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS,KAAK,cAAc,CAAC;AAClC,WAAK,iBAAiB,KAAK,OAAO;IACpC;AACA,SAAK,SAAS,KAAK,OAAO;AAC1B,SAAK,aAAa,KAAK,OAAO;AAC9B,iBAAa,QAAQ,cAAc,KAAK,UAAU;AAClD,iBAAa,QAAQ,UAAU,KAAK,MAAM;AAC1C,iBAAa,QAAQ,UAAU,KAAK,UAAU,KAAK,MAAM,CAAC;AAC1D,SAAK,YAAY,QAAQ,WAAW,SAAS,KAAK;AAClD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;EACrD;EAEQ,gBAAgB,cAAc,OAAO,wBAAwB,OAAK;AAExE,SAAK,cAAc,4BAA4B,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAClG,WAAK,gBAAgB,KAAK;AAC1B,WAAK,YAAY,QAAQ,UAAU,KAAK;AACxC,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,qBAAoB;AACzB,WAAK,aAAa,aAAa,qBAAqB;IACtD,CAAC;EACH;EAEO,aAAa,cAAc,OAAO,wBAAwB,OAAK;AACpE,SAAK,cAAc,mBAAkB,EAAG,UAAU,UAAO;AACvD,WAAK,wBAAwB,KAAK;AAClC,WAAK,YAAY,QAAQ,YAAY,KAAK;AAC1C,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,aAAY;AACjB,WAAK,YAAY,qBAAqB;AACtC,WAAK,aAAa,WAAW,EAAE,SAAS,MAAK;AAC3C,aAAK,gBAAe;MACtB;IACF,CAAC;EAEH;EAEO,eAAY;AAEjB,UAAM,iBAAiB,KAAK;AAC5B,SAAK,aAAa,KAAK,sBAAsB,OAAO,SAClD,IAAI,kBAAkB,KAAK,YAAU,OAAO,aAAa,KAAK,cAAc,CAAC;AAE/E,QAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,WAAK,WAAW,QAAQ,SAAU,KAAG;AACnC,cAAM,WAAW,IAAI,kBAAkB,KAAK,YAAU,OAAO,aAAa,cAAc;AACxF,YAAI,YAAY,QAAW;AACzB,cAAI,YAAY,SAAS;QAC3B;MACF,CAAC;IACH;AACA,SAAK,WAAW,KAAK,CAAC,GAAG,MAAM,EAAE,YAAY,EAAE,SAAS;EAC1D;EAEO,YAAY,wBAAwB,OAAK;AAC9C,QAAI;AACJ,QAAI,yBAAyB,CAAC,KAAK,aAAa,kBAAkB;AAChE,aAAO,KAAK,WAAW,CAAC;AACxB,WAAK,aAAa,mBAAmB,KAAK;IAC5C,WAAU,KAAK,aAAa,kBAAkB;AAC5C,YAAM,SAAU,KAAK,WAAW,KAAK,OAAK,EAAE,MAAM,KAAK,aAAa,gBAAgB;AACpF,YAAM,SAAS,KAAK,WAAW,KAAK,OAClC,EAAE,kBAAkB,KAAK,OAAK,EAAE,aAAa,KAAK,cAAc,CAAC;AAEnE,aAAO,UAAU;IACnB,OAAO;AACL,aAAO,KAAK,WAAW,KAAK,OAC1B,EAAE,kBAAkB,KAAK,OAAK,EAAE,aAAa,KAAK,cAAc,CAAC;IAErE;AACA,SAAK,WAAW,KAAK,kBAAkB,KAAK,YAAU,OAAO,aAAa,KAAK,cAAc,EAAE;AAC/F,SAAK,uBAAuB,KAAK,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW;AACnE,SAAK,aAAa,mBAAmB,KAAK;AAC1C,SAAK,gBAAgB,KAAK,aAAa,iBAAiB,SAAQ,CAAE;AAClE,iBAAa,QAAQ,YAAY,KAAK,QAAQ;AAC9C,SAAK,YAAY,QAAQ,WAAW,WAAW,KAAK;AACpD,iBAAa,QAAQ,cAAc,KAAK,aAAa,iBAAiB,SAAQ,CAAE;AAChF,SAAK,YAAY,QAAQ,WAAW,aAAa,KAAK,aAAa,iBAAiB,SAAQ;AAC5F,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,SAAK,kBAAiB;EACxB;EAEO,sBAAmB;AAExB,SAAK,iBAAgB;AACrB,iBAAa,QAAQ,iBAAiB,KAAK,eAAe,SAAQ,CAAE;AACpE,SAAK,YAAY,QAAQ,WAAW,gBAAgB,KAAK,eAAe,SAAQ;AAChF,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,SAAK,aAAa,KAAK,sBAAsB,OAAO,SAClD,IAAI,kBAAkB,KAAK,YAAU,OAAO,aAAa,KAAK,cAAc,CAAC;AAE/E,SAAK,aAAa,mBAAmB,KAAK,cAAc,SAAY,KAAK,WAAW,CAAC,EAAE,KAAK,YAAY;AACxG,SAAK,OAAO,cAAc,qBAAqB,EAAE,oBAAoB,KAAI,CAAE,EAAE,KAAK,MAAK;AACrF,WAAK,OAAO,SAAS,CAAC,OAAO,CAAC;AAC9B,WAAK,gBAAgB,MAAM,IAAI;IACjC,CAAC;EAEH;EAEO,mBAAgB;AACrB,SAAK,iBAAgB;AACrB,SAAK,OAAO,cAAc,qBAAqB,EAAE,oBAAoB,KAAI,CAAE,EAAE,KAAK,MAAK;AACrF,WAAK,OAAO,SAAS,CAAC,OAAO,CAAC;AAC9B,WAAK,gBAAgB,IAAI;IAC3B,CAAC;EAEH;EAEO,aAAa,QAAQ,aAAa,OAAK;AAC5C,SAAK,aAAa;AAClB,QAAI,KAAK,cAAc,SAAS;AAC9B,mBAAa,QAAQ,iBAAiB,MAAM;AAC5C,UAAI,YAAY;AACd,aAAK,gBAAe;MACtB,OAAO;AACL,aAAK,aAAY,EAAG,SAAS,MAAK;AAChC,eAAK,gBAAe;QACtB;MACF;IAEF;AACA,QAAI,KAAK,cAAc,UAAU;AAC/B,mBAAa,QAAQ,iBAAiB,OAAO;AAC7C,WAAK,gBAAgB,CAAC,CAAC,UAAU;IACnC;EACF;EAEO,gBAAgB,gBAAc;AACnC,SAAK,aAAa,gBAAgB,MAAM,cAAc,EAAE,UAAU,UAAO;AACvE,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,WAAK,aAAa,eAAc;AAChC,WAAK,aAAa,kBAAiB;AACnC,WAAK,aAAa,gBAAe;AACjC,WAAK,aAAa,uBAAsB;IAC1C,CAAC;EACH;EAEO,iBAAc;AACnB,WAAO,+CAA+C,KAAK,SAAS,WAAW,KAAK;EAEtF;EAEO,aAAa,SAAS,OAAK;AAEhC,QAAI,QAAQ;AACV,WAAK,oBAAmB;IAC1B;AAGA,UAAM,MAAM,KAAK,UAAU,SAAS,gBAAgB,cAAc,KAAK,UAAU,+BAA+B,KAAK,eAAc,CAAE,CAAC;AACtI,WAAO,KAAK,aAAa,oBAAoB,KAAK,eAAe,GAAG;EACtE;EAEO,oBAAoB,mBAAmB,OAAK;AACjD,UAAM,YAAY,SAAS,eAAe,KAAK,aAAa;AAE5D,QAAI,OAAO,SAAS,aAAa;AAC/B,YAAM,eAAc;AACpB,YAAM,gBAAgB;AACtB,WAAK,qBAAqB;IAC5B;AACA,QAAI,aAAa,MAAM;AACrB,eAAS,KAAK,YAAY,SAAS;IAgBrC;AAIA,QAAI,kBAAkB;AACpB,mBAAa,MAAK;AAClB,qBAAe,MAAK;AACpB,WAAK,iBAAgB;IACvB;EACF;EAEO,kBAAe;AACpB,QAAI,OAAO,UAAU,aAAa;AAChC,UAAI,aAAa;AAAa,cAAM,YAAW;AAQ/C,WAAK,sBAAsB;AAC3B,WAAK,YAAY,OAAO,KAAK;AAC7B,WAAK,YAAY,YAAY,KAAK,wBAAwB,OAAO,yBAAyB,qBACxF,KAAK,KAAK,IAAI,MAAK;AACjB,aAAK,OAAO,cAAc,qBAAqB,EAAE,oBAAoB,KAAI,CAAE,EAAE,KAAK,MAAK;AACrF,eAAK,OAAO,SAAS,CAAC,OAAO,CAAC;AAC9B,gBAAM,SAAS,cAAc,KAAK,WAAW;AAC7C,cAAI,CAAC,KAAK,oBAAoB;AAE5B,kBAAM,UAAU,iBAAiB;cAC/B,SAAS,CAAC,OAAM;AAAG,qBAAK,QAAQ,EAAE;cAAE;aACrC;AACD,iBAAK,qBAAqB;UAC5B;QACF,CAAC;MACH,CAAC;IAGL;EACF;EAEO,QAAQ,UAAQ;AACrB,QAAI,KAAK,UAAU,2BAA2B,KAAK,UAAU,yBAAyB,KAAK,UAAU,IAAI;AACvG,WAAK,SAAS,QAAQ;IACxB;EACF;EAEO,SAAS,UAAQ;AACtB,SAAK,kBAAiB;AACtB,UAAM,cAAc,aAAa,gBAAgB;AACjD,SAAK,WAAW,IAAI,SAAQ;AAC5B,SAAK,SAAS,OAAO,SAAS,KAAK;AACnC,SAAK,SAAS,WAAW,SAAS,KAAK;AACvC,SAAK,SAAS,aAAa,KAAK,aAAa;AAC7C,iBAAa,QAAQ,kBAAkB,WAAW;AAClD,SAAK,cAAc,UAAU,KAAK,QAAQ,EAAE,UAAU,UAAO;AAC3D,YAAM,WAAW,KAAK,IAAG;AACzB,mBAAa,QAAQ,cAAc,SAAS,SAAQ,CAAE;AACtD,mBAAa,QAAQ,eAAe,SAAS,SAAQ,CAAE;AACvD,YAAM,iBAAiB,KAAK,YAAY,QAAQ,iBAAiB,gBAAgB;AACjF,UAAI,kBAAkB,eAAe,QAAQ;AAC3C,aAAK,gBAAgB,gBAAgB,IAAI;MAC3C,OAAO;AACL,aAAK,cAAc,kBAAkB,YAAY,SAAS,WAAW,cAAc,MAAM,IAAI,EAAE,UAAU,SAAM;AAC7G,eAAK,YAAY,QAAQ,mBAAmB,IAAI;AAChD,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,gBAAMC,kBAAiB,KAAK,YAAY,QAAQ,iBAAiB,gBAAgB;AACjF,eAAK,gBAAgBA,iBAAgB,IAAI;QAC3C,CAAC;MACH;IAEF,GAAG,WAAQ;AACT,UAAI,MAAM,SAAS,eAAe,MAAM,SAAS,iBAAiB;AAChE,aAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,cAAc,6BAA6B,KAAK,aAAa,cAAc,UAAU,KAAK,aAAa,cAAc,QAAQ,MAAM,MAAM,IAAI,EACvM,KAAK,CAAC,cAAa;AAClB,cAAI,WAAW;AACb,kBAAM,SAAS,cAAc,KAAK,qBAAqB;UACzD;QACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;MACvI,WACS,MAAM,SAAS,sBAAsB;AAC5C,cAAM,SAAS,cAAc,KAAK,qBAAqB;MACzD,WAES,MAAM,SAAS,gBAAgB;AACtC,aAAK,MAAM,KAAK,aAAa,cAAc;AAC3C,aAAK,QAAQ,KAAK,GAAG;MACvB,WACS,MAAM,SAAS,cAAc;AACpC,aAAK,MAAM,KAAK,aAAa,cAAc;AAC3C,aAAK,QAAQ,KAAK,GAAG;MACvB,WACS,MAAM,SAAS,4BAA4B;AAClD,aAAK,gBAAgB,KAAK,WAAW;AACrC,aAAK,QAAQ,KAAK,aAAa;AAC/B,aAAK,cAAc,4BAA4B,QAAQ;MACzD,OACK;AACH,aAAK,MAAM,KAAK,aAAa,cAAc;AAC3C,aAAK,QAAQ,KAAK,GAAG;MACvB;IACF,CAAC;EACH;EAEO,gBAAgB,gBAAgB,MAAI;AACzC,mBAAe,QAAQ,CAAC,MAAK;AAC3B,UAAI,EAAE,IAAI,KAAK,KAAK,cAAc,GAAG;AACnC,qBAAa,QAAQ,kBAAkB,EAAE,eAAe,EAAE,QAAQ,iBAAiB,IAAI,EAAE,YAAW,CAAE;MACxG;IACF,CAAC;AACD,SAAK,YAAY,QAAQ,cAAc;AACvC,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,SAAK,cAAc,eAAe,IAAI;AACtC,SAAK,cAAc,SAAS,UAAS,EAAG,SAAS,SAAS,EAAE,YAAY,KAAK,MAAK,CAAE;AACpF,SAAK,cAAc,0BAA0B;AAE7C,QAAI,KAAK,gBAAgB,UAAa,KAAK,gBAAgB,QAAQ,KAAK,cAAc,QAAQ,KAAK,cAAc,IAAI;AACnH,WAAK,iBAAiB;AAEtB,UAAI,aAAa;AACjB,UAAI,eAAe;AACnB,UAAI,eAAe;AACnB,UAAI,KAAK,YAAY,QAAQ,oBAAoB,UAAa,KAAK,YAAY,QAAQ,oBAAoB,MAAM;AAC/G,cAAM,cAAc,KAAK,YAAY,QAAQ,iBAAiB,cAAc,KAAK,OAAK,EAAE,eAAe,QAAQ,EAAE,YAAY,YAAW,EAAG,QAAQ,KAAK,eAAc,EAAG,gBAAe,EAAG,SAAS,YAAW,CAAE,KAAK,CAAC;AACvN,YAAI,eAAe;AACjB,uBAAa,YAAY;;AAEzB,uBAAa,mBAAmB;MACpC,OACK;AACH,qBAAa,mBAAmB;MAClC;AACA,qBAAgB,KAAK,gBAAgB,UAAa,KAAK,gBAAgB,QAAQ,KAAK,gBAAgB,UAAU,KAAK,gBAAgB,KAAM,SAAS,KAAK,YAAY,IAAI,KAAK,cAAc,gBAAgB,KAAK,SAAS;AACxN,qBAAe,QAAQ,CAAC,MAAK;AAC3B,YAAI,EAAE,IAAI,KAAK,cAAc;AAG3B,uBAAa,QAAQ,kBAAkB,EAAE,eAAe,EAAE,QAAQ,iBAAiB,IAAI,EAAE,YAAW,CAAE;QACxG;MACF,CAAC;AACD,qBAAgB,KAAK,gBAAgB,UAAa,KAAK,gBAAgB,QAAQ,KAAK,gBAAgB,UAAU,KAAK,gBAAgB,KAAM,SAAS,KAAK,YAAY,IAAI,KAAK,cAAc,gBAAgB,KAAK,SAAS;AACxN,YAAM,kBAAkB,IAAI,SAAQ;AACpC,sBAAgB,aAAa;AAC7B,sBAAgB,eAAe;AAC/B,sBAAgB,eAAe;AAC/B,sBAAgB,WAAW,KAAK;AAChC,sBAAgB,eAAe,KAAK;AACpC;AACA,WAAK,cAAc,kBAAkB,eAAe,EAAE,UAAU;QAC9D,MAAM,MAAK;AACT,eAAK,eAAe,aAAa,SAAQ;AACzC,eAAK,eAAe,aAAa,SAAQ;AACzC,eAAK,aAAa,WAAW,SAAQ;AACrC,eAAK,YAAY,QAAQ,cAAc;AACvC,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD;AACA,eAAK,gBAAgB,YAAY,KAAK,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,IAAI;QAC7H;QAAG,OAAO,MAAK;AACb,eAAK,OAAO,cAAc,QAAQ;QACpC;OACD;IACH,OACK;AACH,WAAK,gBAAgB,YAAY,KAAK,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,IAAI;IAC7H;EACF;EAEO,aAAa,UAAQ;AAC1B,QAAI,KAAK;AAAmB;AAC5B,QAAI,KAAK,UAAU,KAAK,UAAU,sBAAsB;AACtD,WAAK,QAAQ,SAAS,YAAY;IACpC,WAAW,KAAK,cAAc,WAAW,SAAS,aAAa,UAAU;AACvE,UAAI,OAAO,SAAS,YAAY,aAAa;MAE7C,OAAO;AACL,cAAM,eAAc;AACpB,aAAK,gBAAe;MACtB;IAEF;EAEF;EAEO,UAAU,UAAQ;AACvB,SAAK,SAAS,SAAS;AACvB,QAAI,KAAK,UAAU,2BAA2B,KAAK,UAAU,yBAAyB,KAAK,UAAU,uCAAuC,KAAK,UAAU,+BAA+B;AACxL,WAAK,cAAc,IAAI,mBAAkB;AACzC,UAAI,SAAS,SAAS,uBAAuB,KAAK;AAChD,aAAK,YAAY,UAAU,SAAS,SAAS,uBAAuB;AACtE,UAAI,SAAS,SAAS,iBAAiB,KAAK;AAC1C,aAAK,YAAY,eAAe,SAAS,SAAS,iBAAiB;AACrE,WAAK,YAAY,YAAY,KAAK;AAClC,WAAK,YAAY,aAAa,KAAK,aAAa;IAClD,OACK;AACH,WAAK,cAAc,IAAI,mBAAkB;IAC3C;AAGA,QAAI,SAAS;AACb,QAAI,SAAS,WAAW,iCAAiC,SAAS,WAAW,sCAAsC;AACjH,eAAS;IACX;AAEA,QAAI,EAAE,SAAS,aAAa,EAAE,GAAG,UAAU,KAAK,QAAQ,EAAE,SAAS,eAAe,EAAE,SAAS,uBAAuB,KAAK,MAAM;AAC7H,aAAO;IACT;EACF;EAEO,gBAAgB,UAAQ;AAC7B,SAAK,SAAS,SAAS;AACvB,QAAI,SAAS,UAAU,2BAA2B,KAAK,UAAU,yBAAyB,SAAS,UAAU,sCAAsC;AACjJ,WAAK,sBAAsB,UAAU,IAAI;AACzC,WAAK,cAAc,SAAS,UAAS,EAAG,SAAS,aAAa,EAAE,YAAY,SAAS,QAAQ,MAAK,CAAE;IACtG;AAEA,QAAI,SAAS,UAAU,iCAAiC,SAAS,UAAU,qCAAqC;AAC9G,WAAK,sBAAsB,UAAU,KAAK;IAC5C;EACF;EAEO,sBAAsB,UAAU,SAAO;AAC5C,SAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,SAAK,YAAY,YAAY,SAAS,QAAQ;AAC9C,SAAK,YAAY,WAAW,SAAS,QAAQ;AAC7C,SAAK,YAAY,SAAS,SAAS,KAAK;AAExC,QAAI,SAAS,KAAK,iBAAiB,UAAa,SAAS,KAAK,aAAa;AACzE,WAAK,YAAY,sBAAsB,SAAS,KAAK,iBAAiB,SAAY,SAAS,KAAK,gBAAgB,SAAS,KAAK;AAChI,QAAI,SAAS,KAAK,gBAAgB,QAAW;AAC3C,WAAK,YAAY,SAAS,SAAS,KAAK;IAC1C;AACA,SAAK,YAAY,eAAe,SAAS,KAAK;AAC9C,SAAK,YAAY,eAAe,SAAS,KAAK;AAC9C,SAAK,YAAY,OAAO,SAAS,QAAQ;AACzC,SAAK,YAAY,QAAQ,KAAK,kBAAkB,WAAW,SAAS,SAAS,QAAQ,OAAO,SAAS,KAAK;AAC1G,SAAK,YAAY,UAAU,SAAS,QAAQ;AAC5C,SAAK,YAAY,WAAW,SAAS,SAAS;AAC9C,SAAK,YAAY,QAAQ,SAAS,QAAQ;AAE1C,SAAK,YAAY,aAAa,YAAY;AAE1C,QAAI,KAAK,YAAY,YAAY,QAAW;AAC1C,WAAK,cAAc,mBAAmB,KAAK,WAAW,EAAE,UAAU;QAChE,MAAM,MAAK;AACT,cAAI,CAAC,SAAS;AACZ,iBAAK,0BAA0B,QAAQ,IAAI,KAAK,aAAa,cAAc,oBAAoB,KAAK,aAAa,cAAc,IAAI,KAAK,aAAa,cAAc,QAAQ,MAAM,MAAM,IAAI,EACxL,KAAK,CAAC,cAAa;AAClB,kBAAI,WAAW;AACb,qBAAK,gBAAe;cACtB;YACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;UAEvI,OACK;AACH,iBAAK,cAAc,WAAW,KAAK,YAAY;AAC/C,yBAAa,QAAQ,YAAY,KAAK,cAAc,QAAQ;UAC9D;QACF;QAAG,OAAO,MAAK;AACb,cAAI,CAAC;AACH,iBAAK,gBAAgB,KAAK,aAAa,cAAc,qBAAqB,GAAG;QACjF;OACD;IACH;EAEF;EAEO,sBAAsB,UAAQ;AACnC,SAAK,cAAc,IAAI,mBAAkB;AACzC,SAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,SAAK,YAAY,YAAY,SAAS,QAAQ;AAC9C,SAAK,YAAY,WAAW,SAAS,QAAQ;AAC7C,SAAK,YAAY,SAAS,SAAS,KAAK;AACxC,SAAK,YAAY,WAAW,SAAS,SAAS;AAC9C,SAAK,YAAY,QAAQ,SAAS,QAAQ;AAC1C,SAAK,YAAY,aAAa,YAAY;AAE1C,QAAI,KAAK,YAAY,YAAY,QAAW;AAC1C,WAAK,cAAc,mBAAmB,KAAK,WAAW,EAAE,UAAU;QAChE,MAAM,MAAK;AACT,eAAK,gBAAgB,KAAK,aAAa,cAAc,kBAAkB;QACzE;QAAG,OAAO,MAAK;AACb,eAAK,gBAAgB,KAAK,aAAa,cAAc,qBAAqB,GAAG;QAC/E;OACD;IACH;EACF;EAEO,gBAAgB,KAAG;AACxB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,cAAc,IAAI,IAAI,MAAM,MAAM,KAAK,EACtG,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,gBAAe;MACtB;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;EAEO,QAAQ,KAAK,SAAS,OAAK;AAChC,SAAK,oBAAoB;AACzB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,cAAc,IAAI,KAAK,aAAa,cAAc,QAAQ,MAAM,MAAM,KAAK,EAC1I,KAAK,MAAK;AACT,WAAK,oBAAoB;AACzB,UAAI,QAAQ;AACV,aAAK,oBAAoB,IAAI;AAC7B,aAAK,aAAa,QAAQ;AAC1B,eAAO,SAAS,OAAM;MACxB;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;EAEO,gBAAa;AAClB,QAAI,UAAU,UAAU,MAAM,UAAU,GAAG;AACzC,aAAO,SAAS,OAAO;IACzB,WAAW,UAAU,UAAU,MAAM,mBAAmB,GAAG;AACzD,aAAO,SAAS,OAAO;IACzB;EACF;EAEA,cAAW;AACT,SAAK,UAAU,KAAK,IAAI;EAC1B;;;uCAppBW,sBAAmB,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,SAAA,GAAA,4BA2BpB,QAAQ,GAAA,4BAAA,KAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,mBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEA3BP,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,UAAA,CAAA,oCAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,aAAA,GAAA,QAAA,GAAA,CAAA,OAAA,sCAAA,WAAA,QAAA,OAAA,iBAAA,GAAA,CAAA,GAAA,gBAAA,cAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,OAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,aAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,MAAA,UAAA,GAAA,iBAAA,mBAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,gBAAA,OAAA,MAAA,WAAA,GAAA,iBAAA,mBAAA,SAAA,GAAA,CAAA,MAAA,gBAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,OAAA,UAAA,eAAA,aAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,QAAA,GAAA,CAAA,GAAA,QAAA,YAAA,GAAA,CAAA,GAAA,UAAA,WAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,SAAA,YAAA,GAAA,cAAA,QAAA,eAAA,QAAA,YAAA,YAAA,SAAA,KAAA,GAAA,CAAA,GAAA,YAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,eAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,OAAA,6CAAA,OAAA,OAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACpBhC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,OAAA,CAAA;AAEvB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAsE,GAAA,OAAA,CAAA,EAC7C,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EAC/C,GAAA,OAAA,CAAA,EACyB,GAAA,OAAA,CAAA,EACpB,GAAA,OAAA,CAAA;AAEnB,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AAGA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,OAAA,EAAA,EAC8C,IAAA,kBAAA,EAAA,EACD,IAAA,cAAA,EAAA;AACtC,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,gBAAA,MAAA,MAAA,IAAA,iBAAA;AAAA,iBAAA;QAAA,CAAA;AAC7B,QAAA,qBAAA,mBAAA,SAAA,sEAAA;AAAA,iBAAmB,IAAA,oBAAA;QAAqB,CAAA;AACxC,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa;AAGf,QAAA,yBAAA,IAAA,kBAAA,EAAA,EAAuE,IAAA,cAAA,EAAA;AACtC,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,aAAA,kBAAA,MAAA,MAAA,IAAA,aAAA,mBAAA;AAAA,iBAAA;QAAA,CAAA;AAC7B,QAAA,qBAAA,mBAAA,SAAA,sEAAA;AAAA,iBAAmB,IAAA,iBAAA;QAAkB,CAAA;AACrC,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,cAAA,EAAA;AAGF,QAAA,uBAAA,EAAa;AAGf,QAAA,yBAAA,IAAA,UAAA,EAAA;AACe,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,aAAa,SAAS,IAAI;QAAC,CAAA;AACjD,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EACL,EACF,EAEF,EACF,EACF,EACF,EACF,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA2D,IAAA,OAAA,EAAA,EAC5B,IAAA,KAAA;AAEzB,QAAA,iBAAA,EAAA;AAEF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,KAAA,EAAA;AACA,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,aAAa,UAAU,IAAI;QAAC,CAAA;AAAuC,QAAA,iBAAA,EAAA;AAE3E,QAAA,uBAAA,EAAI,EACJ;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwG,IAAA,MAAA;AAEpG,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAoB,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,iBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA;QAAwC,CAAA;AACb,QAAA,iBAAA,EAAA;AAAuC,QAAA,uBAAA,EAAI;AAGrG,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,OAAA,EAAA,EACwD,IAAA,OAAA,EAAA;AAEvE,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,GAAA;AAClB,QAAA,iBAAA,IAAA,uCAAA;AAAqC,QAAA,uBAAA;AACxC,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,IAAA,0BAAA;AAAwB,QAAA,uBAAA,EAAI;AAEjC,QAAA,yBAAA,IAAA,OAAA,EAAA;AAAuB,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,iBAAS,IAAA,cAAA;QAAe,CAAA;AAC7C,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,IAAA,MAAA;AAAI,QAAA,uBAAA,EAAI,EACP,EACF;AAER,QAAA,yBAAA,IAAA,OAAA,CAAA,EAA2B,IAAA,OAAA,EAAA;AASvB,QAAA,oBAAA,IAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AAaA,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA,EAAM;;;AA3GiB,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,cAAA,OAAA;AAGc,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,cAAA,OAAA;AAcY,QAAA,oBAAA,EAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,cAAA;AAEE,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,aAAA;AAOF,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,aAAA,gBAAA;AAEI,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,UAAA;AAQnC,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,cAAA,OAAA,GAAA;AAaK,QAAA,oBAAA;AAAA,QAAA,qBAAA,UAAA,IAAA,cAAA,QAAA;AAGnB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,cAAA,SAAA,MAAA,IAAA,UAAA,OAAA,OAAA,IAAA,OAAA,MAAA,GAAA;AAI+E,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,cAAA,aAAA;AAO/E,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,cAAA,QAAA,GAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,gCAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAAsD,QAAA,oBAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,cAAA,MAAA;;;;;;6ED/C/C,qBAAmB,EAAA,WAAA,uBAAA,UAAA,+DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGkBZ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEF,IAAA,uBAAA;;;;AAHE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,GAAA;;;AD9BhB,IAAO,oBAAP,MAAO,mBAAiB;EAa5B,YAAmB,aAAiC,eAAqC,iBAC/E,aAAwC,2BACzC,cAAmC,aAAwB;AAFjD,SAAA,cAAA;AAAiC,SAAA,gBAAA;AAAqC,SAAA,kBAAA;AAC/E,SAAA,cAAA;AAAwC,SAAA,4BAAA;AACzC,SAAA,eAAA;AAAmC,SAAA,cAAA;AAXrC,SAAA,qBAAqB;AACrB,SAAA,cAAc;AACd,SAAA,gBAAgB;AAGhB,SAAA,UAAiB,CAAA;AAOtB,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AAC/E,SAAK,eAAe,KAAK,mBAAmB,OAAO,KAAK,YAAY,QAAQ,YAAY,cAAc;AAEtG,SAAK,oBAAoB,KAAK,YAAY,SAAS,MAAM;AAEzD,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAgB,KAAK;IAC5B,OAAO;AACL,WAAK,aAAa,qBAAoB;IACxC;EACF;EAEO,kBAAkB,UAAQ;AAC/B,SAAK,YAAY,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,QAAQ,EAAE,UAAU,UAAO;AACjI,WAAK,YAAY,aAAa,KAAK,aAAa;AAChD,WAAK,YAAY,iBAAiB,KAAK,aAAa;AACpD,WAAK,eAAc;IACrB,CAAC;EACH;EAEA,WAAQ;AACN,QAAI,KAAK,kBAAkB;AACzB,WAAK,gBAAgB,KAAK,YAAY,QAAQ,YAAY,OAAO;IACnE,OAAO;AACL,WAAK,kBAAkB,IAAI;IAC7B;EACF;EAEO,gBAAgB,eAAa;AAClC,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,qBAAoB;AACtC,UAAI,eAAe;AACjB,aAAK,aAAa,kBAAiB;AACnC,aAAK,aAAa,gBAAe;AACjC,aAAK,QAAQ,KAAK,aAAa,oBAAoB,iCAAiC;MACtF;IACF,CAAC;EACH;EAEO,gBAAgB,QAAM;AAC3B,QAAI,UAAU,UAAa,KAAK,YAAY,WAAW;AACrD,aAAO,KAAK,YAAY,WAAW,KAAK,OAAK,EAAE,MAAM,MAAM,EAAE;;AAE7D,aAAO;EACX;EAEO,iBAAc;AACnB,SAAK,YAAY,sBAAsB,KAAK,cAAc,eAAe,KAAK,YAAY,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AACnH,WAAK,YAAY,0BAA0B,KAAK;AAChD,WAAK,gBAAgB,KAAK,YAAY,wBAAwB;IAChE,GAAG,OAAM,MAAK;AACZ,WAAK,gBAAgB;IACvB,EAAC,CAAC;EACJ;EAEO,2BAAwB;AAC7B,SAAK,qBAAqB,IAAI,mBAAkB;AAChD,SAAK,mBAAmB,QAAQ,KAAK,mBAAmB,KAAK,gBAAgB,KAAK,YAAY,wBAAwB;AACtH,SAAK,mBAAmB,aAAa,KAAK,aAAa;AACvD,SAAK,YAAY,mBAAmB,KAAK,kBAAkB,EAAE,UAAU,EAAC,MAAK,CAAC,SAAQ;AACpF,UAAI,KAAK,cAAc,KAAK;AAC1B,aAAK,cAAc,KAAK,aAAa,oBAAoB;MAC3D,OAAO;AACL,aAAK,cAAc,KAAK,aAAa,oBAAoB;MAC3D;IAEF,GAAG,OAAM,MAAK;AACZ,WAAK,cAAc,KAAK,aAAa,oBAAoB;IAC3D,EAAC,CAAC;EACJ;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,oBAAoB,IAAI,KAAK,aAAa,oBAAoB,QAAQ,MAAM,MAAM,KAAK;EAM3J;;;uCA/FW,oBAAiB,4BAAA,WAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,QAAA,QAAA,MAAA,GAAA,CAAA,MAAA,SAAA,GAAA,CAAA,YAAA,IAAA,cAAA,QAAA,YAAA,EAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,eAAA,KAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,aAAA,aAAA,SAAA,GAAA,CAAA,OAAA,IAAA,GAAA,QAAA,MAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,UAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,YAAA,IAAA,GAAA,SAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,QAAA,GAAA,CAAA,GAAA,UAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,SAAA,gDAAA,QAAA,SAAA,GAAA,MAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,cAAA,qBAAA,QAAA,MAAA,GAAA,CAAA,OAAA,4CAAA,OAAA,IAAA,gBAAA,SAAA,cAAA,OAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACX9B,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,KAAA;AAEd,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACO,GAAA,KAAA,CAAA;AACN,QAAA,iBAAA,CAAA;AAA6C,QAAA,uBAAA,EAAI;AAEnE,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAiB,IAAA,OAAA,CAAA,EACuB,IAAA,OAAA,CAAA,EAClB,IAAA,eAAA,EACD,IAAA,uBAAA,CAAA,EAC4C,IAAA,8BAAA,CAAA,EACR,IAAA,iBAAA;AAC3B,QAAA,iBAAA,EAAA;AAA8C,QAAA,uBAAA,EAAkB;AAEpF,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,OAAA,EAAA,EACW,IAAA,OAAA,EAAA,EACwC,IAAA,SAAA,EAAA;AACjC,QAAA,iBAAA,EAAA;AAAmD,QAAA,uBAAA;AACnF,QAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,QAAA,oBAAA,IAAA,SAAA,EAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,UAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,iBAAS,IAAA,yBAAA;QAA0B,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA,EAAS,EACrF;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,iBAAA,IAAA,QAAA;AACF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,OAAA,EAAA;AAErB,QAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AAKF,QAAA,uBAAA,EAAM,EACF,EACc,EACR,EACZ,EACF,EACF,EACF,EACF;;;AAzCgB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,QAAA;AAQY,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,oBAAA,UAAA,GAAA;AAKkB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,cAAA;AAEF,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,aAAA;AAIS,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,oBAAA,IAAA;AAS+B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA,EAAA;;;;;;6ED7B/E,mBAAiB,EAAA,WAAA,qBAAA,UAAA,2EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEIxB,IAAO,sBAAP,MAAO,qBAAmB;EAQ9B,YAAmB,eAAqC,2BAA6D,QAAc;AAAhH,SAAA,gBAAA;AAAqC,SAAA,4BAAA;AAA6D,SAAA,SAAA;AANrH,SAAA,SAAS;AACT,SAAA,WAAW;AACX,SAAA,uBAAuB;AACvB,SAAA,aAAa;AAIX,QAAI,KAAK,OAAO,IAAI,QAAQ,UAAU,KAAK,IAAI;AAC7C,WAAK,SAAU,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,UAAU,EAAE,CAAC,KAAK,SAAY,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,UAAU,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACtI,WAAK,WAAY,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,QAAQ,EAAE,CAAC,KAAK,SAAY,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,QAAQ,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACpI,WAAK,aAAc,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,cAAc,EAAE,CAAC,KAAK,SAAc,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,cAAc,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAG,SAAQ,KAAM,SAAU;AAC3K,WAAK,uBAAuB,KAAK,YAAY,cAAc,KAAK,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW,IAAK;AACvG,YAAM,eAAe,SAAS,cAAc,QAAQ;AACpD,mBAAa,OAAO;AACpB,mBAAa,KAAK;AAClB,mBAAa,MAAM,+CAA+C,KAAK,SAAS,WAAW,KAAK;AAChG,eAAS,KAAK,YAAY,YAAY;IACxC,OACK;AACH,YAAM,eAAe,SAAS,cAAc,QAAQ;AACpD,mBAAa,OAAO;AACpB,mBAAa,KAAK;AAClB,mBAAa,MAAM,+CAA+C,KAAK,SAAS,WAAW,KAAK;AAChG,eAAS,KAAK,YAAY,YAAY;IACxC;EASF;EAEA,WAAQ;AACN,eAAW,MAAK;AAEd,QAAE,GAAG,EAAE,MAAM,KAAK,WAAU,CAAE;AAC9B,QAAE,GAAG,EAAE,KAAI;IACb,GAAG,GAAI;EACT;EAEO,aAAU;AACf,QAAI,OAAO,UAAU,aAAa;AAChC,YAAM,SAAS;QACb,WAAY,KAAK,wBAAwB,QAAQ,KAAK,cAAc,QAAS,yBAAyB;;QAEtG,aAAa;QACb,MAAM,KAAK;QACX,aAAa;QACb,SAAS,KAAK;QACd,gBAAgB,KAAK;;QAErB,eAAe,KAAK;;;;AAItB,YAAM,SAAS,cAAc,MAAM;IAErC;EACF;;EAGO,aAAa,UAAQ;EAE5B;;EAEO,UAAU,UAAQ;EAEzB;EAEO,gBAAgB,UAAQ;AAC7B,QAAI,SAAS,UAAU,+BAA+B;AACpD,WAAK,cAAc,QAAQ;IAC7B;EACF;EAEO,cAAc,UAAQ;AAC3B,SAAK,cAAc,IAAI,mBAAkB;AACzC,SAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,SAAK,YAAY,YAAY,SAAS,QAAQ;AAC9C,SAAK,YAAY,WAAW,SAAS,QAAQ;AAC7C,SAAK,YAAY,SAAS,SAAS,KAAK;AAQxC,SAAK,YAAY,WAAW,SAAS,SAAS;AAC9C,SAAK,YAAY,QAAQ,SAAS,QAAQ;AAE1C,SAAK,YAAY,aAAa,YAAY;AAK1C,QAAI,KAAK,YAAY,YAAY,QAAW;AAC1C,WAAK,cAAc,mBAAmB,KAAK,WAAW,EAAE,UAAU;QAChE,MAAM,MAAK;AACT,eAAK,gBAAgB,oCAAoC;QAC3D;QAAG,OAAO,MAAK;AACb,eAAK,gBAAgB,mCAAmC;QAC1D;OACD;IACH;EACF;EAEO,gBAAgB,KAAG;AACxB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,MAAM,IAAI,MAAM,MAAM,KAAK,EACxE,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,OAAO,cAAc,QAAQ;MACpC;IACF,CAAC,EACA,MAAM,MAAM,QAAQ,IAAI,yGAAyG,CAAC;EACvI;;;uCAxHW,sBAAmB,4BAAA,aAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,MAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,MAAA,OAAA,UAAA,IAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACfhC,QAAA,oBAAA,GAAA,OAAA,CAAA;AAGA,QAAA,yBAAA,GAAA,KAAA,CAAA;AAAY,QAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,iBAAS,IAAA,WAAA;QAAY,CAAA;AAAS,QAAA,uBAAA;;;;;;6EDY7B,qBAAmB,EAAA,WAAA,uBAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEThC,IAAI;AAOE,IAAO,4BAAP,MAAO,2BAAyB;EAsCpC,YACS,eACA,cACA,eACA,2BACC,cACA,UAAmB;AALpB,SAAA,gBAAA;AACA,SAAA,eAAA;AACA,SAAA,gBAAA;AACA,SAAA,4BAAA;AACC,SAAA,eAAA;AACA,SAAA,WAAA;AAzCV,SAAA,SAAS,aAAa,UAAU,SAAY,aAAa,SAAS;AAClE,SAAA,WAAW,aAAa,YAAY,SAAY,aAAa,WAAW;AACxE,SAAA,uBACE,aAAa,YAAY,SACrB,aAAa,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW,IAC/C;AAEN,SAAA,SAAS;MACP,WACE,KAAK,wBAAwB,OACzB,yBACA;;;MAGN,aAAa;MACb,aAAa;MACb,MAAM,KAAK;MACX,SAAS,KAAK;MACd,gBAAgB,KAAK;;MAErB,eAAe,KAAK;;AAGtB,SAAA,oBAAoB;MAClB,WAAW;;;MAGX,aAAa;MACb,aAAa;MACb,SAAS,KAAK;MACd,gBAAgB,KAAK;;MAErB,eAAe,KAAK;;AAYpB,cAAU;EACZ;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,eAAc;IAClC,CAAC;EACL;EAEA,WAAQ;AACN,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,eAAc;IAClC;AAEA,UAAM,gBAAgB,KAAK,aAAa,aACtC,KAAK,UACL,+CACA,KAAK,SACL,WACA,KAAK,QAAQ;AAEf,kBAAc,SAAS,MAAK;AAC1B,WAAK,WAAU;IACjB;AACA,kBAAc,UAAU,MAAK;AAC3B,cAAQ,IAAI,uCAAuC;IACrD;EACF;EAEO,aAAU;AACf,QAAI,OAAO,UAAU,aAAa;AAChC,YAAM,SAAS,cAAc,KAAK,MAAM;IAC1C;EACF;EAEO,aAAa,UAAQ;AAC1B,QAAI,QAAQ,UAAU;AACpB,cAAQ,QAAQ,SAAS,YAAY;EACzC;EAEO,UAAU,UAAQ;AACvB,YAAQ,SAAS,SAAS;AAC1B,QACE,QAAQ,UAAU,iCAClB,QAAQ,UAAU,qCAClB;AACA,cAAQ,cAAc,IAAI,mBAAkB;AAC5C,UAAI,SAAS,SAAS,uBAAuB,KAAK;AAChD,gBAAQ,YAAY,UAClB,SAAS,SAAS,uBAAuB;AAC7C,UAAI,SAAS,SAAS,iBAAiB,KAAK;AAC1C,gBAAQ,YAAY,eAAe,SAAS,SAAS,iBAAiB;AACxE,cAAQ,YAAY,YAAY,QAAQ,aAAa;AACrD,cAAQ,YAAY,aAAa,QAAQ,aAAa;IACxD,OAAO;AACL,cAAQ,cAAc,IAAI,mBAAkB;IAC9C;EACF;EAEO,gBAAgB,UAAQ;AAC7B,QACE,SAAS,UAAU,iCACnB,SAAS,UAAU,qCACnB;AACA,cAAQ,cAAc,QAAQ;IAChC;EACF;EAEO,cAAc,UAAQ;AAC3B,SAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,SAAK,YAAY,YAAY,SAAS,QAAQ;AAC9C,SAAK,YAAY,WAAW,SAAS,QAAQ;AAC7C,SAAK,YAAY,SAAS,SAAS,KAAK;AAExC,SAAK,YAAY,eAAe,SAAS,KAAK;AAC9C,SAAK,YAAY,eAAe,SAAS,KAAK;AAC9C,SAAK,YAAY,OAAO,SAAS,QAAQ;AACzC,SAAK,YAAY,QAAQ,SAAS,KAAK;AACvC,SAAK,YAAY,UAAU,SAAS,QAAQ;AAE5C,SAAK,YAAY,WAAW,SAAS,SAAS;AAC9C,SAAK,YAAY,QAAQ,SAAS,QAAQ;AAE1C,SAAK,YAAY,aAAa,KAAK,cAAc;AACjD,SAAK,YAAY,UAAU,IAAI,KAAK,cAAc;AAClD,SAAK,YAAY,cAAc,IAAI,KAAK,cAAc;AAEtD,QAAI,KAAK,YAAY,YAAY,QAAW;AAC1C,WAAK,cAAc,mBAAmB,KAAK,WAAW,EAAE,UAAU;QACjE,MAAK,MAAK;AAGP,eAAK,cAAc,WAAW,KAAK,YAAY;AAC/C,uBAAa,QAAQ,YAAY,KAAK,cAAc,QAAQ;AAC5D,eAAK,cAAc,+BACjB,KAAK,cAAc,oBAAoB;AAIzC,eAAK,gBACH,KAAK,aAAa,cAAc,kBAAkB;QAEtD;QACA,OAAM,MAAK;AACT,eAAK,gBACH,KAAK,aAAa,cAAc,qBAAqB,GAAG;QAE5D;OACH;IACD;EACF;EAEO,gBAAgB,KAAG;AACxB,SAAK,0BACF,QACC,IACA,KACA,KAAK,aAAa,cAAc,IAChC,IACA,MACA,MACA,KAAK,EAEN,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;MAEf;IACF,CAAC,EACA,MAAM,MACL,QAAQ,IACN,yGAAyG,CAC1G;EAEP;;;uCAzLW,4BAAyB,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,mBAAA,GAAA,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,WAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,QAAA,QAAA,MAAA,GAAA,CAAA,YAAA,IAAA,cAAA,QAAA,YAAA,EAAA,GAAA,CAAA,MAAA,kBAAA,GAAA,UAAA,GAAA,CAAA,MAAA,OAAA,UAAA,IAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACbtC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuC,GAAA,KAAA;AAEnC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,CAAA,EACuB,GAAA,eAAA,EACrB,GAAA,uBAAA,CAAA;AAEX,QAAA,oBAAA,IAAA,OAAA,CAAA;AAEF,QAAA,uBAAA,EAAsB,EACR,EACZ,EACF,EACF,EACF;AAER,QAAA,yBAAA,IAAA,KAAA,CAAA;AAAY,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,iBAAS,IAAA,WAAA;QAAY,CAAA;AAAS,QAAA,uBAAA;;;;;;6EDX7B,2BAAyB,EAAA,WAAA,6BAAA,UAAA,gGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AETtC,IAAIC;AAOE,IAAO,+BAAP,MAAO,8BAA4B;EAgBvC,YAAmB,eACT,cACA,UAAmB;AAFV,SAAA,gBAAA;AACT,SAAA,eAAA;AACA,SAAA,WAAA;AAjBV,SAAA,SAAS,aAAa,UAAU,SAAY,aAAa,SAAS;AAClE,SAAA,WAAW,aAAa,YAAY,SAAY,aAAa,WAAW;AACxE,SAAA,uBAAuB,aAAa,YAAY,SAAY,aAAa,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW,IAAK;AAEhH,SAAA,SAAS;MACP,WACE,KAAK,wBAAwB,OACzB,yBACA;MACN,MAAM,KAAK;MACX,aAAa;MACb,aAAa;MACb,SAAS,KAAK;;AAOd,IAAAA,WAAU;EACZ;EAEA,WAAQ;AACN,UAAM,gBAAgB,KAAK,aAAa,aACtC,KAAK,UACL,+CACA,KAAK,SACL,WACA,KAAK,SAAS,YAAW,CAAE;AAE7B,kBAAc,SAAS,MAAK;AAC1B,WAAK,WAAU;IACjB;AACA,kBAAc,UAAU,MAAK;AAC3B,cAAQ,IAAI,uCAAuC;IACrD;EACF;EAEO,aAAU;AACf,QAAI,OAAO,UAAU,aAAa;AAChC,YAAM,SAAS,cAAc,KAAK,MAAM;IAC1C;EACF;EAEO,aAAa,UAAQ;AAC1B,IAAAA,SAAQ,QAAQ,SAAS,YAAY;EACvC;;;uCA/CW,+BAA4B,4BAAA,aAAA,GAAA,4BAAA,mBAAA,GAAA,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAA5B,+BAA4B,WAAA,CAAA,CAAA,2BAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,GAAA,CAAA,MAAA,WAAA,GAAA,YAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA,QAAA,QAAA,MAAA,GAAA,CAAA,YAAA,IAAA,cAAA,QAAA,YAAA,EAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,CAAA,MAAA,OAAA,UAAA,IAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACXzC,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqC,GAAA,KAAA;AAEjC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmB,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,CAAA,EACuB,GAAA,eAAA,EACrB,GAAA,uBAAA,CAAA;AAEX,QAAA,oBAAA,IAAA,OAAA,CAAA;AAEF,QAAA,uBAAA,EAAsB,EACR,EACZ,EACF,EACF,EACF;AAER,QAAA,yBAAA,IAAA,KAAA,CAAA;AAAY,QAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,iBAAS,IAAA,WAAA;QAAY,CAAA;AAAS,QAAA,uBAAA;;;;;;6EDb7B,8BAA4B,EAAA,WAAA,gCAAA,UAAA,sGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEJnC,IAAO,eAAP,MAAO,cAAY;EAEvB,YAAmB,QAAc;AAAd,SAAA,SAAA;EAEnB;EAEA,WAAQ;AACN,aAAS,MAAM,SAAS,EAAE,OAAM;EAClC;;;uCARW,eAAY,4BAAA,MAAA,CAAA;IAAA;EAAA;;yEAAZ,eAAY,WAAA,CAAA,CAAA,SAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,sBAAA,QAAA,GAAA,CAAA,MAAA,WAAA,UAAA,QAAA,UAAA,gDAAA,MAAA,WAAA,gBAAA,OAAA,GAAA,aAAA,GAAA,CAAA,GAAA,oBAAA,MAAA,GAAA,CAAA,cAAA,WAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,QAAA,WAAA,SAAA,UAAA,CAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACPzB,QAAA,yBAAA,GAAA,QAAA,GAAA,CAAA,EAC+D,GAAA,OAAA,CAAA,EAC1B,GAAA,kBAAA,CAAA;AAE/B,QAAA,oBAAA,GAAA,SAAA,CAAA;AACF,QAAA,uBAAA,EAAiB,EACb;;;;;;6EDCK,cAAY,EAAA,WAAA,gBAAA,UAAA,+CAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;AGkBX,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAe,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAmC,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAI;;;;AAAtE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,GAAA;AAAkC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,QAAA,uBAAA;;;;;;AAQpC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAqD,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAAe,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;;;;;;AAChG,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AACzD,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;;;;;;AACzB,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAe,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;;;;;;AACvF,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,CAAA;AAAc,IAAA,iBAAA,GAAA,IAAA;AAAE,IAAA,uBAAA;;;;;;AAnC1F,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuC,GAAA,OAAA,CAAA,EACO,GAAA,OAAA,CAAA,EAEnB,GAAA,OAAA,CAAA;AAGnB,IAAA,oBAAA,GAAA,OAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAoB,IAAA,iBAAA,GAAA,iEAAA;AAA+D,IAAA,yBAAA,GAAA,MAAA,EAAM,GAAA,YAAA,EAAA;AAG2F,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA,EAAW,EAAO;AAG1M,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,QAAA,EAAA,EAC6B,IAAA,kBAAA,EAAA,EAC4B,IAAA,SAAA,EAAA;AAEvE,IAAA,qBAAA,SAAA,SAAA,gEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,OAAA,OAAA,KAAA,CAA6B;IAAA,CAAA;AADxC,IAAA,uBAAA,EACqD,EACtC;AAGnB,IAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,OAAA,EAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,UAAA,EAAA,EAA0F,IAAA,mDAAA,GAAA,GAAA,UAAA,EAAA,EAEzE,IAAA,mDAAA,GAAA,GAAA,UAAA,EAAA,EACiE,IAAA,mDAAA,GAAA,GAAA,UAAA,EAAA;AAEpF,IAAA,uBAAA,EAAM,EAEF,EACF;;;;AAxB2B,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,OAAA;AAOY,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AAIrC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,GAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,GAAA;AAE4E,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,IAAA;AAE3E,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,MAAA;AACmE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,IAAA;AACD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,GAAA;;;;;AA0BrE,IAAA,yBAAA,GAAA,cAAA,EAAA;AAA6D,IAAA,iBAAA,CAAA;AAEzD,IAAA,uBAAA;;;;AAFsC,IAAA,qBAAA,SAAA,SAAA,EAAA;AAAmB,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,MAAA;;;;;;AAhBvE,IAAA,yBAAA,GAAA,KAAA,EAAuB,GAAA,QAAA,EAAA,EACW,GAAA,OAAA,EAAA,EACT,GAAA,IAAA;AACf,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA,EAAK;AAElB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgE,GAAA,kBAAA,EAAA,EAKa,GAAA,WAAA;AAC9D,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;AAChB,IAAA,yBAAA,GAAA,cAAA,EAAA,EAAyD,IAAA,cAAA,EAAA;AAErD,IAAA,iBAAA,IAAA,UAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,cAAA,EAAA;AAGF,IAAA,uBAAA,EAAa;AAEf,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AACtB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACrB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACjB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AAChB,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAoD,IAAA,2BAAA,iBAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,OAAA,MAAA,MAAA,OAAA,QAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAApD,IAAA,uBAAA,EAA4F;AAE9F,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AACpB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAA2E,IAAA,WAAA;AAC9D,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA;AAC5B,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,UAAA,EAAA;AACS,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC5D,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA0B,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,kBAAA,CAAmB;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAS,EAC7E,EACF,EAED;;;;AAlDD,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,WAAA;AAegC,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,OAAA;AAmBoB,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,OAAA,KAAA;;;ADzE1D,IAAO,2BAAP,MAAO,0BAAwB;EAoBnC,YAAoB,IAA+B,aAAiC,cAAmC,QAAwB,UAAkC,eAAqC,2BAAoD;AAAtP,SAAA,KAAA;AAA+B,SAAA,cAAA;AAAiC,SAAA,eAAA;AAAmC,SAAA,SAAA;AAAwB,SAAA,WAAA;AAAkC,SAAA,gBAAA;AAAqC,SAAA,4BAAA;AAhB/M,SAAA,WAAW;AACX,SAAA,YAAY;AACZ,SAAA,MAAM;AACN,SAAA,QAAQ;AACR,SAAA,MAAM;AACN,SAAA,OAAO;AACP,SAAA,OAAO;AACP,SAAA,SAAS;AAET,SAAA,UAAiB,CAAA;AACjB,SAAA,WAAkB,CAAA;AAOvB,SAAK,WAAU;AACf,SAAK,kBAAiB;AACtB,SAAK,UAAU,YAAY,SAAS,SAAS,WAAW,aAAa,aAAa,SAAS,OAAO,yBAAyB,KAAK,aAAa;EAE/I;EAEA,WAAQ;AACN,SAAK,cAAc,kBAAkB,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,IAAI,EAAE,UAAU,UAAO;AAC/H,WAAK,UAAU,KAAK,aAAa;AACjC,WAAK,WAAW,KAAK,aAAa;IACpC,CAAC;EACH;EAEA,aAAU;AACR,SAAK,UAAU,KAAK,GAAG,MAAM;MAC3B,OAAO,CAAC,IAAI,WAAW,KAAK;KAC7B;EACH;EAEA,oBAAiB;AACf,SAAK,cAAc,KAAK,GAAG,MAAM;MAC/B,OAAO,CAAC,EAAE;MACV,WAAW,CAAC,IAAI,WAAW,QAAQ;MACnC,UAAU,CAAC,IAAI,WAAW,QAAQ;MAClC,QAAQ,CAAC,EAAE;MACX,OAAO,CAAC,KAAK,KAAK;MAClB,QAAQ,CAAC,IAAI,WAAW,QAAQ;MAChC,eAAe,CAAC,IAAI,WAAW,QAAQ;MACvC,UAAU,CAAC,KAAK,QAAQ;KACzB;EACH;EAEO,SAAS,KAAG;AACjB,QAAI,IAAI,MAAM,KAAK,GAAG;AACpB,WAAK,QAAQ,SAAS,MAAM,EAAE,SAAS,IAAI,QAAQ,OAAO,EAAE,CAAC;IAC/D;EACF;EAGO,kBAAe;AACpB,SAAK,QAAQ,KAAK,QAAQ,SAAS,OAAO,EAAE;AAC5C,SAAK,YAAY,MAAM,KAAK,QAAQ;AACpC,QAAI,KAAK,QAAQ,UAAU,SAAS;AAClC,WAAK,YAAY,WAAW,EAAE,OAAO,KAAK,QAAQ,SAAS,OAAO,EAAE,MAAK,CAAE;AAC3E,WAAK,YAAY,UAAS,EAAG,UAAU,UAAO;AAC5C,YAAI,KAAK,gBAAgB,eAAe;AACtC,eAAK,WAAW;AAChB,eAAK,YAAY;QACnB,WAAW,KAAK,gBAAgB,aAAa;AAC3C,eAAK,SAAS;AACd,eAAK,OAAO;AACZ,eAAK,OAAO;AACZ,eAAK,QAAQ;QACf,WAAW,KAAK,gBAAgB,YAAY;AAC1C,eAAK,SAAS;AACd,eAAK,OAAO;AACZ,eAAK,MAAM;AACX,eAAK,aAAa;AAClB,eAAK,MAAM;QAEb,WAAW,KAAK,aAAa,SAAS,IAAI;AAExC,eAAK,WAAW,KAAK;AACrB,eAAK,WAAW;AAChB,eAAK,YAAY;QACnB;MAEF,CAAC;IACH,OACK;AACH,UAAI,CAAC,KAAK,QAAQ,SAAS,OAAO,EAAE,SAAS,KAAK,QAAQ,SAAS,OAAO,EAAE,SAAS,QAAQ,KAAK,QAAQ,SAAS,OAAO,EAAE,SAAS,IAAI;AACvI,aAAK,MAAM,KAAK,aAAa,cAAc;MAC7C,OACK;AACH,aAAK,MAAM,KAAK,aAAa,cAAc;MAC7C;IACF;EAEF;EAEO,WAAQ;AACb,SAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;EACjC;EAEO,cAAW;AAChB,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,QAAQ,MAAK;EACpB;EAEO,UAAO;AACZ,SAAK,MAAM;AACX,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,QAAQ,MAAK;EACpB;EAEO,aAAU;AACf,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,QAAQ,MAAK;EACpB;EAEO,oBAAiB;AACtB,SAAK,SAAS,KAAK,YAAY,SAAS,QAAQ,EAAE;AAElD,SAAK,YAAY,WAAW,EAAE,UAAU,KAAK,SAAQ,CAAE;AACvD,QAAI,KAAK,YAAY,UAAU,SAAS;AACtC,UAAI,KAAK,WAAW,KAAK,YAAY,SAAS,eAAe,EAAE,OAAO;AAGpE,aAAK,YAAY,qBAAqB,KAAK,YAAY,KAAK,EAAE,UAAU,MAAK;AAC3E,eAAK,0BAA0B,QAAQ,IAAI,gCAAgC,KAAK,aAAa,eAAe,IAAI,KAAK,aAAa,eAAe,QAAQ,MAAM,MAAM,KAAK,EACvK,KAAK,CAAC,cAAa;AAClB,gBAAI,WAAW;AACb,mBAAK,OAAO,cAAc,QAAQ;AAClC,mBAAK,YAAY,MAAK;YACxB;UACF,CAAC;QACL,CAAC;MACH;IACF;EAEF;;;uCArJW,2BAAwB,4BAAA,kBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,yBAAA,CAAA;IAAA;EAAA;;yEAAxB,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,SAAA,YAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,cAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,YAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,cAAA,oUAAA,GAAA,UAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,SAAA,eAAA,UAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,SAAA,4BAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,QAAA,SAAA,GAAA,CAAA,GAAA,eAAA,QAAA,YAAA,YAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,SAAA,aAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,SAAA,QAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,UAAA,UAAA,GAAA,MAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,QAAA,QAAA,GAAA,OAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,eAAA,UAAA,yBAAA,WAAA,GAAA,CAAA,cAAA,WAAA,cAAA,UAAA,GAAA,QAAA,MAAA,GAAA,CAAA,eAAA,UAAA,mBAAA,OAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,QAAA,eAAA,oBAAA,YAAA,IAAA,mBAAA,WAAA,GAAA,CAAA,QAAA,QAAA,eAAA,mBAAA,YAAA,IAAA,mBAAA,UAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,UAAA,eAAA,cAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,SAAA,YAAA,IAAA,YAAA,IAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,QAAA,YAAA,eAAA,kBAAA,YAAA,IAAA,mBAAA,QAAA,GAAA,CAAA,QAAA,YAAA,YAAA,IAAA,eAAA,oBAAA,mBAAA,eAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,aAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACVrC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAyB,GAAA,OAAA,CAAA,EACA,GAAA,OAAA,CAAA;AAEnB,QAAA,qBAAA,GAAA,yCAAA,IAAA,GAAA,OAAA,CAAA;AA2CF,QAAA,uBAAA;AAEA,QAAA,qBAAA,GAAA,yCAAA,IAAA,GAAA,OAAA,CAAA;AAwDF,QAAA,uBAAA,EAAM;;;AArGqB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,QAAA;AA6CnB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,SAAA;;;;;;6EDtCG,0BAAwB,EAAA,WAAA,4BAAA,UAAA,yEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEG/B,IAAO,0BAAP,MAAO,yBAAuB;EAKlC,YAAmB,QAAuB,eAAqC,eAAsC,aAAiC,iBAA0CC,WACvL,2BAA6D,cAA0B;AAD7E,SAAA,SAAA;AAAuB,SAAA,gBAAA;AAAqC,SAAA,gBAAA;AAAsC,SAAA,cAAA;AAAiC,SAAA,kBAAA;AAA0C,SAAA,WAAAA;AACvL,SAAA,4BAAA;AAA6D,SAAA,eAAA;AAFtE,SAAA,WAAmB;AAIjB,QAAI,KAAK,OAAO,IAAI,QAAQ,OAAO,KAAK,IAAI;AAC1C,YAAM,SAAS,KAAK,OAAO,IAAI,KAAI,EAAG,MAAM,OAAO;AACnD,UAAI,OAAO,CAAC,KAAK,QAAQ;AACvB,aAAK,gBAAgB,OAAM;AAC3B,aAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;AAC/B;MACF;AACA,UAAI,OAAO,CAAC,KAAK,UAAa,OAAO,CAAC,KAAK,QAAQ,OAAO,CAAC,KAAK;AAC9D,aAAK,oBAAoB,OAAO,CAAC,CAAC;IACtC,OACK;AACH,cAAQ,IAAI,2BAA2B;AAEvC,WAAK,qBAAoB;IAE3B;EACF;EAEO,oBAAoB,MAAI;AAC7B,iBAAa,WAAW,sBAAsB;AAC9C,SAAK,cAAc,WAAW,IAAI,EAAE,UAAU,aAAU;AACtD,UAAG,QAAQ,cAAc,KAAI;AAC7B,cAAM,UAAU,KAAK,cAAc,QAAQ,QAAQ,YAAY;AAC/D,qBAAa,QAAQ,qBAAqB,OAAO;AACjD,qBAAa,WAAW,aAAa;AACrC,aAAK,YAAY,SAAS,sBAAuB,QAAQ,MAAM,UAAU,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,UAAU,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC1I,cAAM,kBAAuB,QAAQ,MAAM,WAAW,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,WAAW,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI,aAAa,QAAQ,KAAK,EAAE;AACpJ,cAAM,cAAe,QAAQ,MAAM,gBAAgB,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,gBAAgB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC1H,YAAI,eAAgB,QAAQ,MAAM,eAAe,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACvH,cAAM,WAAY,QAAQ,MAAM,WAAW,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,WAAW,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC7G,cAAM,kBAAmB,QAAQ,MAAM,kBAAkB,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,kBAAkB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAClI,cAAM,iBAAkB,QAAQ,MAAM,iBAAiB,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,iBAAiB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC/H,cAAM,iBAAkB,QAAQ,MAAM,aAAa,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,aAAa,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACvH,cAAM,QAAS,QAAQ,MAAM,QAAQ,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,QAAQ,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACpG,cAAM,SAAU,QAAQ,MAAM,WAAW,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,WAAW,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC3G,qBAAa,QAAQ,UAAU,MAAM;AACrC,aAAK,WAAW,QAAQ,MAAM,gBAAgB,EAAE,CAAC,KAAK,SAAY,KAAK,MAAM,QAAQ,MAAM,gBAAgB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,IAAI;AACjI,cAAM,eAAgB,QAAQ,MAAM,eAAe,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACzH,cAAM,qBAAqB,QAAQ,MAAM,aAAa,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,aAAa,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI,KAAK,eAAc,GAAI,QAAQ,KAAK,EAAE;AAChK,qBAAa,QAAQ,qBAAqB,iBAAiB;AAC3D,cAAM,mBAAoB,QAAQ,MAAM,mBAAmB,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,mBAAmB,EAAE,CAAC,IAAI,KAAK,YAAW;AACvI,qBAAa,QAAQ,mBAAmB,gBAAgB;AACxD,cAAM,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC,IAAI,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC,IAAI;AACpI,cAAM,WAAY,QAAQ,MAAM,uBAAuB,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,uBAAuB,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACrI,aAAK,YAAY,QAAQ,iBAAiB,IAAI;AAC9C,aAAK,YAAY,QAAQ,gBAAgB,IAAI;AAC7C,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,qBAAa,QAAQ,mBAAmB,eAAe;AACvD,qBAAa,QAAQ,kBAAkB,cAAc;AAErD,cAAM,mBAAoB,EAAE,kBAAkB,iBAAiB,kBAAkB,gBAAiB,OAAO;AACzG,YAAI,gBAAgB;AAClB,yBAAgB,QAAQ,MAAM,eAAe,EAAE,CAAC,KAAK,SAAY,QAAQ,MAAM,eAAe,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACrH,YAAI,eAAe,QAAQ,eAAe,IAAI;AAC5C,eAAK,WAAW,IAAI,SAAQ;AAC5B,eAAK,SAAS,gBAAgB;AAE9B,eAAK,SAAS,aAAc,QAAQ,MAAM,aAAa,EAAE,CAAC,KAAK,SAAY,SAAS,QAAQ,MAAM,aAAa,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,IAAI,YAAY;AACjJ,eAAK,SAAS,mBAAmB,kBAAkB,gBAAgB,WAAW;AAC9E,cAAI,kBAAkB,gBAAgB,kBAAkB;AACtD,oBAAQ,IAAI,UAAU;AACtB,iBAAK,SAAS,mBAAmB;UACnC;AAEA,eAAK,SAAS,eAAe;AAC7B,eAAK,SAAS,cAAc;AAC5B,eAAK,cAAc,aAAa,KAAK,QAAQ,EAAE,UAAU,UAAO;AAE9D,iBAAK,YAAY,QAAQ,cAAc;AACvC,iBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,gBAAI,gBAAgB;AAClB,mBAAK,eAAe;AACtB,gBAAI,oBAAoB,KAAK;AAC3B,mBAAK,WAAW;AAClB,iBAAK,cAAc,eAAe,IAAI;AAEtC,kBAAM,WAAW,KAAK,MAAM,aAAa,WAAW;AACpD,gBAAI,iBAAiB;AACnB,mBAAK,cAAc,gBAAgB,gBAAgB;AACnD,mBAAK,YAAY,QAAQ,YAAY,cAAc,IAAI,gBAAgB;AACvE,mBAAK,YAAY,QAAQ,YAAY,UAAU,IAAI,gBAAgB;AACnE,mBAAK,YAAY,QAAQ,YAAY,sBAAsB,IAAK,gBAAgB,uBAAuB,OAAO;AAC9G,mBAAK,YAAY,UAAU,UAAU,gBAAgB;AACrD,mBAAK,YAAY,QAAQ,YAAY,gBAAgB,IAAK,gBAAgB,uBAAuB,OAAO;AACxG,uBAAS,eAAe,gBAAgB;AACxC,uBAAS,WAAW,gBAAgB;AAEpC,2BAAa,QAAQ,eAAe,KAAK,UAAU,QAAQ,CAAC;AAC5D,mBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,mBAAK,cAAc,eAAe,gBAAgB;AAClD,mBAAK,cAAc,uBAAuB,gBAAgB;AAC1D,2BAAa,QAAQ,gBAAgB,gBAAgB,YAAY;AAEjE,2BAAa,cAAc,IAAI,gBAAgB;AAC/C,mBAAK,gBAAgB,CAAC;AACtB,kBAAI,eAAe,SAAS,iBAAiB,KAAK,GAAG;AAEnD,qBAAK,gBAAgB,YAAY,KAAK,cAAc,YAAY,KAAK,YAAY,KAAK,YAAY,KAAK;cACzG,OAAO;AAEL,6BAAa,QAAQ,cAAc,GAAG;AACtC,qBAAK,eAAe,KAAK,MAAM,gBAAgB,CAAC;cAClD;YACF;AACA,gBAAI,oBAAoB,KAAK,kBAAkB;AAC7C,mBAAK,cAAc,gBAAgB;AACnC,mBAAK,YAAY,QAAQ,YAAY,UAAU,IAAI;AACnD,uBAAS,WAAW;YACtB;AACA,gBAAI,KAAK,cAAc,YAAY,WAAW,KAAK,cAAc,YAAY,cAAc;AACzF,2BAAa,QAAQ,cAAc,KAAK,UAAU;AAClD,2BAAa,QAAQ,iBAAiB,KAAK,SAAS;AACpD,mBAAK,aAAa,mBAAoB,KAAK,cAAc,UAAa,KAAK,cAAc,QAAQ,KAAK,cAAc,MAAM,KAAK,cAAc,MAAM,SAAS,KAAK,UAAU,IAAI,YAAY;AAC3L,mBAAK,aAAa,gBAAgB,KAAK,aAAa,UAAa,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,SAAS,KAAK,SAAS,IAAI,WAAW;AACxJ,mBAAK,gBAAgB,YAAY,KAAK,cAAc,YAAY,KAAK,YAAY,KAAK,WAAW,KAAK;AACtG,mBAAK,UAAS;AACd,mBAAK,gBAAgB,KAAK,aAAa,gBAAgB;YACzD;AACA,gBAAI,eAAe,QAAQ,cAAc,MAAM,IAAI;AACjD,mBAAK,YAAY,QAAQ,YAAY,sBAAsB,IAAK,WAAW,OAAO;AAClF,mBAAK,YAAY,QAAQ,YAAY,gBAAgB,IAAK,WAAW,OAAO;AAC5E,mBAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,2BAAa,QAAQ,wBAAwB,GAAG;YAClD;AACA,gBAAI,eAAe,SAAS,iBAAiB,KAAK;AAChD,mBAAK,OAAO,cAAc,cAAc;AAC1C,iBAAK,YAAY,SAAS,uBAAuB;AACjD,iBAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;UACvD,GAAG,WAAQ;AACT,oBAAQ,IAAI,KAAK,UAAU,iCAAiC,KAAK,CAAC;AAElE,YAAC,KAAK,WACL,KAAK,gBAAgB,OAAO,UAAU,IAAG,KAAK,gBAAgB,OAAM;UACvE,CAAC;QACH;MACF,OAAK;AACF,aAAK,qBAAoB;MAG5B;IACA,GAAG,WAAQ;AACT,cAAQ,IAAI,KAAK,UAAU,oCAAoC,KAAK,CAAC;AACrE,WAAK,qBAAoB;IAC3B,CAAC;EACH;EAEA,uBAAoB;AAElB,QAAG,CAAE,cAAc;AAAc,aAAQ,OAAO,SAAS,OAAO,YAAY;AAE5E,IAAC,cAAc,YAAY,gBAAgB,KAAK,cAAc,YAAY,kBAAkB,IACxF,KAAK,gBAAgB,OAAO,UAAU,IAAM,KAAK,gBAAgB,OAAM;EAC7E;EAEA,cAAW;AACT,QAAG,aAAa,iBAAgB;AAC9B,aAAQ,aAAa,QAAQ,iBAAiB;IAChD,OAAK;AACH,aAAO;IACT;EACF;EAEA,iBAAc;AACZ,QAAG,aAAa,iBAAgB;AAC7B,aAAO,aAAa,QAAQ,mBAAmB;IAClD,OAAK;AACF,aAAQ;IACX;EACF;EAEA,eAAe,KAAG;AAChB,UAAM,UAAe;MACnB,kBAAkB;MAClB,kBAAkB;MAClB,gBAAgB;MAChB,kBAAkB;MAClB,UAAU;MACV,OAAO;MACP,cAAc,IAAI;MAClB,UAAU;MACV,UAAU;MACV,eAAe;MACf,kBAAkB;MAClB,eAAe;MACf,YAAY;MACZ,WAAW;MACX,QAAQ;MACR,UAAU;MACV,WAAW,IAAI;MACf,aAAa;MACb,eAAe;MACf,YAAY;MACZ,WAAW;MACX,aAAa;MACb,QAAQ;MACR,UAAU,IAAI;MACd,mBAAmB;MACnB,wBAAwB;MACxB,kBAAkB,IAAI,eAAe,IAAI,eAAe;;AAE1D,SAAK,cAAc,qBAAqB,OAAO,EAAE,UAAU,UAAO;AAChE,UAAI,KAAK,aAAa,wBAAwB,MAAM;AAClD,cAAM,UAAU,KAAK,aAAa,qBAAqB,CAAC;AACxD,aAAK,YAAY,SAAS,eAAe,UAAU;AACnD,cAAM,qBAAqB,KAAK,aAAa,qBAAqB,CAAC,EAAE;AACrE,YAAI;AACJ,YAAI,IAAI,cAAc,YAAY;AAChC,mBAAS,mBAAmB,KAAK,OAAK,EAAE,oBAAoB,IAAI,oBAAoB,EAAE,gBAAgB,IAAI,YAAY;QACxH,OAAO;AACL,mBAAS,mBAAmB,KAAK,OAAK,EAAE,kBAAkB,IAAI,cAAc;QAC9E;AACA,YAAI,QAAQ;AACV,eAAK,YAAY,SAAS,eAAe,aAAa;AACtD,eAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,eAAK,gBAAgB,YAAY,KAAK,cAAc,YAAY,GAAG,IAAI,KAAK;AAC5E,eAAK,OAAO,cAAc,iBAAiB;QAC7C,OAAO;AACL,eAAK,WAAU;QACjB;MACF,OAAO;AACL,aAAK,WAAU;MACjB;IAEF,CAAC;EACH;EAEA,aAAU;AACR,SAAK,0BAA0B,WAAW,IAAI,oBAAoB,MAAM,UAAU,MAAM,MAAM,KAAK,EAChG,KAAK,CAAC,cAAa;AAClB,UAAI,WAAW;AACb,aAAK,cAAc,oBAAmB;MACxC;IACF,CAAC;EAEL;EAEA,YAAS;AACP,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,QAAI,QAAQ;AACV,WAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,SAAM;AAC7D,aAAK,YAAY,QAAQ,qBAAqB,IAAI;AAClD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;MACrD,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH;EACF;EAEO,gBAAgB,cAAY;AAEjC,SAAK,aAAa,gBAAgB,MAAM,cAAc,IAAI,EAAE,UAAU,UAAO;AAC3E,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,YAAY,QAAQ,SAAS,KAAK,aAAa;IACtD,CAAC;EACH;;;uCAzQW,0BAAuB,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACbpC,QAAA,yBAAA,GAAA,GAAA;AAAG,QAAA,iBAAA,GAAA,gCAAA;AAA8B,QAAA,uBAAA;;;;;;6EDapB,yBAAuB,EAAA,WAAA,2BAAA,UAAA,uEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGAxB,IAAA,yBAAA,GAAA,KAAA,EAAA,EAA6D,GAAA,QAAA;AAGrD,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAoB,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA+B,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;;;;AAH3D,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,aAAA,IAAA;AAEgB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,YAAA,GAAA;;;;;AAoBZ,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,WAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAsD,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAO;;;;;AADvD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,WAAA,GAAA;AAC2B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,SAAA;;;;;AAI1D,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;;;;AAAtB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,aAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACjD,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAiC,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;;;;;AADpC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,aAAA,GAAA;AACM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,WAAA;;;;;AAIrC,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,WAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAO;;;;;AAD5B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,WAAA,GAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,EAAA;;;;;AAI/B,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;;;;AAAlB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,SAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;;;;;AAD7B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,SAAA,GAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,WAAA;;;;;AAK9B,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;;;;AAAhB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,OAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AAC3C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAO;;;;;AAD3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,OAAA,GAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,SAAA;;;;;AAI9B,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAd,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,KAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;AACzC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA,EAAO;;;;;AAD5B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,KAAA,GAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,UAAA;;;;;AAI9B,IAAA,yBAAA,GAAA,mBAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,UAAA,GAAA;;;;;AACpD,IAAA,yBAAA,GAAA,UAAA,EAAoC,GAAA,QAAA,EAAA;AACL,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AAC9C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA,EAAO;;;;;AADjC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,MAAA,UAAA,GAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,eAAA;;;;;AAIlC,IAAA,oBAAA,GAAA,gBAAA;;;;;;AACA,IAAA,yBAAA,GAAA,WAAA,EAAA;AAA0D,IAAA,qBAAA,SAAA,SAAA,sEAAA;AAAA,YAAA,UAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,CAAe;IAAA,CAAA;AAAE,IAAA,uBAAA;;;;;AAExF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyD,GAAA,GAAA;AAClD,IAAA,iBAAA,CAAA;AAA0C,IAAA,uBAAA,EAAI;;;;AAA9C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,iBAAA,OAAA,MAAA,cAAA,CAAA;;;ADzDjB,IAAO,yBAAP,MAAO,wBAAsB;EAcjC,YACS,QACC,gBACD,eACA,iBACA,eACA,gBACA,cACA,mBACA,aACC,UACA,OAAqB,cAA0B;AAVhD,SAAA,SAAA;AACC,SAAA,iBAAA;AACD,SAAA,gBAAA;AACA,SAAA,kBAAA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACC,SAAA,WAAA;AACA,SAAA,QAAA;AAAqB,SAAA,eAAA;AApBxB,SAAA,mBAAmB,CAAC,aAAa,eAAe,SAAS,eAAe,aAAa,OAAO,gBAAgB;AAC5G,SAAA,aAAa,IAAI,yBAAkB;AAoBxC,SAAK,MAAM,SAAS,gBAAgB;AACpC,SAAK,cAAc,KAAK,YAAY,QAAQ;AAC5C,SAAK,mBAAmB,KAAK,YAAY,gBAAgB;AACzD,SAAK,QAAQ,KAAK,aAAa;AAE/B,SAAK,SAAS,IAAI,WAAU;AAC5B,SAAK,OAAO,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAC9E,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,OAAO,mBAAmB,KAAK;AAEpC,SAAK,eAAe,YAAY,UAAU,MAAK;AAC7C,WAAK,OAAO,aAAa,KAAK,cAAc;AAC5C,WAAK,cAAc,aAAa;AAChC,UAAI,KAAK,YAAY,SAAS,aAAa,WAAW;AACpD,aAAK,OAAO,aAAa,KAAK,YAAY,SAAS,aAAa;MAClE;IAEF,CAAC;EACH;EAEO,OAAO,OAAK;AACjB,SAAK,OAAO,aAAa;AACzB,SAAK,eAAe,KAAK,MAAM;EACjC;EAEO,eAAe,eAAe,aAAa,OAAK;AACrD,QAAI,CAAC,KAAK,OAAO,YAAY;AAC3B;IACF;AAEA,QAAI,KAAK,kBAAkB,KAAK,OAAO,YAAY;AACjD,WAAK,iBAAiB,KAAK,OAAO;AAClC,oBAAc,SAAS;IACzB;AAEA,QAAI,KAAK,OAAO,UAAU,GAAG;AAC3B,WAAK,eAAe,CAAA;IACtB;AACA,kBAAc,yBAAyB;AACvC,kBAAc,YAAY;AAC1B,SAAK,cAAc,gBAAgB,aAAa,EAAE,UAAU,UAAO;AACjE,YAAM,qBAAqB,KAAK,aAAa,cAAc,KAAK,oBAAoB,KAAK,aAAa,WAAW,IAAI,KAAK,aAAa;AAEvI,UAAI,KAAK,OAAO,UAAU,GAAG;AAC3B,YAAI,sBAAsB,QAAQ,mBAAmB,SAAS,GAAG;AAC/D,eAAK,eAAe;QACtB,OAAO;AACL,eAAK,eAAe,CAAA;QACtB;MACF,OAAO;AACL,YAAI,sBAAsB,QAAQ,mBAAmB,SAAS,KAAK,YAAY;AAC7E,eAAK,eAAe,KAAK,aAAa,OAAO,kBAAkB;QACjE;MACF;AAEA,UAAI,sBAAsB,QAAQ,mBAAmB,SAAS,KAAK,KAAK,YAAY;AAClF,aAAK,aAAa;MACpB,OAAO;AACL,aAAK,YAAY,IAAI;MACvB;AACA,WAAK,aAAa,IAAI,yBAAwB,KAAK,YAAY;AAC/D,WAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,WAAK,WAAW,OAAO,KAAK;IAC9B,GAAG,SAAM;AACP,WAAK,WAAW,OAAO,CAAA;AACvB,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EAEH;EAEA,oBAAoB,SAAO;AAEzB,WAAO,QAAQ,OAAO,QAAK;AACzB,UAAI,GAAG;AAAiB,eAAO;IACjC,CAAC;EAEH;EAEO,cAAc,GAAC;AACpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAChC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,WAAK,aAAa;AAClB,WAAK,OAAO;AACZ,WAAK,eAAe,KAAK,QAAQ,IAAI;IACvC;EACF;EAEO,YAAY,QAAM;AACvB,UAAM,YAAY,SAAS,eAAe,eAAe;AACzD,cAAU,YAAY;EACxB;EAEO,cAAW;AAChB,SAAK,OAAO,aAAa;AACzB,SAAK,YAAY,SAAS,aAAa,YAAY;AACnD,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AACrD,SAAK,WAAW,OAAO,CAAA;EACzB;EAEO,WAAW,SAAO;AACvB,SAAK,eAAe,iBAAiB,SAAS,KAAK,QAAQ,KAAK,OAAO,QAAQ,MAAM,MAAM,IAAI;EACjG;EAEA,kBAAe;AACb,QAAI;AACF,WAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,aAAK,aAAa,cAAc,KAAK;AACrC,aAAK,aAAa,sBAAqB;AACvC,aAAK,QAAQ,KAAK,aAAa;MACjC,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH,SAAS,OAAO;AACd,cAAQ,IAAI,KAAK,UAAU,KAAK,CAAC;AACjC,WAAK,cAAc,sBAAqB;IAC1C;AAEA,UAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,iBAAa,MAAM,SAAU,OAAO,cAAc,MAAO;EAC3D;EAEA,iBAAiB,MAAW;AAC1B,WAAO,KAAK,YAAW;AACvB,WAAO,KAAK,CAAC,EAAE,YAAW,IAAI,KAAK,MAAM,CAAC;EAC5C;;;uCA7JW,yBAAsB,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,WAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAYtB,SAAO,CAAA;;;;;;;;AC/CpB,QAAA,yBAAA,GAAA,OAAA,CAAA;AACI,QAAA,oBAAA,GAAA,eAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqC,GAAA,SAAA,EACxB,GAAA,cAAA,CAAA;AACO,QAAA,qBAAA,eAAA,SAAA,kEAAA,QAAA;AAAA,iBAAe,IAAA,OAAA,MAAA;QAAc,CAAA;AAAE,QAAA,uBAAA,EAAa;AAG5D,QAAA,yBAAA,GAAA,WAAA,CAAA,EAAiC,GAAA,KAAA,CAAA;AACA,QAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,iBAAS,IAAA,cAAA,OAAA;QAAsB,CAAA;AAAmB,QAAA,iBAAA,CAAA;AAAc,QAAA,uBAAA;AAC7F,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAgD,QAAA,iBAAA,CAAA;AAAuB,QAAA,uBAAA,EAAO;AAGlF,QAAA,yBAAA,IAAA,WAAA,CAAA;AACI,QAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,CAAA;AAqBA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAwC,IAAA,aAAA,CAAA;AAEhC,QAAA,qBAAA,UAAA,SAAA,6DAAA,QAAA;AAAA,iBAAU,IAAA,cAAA,MAAA;QAAqB,CAAA;AAC/B,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAMvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAMvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAMvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAOvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAMvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAMvD,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,mBAAA,EAAA,EAAmD,IAAA,6CAAA,GAAA,GAAA,YAAA,EAAA;;AAOvD,QAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,kBAAA,EAAA,EAAkE,IAAA,4CAAA,GAAA,GAAA,WAAA,EAAA;AAEtE,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA;AAGJ,QAAA,uBAAA,EAAM,EACA,EAER;;;AAzFiF,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,IAAA;AAC/B,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,aAAA;AAIZ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,OAAA,UAAA;AAsBa,QAAA,oBAAA,CAAA;AAAA,QAAA,sBAAA,YAAA,IAAA,QAAA;AAAlC,QAAA,qBAAA,cAAA,IAAA,UAAA;AAqDU,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAEX,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;;;;;;6EDxD1B,wBAAsB,EAAA,WAAA,0BAAA,UAAA,qEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE5BnC,IAAAC,iBAAmB;;;;;;;;AGHb,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;;AAGnC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,YAAA,OAAA,aAAA,uBAAA,OAAA;AAAmI,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AAFxK,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAU/G,IAAA,kCAAA,CAAA;AACE,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,oBAAA,WAAA,UAAA,EAAA,GAAA,GAAA;;;;;AAKF,IAAA,kCAAA,CAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;;;;;;AAAM,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,WAAA,QAAA,GAAA,wBAAA;;;;;;AARV,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,qBAAA,GAAA,mEAAA,GAAA,GAAA,gBAAA,EAAA,EAAyC,GAAA,mEAAA,GAAA,GAAA,gBAAA,EAAA;AASzC,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,aAAA,sBAAA,WAAA,YAAA,CAAA,WAAA,SAAA;IAAA,CAAA;AAC3B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;;;;AAXW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,WAAA,SAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,SAAA;AAIb,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,SAAA,WAAA,YAAA,SAAA,QAAA,GAAA;;;;;AAtBR,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,OAAA,EAAA;AAEnC,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;AAGA,IAAA,yBAAA,GAAA,QAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,IAAA;AAGA,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,QAAA,EAAA;AAuBF,IAAA,uBAAA,EAAM;;;;;AA/BD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,eAAA,EAAA;AAEK,IAAA,oBAAA;AAAA,IAAA,iCAAA,aAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA,KAAA,YAAA,IAAA,cAAA,WAAA,EAAA;AACN,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;AAKK,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,QAAA,WAAA,aAAA,EAAA;;;;;AAmCX,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;;;;AAAjD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,UAAA,GAAA;;;;;AAQ9C,IAAA,yBAAA,GAAA,MAAA;AAAyC,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,WAAA,UAAA,GAAA;;;;;AACrC,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,WAAA,UAAA,GAAA;;;;;AAJR,IAAA,yBAAA,GAAA,MAAA;AAEE,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,QAAA,EAAA,EAAwC,GAAA,iEAAA,GAAA,GAAA,QAAA,EAAA;AAIxC,IAAA,uBAAA;;;;AAJO,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;AACI,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA;AAAwC,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,QAAA;;;;;AAA4B,IAAA,yBAAA,GAAA,MAAA;AAAwC,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,QAAA;;;;;AAD5G,IAAA,yBAAA,GAAA,MAAA;AACA,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,QAAA,EAAA;AAAmE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,QAAA,EAAA;AACtE,IAAA,uBAAA;;;;AADS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;AAAoE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;;;;;AAD3E,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,QAAA,EAAA;;;;AAAO,IAAA,qBAAA,QAAA,WAAA,aAAA,QAAA,WAAA,aAAA,IAAA;;;;;AATb,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,QAAA,EAAA,EACkJ,GAAA,iEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAWpJ,IAAA,uBAAA;;;;;AAXK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,KAAA,EAA0H,YAAA,iBAAA;;;;;AAa7H,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,WAAA,kBAAA,GAAA;;;;;AAhBJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA,EAAiE,GAAA,2DAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAiBnE,IAAA,uBAAA;;;;;AAjBQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,iBAAA,SAAA,EAAyC,YAAA,cAAA;;;;;AAqBjD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAqD,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AACrD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;AASnE,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAGnC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,oBAAA,GAAA,cAAA,EAAA,EAAsE,GAAA,cAAA,EAAA,EACA,GAAA,cAAA,EAAA;AAExE,IAAA,uBAAA;;;AAHiD,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;;;;;AAG/C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,oBAAA,GAAA,cAAA,EAAA,EAIa,GAAA,cAAA,EAAA,EAKA,GAAA,cAAA,EAAA;AAMf,IAAA,uBAAA;;;;AAdI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,EAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,MAAA,CAAA,EAAmH,OAAA,WAAA,cAAA,QAAA,MAAA,GAAA,EACjD,SAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,QAAA,WAAA,cAAA,WAAA,cAAA,KAAA,QAAA,GAAA;AAIlE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,WAAA,cAAA,cAAA,WAAA,YAAA,OAAA,WAAA,cAAA,KAAA,CAAA,EAAqH,OAAA,WAAA,cAAA,aAAA,MAAA,GAAA,EAC9C,SAAA,WAAA,cAAA,aAAA,WAAA,cAAA,WAAA,cAAA,UAAA,WAAA,YAAA,OAAA,WAAA,cAAA,QAAA,QAAA,GAAA;AAIvE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,KAAA,CAAA,EAAqJ,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,QAAA,MAAA,GAAA,EACrE,SAAA,WAAA,cAAA,UAAA,WAAA,cAAA,QAAA,WAAA,cAAA,GAAA;;;;;AAdpF,IAAA,qBAAA,GAAA,mEAAA,GAAA,IAAA,QAAA,EAAA;;;;AACG,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,MAAA,WAAA,gBAAA,IAAA;;;;;AAmBL,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEgC,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA;;;;;AAArC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,WAAA,SAAA,CAAA;;;;;AAChC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAE8C,IAAA,iBAAA,GAAA,OAAA;AAAI,IAAA,uBAAA;;;;;AAChD,IAAA,yBAAA,GAAA,QAAA,EAAA;AAC2I,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,eAAA,MAAA,GAAA,GAAA;;;;;AAK7I,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AA3CN,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,OAAA,EAAA;AAEnC,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EACgV,GAAA,4DAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAKtT,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAuBM,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAGa,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAEgG,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAS/I,IAAA,uBAAA,EAAM;;;;;;AA1CD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,MAAA,WAAA,gBAAA,SAAA,WAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,SAAA,WAAA,WAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,IAAA,EAA2T,YAAA,eAAA;AA2B3T,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,UAAA,KAAA,WAAA,eAAA,WAAA,cAAA,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,SAAA,WAAA,cAAA,MAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,WAAA,WAAA,iBAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,WAAA,WAAA,iBAAA,cAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,IAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,UAAA,WAAA,UAAA,KAAA,MAAA,SAAA,WAAA,mBAAA,IAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,EAAA;;;;;AAkDP,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA,EAAO;;;;AAAhD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,YAAA,CAAA,EAAA,OAAA,EAAA;;;;;AAEjE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAqF,GAAA,MAAA;AAEjF,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;;AAH8B,IAAA,qBAAA,SAAA,YAAA,MAAA;AAEnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,MAAA,GAAA,GAAA;;;;;AAKJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA,EAAO;;;;AADmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG9D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAOT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAE9D,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFE,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,YAAA,cAAA,MAAA,YAAA,WAAA,SAAA,YAAA,cAAA,YAAA,YAAA,cAAA,MAAA,YAAA,cAAA,cAAA,YAAA,WAAA,KAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,MAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,MAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA,MAAA;;;;;AA4BH,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,SAAA,EAAA;AACrC,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AACtF,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEF,IAAA,uBAAA;;;;;AAHoC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAC/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,qBAAA,YAAA,qBAAA,GAAA,wBAAA;;;;;AAGL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,SAAA,EAAA;AACrC,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AACtF,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEF,IAAA,uBAAA;;;;;AAHoC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAC/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,qBAAA,YAAA,qBAAA,GAAA,wBAAA;;;;;AAGL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,SAAA,EAAA;AACrC,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AACtF,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEF,IAAA,uBAAA;;;;;AAHoC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAC/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,qBAAA,YAAA,qBAAA,GAAA,wBAAA;;;;;AAGL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,SAAA,EAAA;AACrC,IAAA,iBAAA,CAAA;AAAoD,IAAA,uBAAA;AACtF,IAAA,oBAAA,GAAA,KAAA,EAAA;AAEF,IAAA,uBAAA;;;;;AAHoC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAC/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,qBAAA,YAAA,qBAAA,GAAA,wBAAA;;;;;AAzBP,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuG,GAAA,OAAA,EAAA,EACnF,GAAA,SAAA,EAAA;AACkB,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AAIxD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA,EAAyE,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA,EAKA,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA,EAKA,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA;AAU3E,IAAA,uBAAA;;;;;AA1BsC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,kBAAA;AAI/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,YAAA,QAAA,YAAA,QAAA,GAAA,wBAAA;AAEc,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,CAAA;;;;;AAlCzB,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA+F,GAAA,OAAA,EAAA;AAO3F,IAAA,oBAAA,GAAA,OAAA,EAAA;AAIA,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,OAAA,EAAA;AA6BF,IAAA,uBAAA,EAAM;;;;;;AApCJ,IAAA,oBAAA;AAAA,IAAA,qBAAA,iBAAA,gBAAA,OAAA,oBAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA,KAAA,YAAA,IAAA,aAAA,WAAA;AAOyB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,WAAA,KAAA,OAAA,eAAA,eAAA,cAAA;;;;;AAiC/B,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAKA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAMF,IAAA,yBAAA,GAAA,MAAA;AAA4D,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,YAAA,WAAA,OAAA,YAAA,QAAA,EAAA;;;;;AAF9D,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;AAJ4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,aAAA;;;AD1QtB,IAAO,gCAAP,MAAO,+BAA6B;EAgBxC,YACS,cACA,WACA,eAA4B;AAF5B,SAAA,eAAA;AACA,SAAA,YAAA;AACA,SAAA,gBAAA;AAjBT,SAAA,mBAAmB,CAAC,aAAa,SAAS,SAAS,SAAS,aAAa;AAOlE,SAAA,UAAU;AACV,SAAA,UAAU;AACV,SAAA,UAAU;AACjB,SAAA,qBAAqB;AACd,SAAA,iBAAsB,CAAA;AAC7B,SAAA,YAAY;EAcZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CA,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0OO,mBAAmB,MAAI;AAC5B,WAAO,KAAK,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI;EAC3G;EAEO,cAAc,KAAG;AACtB,WAAQ,IAAI,UAAU,QAAQ,IAAI,UAAU,MAAM,MAAM,WAAW,IAAI,MAAM,CAAC;EAChF;EAEO,YAAY,KAAG;AAOpB,SAAK,kBAAkB;AAEvB,SAAK,eAAe,mBAAmB,IAAI;EAC7C;EAEO,eAAe,KAAG;AACvB,QAAI,WAAW;AACf,QAAI,OAAO,QAAQ,OAAO,IAAI;AAC5B,cAAQ,IAAI,YAAW,GAAI;QACzB,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;MACJ;IACF;AAEA,WAAO;EACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoGO,SAAS,KAAG;AACjB,WAAO,OAAQ;EACjB;EAEA,WAAW,KAAG;AACZ,QAAI,IAAI,gBAAgB,aAAa,IAAI,aAAa,UAAU,IAAI,YAAY,QAAQ,IAAI,YAAY;AAAO,aAAO;AACtH,QAAI,IAAI,YAAY,IAAI;AAAU,aAAO;AACzC,QAAI,IAAI,aAAa,KAAK,IAAI,aAAa;AAAG,aAAO;AACrD,WAAO;EACT;EAEO,mBAAmB,SAAO;AAC/B,SAAK,eAAe,gBAAgB,KAAK,aAAa,uBAAuB,gBAAgB,SAAS,KAAK,aAAa,uBAAuB,KAAK;EACtJ;;;uCAzcW,gCAA6B,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA7B,gCAA6B,WAAA,CAAA,CAAA,4BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,eAAA,EAAA,GAAA,CAAA,GAAA,cAAA,WAAA,GAAA,SAAA,MAAA,GAAA,CAAA,WAAA,IAAA,aAAA,IAAA,yBAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,QAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,qBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,SAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,YAAA,IAAA,SAAA,eAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,gBAAA,gBAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,uBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,sBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,SAAA,wCAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,WAAA,oBAAA,GAAA,CAAA,OAAA,wCAAA,SAAA,uBAAA,OAAA,IAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,kBAAA,QAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,GAAA,QAAA,cAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,cAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,UAAA,sBAAA,yBAAA,iBAAA,GAAA,CAAA,SAAA,kEAAA,GAAA,QAAA,UAAA,GAAA,CAAA,SAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,sCAAA,GAAA,MAAA,GAAA,CAAA,SAAA,4CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,iBAAA,uBAAA,GAAA,CAAA,QAAA,eAAA,GAAA,WAAA,GAAA,KAAA,GAAA,CAAA,SAAA,kEAAA,GAAA,MAAA,GAAA,CAAA,QAAA,eAAA,GAAA,WAAA,OAAA,OAAA,GAAA,CAAA,GAAA,UAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,aAAA,QAAA,cAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,eAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,SAAA,QAAA,GAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,SAAA,GAAA,CAAA,GAAA,OAAA,wBAAA,GAAA,CAAA,GAAA,UAAA,SAAA,SAAA,MAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,IAAA,GAAA,aAAA,GAAA,CAAA,SAAA,QAAA,GAAA,MAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,qBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,QAAA,GAAA,CAAA,GAAA,SAAA,SAAA,CAAA,GAAA,UAAA,SAAA,uCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AClB1C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqD,GAAA,SAAA,CAAA;AAGjD,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA;;AA8CxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA,EAAmD,GAAA,6CAAA,GAAA,GAAA,MAAA,EAAA;;AAyBrD,QAAA,kCAAA,GAAA,EAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,EAAA,EAAoD,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAStD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AA4FxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAUxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AA4CF,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA,EACuC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;AAO9G,QAAA,uBAAA,EAAQ;AAEV,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,OAAA,EAAA;;;AAzRmD,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AA+Q3B,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAKJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,0BAAA,GAAAC,KAAA,CAAA;AAKlC,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,mBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,cAAA,UAAA,KAAA,IAAA,eAAA,aAAA,kBAAA,MAAA,aAAA;;+sVDjRW;MACV,QAAQ,gBAAgB;QACtB,MAAM,aAAa,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QAC3D,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WAAW,0BAA0B,QAAQ,sCAAsC,CAAC;OACrF;MACF,EAAA,CAAA;EAAA;;;6EAEU,+BAA6B,EAAA,WAAA,iCAAA,UAAA,mHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGhBtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACC,IAAA,iBAAA,CAAA;AACtC,IAAA,uBAAA,EAAO;;;;AAD+B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,UAAA,OAAA,CAAA,GAAA,GAAA;;;;;AAMxC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,GAAA,QAAA;AACF,IAAA,uBAAA;;;;;;AAGE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,YAAA,OAAA,aAAA,uBAAA,OAAA,CAAmI;IAAA,CAAA;AAF9I,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAFnH,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAJE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,eAAA,EAAA;;;;;AAML,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA,EAAO;;;;AADmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG9D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAOT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAChE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAgE,GAAA,QAAA,EAAA;AAE5D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAH8B,IAAA,qBAAA,SAAA,WAAA,MAAA;AAEnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,QAAA,GAAA;;;;;AAKN,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;AD9DI,IAAO,kCAAP,MAAO,iCAA+B;EAO1C,YAAmB,cAAmC,WAAyB;AAA5D,SAAA,eAAA;AAAmC,SAAA,YAAA;AALtD,SAAA,mBAAmB,CAAC,YAAY,aAAa,uBAAuB,uBAAuB,uBAAuB,uBAAuB,QAAQ;AAG1I,SAAA,iBAAsB,CAAA;EAEsD;EAEnF,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;;;uCAXW,kCAA+B,4BAAA,YAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAA/B,kCAA+B,WAAA,CAAA,CAAA,8BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,UAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,YAAA,gBAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,SAAA,kBAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,kBAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,EAAA,CAAA,GAAA,UAAA,SAAA,yCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACR5C,QAAA,yBAAA,GAAA,SAAA,CAAA;AACE,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AASxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AAWxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,gDAAA,GAAA,GAAA,MAAA,EAAA;AAEvE,QAAA,uBAAA;;;AAvEsC,QAAA,qBAAA,cAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AAqEhB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;;;;;;6ED9DtB,iCAA+B,EAAA,WAAA,mCAAA,UAAA,uHAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;;AGJtC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,gFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,YAAA,OAAA,aAAA,uBAAA,OAAA,CAAmI;IAAA,CAAA;AAF9I,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAFnH,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAJE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,eAAA,EAAA;;;;;AAYL,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;AAKA,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AACZ,IAAA,uBAAA,EAAO;;;;AADK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,WAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAC,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AACZ,IAAA,uBAAA,EAAO;;;;AADK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,WAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AACZ,IAAA,uBAAA,EAAO;;;;AADK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,WAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AACX,IAAA,uBAAA,EAAO;;;;AADI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI9D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,WAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAO3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAChE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAiF,GAAA,QAAA,EAAA;AAE7E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAH8B,IAAA,qBAAA,SAAA,WAAA,MAAA;AAEnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,QAAA,GAAA;;;;;AAKR,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAjFJ,IAAA,yBAAA,GAAA,OAAA,CAAA,EAC2F,GAAA,SAAA,CAAA;AAEvF,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA;;AAiBxC,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA;;AAOxC,IAAA,yBAAA,GAAA,SAAA,CAAA;AACE,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AAUxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AAO1C,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA,EAAuE,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;AAEzE,IAAA,uBAAA,EAAQ;;;;AAhF8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,eAAA,UAAA;AA8EhB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA,kBAAA,EAAqC,yBAAA,IAAA;AACxB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,OAAA,kBAAA;;;;;AAU/B,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,QAAA,GAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,gFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,aAAA,OAAA,aAAA,uBAAA,OAAA,CAAmI;IAAA,CAAA;AAF9I,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAFnH,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAJE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,WAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,YAAA,eAAA,QAAA,YAAA,eAAA,EAAA;;;;;AAYL,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,GAAA;;;;;AAKF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI/D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAM3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA,EAAO;;;;AADmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAI9D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,eAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,mBAAA,EAAqC,WAAA,0BAAA,GAAAA,OAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA,CAAA;AAEjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAO3B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAChE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAiF,GAAA,QAAA,EAAA;AAE7E,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;AAH8B,IAAA,qBAAA,SAAA,YAAA,MAAA;AAEnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,GAAA;;;;;AAKN,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAjFJ,IAAA,yBAAA,GAAA,OAAA,CAAA,EAC+F,GAAA,SAAA,CAAA;AAE3F,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA;;AAiBxC,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,IAAA,kCAAA,GAAA,CAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AAUxC,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA,EAAuE,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;AAEzE,IAAA,uBAAA,EAAQ;;;;AAhF8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,eAAA,YAAA;AA8EhB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA,kBAAA,EAAqC,yBAAA,IAAA;AACxB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,OAAA,kBAAA;;;ADhK/B,IAAO,iCAAP,MAAO,gCAA8B;EAQzC,YAAmB,cAAmC,WAAyB;AAA5D,SAAA,eAAA;AAAmC,SAAA,YAAA;AANtD,SAAA,qBAAqB,CAAC,aAAa,SAAS,uBAAuB,uBAAuB,uBAAuB,uBAAuB,QAAQ;AAChJ,SAAA,qBAAqB,CAAC,aAAa,SAAS,uBAAuB,uBAAuB,uBAAuB,uBAAuB,QAAQ;AAGzI,SAAA,iBAAsB,CAAA;EAEsD;EAEnF,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;;;uCAZW,iCAA8B,4BAAA,YAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,6BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,SAAA,SAAA,SAAA,uBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,GAAA,cAAA,QAAA,GAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,WAAA,EAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,YAAA,GAAA,SAAA,WAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,qBAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,YAAA,IAAA,SAAA,YAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,OAAA,wCAAA,SAAA,kBAAA,OAAA,IAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,kBAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,EAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,SAAA,kBAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,wCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACR3C,QAAA,qBAAA,GAAA,+CAAA,IAAA,GAAA,OAAA,CAAA,EAC2F,GAAA,+CAAA,IAAA,GAAA,OAAA,CAAA;;;AAAxF,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,gBAAA,QAAA,IAAA,eAAA,WAAA,KAAA,SAAA,CAAA;AAuFA,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,kBAAA,QAAA,IAAA,eAAA,aAAA,KAAA,SAAA,CAAA;;;;;;6EDhFU,gCAA8B,EAAA,WAAA,kCAAA,UAAA,qHAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;AGNvC,IAAA,yBAAA,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,YAAA,GAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,YAAA,OAAA,aAAA,uBAAA,OAAA,CAAmI;IAAA,CAAA;AAF9I,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAFnH,IAAA,yBAAA,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAJE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,eAAA,EAAA;;;;;AAKL,IAAA,yBAAA,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,UAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,WAAA,eAAA,GAAA,GAAA;;;;;AAIF,IAAA,yBAAA,GAAA,MAAA,CAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AA+CJ,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;ADjEI,IAAO,iCAAP,MAAO,gCAA8B;EAQzC,YAAmB,cAAmC,WAAyB;AAA5D,SAAA,eAAA;AAAmC,SAAA,YAAA;AALtD,SAAA,mBAAmB,CAAC,eAAe,mBAAmB,aAAa;AAG5D,SAAA,iBAAsB,CAAA;EAEsD;EAEnF,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;EAEO,YAAY,KAAG;AACpB,QAAI,OAAO,UAAa,OAAO,MAAM;AACnC,UAAI,IAAI,SAAQ,EAAG,KAAI,EAAG,YAAW,KAAM;AACzC,cAAM;AAER,UAAI,IAAI,SAAQ,EAAG,KAAI,EAAG,YAAW,KAAM;AACzC,cAAM;IACV;AACA,WAAO;EACT;;;uCAvBW,iCAA8B,4BAAA,YAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,6BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,iBAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,OAAA,wCAAA,SAAA,kBAAA,OAAA,IAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,kBAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,EAAA,CAAA,GAAA,UAAA,SAAA,wCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACT3C,QAAA,yBAAA,GAAA,SAAA,CAAA;AACE,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AAUxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AAOxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AAoDxC,QAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAqE,IAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;AAEvE,QAAA,uBAAA;;;AA3EsC,QAAA,qBAAA,cAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AAyEhB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AACtB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;;;;;;6EDjEtB,gCAA8B,EAAA,WAAA,kCAAA,UAAA,qHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGJ/B,IAAA,yBAAA,GAAA,QAAA,CAAA,EAA4G,GAAA,KAAA,EAAA;AAExG,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA6B,IAAA,qBAAA,SAAA,SAAA,2FAAA;AAAA,YAAA,cAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,QAAA,gBAAA,WAAA,CAA8C;IAAA,CAAA;AAApF,IAAA,uBAAA,EAA8F;;;;AAF1F,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;AAEC,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,WAAA,QAAA,uBAAA;;;;;AAIL,IAAA,yBAAA,GAAA,QAAA,EAAA,EAA4E,GAAA,KAAA,EAAA;AACnD,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;AAClD,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAI;;;;AAD7B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,aAAA,GAAA;AACK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,GAAA;;;;;AAblC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0E,GAAA,MAAA,CAAA;AACpD,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AACzC,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,QAAA,CAAA;AAMJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,qBAAA,GAAA,qEAAA,GAAA,GAAA,QAAA,CAAA;AAIJ,IAAA,uBAAA,EAAM;;;;AAdgB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,GAAA;AAE6C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,QAAA,cAAA;AAQN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,QAAA,SAAA;;;;;AAZjE,IAAA,kCAAA,CAAA;AACI,IAAA,qBAAA,GAAA,8DAAA,GAAA,GAAA,OAAA,CAAA;;;;;AAA0C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA,YAAA;;;;;AAoBtC,IAAA,yBAAA,GAAA,QAAA,EAAA,EAA2F,GAAA,KAAA,EAAA;AAClE,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;AAClD,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAI;;;;AAD7B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,aAAA,GAAA;AACK,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,GAAA;;;;;AAJtC,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,EAAA;AACI,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,QAAA,EAAA;AAIJ,IAAA,uBAAA;;;;;AAJyD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA,kBAAA;;;;;AAO7D,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,KAAA,EAAA;AACK,IAAA,iBAAA,CAAA;AAA8F,IAAA,uBAAA,EAAI;;;;;AAAlG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,YAAA,MAAA,OAAA,eAAA,wBAAA,EAAA;;;ADvB/B,IAAO,iCAAP,MAAO,gCAA8B;EAOzC,YAAmB,cAAmC,WAAyB;AAA5D,SAAA,eAAA;AAAmC,SAAA,YAAA;AAL5C,SAAA,aAAgC,IAAI,aAAY;AAGnD,SAAA,iBAAsB,CAAA;EAEsD;EAEnF,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;EAEO,gBAAgB,WAAW,UAAQ;AACxC,UAAM,WAAW,CAAA;AACjB,aAAS,WAAW,IAAI;AACxB,aAAS,YAAY,IAAI;AACzB,SAAK,WAAW,KAAK,QAAQ;EAC/B;;;uCAlBW,iCAA8B,4BAAA,YAAA,GAAA,4BAAA,cAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,4BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,SAAA,EAAA,YAAA,aAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,SAAA,gCAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,OAAA,OAAA,GAAA,CAAA,SAAA,yBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,YAAA,eAAA,SAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,OAAA,IAAA,GAAA,SAAA,KAAA,GAAA,CAAA,GAAA,aAAA,aAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,OAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,SAAA,GAAA,CAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,wCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACR3C,QAAA,yBAAA,GAAA,OAAA,CAAA;AACI,QAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,gBAAA,CAAA,EAAmG,GAAA,wDAAA,GAAA,GAAA,gBAAA,CAAA,EAmBY,GAAA,wDAAA,GAAA,GAAA,gBAAA,CAAA;AAenH,QAAA,uBAAA;;;AAlCmB,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,kBAAA,QAAA,IAAA,eAAA,aAAA,SAAA,CAAA;AAmBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,wBAAA,QAAA,IAAA,eAAA,mBAAA,SAAA,CAAA;AASA,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,4BAAA,QAAA,IAAA,eAAA,uBAAA,SAAA,CAAA;;;;;;6EDrBN,gCAA8B,EAAA,WAAA,kCAAA,UAAA,mHAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;AGLvC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;AACvC,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA;AAAS,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA,EAAS;;;;AAAnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,aAAA,GAAA;;;;;AAYhD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAIjC,IAAA,oBAAA,GAAA,cAAA,EAAA;;;;AAGE,IAAA,qBAAA,SAAA,WAAA,gBAAA,QAAA,WAAA,gBAAA,KAAA,WAAA,cAAA,CAAA;;;;;AANR,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,OAAA,EAAA,EACgE,GAAA,QAAA,EAAA;AAEjG,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,cAAA,EAAA;AAgBF,IAAA,uBAAA,EAAO,EAYH;;;;AA3BC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,gBAAA,+BAAA,WAAA,gBAAA,4BAAA;;;;;AAgCT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA,EAAO;;;;AADmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG9D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,WAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAOT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAE9D,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,WAAA,MAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,WAAA,MAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA,MAAA;;;;;AAMX,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAOI,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAuF,GAAA,KAAA,EAAA;AAC5D,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;AACnD,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAI;;;;AAD3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,aAAA,aAAA,GAAA;AACE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,aAAA,QAAA,GAAA;;;;;AAJjC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;;AAJwD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA,aAAA;;;;;;AAWpD,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAgG,GAAA,KAAA,EAAA;AAE5F,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAwB,IAAA,qBAAA,SAAA,SAAA,6FAAA;AAAA,YAAA,eAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,SAAA,QAAA,YAAA,CAAsC;IAAA,CAAA;AAAvE,IAAA,uBAAA,EAAiF;;;;AAF/E,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,GAAA;AAEG,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,QAAA,QAAA,uBAAA;;;;;AAPX,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,MAAA,EAAA;AACzC,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,uEAAA,GAAA,GAAA,QAAA,EAAA;AAMF,IAAA,uBAAA,EAAM;;;;AARoB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,WAAA,GAAA;AAEmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,MAAA;;;;;AAJjE,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,gEAAA,GAAA,GAAA,OAAA,EAAA;;;;;AAA0C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA,OAAA;;;ADxGxC,IAAO,kCAAP,MAAO,iCAA+B;EAO1C,YAAmB,WAAkC,cAAoC,cAAsB;AAA5F,SAAA,YAAA;AAAkC,SAAA,eAAA;AAAoC,SAAA,eAAA;AALzF,SAAA,mBAAmB,CAAC,aAAa,eAAe,SAAS,SAAS,SAAS,SAAS,QAAQ;AAGrF,SAAA,iBAAsB,CAAA;EAEqF;EAElH,WAAQ;AACN,SAAK,iBAAiB,KAAK;EAC7B;EAEO,gBAAgB,WAAW,UAAQ;AACxC,UAAM,WAAW,KAAK,aAAa,KAAK,sBAAsB;MAC5D,UAAU;MACV,UAAU;MACV,YAAY;KACb;AAED,aAAS,kBAAkB,YAAY;AACvC,aAAS,kBAAkB,eAAe;AAC1C,aAAS,kBAAkB,iBAAiB,KAAK,eAAe;EAClE;EAEO,cAAc,KAAG;AACtB,WAAQ,IAAI,UAAU,QAAQ,IAAI,UAAU,MAAM,MAAM,WAAW,IAAI,MAAM,CAAC;EAChF;EAEO,eAAe,KAAG;AACvB,QAAI,WAAW;AACf,QAAI,OAAO,QAAQ,OAAO,IAAI;AAC5B,cAAQ,IAAI,YAAW,GAAI;QACzB,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;MACJ;IACF;AACA,WAAO;EACT;;;uCA7CW,kCAA+B,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAA/B,kCAA+B,WAAA,CAAA,CAAA,8BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,uBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,UAAA,sBAAA,2BAAA,eAAA,QAAA,GAAA,CAAA,GAAA,SAAA,UAAA,sBAAA,iBAAA,cAAA,GAAA,CAAA,QAAA,eAAA,OAAA,OAAA,OAAA,OAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,QAAA,eAAA,OAAA,OAAA,OAAA,OAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,SAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,OAAA,OAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,SAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,SAAA,eAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,SAAA,gCAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,YAAA,eAAA,SAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,OAAA,IAAA,GAAA,SAAA,KAAA,CAAA,GAAA,UAAA,SAAA,yCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACV5C,QAAA,yBAAA,GAAA,SAAA,CAAA;AAEE,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AAYxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AAoCxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,+CAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,kCAAA,IAAA,CAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,gDAAA,GAAA,GAAA,MAAA,CAAA;;AAQxC,QAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,gDAAA,GAAA,GAAA,MAAA,EAAA;AAGvE,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,0DAAA,GAAA,GAAA,gBAAA,EAAA,EAA6F,IAAA,0DAAA,GAAA,GAAA,gBAAA,EAAA;AAuB/F,QAAA,uBAAA;;;AA/HsC,QAAA,qBAAA,cAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AAkGhB,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAKtB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,kBAAA,IAAA,eAAA,cAAA,SAAA,CAAA;AASA,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,aAAA,QAAA,IAAA,eAAA,QAAA,SAAA,CAAA;;;;;;6EDvGJ,iCAA+B,EAAA,WAAA,mCAAA,UAAA,uHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGmJ1C,IAAA,yBAAA,GAAA,WAAA,CAAA,EAA8D,GAAA,MAAA,CAAA;AACnC,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;AAClD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAwB,GAAA,MAAA,CAAA;AACU,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AACnD,IAAA,oBAAA,GAAA,KAAA,CAAA;AACF,IAAA,uBAAA,EAAM;;;;;AAJmB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,kBAAA,EAAA;AAES,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,GAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,QAAA,QAAA,QAAA,QAAA,GAAA,wBAAA;;;;;AALT,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,WAAA,CAAA;AAOF,IAAA,uBAAA;;;;AAP+C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;AAY7C,IAAA,yBAAA,GAAA,MAAA;AAA4D,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,WAAA,OAAA,WAAA,QAAA,EAAA;;;;;AAF9D,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,QAAA,CAAA;AACF,IAAA,uBAAA;;;;AAD4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,aAAA;;;ADxJtB,IAAO,iCAAP,MAAO,gCAA8B;EAczC,YACS,cACA,WACA,eAA4B;AAF5B,SAAA,eAAA;AACA,SAAA,YAAA;AACA,SAAA,gBAAA;AAfT,SAAA,mBAAmB,CAAC,aAAa,SAAS,SAAS,SAAS,aAAa;AAIlE,SAAA,UAAU;AACV,SAAA,UAAU;AACV,SAAA,UAAU;AACjB,SAAA,qBAAqB;AACd,SAAA,iBAAsB,CAAA;AAC7B,SAAA,YAAY;AACL,SAAA,eAAsB,CAAA;EAKY;;;;;;;;;;;;EAczC,WAAQ;AACN,SAAK,iBAAiB,KAAK;AAC3B,SAAK,eAAe,KAAK,gBAAgB,WAAW,KAAK,OAAO,SAAM;AACpE,UAAI,IAAI,UAAU;AAChB,eAAO;MACT;IACF,CAAC;AACD,YAAQ,IAAI,mBAAmB,KAAK,YAAY;EAClD;EAEO,mBAAmB,MAAI;AAC5B,WAAO,KAAK,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI;EAC3G;EAEO,cAAc,KAAG;AACtB,WAAQ,IAAI,UAAU,QAAQ,IAAI,UAAU,MAAM,MAAM,WAAW,IAAI,MAAM,CAAC;EAChF;EAEO,YAAY,KAAG;AACpB,SAAK,kBAAkB;AAEvB,SAAK,eAAe,mBAAmB,IAAI;EAC7C;EAEO,eAAe,KAAG;AACvB,QAAI,WAAW;AACf,QAAI,OAAO,QAAQ,OAAO,IAAI;AAC5B,cAAQ,IAAI,YAAW,GAAI;QACzB,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;MACJ;IACF;AACA,WAAO;EACT;EAGO,SAAS,KAAG;AACjB,WAAO,OAAQ;EACjB;EAEA,WAAW,KAAG;AACZ,QAAI,IAAI,YAAY,IAAI;AAAU,aAAO;AACzC,QAAI,IAAI,aAAa,KAAK,IAAI,aAAa;AAAG,aAAO;AACrD,WAAO;EACT;;;uCAlFW,iCAA8B,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA9B,iCAA8B,WAAA,CAAA,CAAA,6BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wCAAA,GAAA,MAAA,GAAA,CAAA,SAAA,cAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,QAAA,GAAA,CAAA,GAAA,SAAA,SAAA,CAAA,GAAA,UAAA,SAAA,wCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AC2I3C,QAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,OAAA,CAAA,EAAoC,GAAA,+CAAA,GAAA,GAAA,OAAA,CAAA;;;AAA9B,QAAA,qBAAA,SAAA,IAAA,gBAAA,OAAA,OAAA,IAAA,aAAA,UAAA,CAAA;AAYH,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,mBAAA,QAAA,IAAA,eAAA,cAAA,SAAA,KAAA,IAAA,eAAA,aAAA,kBAAA,MAAA,aAAA;;u9UD/JW;MACV,QAAQ,gBAAgB;QACtB,MAAM,aAAa,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QAC3D,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WAAW,0BAA0B,QAAQ,sCAAsC,CAAC;OACrF;MACF,EAAA,CAAA;EAAA;;;6EAEU,gCAA8B,EAAA,WAAA,kCAAA,UAAA,qHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGFnC,IAAA,yBAAA,GAAA,MAAA,CAAA;AAA0D,IAAA,iBAAA,CAAA;AAA4C,IAAA,uBAAA;;;;AAA5C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,oBAAA,CAAA,EAAA,kBAAA,GAAA;;;;;AAgB1C,IAAA,yBAAA,GAAA,MAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,UAAA,GAAA;;;;;AAEqB,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,4BAAA,QAAA,MAAA;;;;;AAJ7B,IAAA,yBAAA,GAAA,MAAA;AACI,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,QAAA,CAAA,EAA2E,GAAA,+EAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAI/E,IAAA,uBAAA;;;;;AAJW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,cAAA,QAAA,QAAA,EAAmD,YAAA,aAAA;;;;;AAHlE,IAAA,yBAAA,GAAA,GAAA,EAAwC,GAAA,QAAA;AAC3B,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AAC7B,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,QAAA,CAAA;AAMJ,IAAA,uBAAA;;;;AAPa,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,IAAA;AACF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,MAAA;;;;;AAeX,IAAA,yBAAA,GAAA,GAAA,EAAuD,GAAA,QAAA;AAC1C,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA,EAAO;;;;AADtB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,SAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,UAAA,EAAA;;;;;AApBf,IAAA,kCAAA,CAAA;AACI,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,KAAA,CAAA,EAAwC,GAAA,0DAAA,GAAA,GAAA,KAAA,CAAA;;;;;AAApC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,UAAA,QAAA,QAAA;AAiBA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,cAAA,QAAA,QAAA;;;;;AAUI,IAAA,yBAAA,GAAA,MAAA;AAA2D,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;;;;;AAL3E,IAAA,yBAAA,GAAA,OAAA,CAAA,EACoG,GAAA,GAAA,EAC7F,GAAA,QAAA;AAEK,IAAA,iBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,QAAA,CAAA;AAAsE,IAAA,iBAAA,GAAA,IAAA;AAC1E,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,QAAA,EAAA;AACJ,IAAA,uBAAA,EAAI;;;;;AAPJ,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,OAAA,0BAAA,SAAA,KAAA,QAAA,cAAA,UAAA,CAAA;AAGQ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,GAAA;AACO,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,YAAA,QAAA,cAAA,SAAA;AAEL,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,QAAA,aAAA,wBAAA;;;;;AA0Bd,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,aAAA,GAAA;;;;;;AAKQ,IAAA,yBAAA,GAAA,OAAA,EAAA;AAC+B,IAAA,qBAAA,SAAA,SAAA,4EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAS,aAAA,mBAAA,UAAA;AAA2B,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AAD7F,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAH7H,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,KAAA,EAC9B,GAAA,KAAA,EAAA;AAEG,IAAA,qBAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,EAAA;AAEA,IAAA,yBAAA,GAAA,MAAA;AAAO,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA,EAAO,EACpC,EACF;;;;AAHO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,UAAA;AACE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAUf,IAAA,yBAAA,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,CAAA,EAAA,QAAA,GAAA;;;;;;AALR,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAE4B,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAC/E,IAAA,iBAAA,GAAA,cAAA;AAAW,IAAA,uBAAA;AACf,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA;;;;AALQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,OAAA,uBAAA,CAAA,CAAA;AAEqB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AAKzB,IAAA,yBAAA,GAAA,GAAA,EAA+C,GAAA,MAAA;AAEvC,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAO;;;;AADH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,mBAAA,WAAA,mBAAA,MAAA,GAAA;;;;;AAHZ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,KAAA,CAAA;AAKJ,IAAA,uBAAA;;;;AALQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AASJ,IAAA,yBAAA,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,CAAA,EAAA,QAAA,GAAA;;;;;AAFR,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA;;;;AAH6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AAKzB,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAiE,GAAA,MAAA;AAEzD,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAO;;;;AADH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,mBAAA,WAAA,mBAAA,MAAA,GAAA;;;;;AAHZ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,KAAA,EAAA;AAKJ,IAAA,uBAAA;;;;AAL0B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AAStB,IAAA,yBAAA,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,CAAA,EAAA,QAAA,GAAA;;;;;AAFR,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,QAAA,EAAA;AAGJ,IAAA,uBAAA;;;;AAH6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AAKzB,IAAA,yBAAA,GAAA,GAAA,EAA+C,GAAA,MAAA;AAEvC,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAO;;;;AADH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,mBAAA,YAAA,mBAAA,MAAA,GAAA;;;;;AAHZ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,KAAA,CAAA;AAKJ,IAAA,uBAAA;;;;AALQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AASJ,IAAA,yBAAA,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,CAAA,EAAA,QAAA,GAAA;;;;;;AAFR,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,QAAA,EAAA;AAGA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAC2D,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAC5E,IAAA,iBAAA,GAAA,iBAAA;AAAc,IAAA,uBAAA,EAAO;;;;AALA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;AAIrB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,OAAA,oBAAA,CAAA,CAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,GAAA,EAA+C,GAAA,MAAA;AAEvC,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAO;;;;AADH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,mBAAA,YAAA,mBAAA,MAAA,GAAA;;;;;AAHZ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,qBAAA,GAAA,uDAAA,GAAA,GAAA,KAAA,CAAA;AAKJ,IAAA,uBAAA;;;;AALQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA,CAAA,KAAA,OAAA,UAAA,CAAA,EAAA,MAAA;;;;;AAOZ,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AA/ER,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+D,GAAA,SAAA,EAAA;AAEvD,IAAA,kCAAA,GAAA,EAAA;AACI,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA,EAAgE,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;;AAapE,IAAA,kCAAA,GAAA,EAAA;AACI,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA;;AAgB1C,IAAA,kCAAA,GAAA,EAAA;AACI,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;;AAa1C,IAAA,kCAAA,IAAA,EAAA;AACI,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;;AAa1C,IAAA,kCAAA,IAAA,EAAA;AACI,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;;AAgB1C,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;AAGzE,IAAA,uBAAA,EAAQ;;;;AAhFS,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,OAAA,UAAA;AA6EO,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,OAAA,gBAAA;;;ADvJvC,IAAO,+BAAP,MAAO,8BAA4B;;;;EA+BvC,YAAmB,gBAAuC,cAAmC,aAAwB;AAAlG,SAAA,iBAAA;AAAuC,SAAA,eAAA;AAAmC,SAAA,cAAA;AA1BpF,SAAA,aAAoB,CAAA;AACpB,SAAA,aAAoB,CAAA;AACpB,SAAA,gCAAuC,CAAA;AAGzC,SAAA,mBAAmB,CAAC,eAAe,aAAa,aAAa,aAAa,WAAW;AAGrF,SAAA,oBAA2B,CAAA;AAC3B,SAAA,oBAA2B,CAAA;AAE3B,SAAA,2BAAkC,CAAA;AAClC,SAAA,8BAAqC,CAAA;AACrC,SAAA,8BAAqC,CAAA;AACrC,SAAA,eAAsB,CAAA;AACtB,SAAA,sBAA6B,CAAA;AAC7B,SAAA,4BAAmC,CAAA;AACnC,SAAA,kBAAyB,CAAA;AACzB,SAAA,qBAAqB;AACrB,SAAA,mBAAmB;AAEnB,SAAA,YAAmB,CAAA;AAQxB,SAAK,2BAA2B;MAC9B;MACA;MACA;MACA;;AAGF,SAAK,8BAA8B;MACjC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;AAGF,SAAK,8BAA8B;MACjC;MACA;MACA;;AAEF,SAAK,wBAAwB,KAAK,yBAAyB,OAAO,KAAK,2BAA2B,EAAE,OAAO,KAAK,2BAA2B;EAC7I;EAEA,YAAY,SAA6C;AACvD,QAAI,QAAQ,cAAc,QAAQ,WAAW,aAAa;AACxD,WAAK,aAAa,KAAK,aAAa,KAAK,WAAW,YAAY,IAAI,CAAA;IACtE;AAEA,QAAI,QAAQ,wBAAwB,CAAC,QAAQ,qBAAqB,aAAa;AAC7E,WAAK,uBAAuB,QAAQ,qBAAqB;IAC3D;AAEA,SAAK,oBAAoB,CAAC,GAAG,IAAI,IAAI,KAAK,WAAW,IAAI,CAAC,SAAS,CAAC,KAAK,cAAc,GAAG,IAAI,CAAC,CAAC,EAAE,OAAM,CAAE;AAK1G,SAAK,sBAAqB;EAC5B;EAGO,WAAW,OAAK;AACrB,SAAK,eAAe,MAAM;AAC1B,SAAK,sBAAqB;AAC1B,SAAK,YAAY,QAAQ,uBAAuB,KAAK,kBAAkB,OAAO,SAAO,IAAI,gBAAgB,KAAK,YAAY,EAAE,CAAC;AAG7H,SAAK,eAAe,OAAO,KAAK,YAAY,QAAQ,sBAAsB,MAAM;EAClF;EAEO,wBAAqB;AAE1B,SAAK,aAAa,KAAK,WAAW,OAAO,SAAO,IAAI,gBAAgB,KAAK,YAAY;AACrF,YAAQ,IAAI,iBAAiB,KAAK,UAAU;AAE5C,SAAK,oBAAoB,KAAK,KAAK,WAAW;AAK9C,SAAK,eAAe,KAAK,kBAAkB,OAAO,SAAM;AACtD,aAAO,IAAI,aAAa,cAAc,IAAI,UAAU,cAAc,IAAI,KAAK,IAAI,WAAW;IAC5F,CAAC;AACD,YAAQ,IAAI,mBAAmB,KAAK,YAAY;AAEhD,SAAK,YAAY,KAAK,aAAa,MAAM,KAAK,oBAAoB,KAAK,gBAAgB;AAEvF,YAAQ,IAAI,gBAAgB,KAAK,SAAS;AAE1C,UAAM,UAAU,KAAK,kBAAkB,OAAO,SAAM;AAIlD,aAAO,KAAK,sBAAsB,SAAS,IAAI,SAAS;IAC1D,CAAC;AAED,UAAM,gBAAgB,CAAC,GAAG,OAAO,EAAE,KAAK,CAAC,GAAG,MAAK;AAC/C,YAAM,SAAS,KAAK,sBAAsB,QAAQ,EAAE,SAAS;AAC7D,YAAM,SAAS,KAAK,sBAAsB,QAAQ,EAAE,SAAS;AAC7D,aAAO,SAAS;IAClB,CAAC;AACD,YAAQ,IAAI,oBAAoB,aAAa;AAE7C,UAAM,uBAAuB,CAAA,GAAI,0BAA0B,CAAA,GAAI,0BAA0B,CAAA;AACzF,QAAI,0BAA0B,CAAA;AAC9B,kBAAc,QAAQ,SAAM;AAC1B,UAAI,KAAK,yBAAyB,SAAS,IAAI,SAAS,GAAG;AACzD,6BAAqB,KAAK,GAAG;MAC/B,WAAW,KAAK,4BAA4B,SAAS,IAAI,SAAS,GAAG;AACnE,gCAAwB,KAAK,GAAG;MAClC,WAAW,IAAI,KAAK,IAAI,WAAW,KAAK,KAAK,4BAA4B,SAAS,IAAI,SAAS,GAAG;AAChG,gCAAwB,KAAK,GAAG;MAClC,OAAO;AACL,gCAAwB,KAAK,GAAG;MAClC;IACF,CAAC;AAED,UAAM,iCAAiC,CAAA;AAEvC,4BAAwB,QAAQ,SAAM;AACpC,YAAM,KAAK,IAAI,YAAY,MAAM,GAAG,EAAE,CAAC;AACvC,UAAI,IAAI,aAAa,gBAAgB;AACnC,uCAA+B,KAAK,GAAG;AACvC,gCAAwB,QAAQ,YAAS;AACvC,gBAAM,QAAQ,OAAO,YAAY,MAAM,GAAG,EAAE,CAAC;AAC7C,cAAI,IAAI,aAAa,OAAO,aAAa,MAAM,OAAO;AACpD,2CAA+B,KAAK,MAAM;UAC5C;QACF,CAAC;MACH;IACF,CAAC;AAED,8BAA0B;AAM1B,SAAK,sBAAsB,qBAAqB,OAAO,uBAAuB;AAG9E,UAAM,iCAAiC,CAAA;AAEvC,4BAAwB,QAAQ,SAAM;AACpC,YAAM,KAAK,IAAI,YAAY,MAAM,GAAG,EAAE,CAAC;AACvC,UAAI,IAAI,aAAa,YAAY;AAC/B,uCAA+B,KAAK,GAAG;AACvC,gCAAwB,QAAQ,YAAS;AACvC,gBAAM,QAAQ,OAAO,YAAY,MAAM,GAAG,EAAE,CAAC;AAC7C,cAAI,IAAI,aAAa,OAAO,aAAa,MAAM,OAAO;AACpD,2CAA+B,KAAK,MAAM;UAC5C;QACF,CAAC;MACH;IACF,CAAC;AAGD,SAAK,4BAA4B,+BAA+B,IAAI,SAAM;AACxE,UAAI,IAAI,aAAa,WAAW;AAC9B,YAAI,IAAI,UAAU,cAAc,IAAI,UAAU;AAC5C,cAAI,cAAc,IAAI;QACxB,WAAW,IAAI,UAAU,cAAc,IAAI,UAAU;AACnD,cAAI,cAAc,IAAI,SAAS,UAAU,IAAI;QAC/C,OAAO;AACL,cAAI,cAAc,IAAI;QACxB;MACF,OAAO;AACL,YAAI,IAAI,UAAU;AAChB,cAAI,cAAc,IAAI;QACxB,OAAO;AACL,cAAI,cAAc,IAAI;QACxB;MACF;AACA,aAAO;IACT,CAAC;AACD,YAAQ,IAAI,gCAAgC,KAAK,yBAAyB;AAE1E,SAAK,kBAAkB,KAAK,kBAAkB,OAAO,SAAM;AACzD,aAAO,CAAC,KAAK,sBAAsB,SAAS,IAAI,SAAS,KAAK,IAAI,KAAK,IAAI,WAAW;IACxF,CAAC;AAED,SAAK,kBAAkB,KAAK,gBAAgB,OAAO,CAAC,KAAK,UAAS;AAChE,aAAO,UAAU,KAAK,gBAAgB,UAAU,OAAK,IAAI,cAAc,EAAE,SAAS;IACpF,CAAC;AACD,YAAQ,IAAI,sBAAsB,KAAK,eAAe;AAEtD,SAAK,oBAAoB,KAAK;AAE9B,SAAK,kBAAkB,QAAQ,CAAC,YAAW;AAEzC,WAAK,UAAU,QAAQ,CAAC,QAAQ,YAAW;AAEzC,cAAM,eAAe,KAAK,WAAW,KAAK,OAAK,EAAE,aAAa,QAAQ,aAAa,EAAE,YAAY,MAAM,GAAG,EAAE,CAAC,KAAK,OAAO,YAAY,MAAM,GAAG,EAAE,CAAC,CAAC;AAClJ,YAAI,gBAAgB,QAAW;AAC7B,kBAAQ,aAAa,OAAO,IAAI;AAChC,kBAAQ,aAAa,UAAU,SAAS,IAAI,aAAa,QAAQ,IAAI,aAAa,QAAQ,IAAI;AAC9F,kBAAQ,aAAa,UAAU,YAAY,IAAI,aAAa,WAAW;AACvE,kBAAQ,aAAa,UAAU,WAAW,IAAI,aAAa,UAAU;AACrE,kBAAQ,aAAa,UAAU,cAAc,IAAI,aAAa,aAAa;AAC3E,kBAAQ,aAAa,UAAU,eAAe,IAAI,aAAa,WAAW;QAC5E;MACF,CAAC;IACH,CAAC;AAED,SAAK,aAAa,IAAI,yBAAwB,KAAK,iBAAiB;EAEtE;EAEO,aAAU;AACf,QAAI,KAAK,sBAAsB;AAAG;AAClC,SAAK,qBAAqB,KAAK,qBAAqB;AACpD,SAAK,mBAAmB,KAAK,mBAAmB;AAChD,SAAK,WAAW,KAAK,QAAQ,CAAC,QAAO;AACnC,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,aAAa,IAAI,SAAS,IAAI;MACpC;IAKF,CAAC;AAMD,SAAK,sBAAqB;EAC5B;EAEO,aAAU;AACf,QAAI,KAAK,oBAAoB;AAAG;AAChC,SAAK,qBAAqB,KAAK,qBAAqB;AACpD,SAAK,mBAAmB,KAAK,mBAAmB;AAChD,SAAK,WAAW,KAAK,QAAQ,CAAC,QAAO;AACnC,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,aAAa,IAAI,SAAS,IAAI;MACpC;IAKF,CAAC;AAOD,SAAK,sBAAqB;EAC5B;;;uCA7QW,+BAA4B,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAA5B,+BAA4B,WAAA,CAAA,CAAA,2BAAA,CAAA,GAAA,QAAA,EAAA,MAAA,QAAA,cAAA,gBAAA,YAAA,cAAA,YAAA,cAAA,+BAAA,iCAAA,sBAAA,uBAAA,GAAA,UAAA,CAAA,8BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,cAAA,EAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,WAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,SAAA,UAAA,GAAA,CAAA,aAAA,IAAA,WAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,SAAA,qBAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,uBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,aAAA,OAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,OAAA,wCAAA,SAAA,uBAAA,OAAA,aAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,aAAA,GAAA,kBAAA,QAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,SAAA,YAAA,GAAA,6BAAA,wBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,QAAA,GAAA,6BAAA,wBAAA,WAAA,GAAA,SAAA,SAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,qBAAA,CAAA,GAAA,UAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACRzC,QAAA,yBAAA,GAAA,SAAA,EAAS,GAAA,SAAA;AAeD,QAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,MAAA,CAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA;AAWI,QAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA,EAAuD,GAAA,6CAAA,GAAA,GAAA,OAAA,CAAA;AAiD3D,QAAA,uBAAA,EAAM,EACA;AAGd,QAAA,qBAAA,GAAA,6CAAA,IAAA,GAAA,OAAA,CAAA;;;AAjE6B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,oBAAA,SAAA,CAAA;AAYc,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,mBAAA;AAuBT,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,yBAAA;AA8BL,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,SAAA,CAAA;;;;;;6EDxEhB,8BAA4B,EAAA,WAAA,gCAAA,UAAA,iHAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;AGLrC,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAoB,GAAA,GAAA,EAEf,GAAA,QAAA;AAAS,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAS;AACxC,IAAA,yBAAA,GAAA,GAAA;AAAI,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AACpB,IAAA,oBAAA,GAAA,KAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAHc,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,WAAA,GAAA;AACR,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,QAAA,GAAA;AACD,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,QAAA,QAAA,QAAA,QAAA,GAAA,wBAAA;;;;;AAGP,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6F,GAAA,MAAA,EAAA;AACpE,IAAA,iBAAA,GAAA,gBAAA;AAAa,IAAA,uBAAA;AACpC,IAAA,oBAAA,GAAA,KAAA,CAAA;AACF,IAAA,uBAAA;;;;AADK,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,OAAA,aAAA,CAAA,EAAA,QAAA,OAAA,aAAA,CAAA,EAAA,SAAA,GAAA,wBAAA;;;;;AAbT,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAqD,GAAA,MAAA,CAAA;AAC1B,IAAA,iBAAA,CAAA;AAAoC,IAAA,uBAAA;AAC7D,IAAA,yBAAA,GAAA,WAAA,CAAA;AACE,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,gBAAA,CAAA,EAAgD,GAAA,mDAAA,GAAA,GAAA,OAAA,CAAA;AAYlD,IAAA,uBAAA,EAAU;;;;AAde,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,CAAA,EAAA,kBAAA,EAAA;AAEQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;AAQG,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,gBAAA,OAAA,OAAA,OAAA,aAAA,UAAA,KAAA,OAAA,aAAA,CAAA,EAAA,SAAA;;;;;AAQpC,IAAA,yBAAA,GAAA,MAAA;AAA4D,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,WAAA,WAAA,OAAA,WAAA,QAAA,EAAA;;;;;AAF9D,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,QAAA,CAAA;AACF,IAAA,uBAAA;;;;AAD4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,aAAA;;;ADJtB,IAAO,+BAAP,MAAO,8BAA4B;EAavC,YAAmB,cAAmC,WAAkC,eAA4B;AAAjG,SAAA,eAAA;AAAmC,SAAA,YAAA;AAAkC,SAAA,gBAAA;AAXxF,SAAA,mBAAmB,CAAC,aAAa,SAAS,SAAS,SAAS,aAAa;AAOzE,SAAA,qBAAqB;AACd,SAAA,iBAAsB,CAAA;AAC7B,SAAA,YAAY;AACL,SAAA,eAAsB,CAAA;EAC4F;EAEzH,WAAQ;AACN,SAAK,iBAAiB,KAAK;AAC3B,SAAK,eAAe,KAAK,gBAAgB,WAAW,KAAK,OAAO,SAAM;AACpE,UAAI,IAAI,UAAU;AAChB,eAAO;MACT;IACF,CAAC;AACD,YAAQ,IAAI,mBAAmB,KAAK,YAAY;EAClD;EAEO,mBAAmB,MAAI;AAC5B,WAAO,KAAK,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI;EAC3G;EAEO,cAAc,KAAG;AACtB,WAAQ,IAAI,UAAU,QAAQ,IAAI,UAAU,MAAM,MAAM,WAAW,IAAI,MAAM,CAAC;EAChF;EAEO,YAAY,KAAG;AACpB,SAAK,kBAAkB;AAEvB,SAAK,eAAe,mBAAmB,IAAI;EAC7C;;;uCArCW,+BAA4B,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA5B,+BAA4B,WAAA,CAAA,CAAA,2BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,SAAA,YAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wCAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,uBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,QAAA,CAAA,GAAA,UAAA,SAAA,sCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACfzC,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,OAAA,CAAA,EAAqD,GAAA,6CAAA,GAAA,GAAA,OAAA,CAAA;;;AAA9B,QAAA,qBAAA,SAAA,IAAA,gBAAA,OAAA,OAAA,IAAA,aAAA,UAAA,CAAA;AAkBpB,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,mBAAA,SAAA,IAAA,eAAA,iBAAA,OAAA,OAAA,IAAA,eAAA,cAAA,UAAA,KAAA,IAAA,eAAA,aAAA,kBAAA,MAAA,aAAA;;yoVDXW;MACV,QAAQ,gBAAgB;QACtB,MAAM,aAAa,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QAC3D,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WAAW,0BAA0B,QAAQ,sCAAsC,CAAC;OACrF;MACF,EAAA,CAAA;EAAA;;;6EAEU,8BAA4B,EAAA,WAAA,gCAAA,UAAA,iHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGXnC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA6C,IAAA,uBAAA;;;;AAA7C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,MAAA,GAAA;;;;;;AAGnC,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,SAAA,SAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,UAAA,gBAAA,OAAA,aAAA,uBAAA,gBAAA,YAAA,OAAA,aAAA,uBAAA,OAAA;AAAmI,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AAFxK,IAAA,uBAAA;;;;AAAgD,IAAA,qBAAA,cAAA,OAAA,aAAA,uBAAA,cAAA,EAAiE,sBAAA,OAAA;;;;;AAFrH,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,OAAA,EAAA;AAEnC,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA;AAGA,IAAA,yBAAA,GAAA,QAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS,EAQL;;;;;AAZD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,eAAA,QAAA,WAAA,eAAA,EAAA;AAEK,IAAA,oBAAA;AAAA,IAAA,iCAAA,aAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,WAAA,QAAA,OAAA,OAAA,OAAA,eAAA,WAAA,KAAA,YAAA,IAAA,cAAA,WAAA,EAAA;AACN,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,GAAA;;;;;AAcN,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAoD,IAAA,iBAAA,CAAA;AAAiD,IAAA,uBAAA;;;;AAAjD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,UAAA,GAAA;;;;;AAK9C,IAAA,yBAAA,GAAA,MAAA;AAAyC,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,WAAA,UAAA,GAAA;;;;;AACrC,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,MAAA,WAAA,UAAA,GAAA;;;;;AAJR,IAAA,yBAAA,GAAA,MAAA;AAEE,IAAA,qBAAA,GAAA,iEAAA,GAAA,GAAA,QAAA,EAAA,EAAwC,GAAA,iEAAA,GAAA,GAAA,QAAA,EAAA;AAIxC,IAAA,uBAAA;;;;AAJO,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;AACI,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA;AAAwC,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,QAAA;;;;;AAA4B,IAAA,yBAAA,GAAA,MAAA;AAAwC,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA,QAAA;;;;;AAD5G,IAAA,yBAAA,GAAA,MAAA;AACA,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,QAAA,EAAA;AAAmE,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,QAAA,EAAA;AACtE,IAAA,uBAAA;;;;AADS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;AAAoE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,IAAA;;;;;AAD3E,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,QAAA,EAAA;;;;AAAO,IAAA,qBAAA,QAAA,WAAA,aAAA,QAAA,WAAA,aAAA,IAAA;;;;;AATb,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,0DAAA,GAAA,GAAA,QAAA,EAAA,EACkJ,GAAA,iEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAWpJ,IAAA,uBAAA;;;;;AAXK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,KAAA,EAA0H,YAAA,iBAAA;;;;;AAa7H,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,WAAA,kBAAA,GAAA;;;;;AAhBJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,EAAA,EAAiE,GAAA,2DAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAiBnE,IAAA,uBAAA;;;;;AAjBQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,iBAAA,SAAA,EAAyC,YAAA,cAAA;;;;;AAsBjD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAqD,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AACrD,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAmE,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;AASnE,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAuC,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,uBAAA,OAAA,GAAA;;;;;AAKnC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,oBAAA,GAAA,cAAA,EAAA,EAAsE,GAAA,cAAA,EAAA,EACA,GAAA,cAAA,EAAA;AAExE,IAAA,uBAAA;;;AAHiD,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,CAAA;;;;;AAG/C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,oBAAA,GAAA,cAAA,EAAA,EAIa,GAAA,cAAA,EAAA,EAKA,GAAA,cAAA,EAAA;AAMf,IAAA,uBAAA;;;;AAdI,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,EAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,MAAA,CAAA,EAAmH,OAAA,WAAA,cAAA,QAAA,MAAA,GAAA,EACjD,SAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,QAAA,WAAA,cAAA,WAAA,cAAA,KAAA,QAAA,GAAA;AAIlE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,WAAA,cAAA,cAAA,WAAA,YAAA,OAAA,WAAA,cAAA,KAAA,CAAA,EAAqH,OAAA,WAAA,cAAA,aAAA,MAAA,GAAA,EAC9C,SAAA,WAAA,cAAA,aAAA,WAAA,cAAA,WAAA,cAAA,UAAA,WAAA,YAAA,OAAA,WAAA,cAAA,QAAA,QAAA,GAAA;AAIvE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,SAAA,WAAA,YAAA,OAAA,WAAA,cAAA,KAAA,CAAA,EAAqJ,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,QAAA,MAAA,GAAA,EACrE,SAAA,WAAA,cAAA,UAAA,WAAA,cAAA,QAAA,WAAA,cAAA,GAAA;;;;;AAdpF,IAAA,qBAAA,GAAA,mEAAA,GAAA,IAAA,QAAA,EAAA;;;;AACG,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,MAAA,WAAA,gBAAA,IAAA;;;;;AAmBL,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEgC,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA;;;;;AAArC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,WAAA,SAAA,CAAA;;;;;AAChC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAE8C,IAAA,iBAAA,GAAA,OAAA;AAAI,IAAA,uBAAA;;;;;AAClD,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEiC,IAAA,iBAAA,GAAA,OAAA;AAAM,IAAA,uBAAA;;;;;AAEvC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,aAAA,GAAA;;;;;AA3CN,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,OAAA,EAAA;AAInC,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EACgV,GAAA,4DAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAKtT,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAuBM,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAGa,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA,EAGb,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAMlC,IAAA,uBAAA,EAAM;;;;;;AAxCD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,MAAA,WAAA,gBAAA,SAAA,WAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,SAAA,WAAA,WAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,IAAA,EAA2T,YAAA,cAAA;AA2B3T,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,UAAA,KAAA,WAAA,cAAA,OAAA,WAAA,cAAA,UAAA,WAAA,cAAA,SAAA,WAAA,cAAA,WAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,GAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,WAAA,WAAA,iBAAA,aAAA,WAAA,UAAA,KAAA,MAAA,UAAA,WAAA,aAAA,QAAA,WAAA,aAAA,WAAA,WAAA,iBAAA,cAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,IAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,cAAA,UAAA,WAAA,cAAA,SAAA,WAAA,cAAA,UAAA,WAAA,OAAA,QAAA,GAAA,MAAA,MAAA,WAAA,OAAA,QAAA,GAAA,MAAA,GAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,cAAA,QAAA,WAAA,cAAA,EAAA;;;;;AASP,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA,EAAO;;;;AAAhD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,YAAA,CAAA,EAAA,OAAA,EAAA;;;;;AAEjE,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAgE,GAAA,QAAA,EAAA;AAE5D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;;AAH8B,IAAA,qBAAA,SAAA,YAAA,MAAA;AAEnC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,MAAA,GAAA,GAAA;;;;;AAKJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAC3D,IAAA,uBAAA,EAAO;;;;AADoD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG/D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAMT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAC1D,IAAA,uBAAA,EAAO;;;;AADmD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,6BAAA,CAAA,GAAA,EAAA;;;;;AAG9D,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,mBAAA,GAAA,GAAA;;;;;AAFJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AAJuC,IAAA,qBAAA,SAAA,YAAA,mBAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,6BAAA,CAAA,MAAA,MAAA;;;;;AAOT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAO;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,EAAA;;;;;AAE9D,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFE,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,YAAA,cAAA,MAAA,YAAA,WAAA,SAAA,YAAA,cAAA,YAAA,YAAA,cAAA,MAAA,YAAA,cAAA,cAAA,YAAA,WAAA,KAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,kBAAA,YAAA,MAAA,GAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA;;;;;AALuC,IAAA,qBAAA,SAAA,YAAA,MAAA;AAC9B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,iBAAA,MAAA;;;;;AAOX,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AACA,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;AAMF,IAAA,yBAAA,GAAA,KAAA,EAAsD,GAAA,MAAA,EAAA;AACpB,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AACnD,IAAA,oBAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAFkC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,WAAA,GAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,SAAA,QAAA,SAAA,QAAA,GAAA,wBAAA;;;;;AAHP,IAAA,yBAAA,GAAA,WAAA,EAAA;AACE,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,OAAA,EAAA;AAIF,IAAA,uBAAA;;;;AAJwB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;AAQtB,IAAA,yBAAA,GAAA,MAAA;AAA4D,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA;;;;AAA9C,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,YAAA,WAAA,OAAA,YAAA,QAAA,EAAA;;;;;AAF9D,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;AAD4B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,kBAAA,OAAA,OAAA,OAAA,eAAA,aAAA;;;AD5JtB,IAAO,gCAAP,MAAO,+BAA6B;EAcxC,YACS,cACA,WACA,eAA4B;AAF5B,SAAA,eAAA;AACA,SAAA,YAAA;AACA,SAAA,gBAAA;AAfT,SAAA,mBAAmB,CAAC,aAAa,SAAS,SAAS,SAAS,aAAa;AAIlE,SAAA,UAAU;AACV,SAAA,UAAU;AACV,SAAA,UAAU;AACjB,SAAA,qBAAqB;AACd,SAAA,iBAAsB,CAAA;AAC7B,SAAA,YAAY;AACL,SAAA,eAAsB,CAAA;EAKa;EAE1C,WAAQ;AACN,SAAK,iBAAiB,KAAK;AAE3B,SAAK,eAAe,KAAK,gBAAgB,WAAW,KAAK,OAAO,SAAM;AACpE,UAAI,IAAI,UAAU;AAChB,eAAO;MACT;IACF,CAAC;AACD,YAAQ,IAAI,mBAAmB,KAAK,YAAY;EAClD;EAEO,mBAAmB,MAAI;AAC5B,WAAO,KAAK,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,QAAQ,KAAK,IAAI;EAC3G;EAEO,cAAc,KAAG;AACtB,WAAQ,IAAI,UAAU,QAAQ,IAAI,UAAU,MAAM,MAAM,WAAW,IAAI,MAAM,CAAC;EAChF;EAEO,YAAY,KAAG;AACpB,SAAK,kBAAkB;AAEvB,SAAK,eAAe,mBAAmB,IAAI;EAC7C;EAEO,eAAe,KAAG;AACvB,QAAI,WAAW;AACf,QAAI,OAAO,QAAQ,OAAO,IAAI;AAC5B,cAAQ,IAAI,YAAW,GAAI;QACzB,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;QACF,KAAK;AACH,qBAAW,KAAK,aAAa,uBAAuB;AACpD;MACJ;IACF;AACA,WAAO;EACT;EAEO,SAAS,KAAG;AACjB,WAAO,OAAQ;EACjB;EAEA,WAAW,KAAG;AACZ,QAAI,IAAI,YAAY,IAAI;AAAU,aAAO;AACzC,QAAI,IAAI,aAAa,KAAK,IAAI,aAAa;AAAG,aAAO;AACrD,WAAO;EACT;;;uCAtEW,gCAA6B,4BAAA,YAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAA7B,gCAA6B,WAAA,CAAA,CAAA,4BAAA,CAAA,GAAA,QAAA,EAAA,cAAA,gBAAA,MAAA,OAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,eAAA,EAAA,GAAA,CAAA,GAAA,cAAA,WAAA,GAAA,SAAA,MAAA,GAAA,CAAA,WAAA,IAAA,aAAA,IAAA,yBAAA,IAAA,GAAA,gBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,QAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,qBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,SAAA,GAAA,kBAAA,GAAA,CAAA,YAAA,IAAA,SAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,aAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,GAAA,YAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,QAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,mBAAA,uBAAA,GAAA,CAAA,WAAA,IAAA,SAAA,uBAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,SAAA,cAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wCAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,GAAA,WAAA,oBAAA,GAAA,CAAA,OAAA,wCAAA,SAAA,uBAAA,OAAA,IAAA,GAAA,cAAA,sBAAA,SAAA,GAAA,MAAA,GAAA,CAAA,OAAA,wCAAA,OAAA,IAAA,GAAA,kBAAA,QAAA,GAAA,SAAA,cAAA,oBAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,GAAA,QAAA,cAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,cAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,UAAA,sBAAA,yBAAA,iBAAA,GAAA,CAAA,SAAA,kEAAA,GAAA,QAAA,UAAA,GAAA,CAAA,SAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,sCAAA,GAAA,MAAA,GAAA,CAAA,SAAA,kDAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,iBAAA,uBAAA,GAAA,CAAA,QAAA,eAAA,GAAA,WAAA,GAAA,KAAA,GAAA,CAAA,SAAA,kEAAA,GAAA,MAAA,GAAA,CAAA,QAAA,eAAA,GAAA,WAAA,OAAA,OAAA,GAAA,CAAA,GAAA,UAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,aAAA,QAAA,cAAA,GAAA,CAAA,GAAA,SAAA,UAAA,sBAAA,eAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,QAAA,GAAA,CAAA,SAAA,QAAA,SAAA,wBAAA,GAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,eAAA,UAAA,GAAA,SAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,WAAA,IAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,QAAA,CAAA,GAAA,UAAA,SAAA,uCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AChB1C,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAqD,GAAA,SAAA,CAAA;AAGjD,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA;;AAoBxC,QAAA,kCAAA,GAAA,CAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,CAAA,EAAmD,GAAA,6CAAA,GAAA,GAAA,MAAA,EAAA;;AAuBrD,QAAA,kCAAA,GAAA,EAAA;AACE,QAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,MAAA,EAAA,EAAoD,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAStD,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA;;AAmDxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AAQxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,QAAA,kCAAA,IAAA,EAAA;AACE,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,CAAA,EAAsC,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,QAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,IAAA,8CAAA,GAAA,GAAA,MAAA,EAAA;AAGvE,QAAA,uBAAA,EAAQ;AAGV,QAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,WAAA,EAAA,EAA8E,IAAA,+CAAA,GAAA,GAAA,OAAA,EAAA;;;AAlK3B,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AA4J3B,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AAKO,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,gBAAA,OAAA,OAAA,IAAA,aAAA,UAAA,CAAA;AAQ7C,QAAA,oBAAA;AAAA,QAAA,qBAAA,SAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,mBAAA,SAAA,IAAA,eAAA,iBAAA,OAAA,OAAA,IAAA,eAAA,cAAA,UAAA,KAAA,IAAA,eAAA,aAAA,kBAAA,MAAA,aAAA;;uoVDpKW;MACV,QAAQ,gBAAgB;QACtB,MAAM,aAAa,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QAC3D,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WAAW,0BAA0B,QAAQ,sCAAsC,CAAC;OACrF;MACF,EAAA,CAAA;EAAA;;;6EAGU,+BAA6B,EAAA,WAAA,iCAAA,UAAA,mHAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AnBkBtB,IAAA,yBAAA,GAAA,MAAA;AAA2C,IAAA,iBAAA,CAAA;AAAmC,IAAA,uBAAA;;;;AAAnC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,cAAA,KAAA,GAAA;;;;;AAC3C,IAAA,yBAAA,GAAA,MAAA;AAAyC,IAAA,iBAAA,CAAA;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,YAAA,KAAA,GAAA;;;;;AACzC,IAAA,yBAAA,GAAA,MAAA;AAAmC,IAAA,iBAAA,CAAA;AAA2B,IAAA,uBAAA;;;;AAA3B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,MAAA,KAAA,GAAA;;;;;AACnC,IAAA,yBAAA,GAAA,MAAA;AAA0C,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA;;;;AAA9B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,YAAA,GAAA;;;;;;AA8BtC,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAuD,GAAA,UAAA,EAAA;AAEnD,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAAgF,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA,EAAS;;;;AAAvH,IAAA,oBAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,sBAAA,SAAA;AAA8D,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,sBAAA,SAAA;;;;;;AAkBzG,IAAA,yBAAA,GAAA,QAAA,EAAA,EAA6C,GAAA,OAAA,EAAA;AACsB,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;AAA5F,IAAA,uBAAA,EACuG;;;;AAArF,IAAA,oBAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,sBAAA,mBAAA;;;;;;AAxBxB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0D,GAAA,OAAA,EAAA;AAEtD,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,QAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAwB,GAAA,OAAA,EAAA;AAEpB,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;AAD7B,IAAA,uBAAA,EAC6E;AAE/E,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAwB,GAAA,OAAA,EAAA;AAEpB,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAa,aAAa,CAAC;IAAA,CAAA;AADtC,IAAA,uBAAA,EAC+H;AAEjI,IAAA,yBAAA,GAAA,QAAA,EAAA,EAAoC,GAAA,KAAA,EAAA,EACG,GAAA,OAAA,EAAA;AACa,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAa,WAAW,CAAC;IAAA,CAAA;AAAlF,IAAA,uBAAA,EAGgC,EAC9B;AAEN,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,QAAA,EAAA;AAIF,IAAA,uBAAA,EAAM;;;;AAxBqB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,OAAA,WAAA;AAUiC,IAAA,oBAAA,CAAA;AAAA,IAAA,gCAAA,cAAA,OAAA,aAAA,sBAAA,kBAAA;AAKpD,IAAA,oBAAA,CAAA;AAAA,IAAA,gCAAA,OAAA,OAAA,aAAA,uBAAA,YAAA;AACA,IAAA,gCAAA,cAAA,OAAA,aAAA,uBAAA,YAAA;AAIc,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,gBAAA;;;;;AAkB9B,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAyD,IAAA,yBAAA,GAAA,QAAA,EAAA;AACpB,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA;AAAQ,IAAA,iBAAA,GAAA,UAAA;AACpE,IAAA,uBAAA;;;;AAFE,IAAA,oBAAA;AAAA,IAAA,6BAAA,aAAA,QAAA,eAAA,YAAA,OAAA,KAAA,GAAA;AACqC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,UAAA;;;;;;AAKnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,6EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,OAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;;;;AAAlD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,sBAAA,WAAA;;;;;AAW5B,IAAA,yBAAA,GAAA,uBAAA,EAAoE,GAAA,QAAA,EAAA;AAEhE,IAAA,iBAAA,CAAA;AAEF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA,EAAO;;;;;AAHvD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,sBAAA,YAAA,SAAA;AAGuB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,cAAA;;;;;;AAG7B,IAAA,yBAAA,GAAA,UAAA,EAAA;AACe,IAAA,qBAAA,SAAA,SAAA,8EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,OAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;;;;AAAlD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,sBAAA,WAAA;;;;;AAIzC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAEE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,kBAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,qBAAA,GAAA,6DAAA,GAAA,GAAA,QAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA+B,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACtC,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;;AALK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,eAAA,MAAA,QAAA,eAAA,KAAA,QAAA,eAAA,EAAA;AAIsB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,cAAA,cAAA,MAAA,QAAA,SAAA,GAAA,wBAAA;;;;;AAP7B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,KAAA,EAAA;AAQF,IAAA,uBAAA;;;;AARM,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,SAAA;;;;;AAUJ,IAAA,oBAAA,GAAA,8BAAA,EAAA;;;;;AAA0C,IAAA,qBAAA,QAAA,OAAA,QAAA,QAAA,gBAAA,CAAA,EAAuC,gBAAA,OAAA,kBAAA;;;;;AAIjF,IAAA,oBAAA,GAAA,gCAAA,EAAA;;;;AAA4C,IAAA,qBAAA,gBAAA,OAAA,kBAAA;;;;;AAG5C,IAAA,oBAAA,GAAA,+BAAA,EAAA;;;;AAA2C,IAAA,qBAAA,gBAAA,OAAA,kBAAA;;;;;AAG3C,IAAA,oBAAA,GAAA,+BAAA,EAAA;;;;AAA2C,IAAA,qBAAA,gBAAA,OAAA,kBAAA;;;;;;AAG3C,IAAA,yBAAA,GAAA,8BAAA,EAAA;AAEE,IAAA,qBAAA,cAAA,SAAA,+HAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AACtC,IAAA,uBAAA;;;;AAH0C,IAAA,qBAAA,gBAAA,OAAA,kBAAA;;;;;;AAI1C,IAAA,yBAAA,GAAA,gCAAA,EAAA;AAEE,IAAA,qBAAA,cAAA,SAAA,mIAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAc,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AACtC,IAAA,uBAAA;;;;AAH4C,IAAA,qBAAA,gBAAA,OAAA,kBAAA;;;;;AAK5C,IAAA,oBAAA,GAAA,+BAAA,EAAA;;;;;AAA2C,IAAA,qBAAA,QAAA,OAAA,QAAA,QAAA,gBAAA,CAAA,EAAuC,gBAAA,OAAA,kBAAA;;;;;AAIlF,IAAA,oBAAA,GAAA,8BAAA,EAAA;;;;;AAA0C,IAAA,qBAAA,QAAA,OAAA,QAAA,QAAA,gBAAA,CAAA,EAAuC,gBAAA,OAAA,kBAAA;;;;;AAIjF,IAAA,oBAAA,GAAA,6BAAA,EAAA;;;;;AAAyC,IAAA,qBAAA,cAAA,OAAA,UAAA,EAAyB,QAAA,OAAA,QAAA,QAAA,gBAAA,CAAA,EACzB,gBAAA,OAAA,kBAAA;;;;;AAIzC,IAAA,oBAAA,GAAA,6BAAA,EAAA;;;;;AAAyC,IAAA,qBAAA,QAAA,OAAA,QAAA,QAAA,gBAAA,CAAA,EAAuC,gBAAA,OAAA,kBAAA;;;;;AApClF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,+EAAA,GAAA,GAAA,8BAAA,EAAA,EAE0E,GAAA,iFAAA,GAAA,GAAA,gCAAA,EAAA,EAGA,GAAA,gFAAA,GAAA,GAAA,+BAAA,EAAA,EAGA,GAAA,gFAAA,GAAA,GAAA,+BAAA,EAAA,EAGA,GAAA,+EAAA,GAAA,GAAA,8BAAA,EAAA,EAIlC,GAAA,iFAAA,GAAA,GAAA,gCAAA,EAAA,EAIA,GAAA,gFAAA,GAAA,GAAA,+BAAA,EAAA,EAKkC,GAAA,+EAAA,GAAA,GAAA,8BAAA,EAAA,EAIC,GAAA,8EAAA,GAAA,GAAA,6BAAA,EAAA,EAIA,IAAA,+EAAA,GAAA,GAAA,6BAAA,EAAA;AAO7E,IAAA,uBAAA;;;;;AArCK,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,KAAA,OAAA,WAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,MAAA,OAAA,WAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,MAAA,OAAA,WAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,QAAA,QAAA,gBAAA,KAAA,OAAA,OAAA,OAAA,QAAA,QAAA,gBAAA,EAAA,gBAAA,MAAA,OAAA,WAAA;;;;;;AAhFT,IAAA,yBAAA,GAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,KAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,uBAAA,EAAA;AAAqB,IAAA,qBAAA,UAAA,SAAA,kFAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,QAAA,WAA0B,IAAI;IAAA,CAAA,EAAC,UAAA,SAAA,kFAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,aAAA,sBAAA,QAAA,WAA2B,KAAK;IAAA,CAAA;AAClF,IAAA,yBAAA,GAAA,4BAAA;AAEE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,UAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,mBAAA,EAAA,EAAqC,GAAA,GAAA,EAChC,GAAA,QAAA,EAAA;AAC0B,IAAA,iBAAA,CAAA;AAAqD,IAAA,uBAAA;AAChF,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA8B,IAAA,iBAAA,EAAA;AAA4B,IAAA,uBAAA,EAAO,EAC/D;AAEN,IAAA,yBAAA,IAAA,OAAA,EAAA;AAEE,IAAA,qBAAA,IAAA,oEAAA,GAAA,GAAA,yBAAA,EAAA;AAOF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,UAAA,EAAA;AAEF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA,EAA0E,IAAA,kDAAA,IAAA,IAAA,OAAA,EAAA;AAmD5E,IAAA,uBAAA,EAAsB;;;;;AAnFnB,IAAA,qBAAA,WAAA,QAAA,iBAAA,mBAAA;AAE8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,QAAA,OAAA,CAAA;AAIqD,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AAGzE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,QAAA;AAMsB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,aAAA,sBAAA,cAAA,IAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,QAAA,kBAAA,GAAA;AAKR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,YAAA,QAAA,cAAA;AAQjB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,QAAA;AAGgB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,eAAA,MAAA,QAAA,QAAA;AAUK,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,QAAA;;;ADrH1C,IAAO,4BAAP,MAAO,2BAAyB;EAuCpC,YAAmB,gBAAuC,eAAqC,QACtF,eAAqC,cAAmC,aACxE,2BAA8D,UAC7D,OAAsB,cAA+B,eAAqC,aAC3F,mBAA8C,SAAsB;AAJ1D,SAAA,iBAAA;AAAuC,SAAA,gBAAA;AAAqC,SAAA,SAAA;AACtF,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAmC,SAAA,cAAA;AACxE,SAAA,4BAAA;AAA8D,SAAA,WAAA;AAC7D,SAAA,QAAA;AAAsB,SAAA,eAAA;AAA+B,SAAA,gBAAA;AAAqC,SAAA,cAAA;AAC3F,SAAA,oBAAA;AAA8C,SAAA,UAAA;AAxChD,SAAA,oBAAoB;AAMpB,SAAA,SAAgB,CAAA;AAGhB,SAAA,YAAmB,CAAA;AACnB,SAAA,2BAAkC,CAAA;AAClC,SAAA,aAAoB,CAAA;AACpB,SAAA,iBAAwB,CAAA;AACxB,SAAA,mBAAmB;AACnB,SAAA,qBAAqB;AACrB,SAAA,UAAU;AACV,SAAA,aAAa;AACb,SAAA,cAAmB;AACnB,SAAA,gBAAgB;AAChB,SAAA,aAAa;AACb,SAAA,iBAAiB;AACjB,SAAA,aAAa;AACb,SAAA,cAAc;AACd,SAAA,UAAU,uBAAO,OAAO,IAAI;AAC5B,SAAA,QAAQ,CAAA;AAGP,SAAA,sBAAsB;AACtB,SAAA,aAAkB;AAC1B,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAG7D,SAAA,aAAkB;AAClB,SAAA,aAAoB,CAAA;AACpB,SAAA,gCAAuC,CAAA;AAQ5C,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AAC/E,SAAK,aAAa,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY,CAAC;AAC7E,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,iBAAkB,KAAK,YAAY,QAAQ,YAAY,gBAAgB,KAAK,KAAK,kBAAmB,KAAK,gBAAgB,gBAAgB,IAAI,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AACvM,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OACK;AACH,WAAK,aAAa,wBAAuB;IAC3C;AACA,SAAK,0BAAyB;AAC9B,iBAAa,QAAQ,eAAe,mBAAmB;EACzD;EACA,WAAQ;AACN,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,sBAAsB,eAAe,EAAE;EAC7F;EACO,4BAAyB;AAC9B,SAAK,iBAAiB,KAAK,eAAe;AAE1C,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,gBAAgB;AAC7E,SAAK,mBAAmB,KAAK,YAAY,QAAQ,YAAY,kBAAkB;AAC/E,SAAK,kBAAkB,OAAO,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAChG,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACxF,SAAK,kBAAkB,OAAO,aAAa,KAAK,aAAa;AAC7D,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,eAAe,IAAI;AACjD,SAAK,kBAAkB,OAAO,YAAY,KAAK,eAAe,gBAAgB;AAC9E,SAAK,kBAAkB,OAAO,mBAAmB,KAAK,eAAe,gBAAgB;AACrF,SAAK,kBAAkB,OAAO,mBAAoB,KAAK,oBAAoB,KAAK,mBAAoB,OAAO;AAE3G,SAAK,eAAe,eAAe,KAAK,kBAAkB,MAAM,EAAE,UAAU,UAAO;AACjF,WAAK,eAAe,eAAe,UAAU,KAAK,aAAa,qBAAqB,CAAC,EAAE;AACvF,WAAK,eAAe,eAAe,4BAA4B,IAAI,KAAK,eAAe,eAAe,QAAQ,KAAK,OAAK,EAAE,mBAAmB,KAAK,eAAe,eAAe,mBAAmB;AACnM,WAAK,iBAAiB,KAAK,eAAe;AAC1C,WAAK,eAAe,QAAQ,QAAQ,OAAK,EAAE,WAAW,KAAK;AAC3D,WAAK,kBAAiB;IACxB,CAAC;EACH;EAEO,kBAAe;AACpB,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,wBAAuB;IAC3C,CAAC;EACH;EAEA,kBAAe;AACb,SAAK,MAAM,SAAS,cAAc,KAAK,aAAa,sBAAsB,eAAe,EAAE;AAC3F,QAAI;AACF,WAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,aAAK,aAAa,cAAc,KAAK;AACrC,aAAK,aAAa,yBAAwB;MAC5C,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;MACjC,CAAC;IACH,SAAS,OAAO;AACd,cAAQ,IAAI,KAAK;IACnB;AACA,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KAAK,OAAK,EAAE,aAAa,mBAAmB;EACjG;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEO,qBAAqB,MAAI;AAC9B,SAAK,WAAW;AAChB,SAAK,sBAAsB;AAC3B,SAAK,sBAAsB,mBAAmB,KAAK;AACnD,SAAK,SAAS,MAAM,KAAK,iBAAiB,MAAM;AAChD,SAAK,eAAc;EACrB;EAEO,oBAAiB;AACtB,SAAK,iBAAiB,KAAK,eAAe;AAC1C,SAAK,eAAe,mBAAmB;AACvC,SAAK,wBAAwB,IAAI,sBAAqB;AACtD,SAAK,sBAAsB,YAAY,KAAK,eAAe;AAC3D,SAAK,sBAAsB,WAAW;AACtC,SAAK,cAAc;AACnB,SAAK,sBAAsB,SAAS;AACpC,SAAK,YAAY;AACjB,SAAK,sBAAsB,eAAe,KAAK;AAC/C,UAAM,mBAAmB,KAAK,eAAe,WAAW,KAAK,eAAe,WAAW;AACvF,UAAM,sBAAsB,KAAK,eAAe,mBAAmB,KAAK,eAAe,mBAAmB;AAC1G,UAAM,gBAAgB,KAAK,eAAe,aAAa,KAAK,eAAe,aAAa;AACxF,SAAK,sBAAsB,WAAW,KAAK,eAAe,8BAA8B,OAAO,KAAK,eAAe,2BAA2B,WAAW;AACzJ,SAAK,sBAAsB,aAAa,KAAK,eAAe,8BAA8B,OAAO,KAAK,eAAe,2BAA2B,aAAa;AAC7J,SAAK,sBAAsB,mBAAmB,KAAK,eAAe,8BAA8B,OAAO,KAAK,eAAe,2BAA2B,mBAAmB;AACzK,SAAK,qBAAqB;AAE1B,SAAK,gBAAgB,KAAK,eAAe,6BAA6B,KAAK,eAAe,2BAA2B,gBAAgB,KAAK,eAAe;AACzJ,SAAK,gBAAgB,KAAK,oBAAoB,KAAK,aAAa;AAChE,SAAK,sBAAsB,KAAK,eAAe;AAE/C,SAAK,eAAe,YAAY,KAAK,YAAY,EAAE,UAAU,UAAO;AAClE,WAAK,aAAa,KAAK,aAAa;AACpC,WAAK,mBAAkB;IACzB,CAAC;AAED,QAAI,KAAK,eAAe,WAAW,KAAK,eAAe,QAAQ,QAAQ;AACrE,YAAM,mBAAmB,KAAK,eAAe,QAAQ,OAAO,OAAK,EAAE,cAAc,kBAAkB,EAAE,sBAAsB,WAAW;AACtI,WAAK,QAAQ,iBAAiB,OAAO,OAAK,EAAE,mBAAmB,KAAK,eAAe,2BAA2B,eAAe;AAC7H,WAAK,eAAe,UAAU;IAChC;EACF;EAEO,qBAAkB;AACvB,SAAK,SAAS,CAAA;AACd,SAAK,eAAe,cAAc,CAAA;AAClC,SAAK,sBAAsB,kBAAkB,KAAK,eAAe,2BAA2B;AAC5F,SAAK,sBAAsB,aAAa,KAAK,aAAa;AAC1D,SAAK,sBAAsB,WAAW,KAAK,cAAc;AACzD,SAAK,sBAAsB,mBAAmB,KAAK,YAAY,SAAS,eAAe,QAAQ,cAAc;AAC7G,SAAK,sBAAsB,mBAAoB,KAAK,oBAAoB,KAAK,mBAAoB,OAAO;AACxG,QAAI,KAAK,eAAe,QAAQ,KAAK,eAAe;AAClD,WAAK,sBAAsB,eAAW,eAAAC,SAAO,KAAK,WAAW,EAAE,OAAO,qBAAqB;AAC7F,QAAI,KAAK,aAAa,QAAQ,KAAK,aAAa;AAC9C,WAAK,sBAAsB,aAAS,eAAAA,SAAO,KAAK,SAAS,EAAE,OAAO,qBAAqB;AAEzF,SAAK,eAAe,iBAAiB,KAAK,qBAAqB,EAAE,UAAU;MAAC,MAAK,CAAC,SAAQ;AACxF,aAAK,eAAe,eAAe,KAAK,aAAa,YAAY;AACjE,aAAK,aAAa,KAAK,gBAAgB,KAAK,aAAa,YAAY,KAAK,KAAK,aAAa,YAAY,EAAE,SAAS,IAAI,KAAK,aAAa,YAAY,EAAE,CAAC,IAAI;AAC5J,aAAK,aAAa,KAAK,aAAa,KAAK,WAAW,YAAY,IAAI,CAAA;AAEpE,cAAM,SAAS,CAAA;AACf,aAAK,MAAM,QAAQ,OAAI;AACrB,iBAAO,KAAK,EAAE,KAAK;AACnB,qBAAW,MAAK;AACd,cAAE,WAAW;AAEb,iBAAK,sBAAsB;AAE3B,iBAAK,sBAAsB,mBAAmB,EAAE;AAChD,iBAAK,eAAc;UACrB,GAAG,GAAG;QACR,CAAC;AACD,YAAI,KAAK,cAAc,gBAAe,GAAI;AAC1C,gBAAM,MAAM;YACV,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;YACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;YACzD,mBAAmB;cACjB;gBACE,QAAQ;gBACR,WAAW,OAAO,KAAK,GAAG;gBAC1B,KAAK;;;;AAGX,eAAK,cAAc,gBAAgB,GAAG,EAAE,UAAU,UAAO;AACvD,oBAAQ,IAAI,IAAI;UAClB,CAAC;QACH;MACA;MAAG,OAAM,MAAK;AACZ,aAAK,qBAAoB;MAC3B;KACD;EACD;EAEO,iBAAc;AACnB,SAAK,eAAe,cAAc,CAAA;AAClC,SAAK,SAAS,CAAA;AACd,SAAK,eAAe,cAAc;AAClC,SAAK,eAAe,aAAa,CAAA;AACjC,SAAK,aAAa;AAClB,SAAK,eAAe,aAAa;AACjC,SAAK,UAAU,KAAK,eAAe,eAAe,aAAa,KAAK,KAAK,eAAe,aAAa,CAAC,EAAE,aAAa;AACrH,SAAK,cAAc,KAAK,eAAe,eAAe,iBAAiB,KAAK,KAAK,eAAe,aAAa,CAAC,EAAE,iBAAiB;AAEjI,SAAK,aAAa,KAAK,eAAe,kBACjC,KAAK,eAAe,eAAe,cACnC,KAAK,eAAe,eAAe,WAAW,SAAS,KACvD,KAAK,eAAe,eAAe,WAAW,CAAC,EAAE,aAAa,KAAK,eAAe,eAAe,WAAW,CAAC,EAAE,aAAa;AAEjI,QAAI,KAAK,WAAW,QAAQ;AAC1B,WAAK,eAAe,aAAc,KAAK,WAAY,OAAO,OAAK,EAAE,gBAAgB,KAAK,sBAAsB,YAAY,EAAE,oBAAoB,KAAK,sBAAsB,gBAAgB;IAC3L;AAEA,QAAI,KAAK,eAAe,WAAW,QAAQ;AACzC,WAAK,eAAe,WAAW,QAAQ,aAAU;AAC/C,aAAK,OAAO,KAAK,QAAQ,YAAY;MACvC,CAAC;AAED,WAAK,SAAS,KAAK,OAAO,OAAO,CAAC,GAAG,MAAM,KAAK,OAAO,QAAQ,CAAC,MAAM,CAAC;AACvE,WAAK,SAAS,KAAK,SAAS,KAAK,MAAM;AACvC,WAAK,OAAO,QAAQ,SAAM;AACxB,aAAK,eAAe,YAAY,KAAK,EAAE,OAAO,IAAG,CAAE;MACrD,CAAC;AACD,WAAK,sBAAqB;IAC5B;EAEF;EAEA,SAAS,MAAI;AACX,SAAK,KAAK,SAAU,GAAG,GAAC;AAEtB,UAAK,IAAI,KAAK,CAAC,IAAM,IAAI,KAAK,CAAC;AAC7B,eAAO;AACT,UAAK,IAAI,KAAK,CAAC,IAAM,IAAI,KAAK,CAAC;AAC7B,eAAO;AACT,aAAO;IACT,CAAC,EAAE,QAAO;AACV,WAAO;EACT;EAEO,wBAAqB;AAC1B,SAAK,qBAAqB;AAC1B,SAAK,YAAY,CAAA;AACjB,SAAK,eAAe,gBAAgB,CAAA;AACpC,SAAK,aAAa,KAAK,MAAM,KAAK,UAAU,KAAK,eAAe,UAAU,CAAC;AAC3E,SAAK,aAAa,KAAK,WAAW,KAAK,OAAK,EAAE,cAAc,QAAQ,EAAE,cAAc,EAAE,EAAE,YAAY;AACpG,SAAK,eAAe,eAAe,KAAK,sBAAsB;AAE9D,QAAI,KAAK,cAAc,GAAG;AAExB,YAAM,gBAAgB,KAAK,WAAW,KAAK,OAAK,EAAE,eAAe,MAAM;AACvE,WAAK,YAAY,KAAK,WAAW,OAAO,OAAK,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,MAAM,KAAK,EAAE;AACrG,WAAK,eAAe,gBAAgB,KAAK,WAAW,OAAO,OAAK,EAAE,aAAa,QAAQ,EAAE,cAAc,YAAY,GAAG;AACtH,WAAK,aAAa,KAAK,WAAW,OAAO,OAAK,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,MAAM,KAAK,MAAM,EAAE,eAAe,UAAU,EAAE,cAAc,YAAY,GAAG;AAEpK,UAAI,iBAAiB,QAAW;AAC9B,aAAK,aAAa,cAAc,WAAW;AAC3C,aAAK,iBAAiB,cAAc,QAAQ;AAC5C,aAAK,oBAAoB,aAAa,cAAc,WAAW;AAC/D,aAAK,oBAAoB,iBAAiB,cAAc,QAAQ;MAClE;IACF,OACK;AACH,UAAI,KAAK,sBAAsB,SAAS,KAAK,sBAAsB,IAAI;AACrE,aAAK,aAAa,KAAK,WAAW,OAAO,OAAK,EAAE,gBAAgB,KAAK,sBAAsB,EAAE,aAAa,SAAS,EAAE,cAAc,YAAY,YAAY,EAAE,cAAc,YAAY,UAAU;MACnM;IACF;AAEA,SAAK,cAAa;EACpB;EAEO,gBAAa;AAClB,SAAK,eAAe,aAAa;AACjC,SAAK,eAAe,eAAe;AACnC,QAAI,gBAAgB,KAAK,MAAM,KAAK,UAAU,KAAK,UAAU,CAAC;AAE9D,QAAI,KAAK,eAAe,6BAA6B,UAAU,KAAK,cAAc,GAAG;AACnF,YAAM,gBAAgB,KAAK,aAAa,uBAAuB;AAC/D,WAAK,WAAW,QAAQ,CAAC,SAAS,SAAQ;AACxC,aAAK,eAAe,6BAA6B,QAAQ,CAAC,QAAQ,YAAW;AAC3E,gBAAM,eAAe,KAAK,eAAe,WAAW,KAAK,OAAK,EAAE,gBAAgB,UAAU,EAAE,aAAa,QAAQ,SAAS;AAC1H,gBAAM,UAAU,iBAAiB,UAAU;AAC3C,gBAAM,mBAAmB,UAAU;AACnC,gBAAM,kBAAkB,UAAU;AAClC,gBAAM,gBAAgB,UAAU;AAChC,gBAAM,kBAAkB,UAAU;AAClC,gBAAM,mBAAmB,UAAU;AACnC,cAAI,gBAAgB,QAAW;AAC7B,0BAAc,IAAI,EAAE,OAAO,IAAI,KAAK,eAAe,6BAA6B,OAAO;AACvF,0BAAc,IAAI,EAAE,gBAAgB,IAAI,aAAa,WAAW;AAChE,0BAAc,IAAI,EAAE,eAAe,IAAI,gBAAgB,QAAQ,aAAa,UAAU,KAAK,OAAO,aAAa,UAAU,IAAI,MAAM,OAAO,aAAa,UAAU,KAAK,OAAO,aAAa,UAAU,IAAI;AACxM,0BAAc,IAAI,EAAE,aAAa,IAAK,aAAa,QAAQ,KAAK,UAAa,aAAa,QAAQ,KAAK,QAAQ,aAAa,QAAQ,EAAE,KAAI,KAAM,KAAM,aAAa,QAAQ,IAAI;AAC/K,0BAAc,IAAI,EAAE,eAAe,IAAI,aAAa,UAAU;AAC9D,0BAAc,IAAI,EAAE,gBAAgB,IAAI,aAAa,WAAW;UAClE;QACF,CAAC;MACH,CAAC;IACH;AAEA,YAAQ,KAAK,YAAY;MACvB,KAAK;AACH,aAAK,eAAe,aAAa,IAAI,yBAAwB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,MAAM,CAAC;AAC1H,aAAK,eAAe,eAAe,IAAI,yBAAwB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,MAAM,CAAC;AAC5H,aAAK,eAAe,gBAAgB;AACpC;MACF,KAAK;AACH,wBAAgB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,UAAU;AAChF,aAAK,eAAe,aAAa,IAAI,yBACnC,MAAM,KAAK,IAAI,IAAI,cAAc,IAAI,OAAK,EAAE,WAAW,CAAC,CAAC,EAAE,IAAI,QAAK;AAClE,iBAAO;YACL,eAAe;YACf,gBAAgB,cAAc,KAAK,SAAO,IAAI,eAAe,EAAE,EAAE;YACjE,mBAAoB,cAAc,KAAK,SAAO,IAAI,eAAe,MAAM,IAAI,aAAa,QAAS,IAAI,UAAU,SAAQ,EAAG,YAAW,EAAG,QAAQ,KAAK,KAAK,CAAE,KAAK,SAAY,cAAc,KAAK,OAAK,EAAE,eAAe,MAAM,EAAE,aAAa,QAAS,EAAE,UAAU,SAAQ,EAAG,YAAW,EAAG,QAAQ,KAAK,KAAK,CAAE,EAAE,SAAS;YACxT,eAAgB,cAAc,KAAK,SAAO,IAAI,eAAe,MAAM,IAAI,aAAa,QAAS,IAAI,UAAU,SAAQ,EAAG,YAAW,EAAG,QAAQ,KAAK,KAAK,CAAE,KAAK,SAAY,cAAc,KAAK,OAAK,EAAE,eAAe,MAAM,EAAE,aAAa,QAAS,EAAE,UAAU,SAAQ,EAAG,YAAW,EAAG,QAAQ,KAAK,KAAK,CAAE,EAAE,SAAS;;QAExT,CAAC,CAAC;AAEJ;MACF,KAAK;AACH,aAAK,qBAAoB;AACzB;MACF;AACE,YAAI,KAAK,cAAc,GAAG;AACxB,eAAK,eAAe,gBAAgB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,OAAO;QACnG,OACK;AACH,eAAK,eAAe,gBAAgB;QACtC;AACA,YAAI,KAAK,cAAc,GAAG;AACxB,eAAK,yBAAwB;QAC/B;AACA,YAAI,KAAK,cAAc,IAAI;AACzB,eAAK,qBAAqB,cAAc,SAAS,IAAI,cAAc,CAAC,EAAE,cAAc,IAAI;QAC1F;AACA,wBAAgB,cAAc,OAAO,SAAM;AACzC,cAAK,IAAI,UAAU,iBAAiB,IAAI,UAAU,YAAa;AAC7D,gBAAI,IAAI,UAAU;AAChB,qBAAO;YACT;UACF,OAAO;AACL,mBAAO;UACT;QACF,CAAC;AACD,aAAK,eAAe,aAAa,IAAI,yBAAwB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,MAAM,CAAC;AAC1H,aAAK,eAAe,eAAe;AACnC,gBAAQ,IAAI,KAAK,eAAe,WAAW,YAAY;IAC3D;AAEA,SAAK,QAAQ,KAAK,oBAAoB,gBAAgB,IAAI,mBAAK,KAAK;AACpE,SAAK,QAAQ,KAAK,oBAAoB,gBAAgB,EAAE,aAAa,KAAK;AAC1E,SAAK,cAAc;EACrB;EAEO,uBAAoB;AACzB,QAAI;AACJ,SAAK,eAAe,eAAe,CAAA;AACnC,SAAK,eAAe,qBAAqB,CAAA;AACzC,SAAK,eAAe,yBAAyB;AAC7C,QAAI,gBAAgB,KAAK,MAAM,KAAK,UAAU,KAAK,UAAU,CAAC;AAE9D,QAAI,KAAK,WAAW,QAAQ;AAC1B,WAAK,eAAe,qBAAqB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,YAAY,EAAE,aAAa,QAAQ,EAAE,UAAU,YAAW,EAAG,QAAQ,IAAI,KAAK,CAAC;AAC9K,2BAAqB,cAAc,KAAK,OAAK,EAAE,kBAAkB,IAAI;AACrE,WAAK,eAAe,yBAAyB,sBAAsB,SAAY,mBAAmB,gBAAgB,IAAI;AACtH,sBAAgB,cAAc,OAAO,QAAM,EAAE,cAAc,YAAY,YAAY,EAAE,cAAc,YAAY,cAAc,EAAE,aAAa,QAAQ,EAAE,UAAU,YAAW,EAAG,QAAQ,IAAI,KAAK,CAAC;AAChM,WAAK,eAAe,eAAe,MAAM,KAAK,IAAI,IAAI,cAAc,IAAI,OAAK,EAAE,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,SAAM;AAElH,eAAO;UACL,aAAa,OAAO,cAAc,KAAK,OAAK,EAAE,cAAc,YAAY,YAAY,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,QAAQ,EAAE,YAAY,YAAW,KAAM,WAAW,KAAK,SAAa,MAAM,cAAc,KAAK,OAAK,EAAE,cAAc,YAAY,YAAY,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,QAAQ,EAAE,YAAY,YAAW,KAAM,WAAW,EAAE,QAAQ,IAAK;UACjb,kBAAkB,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,aAAa,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,GAAG,KAAK,CAAC;UACzI,aAAa,cAAc,OAAO,OAAK,EAAE,cAAc,YAAY,YAAY,EAAE,aAAa,QAAQ,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,QAAQ,EAAE,YAAY,YAAW,KAAM,WAAW;;MAE9M,CAAC;IACH;EACF;EAEO,2BAAwB;AAC7B,SAAK,eAAe,UAAU,CAAA;AAC9B,UAAM,kBAAkB,KAAK,MAAM,KAAK,UAAU,KAAK,SAAS,CAAC;AAEjE,QAAI,KAAK,UAAU,QAAQ;AACzB,WAAK,eAAe,UAAU,MAAM,KAAK,IAAI,IAAI,gBAAgB,IAAI,OAAK,EAAE,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,SAAM;AAC/G,eAAO;UACL,aAAc,gBAAgB,KAAK,OAAK,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,IAAI,KAAK,SAAa,gBAAgB,KAAK,OAAK,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,IAAI,EAAE,aAAa,EAAG,MAAM,OAAO,EAAE,CAAC,EAAE,KAAI,IAAK;UAC7O,UAAU,gBAAgB,OAAO,OAAK,EAAE,UAAU,QAAQ,GAAG,KAAK,KAAK,EAAE,eAAe,IAAI;;MAEhG,CAAC;IACH;EACF;EAEO,oBAAoB,IAAE;AAC3B,WAAO,KAAK,eAAe,WAAW,KAAK,OAAK,EAAE,gBAAgB,EAAE,EAAE,gBAAgB;EACxF;EAEO,eAAe,QAAM;AAC1B,QAAI,UAAU,UAAa,UAAU,MAAM;AACzC,WAAK,gBAAgB,OAAO,WAAW,OAAO,UAAU;IAC1D;EACF;EAEO,gBAAgB,WAAW,UAAQ;AACxC,UAAM,WAAW,KAAK,aAAa,KAAK,sBAAsB;MAC5D,UAAU;MACV,YAAY;MACZ,UAAU;KACX;AACD,aAAS,kBAAkB,YAAY;AACvC,aAAS,kBAAkB,iBAAiB,KAAK;AACjD,aAAS,kBAAkB,eAAe;AAC1C,aAAS,kBAAkB,mBAAmB,KAAK,WAAW,KAAK,OAAK,EAAE,gBAAgB,KAAK,sBAAsB,QAAQ,EAAE,qBAAqB;EACtJ;EAEO,QAAQ,KAAG;AAChB,QAAI,OAAO,UAAa,OAAO,QAAQ,OAAO;AAC5C,WAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,uBAAuB,IAAI,IAAI,MAAM,MAAM,KAAK,EAC/G,KAAK,CAAC,cAAa;AAClB,gBAAQ,IAAI,SAAS;MACvB,CAAC;EAEP;EAEO,mBAAgB;AACrB,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,SAAK,YAAY,QAAQ,UAAU;AACnC,UAAM,UAAU,KAAK,kBAAkB,KAAK,gBAAgB,SAAS,IAAI;AACzE,QAAI,SAAS,WAAY,KAAK,MAAM,aAAa,WAAW,EAAE,QAC1D,qBAAqB,UACrB,YAAY,KAAK,MAAM,aAAa,WAAW,EAAE,eACjD,oBAAoB,KAAK,MAAM,aAAa,WAAW,EAAE,gBACzD,mBAAmB,KAAK,MAAM,aAAa,WAAW,EAAE,eACxD,eAAgB,aAAa,SAC7B,kBAAkB,KAAK,MAAM,aAAa,WAAW,EAAE,kBACvD,iBAAiB,KAAK,MAAM,aAAa,WAAW,EAAE,eACtD,kBAAkB,KAAK,gBAAgB,cACvC,cAAc,KAAK,eAAe,cAClC,YAAY,KAAK,eAAe,YAChC,iBAAiB,KAAK,gBACtB,gBAAgB,KAAK,eAAe,YACpC,mBAAmB,KAAK,eAAe,eACvC,gBAAgB,KAAK,eAAe,YACpC,kBAAkB,KAAK,cACvB,aAAa,KAAK,eAAe,SACjC,UAAU,KAAK,eAAe,MAC9B,iBAAiB,KAAK,cAAc,eAAc,EAAG,aACrD,mBAAmB,KAAK,cAAc,eAAc,EAAG,eACvD,mBAAmB,KAAK,MAAM,aAAa,WAAW,EAAE,iBACxD,cAAc,OAAO,SAAS,OAC9B,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc,IACtE,iBAAiB,KAAK,YAAY,QAAQ,YAAY,YAAY,IAClE,mBAAmB,KAAK,YAAY,QAAQ,YAAY,cAAc,IACtE,aAAY,KAAK,cAAc,UAAS;AAC5C,aAAS,KAAK,SAAS,QAAQ,MAAM;AAErC,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,cAAc,kBAAkB,EAAE,eAAe,OAAM,CAAE,EAAE,UAAU,SAAM;AAC9E,eAAO,SAAS,OAAO,YAAY,SAAS,qCAAqC,IAAI;MACvF,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH,OACK;AACH,WAAK,cAAc,iBAAiB,EAAE,cAAc,OAAM,CAAE,EAAE,UAAU,UAAO;AAC7E,eAAO,SAAS,OAAO,YAAY,SAAS,qCAAqC,KAAK,aAAa;MACrG,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH;EACF;EAEO,aAAU;AACf,SAAK,YAAY,QAAQ,kBAAkB,KAAK;AAChD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,UAAM,iBAAiB,KAAK,cAAc,kBAAkB,KAAK,MAAM,CAAC,EAAE,aAAa,KAAK,YAAY,QAAQ,UAAU;AAE1H,QAAI,iBAAiB,GAAG;AACtB,YAAM,MAAM,SAAS;AACrB,WAAK,0BAA0B,QAAQ,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM,KAAK;AAC3F;IACF;AAEA,iBAAa,QAAQ,eAAe,KAAK,OAAO;AAChD,SAAK,YAAY,iBAAiB,KAAK,gBAAgB,KAAK,YAAY,EAAE,UAAU,SAAM;AACxF,YAAM,iBAAiB,IAAI,aAAa,WAAW,KAAK,SAAS,OAAO;AACxE,UAAI,gBAAgB;AAClB,aAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;MAC3C,OAAO;AACL,cAAM,MAAM,SAAS;AACrB,aAAK,0BAA0B,QAAQ,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM,KAAK;MAC7F;IACF,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;EAEO,mBAAgB;AACrB,SAAK,cAAc,qBAAqB,KAAK,SAAS,KAAK,YAAY,EAAE,UAAU,SAAM;AACvF,YAAM,OAAO,IAAI,KAAK,CAAC,GAAG,GAAG,EAAE,MAAM,kBAAiB,CAAE;AACxD,YAAM,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACjD,YAAM,IAAI,SAAS,cAAc,GAAG;AACpC,QAAE,OAAO;AACT,QAAE,SAAS;AACX,QAAE,MAAK;IACT,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;EAEO,aAAa,aAAW;AAC7B,QAAI,eAAe,aAAa;AAC9B,WAAK,YAAY,QAAQ,aAAa,IAAI;AAC1C,WAAK,YAAY,QAAQ,0BAA0B,IAAI,EAAE,aAAa,KAAK,aAAa,cAAc,KAAK,aAAY;AACvH,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;IACrD,OAAO;AACL,WAAK,cAAc,sBAAsB,KAAK,aAAa,KAAK,YAAY,EAAE,UAAU,UAAO;AAC7F,cAAM,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,MAAM,kBAAiB,CAAE;AACzD,cAAM,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACjD,cAAM,IAAI,SAAS,cAAc,GAAG;AACpC,UAAE,OAAO;AACT,UAAE,SAAS;AACX,UAAE,MAAK;MACT,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,0BAA0B,QAAQ,IAAI,qCAAqC,MAAM,UAAU,MAAM,MAAM,KAAK,EAC9G,KAAK,CAAC,cAAa;AAClB,kBAAQ,IAAI,SAAS;QACvB,CAAC;MAEL,CAAC;IACH;EACF;EAEA,SAAS,QAAM;AACb,MAAE,YAAY,EAAE,QAAQ;MACtB,WAAW,EAAE,MAAM,EAAE,OAAM,EAAG;OAC7B,GAAI;EACT;EAEA,YAAY,MAAI;AACd,SAAK,WAAW;AAChB,SAAK,YAAY,SAAS,eAAe,UAAU,KAAK;AACxD,SAAK,YAAY,SAAS,eAAe,aAAa;AACtD,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AACrD,SAAK,eAAe,uBAAuB,KAAK,gBAAgB,MAAM,KAAK,cAAc,QAAQ,MAAM,MAAM,IAAI;EACnH;EAEO,oBAAoB,MAAI;AAC7B,WAAS,QAAQ,UAAa,QAAQ,QAAQ,QAAQ,MAAM,KAAK,kBAAiB,KAAM,SAAU,OAAO;EAC3G;EAEO,uBAAoB;AACzB,SAAK,eAAe,aAAa;AACjC,SAAK,eAAe,eAAe;AACnC,SAAK,eAAe,gBAAgB,CAAA;AACpC,SAAK,eAAe,gBAAgB;AACpC,SAAK,eAAe,eAAe;AACnC,SAAK,eAAe,+BAA+B,CAAA;AACnD,SAAK,eAAe,qBAAqB;AACzC,SAAK,eAAe,eAAe;AACnC,SAAK,eAAe,mBAAmB;AACvC,SAAK,aAAa;AAClB,SAAK,eAAe,wBAAwB,CAAA;AAC5C,SAAK,eAAe,wBAAwB,CAAA;EAC9C;;;uCAlkBW,4BAAyB,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,WAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;AC5BtC,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAmD,GAAA,KAAA,EAC5C,GAAA,KAAA;AAED,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA,EAAM;AAER,QAAA,yBAAA,GAAA,WAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AACZ,QAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,iBAAS,IAAA,cAAA,OAAA;QAAsB,CAAA;AACzC,QAAA,iBAAA,CAAA;AAA2C,QAAA,uBAAA;AAC9D,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAkE,QAAA,iBAAA,EAAA;AAAsD,QAAA,uBAAA;AACxH,QAAA,yBAAA,IAAA,OAAA,CAAA;AAEoB,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA;QAAwC,CAAA;AAFrE,QAAA,uBAAA,EAEyE;AAE3E,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAoE,IAAA,OAAA,CAAA,EAEjD,IAAA,OAAA,CAAA,EACkB,IAAA,YAAA,CAAA,EACC,IAAA,OAAA,CAAA,EACb,IAAA,OAAA,EAAA,EAEe,IAAA,IAAA,EACxB,IAAA,QAAA,EAAA;AAAiC,QAAA,iBAAA,EAAA;AAA+C,QAAA,uBAAA;AAClF,QAAA,iBAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,KAAA,EAAA;AACE,QAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,iBAAS,IAAA,eAAA,iBAAA,IAAA,gBAA+C,MAAK,MAAK,MAAK,IAAI;QAAC,CAAA;AAC5E,QAAA,iBAAA,EAAA;AAA8B,QAAA,uBAAA,EAAI;AAEtC,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoD,IAAA,KAAA,EAAA;AAEhD,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA,EAA0C,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA,EACF,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA,EACN,IAAA,4CAAA,GAAA,GAAA,QAAA,EAAA;AAEpC,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,KAAA,EAAA,EAAiB,IAAA,QAAA,EAAA;AAEgB,QAAA,iBAAA,IAAA,QAAA;AAAM,QAAA,uBAAA;AACpC,QAAA,iBAAA,EAAA;AACH,QAAA,uBAAA,EAAI,EAEA;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA2C,IAAA,MAAA,EAAA;AACZ,QAAA,iBAAA,EAAA;AAA6C,QAAA,uBAAA;AAC1E,QAAA,oBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAkC,IAAA,OAAA,EAAA,EACA,IAAA,KAAA,EAAA;AACF,QAAA,iBAAA,EAAA;AAAgD,QAAA,uBAAA;AAC5E,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,EAAA;AAAa,QAAA,uBAAA,EAAI;AAEtB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,KAAA,EAAA;AACD,QAAA,iBAAA,EAAA;AAAoD,QAAA,uBAAA;AAChF,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,EAAA;AAAiB,QAAA,uBAAA,EAAI;AAE1B,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,KAAA,EAAA;AACF,QAAA,iBAAA,EAAA;AAAyD,QAAA,uBAAA;AACrF,QAAA,yBAAA,IAAA,GAAA;AAAG,QAAA,iBAAA,EAAA;AAAmB,QAAA,uBAAA,EAAI;AAE5B,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,qBAAA,IAAA,2CAAA,IAAA,GAAA,OAAA,EAAA;AA4BF,QAAA,uBAAA,EAAM,EACF,EACF,EAEF,EACG;AAGb,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAiC,IAAA,OAAA,EAAA;AAE7B,QAAA,qBAAA,IAAA,2CAAA,IAAA,IAAA,OAAA,EAAA;AAqFF,QAAA,uBAAA,EAAM,EACF,EACF,EAEF,EACF;;;AAvLiB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,sBAAA,IAAA;AAC+C,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,sBAAA,eAAA;AAEhE,QAAA,oBAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAW6C,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,sBAAA,SAAA,GAAA;AACnC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,aAAA,KAAA;AAIE,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,WAAA,GAAA;AAKO,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,WAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,SAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,GAAA;AACA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,UAAA;AAMN,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,kBAAA,OAAA,OAAA,IAAA,eAAA,WAAA,GAAA;AAMwB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,sBAAA,MAAA;AAIG,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,sBAAA,SAAA,IAAA;AACzB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,OAAA;AAGyB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,sBAAA,aAAA,IAAA;AACzB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,WAAA;AAGyB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,IAAA,IAAA,aAAA,sBAAA,kBAAA,IAAA;AACzB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA;AAG8B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA;AAsCiC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,KAAA;;;;;;6ED3EzE,2BAAyB,EAAA,WAAA,6BAAA,UAAA,2EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AsBrBhC,IAAO,uBAAP,MAAO,sBAAoB;;;uCAApB,uBAAoB;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,OAAA,6CAAA,OAAA,IAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,SAAA,OAAA,eAAA,MAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACPjC,QAAA,yBAAA,GAAA,WAAA,CAAA,EAAwB,GAAA,OAAA,CAAA;AAEhB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACA,QAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,QAAA,CAAA;AAA2C,QAAA,iBAAA,GAAA,QAAA;AAAM,QAAA,uBAAA;AAAQ,QAAA,iBAAA,GAAA,+BAAA;AAA4B,QAAA,uBAAA;AACzF,QAAA,yBAAA,GAAA,GAAA;AAAG,QAAA,iBAAA,GAAA,wBAAA;AAAsB,QAAA,uBAAA,EAAI,EAC3B;;;;;;6EDEG,sBAAoB,EAAA,WAAA,wBAAA,UAAA,+DAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;;;;;;;;AGI7B,IAAA,yBAAA,GAAA,WAAA,EAAA,EAA2D,GAAA,IAAA,EACrD,GAAA,QAAA,EAAA;AAAkD,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA,EAAO,EAAM;;;;AAA1C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,mBAAA;;;;;AAYhD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAoD,GAAA,GAAA;AAC/C,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA,EAAI;;;;AAAjC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,mBAAA;;;;;AAsBS,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AAC2Q,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AACjQ,IAAA,uBAAA,EAAO;;;;AAHyB,IAAA,qBAAA,SAAA,UAAA,KAAA;AAE9C,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,UAAA,UAAA,QAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,eAAA,UAAA,UAAA,UAAA,CAAA;AAA+Q,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,UAAA,IAAA;;;;;AAWnR,IAAA,yBAAA,GAAA,cAAA,EAAA;AAAuE,IAAA,iBAAA,CAAA;AACnE,IAAA,uBAAA;;;;AAD+C,IAAA,qBAAA,SAAA,UAAA,EAAA;AAAoB,IAAA,oBAAA;AAAA,IAAA,4BAAA,UAAA,IAAA;;;;;AA2HzE,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,MAAA,GAAA;;;;;;AAYE,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,iEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,kBAAA,UAAA;AAA0B,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AACnC,IAAA,oBAAA,GAAA,OAAA,EAAA;AACX,IAAA,uBAAA;;;;;;AACjB,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,iEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,kBAAA,UAAA;AAA0B,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AACnC,IAAA,oBAAA,GAAA,OAAA,EAAA;AACX,IAAA,uBAAA;;;;;AAjBrB,IAAA,yBAAA,GAAA,MAAA,EAAA,EAOW,GAAA,QAAA,EAAA;AACoB,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;AAC3C,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,QAAA,EAAA,EAE4B,GAAA,4CAAA,GAAA,GAAA,QAAA,EAAA;AAM5B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,MAAA;AACxB,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AAC5B,IAAA,yBAAA,GAAA,KAAA,EAAK,IAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AAAQ,IAAA,iBAAA,EAAA;AAAqB,IAAA,uBAAA,EAAM,EACjE,EACF;;;;;AAtBgD,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,WAAA,SAAA,QAAA,WAAA,SAAA,SAAA,WAAA,SAAA,UAAA,WAAA,SAAA,UAAA,WAAA,SAAA,eAAA,WAAA,SAAA,UAAA,CAAA;AAQzB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,IAAA;AAEpB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,gBAAA,IAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,gBAAA,KAAA;AAKC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,QAAA;AACoC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,WAAA,EAAA;;;;;AAOhD,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,OAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO;;;;;AAHsB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,KAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;AAMJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,oBAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACO,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;AAAQ,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AACvD,IAAA,uBAAA,EAAO;;;;;AADM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,kBAAA;AAA0C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,kBAAA;;;;;AAMxF,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,UAAA,GAAA;;;;;AAIA,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAgC,GAAA,QAAA,EAAA;AAG5B,IAAA,oBAAA,GAAA,QAAA,EAAA;AAQkB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA,EAAO;;;;;AARlC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,SAAA,SAAA,OAAA,SAAA,SAAA,OAAA,SAAA,SAAA,SAAA,SAAA,SAAA,OAAA,SAAA,SAAA,SAAA,SAAA,SAAA,SAAA,SAAA,SAAA,KAAA,CAAA;AAQY,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,IAAA;;;;;AAd1B,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AAC/C,IAAA,qBAAA,GAAA,oDAAA,GAAA,IAAA,gBAAA,EAAA;AAeF,IAAA,uBAAA;;;;;AAhB+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,QAAA;AACE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,YAAA,QAAA;;;;;AAmBjC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,KAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;AAC1C,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA,EAAO;;;;;AAFG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,GAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,KAAA,EAAA;;;;;AAMF,IAAA,yBAAA,GAAA,MAAA;AAA8B,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;;;;AAAhB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,OAAA,GAAA;;;;;AADhC,IAAA,yBAAA,GAAA,MAAA,EAAA;AACE,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;AADS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA;;;;;AAIP,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,GAAA;;;;;AAHJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,QAAA,EAAA;AACR,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA;;;;AAJ+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,KAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA;;;;;;AAOT,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAsC,GAAA,UAAA,EAAA;AAClC,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,CAAQ;IAAA,CAAA;AACjB,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA,EAAS;;;;AAFY,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,MAAA,OAAA,eAAA,CAAA;;;;;AAGvB,IAAA,yBAAA,GAAA,MAAA,GAAA;AACE,IAAA,oBAAA,GAAA,OAAA,GAAA;AACF,IAAA,uBAAA;;;;;AA+CkB,IAAA,yBAAA,GAAA,QAAA,GAAA;AAC6C,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;;;;;AA5C/D,IAAA,yBAAA,GAAA,MAAA,GAAA,EAC2C,GAAA,OAAA,GAAA,EAI/B,GAAA,OAAA,GAAA,EAC+B,GAAA,OAAA,GAAA,EACX,GAAA,OAAA,GAAA,EACL,GAAA,SAAA,GAAA,EAQD,GAAA,MAAA,GAAA;AAEZ,IAAA,oBAAA,GAAA,IAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA,EACE,IAAA,OAAA,GAAA,EAC2D,IAAA,QAAA;AAClD,IAAA,iBAAA,EAAA;AAAoB,IAAA,uBAAA;AAC7B,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,EAAA;AAAmB,IAAA,uBAAA;AAChD,IAAA,yBAAA,IAAA,QAAA,GAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,OAAA,GAAA,EAC+D,IAAA,QAAA;AACtD,IAAA,iBAAA,EAAA;AAAgB,IAAA,uBAAA;AACzB,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,EAAA;AAAe,IAAA,uBAAA;AAC5C,IAAA,yBAAA,IAAA,QAAA,GAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,OAAA,GAAA,EACkD,IAAA,QAAA;AACzC,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA;AAC/B,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,EAAA;AAAqB,IAAA,uBAAA;AAClD,IAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,QAAA,GAAA;AAEF,IAAA,uBAAA,EAAM;AAER,IAAA,oBAAA,IAAA,IAAA;AACA,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,OAAA,GAAA,EACiD,IAAA,QAAA;AACxC,IAAA,iBAAA,EAAA;AAAc,IAAA,uBAAA;AACvB,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA6B,IAAA,iBAAA,EAAA;AAAa,IAAA,uBAAA;AAC1C,IAAA,yBAAA,IAAA,QAAA,GAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAER,IAAA,oBAAA,IAAA,IAAA,EAAS,IAAA,IAAA;AAEX,IAAA,uBAAA,EAAK,EACC,EAEJ,EAEF,EACF,EACF;;;;;;AAhE8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,iBAAA,gBAAA,OAAA,mBAAA,OAAA,kBAAA,aAAA,WAAA;AAOJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAF,MAAA,YAAA,SAAA,QAAA,YAAA,SAAA,SAAA,YAAA,SAAA,UAAA,YAAA,SAAA,UAAA,YAAA,SAAA,eAAA,YAAA,SAAA,UAAA,CAAA;AAcP,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,WAAA,GAAA;AACoB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,SAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,WAAA,GAAA;AAMO,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,OAAA,GAAA;AACoB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,KAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,GAAA;AAMO,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,aAAA,GAAA;AACoB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;AAEV,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,YAAA,aAAA;AAMV,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,KAAA,GAAA;AACoB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,GAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,SAAA,GAAA;;;;;AAiBtB,IAAA,oBAAA,GAAA,MAAA,GAAA;;;;;;AACA,IAAA,yBAAA,GAAA,MAAA,GAAA;AAQ4D,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,WAAA,CAAmB;IAAA,CAAA;AAAE,IAAA,uBAAA;;;;;AAAzF,IAAA,sBAAA,wBAAA,OAAA,oBAAA,WAAA;AAPuC,IAAA,qBAAA,WAAA,0BAAA,GAAAA,MAAA,YAAA,SAAA,QAAA,YAAA,SAAA,SAAA,YAAA,SAAA,UAAA,YAAA,SAAA,UAAA,YAAA,SAAA,eAAA,YAAA,SAAA,UAAA,CAAA;;;;;AAQxC,IAAA,oBAAA,GAAA,MAAA,GAAA;;;;;AAGA,IAAA,yBAAA,GAAA,SAAA,GAAA,EAAoF,GAAA,IAAA,EAC9E,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;AAAwB,IAAA,uBAAA,EAAK,EAC9B;;;;AADC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,cAAA;;;ADvVxB,IAAO,sBAAP,MAAO,qBAAmB;EAiD9B,YACS,eACA,aACC,IACD,iBACA,eACA,gBACA,cACA,aACC,cACD,mBAAoC;AATpC,SAAA,gBAAA;AACA,SAAA,cAAA;AACC,SAAA,KAAA;AACD,SAAA,kBAAA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACC,SAAA,eAAA;AACD,SAAA,oBAAA;AAzDF,SAAA,oBAAoB,IAAI,gBAAe;AAC9C,SAAA,kBAAkB;AAElB,SAAA,gBAAgB;AAChB,SAAA,yBAAyB;AACzB,SAAA,cAAc;AACd,SAAA,qBAAsB,aAAa,gBAAgB,UAAa,aAAa,gBAAgB,QAAQ,aAAa,gBAAgB,KAAK,SAAS,aAAa,YAAY,IAAI;AAE7K,SAAA,mBAAmB,CAAC,YAAY,SAAS,sBAAsB,YAAY,OAAO,SAAS,GAAG;AAC9F,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,mBAA0B,CAAA;AAK1B,SAAA,SAAS;AACT,SAAA,YAAY;AACL,SAAA,UAAU;AACjB,SAAA,kBAAyB,CAAA;AACzB,SAAA,iBAAwB,CAAA;AACxB,SAAA,YAAY;AACL,SAAA,YAA8B,IAAI,iBAAiB,CAAA,CAAE;AAMrD,SAAA,SAAiB,aAAa,cAAc,KAAK,MAAM,aAAa,WAAW,EAAE,KAAG;AAEpF,SAAA,cAAsB;AACtB,SAAA,eAAuB;AACvB,SAAA,eAAuB;AACvB,SAAA,cAAc;AAIrB,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,MAAc,KAAK,QAAQ,KAAK;AAChC,SAAA,mBAA2B;AAK3B,SAAA,oBAAoB,IAAI,QAAO;AAa7B,SAAK,cAAc,KAAK,YAAY,QAAQ;AAC5C,SAAK,mBAAmB,KAAK,YAAY,gBAAgB;AACzD,SAAK,iBAAiB,KAAK,YAAY,gBAAgB;AACvD,SAAK,gBAAgB,mBAAmB,UAAU;AAClD,SAAK,aAAa,mBAAkB;AACpC,SAAK,QAAQ,KAAK,aAAa;AAC/B,SAAK,eAAc;EACrB;EAEA,WAAQ;AACN,QAAI,aAAa,QAAQ,aAAa,KAAK,QAAQ;AAC/C,WAAK,aAAa,KAAK,uBAAuB;QAC9C,UAAU;QACV,UAAU;QACV,YAAY;OACb;IACH;AACA,SAAK,aAAY;EACnB;EAEA,kBAAe;AACb,UAAM,eAAe,SAAS,eAAe,aAAa;AAC1D,iBAAa,MAAM,YAAa,OAAO,cAAc,MAAO;AAC5D,SAAK,kBAAkB,KACrB,aAAa,GAAI,GACjB,qBAAoB,CAAE,EACtB,UAAU,UAAO;AACjB,WAAK,cAAc;AACnB,WAAK,eAAc;IACrB,CAAC;EACH;EAEA,aAAa,OAAK;AAChB,QAAI,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,SAAS,CAAC,KAAK,KAAK;AAC5D,WAAK,kBAAkB,KAAK,MAAM,OAAO,KAAK;IAChD;EACF;EAEA,cAAc,GAAC;AACb,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAGhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,iBAAiB,OAAO;AAC1B,YAAM,OAAO,KAAK,aAAa,KAAK,OAAO,KAAK,GAAG;AACnD,WAAK,WAAW,OAAO,KAAK,WAAW,KAAK,OAAO,IAAI;AACvD,WAAK,YAAW;IAClB;EACF;EAEO,aAAa,OAAO,KAAG;AAC5B,WAAO,KAAK,WAAW,OAAO,CAAC,OAAO,UAAU,SAAS,SAAS,QAAQ,GAAG;EAC/E;EAEO,cAAW;AAChB,SAAK,QAAQ,KAAK;AAClB,SAAK,MAAM,KAAK,QAAQ,KAAK;EAC/B;EAEO,aAAU;AACf,UAAM,YAAY,SAAS,eAAe,aAAa;AACvD,cAAU,YAAY;EACxB;EAEO,iBAAc;AACnB,SAAK,aAAa,IAAI,yBAAwB,KAAK,UAAU;AAC7D,SAAK,YAAW;AAChB,SAAK,WAAW,sBAAsB,KAAK,cAAc;AACzD,SAAK,WAAW,OAAO,KAAK;AAE5B,SAAK,cAAc,KAAK,WAAW,KAAK;AACxC,QAAI,KAAK,cAAc,KAAK,KAAK,wBAAwB;AACvD,WAAK,kBAAkB;AACvB,WAAK,yBAAyB;IAChC,OACK;AACH,WAAK,kBAAkB;IACzB;EACF;EAEO,eAAY;AACjB,SAAK,cAAc,oBAAmB,EAAG,UAAU,UAAO;AACxD,WAAK,kBAAkB,KAAK,cAAc;AAC1C,WAAK,iBAAiB,KAAK,aAAa;IAC1C,CAAC;EACH;EAEO,mBAAgB;AACrB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,gBAAgB;EACvB;EAEO,SAAM;AACX,SAAK,kBAAkB,CAAC,KAAK;AAC7B,SAAK,kBAAkB;EACzB;EAEO,kBAAkB,SAAO;AAC9B,SAAK,cAAc;AACnB,SAAK,WAAW,KAAK,QAAQ,UAAO;AAClC,UAAI,KAAK,UAAU,QAAQ,QAAQ;AACjC,aAAK,cAAc,CAAC,KAAK;MAC3B;IACF,CAAC;AAED,UAAM,MAAM;MACV,QAAQ,QAAQ;MAChB,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,aAAa,QAAQ;;AAEvB,SAAK,cAAc,cAAc,GAAG,EAAE,UAAU,EAAC,MAAK,MAAK;AACzD,WAAK,kBAAkB;IACzB,EAAC,CAAC;EAEJ;EAEO,oBAAiB;AACtB,UAAM,YAAY;MAChB,YAAY,KAAK;MACjB,SAAS;MACT,UAAU,KAAK,cAAc;;AAE/B,SAAK,cAAc,eAAe,SAAS,EAAE,UAAU,UAAO;AAC5D,WAAK,aAAa,KAAK;AACvB,WAAK,eAAc;IACrB,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EAEH;EAEO,iBAAc;AACnB,UAAM,YAAY;MAChB,SAAS;MACT,UAAU,KAAK,YAAY,UAAU;MACrC,YAAY,KAAK;MACjB,MAAM,KAAK;MACX,WAAW,KAAK;MAChB,aAAa,KAAK;;AAGpB,SAAK,cAAc,eAAe,SAAS,EAAE,UAAU,UAAO;AAC5D,WAAK,aAAa,KAAK;AACvB,WAAK,eAAc;IACrB,CAAC;EAEH;EAEO,eAAe,eAAe,OAAK;AACxC,QAAI,iBAAiB,UAAU;AAC7B,WAAK,eAAe;AACpB,WAAK,eAAe;AACpB,WAAK,cAAc;IACrB;AACA,QAAI,iBAAiB,QAAQ;AAC3B,WAAK,eAAe,MAAM;IAC5B;AACA,QAAI,iBAAiB,SAAS;AAC5B,WAAK,eAAe,MAAM;IAC5B;AACA,QAAI,iBAAiB,aAAa;AAChC,WAAK,cAAc,MAAM;IAC3B;AACA,SAAK,eAAc;EACrB;EAEO,WAAQ;AACb,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,eAAc;EACrB;EAEO,WAAW,KAAG;AACnB,SAAK,kBAAkB,KAAK,oBAAoB,MAAM,OAAO;AAC7D,SAAK,SAAS,yBAAyB;MACrC,wBAAwB;MACxB,+BAA+B;MAC/B,cAAc,IAAI;MAClB,eAAe,IAAI;MACnB,qBAAqB,IAAI;MACzB,WAAW,IAAI;MACf,KAAK,IAAI,KAAK;MACd,OAAO,IAAI;MACX,WAAW,IAAI;MACf,OAAO,IAAI;MACX,aAAa,IAAI;MACjB,KAAK,IAAI;KACV;EACH;;;uCA/PW,sBAAmB,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,iBAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,WAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAcnB,oBAAY,CAAA;8BACZ,SAAO,CAAA;;;;;;;;;;ACjDpB,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA;AAGxC,QAAA,oBAAA,GAAA,YAAA;AACF,QAAA,uBAAA;AAGA,QAAA,qBAAA,GAAA,wCAAA,GAAA,GAAA,WAAA,CAAA;AAKA,QAAA,yBAAA,GAAA,wBAAA,CAAA;AACE,QAAA,oBAAA,GAAA,cAAA,GAAA,CAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgE,IAAA,YAAA,CAAA,EAExC,IAAA,OAAA,EAAA;AAElB,QAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,MAAA,EAAA;AAIA,QAAA,yBAAA,IAAA,WAAA,EAAA,EAA+D,IAAA,OAAA,EAAA,EACY,IAAA,OAAA,EAAA,EAChB,IAAA,OAAA,EAAA,EAChB,IAAA,OAAA,EAAA,EAC4C,IAAA,kBAAA,EAAA,EACpB,IAAA,QAAA,EAAA;AACvC,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,kBAAA,CAAmB;QAAA,CAAA;AAC1C,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,SAAA,EAAA;AAA2C,QAAA,2BAAA,iBAAA,SAAA,6DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,aAAA,MAAA,MAAA,IAAA,cAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACzC,QAAA,qBAAA,SAAA,SAAA,qDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,aAAA,MAAA,CAAoB;QAAA,CAAA;AAD/B,QAAA,uBAAA,EACmC,EACpB;AAEnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqE,IAAA,kBAAA,EAAA;AAEjE,QAAA,oBAAA,IAAA,QAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,cAAA,IAAA,CAAA;AAA0B,QAAA,2BAAA,eAAA,SAAA,gEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,cAAA,MAAA,MAAA,IAAA,eAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACxB,QAAA,qBAAA,mBAAA,SAAA,oEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,eAAe,QAAM,MAAA,CAAS;QAAA,CAAA;AACjD,QAAA,qBAAA,IAAA,4CAAA,GAAA,IAAA,cAAA,EAAA;AAKF,QAAA,uBAAA,EAAa,EACE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,kBAAA,EAAA,EACX,IAAA,cAAA,IAAA,CAAA;AAC5B,QAAA,2BAAA,eAAA,SAAA,gEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,cAAA,MAAA,MAAA,IAAA,eAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AACzB,QAAA,qBAAA,mBAAA,SAAA,oEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAmB,IAAA,eAAe,SAAO,MAAA,CAAS;QAAA,CAAA;AAClD,QAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,cAAA,EAAA;AAEF,QAAA,uBAAA,EAAa,EACE;AAEnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA4E,IAAA,gBAAA,EAAA;AACrC,QAAA,2BAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,aAAA,MAAA,MAAA,IAAA,cAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA,EAAyB,eAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,UAAA,6BAAA,IAAA,SAAA,MAAA,MAAA,IAAA,UAAA;AAAA,iBAAA,sBAAA,MAAA;QAAA,CAAA;AAC5D,QAAA,qBAAA,UAAA,SAAA,6DAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,eAAe,aAAW,MAAA,CAAS;QAAA,CAAA;AAAG,QAAA,iBAAA,EAAA;AAAmB,QAAA,uBAAA;AAErE,QAAA,yBAAA,IAAA,KAAA,EAAA;AAA2B,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,SAAA,CAAU;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAkB,QAAA,uBAAA,EAAI,EAElE,EACF;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgF,IAAA,KAAA,EAAA;AAE5D,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,SAAA,CAAU;QAAA,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAkB,QAAA,uBAAA,EAAI,EACzD,EACF;AAIR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAqF,IAAA,QAAA,EAAA,EAC7B,IAAA,OAAA,EAAA,EAC/B,IAAA,QAAA,EAAA;AACK,QAAA,iBAAA,EAAA;AAAqB,QAAA,uBAAA;AAC7C,QAAA,oBAAA,IAAA,OAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,OAAA,EAAA;AAErB,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA;AAEvB,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,KAAA;AAAG,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,iBAAA;AAAe,QAAA,uBAAA,EAAO,EACxB;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,KAAA;AAAG,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,eAAA;AAAa,QAAA,uBAAA,EAAO,EACtB;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,KAAA;AAAG,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,kBAAA;AAAgB,QAAA,uBAAA,EAAO,EACzB;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,KAAA;AAAG,QAAA,uBAAA;AACvB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,gBAAA;AAAc,QAAA,uBAAA,EAAO,EACvB;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,OAAA;AAAK,QAAA,uBAAA;AACzB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,mBAAA;AAAiB,QAAA,uBAAA,EAAO,EAC1B;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AACrB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,OAAA;AAAK,QAAA,uBAAA,EAAO,EACd;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,QAAA,EAAA;AACA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,QAAA,EAAA;AACE,QAAA,iBAAA,IAAA,GAAA;AAAC,QAAA,uBAAA;AACrB,QAAA,yBAAA,IAAA,MAAA;AAAM,QAAA,iBAAA,IAAA,OAAA;AAAK,QAAA,uBAAA,EAAO,EACd;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,oBAAA,KAAA,QAAA,EAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,QAAA,EAAA;AACE,QAAA,iBAAA,KAAA,OAAA;AAAK,QAAA,uBAAA;AACzB,QAAA,yBAAA,KAAA,MAAA;AAAM,QAAA,iBAAA,KAAA,uBAAA;AAAqB,QAAA,uBAAA,EAAO,EAC9B;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,oBAAA,KAAA,QAAA,EAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,QAAA,EAAA;AACE,QAAA,iBAAA,KAAA,OAAA;AAAK,QAAA,uBAAA;AACzB,QAAA,yBAAA,KAAA,MAAA;AAAM,QAAA,iBAAA,KAAA,qBAAA;AAAmB,QAAA,uBAAA,EAAO,EAC5B;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,oBAAA,KAAA,QAAA,EAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,QAAA,EAAA;AACE,QAAA,iBAAA,KAAA,QAAA;AAAM,QAAA,uBAAA;AAC1B,QAAA,yBAAA,KAAA,MAAA;AAAM,QAAA,iBAAA,KAAA,wBAAA;AAAsB,QAAA,uBAAA,EAAO,EAC/B;AAER,QAAA,yBAAA,KAAA,OAAA,EAAA;AACE,QAAA,oBAAA,KAAA,QAAA,EAAA;AACA,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,QAAA,EAAA;AACE,QAAA,iBAAA,KAAA,SAAA;AAAO,QAAA,uBAAA;AAC3B,QAAA,yBAAA,KAAA,MAAA;AAAM,QAAA,iBAAA,KAAA,mCAAA;AAAiC,QAAA,uBAAA,EAAO,EAC1C,EACF,EACF,EACF,EACF,EACD;AAGT,QAAA,yBAAA,KAAA,OAAA,EAAA,EAAmC,KAAA,KAAA,EAC5B,KAAA,OAAA,EAAA,EACiC,KAAA,OAAA,EAAA;AACQ,QAAA,qBAAA,UAAA,SAAA,qDAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAU,IAAA,cAAA,MAAA,CAAqB;QAAA,CAAA;AACvE,QAAA,yBAAA,KAAA,SAAA,EAAA;AAEE,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAiF,KAAA,qCAAA,IAAA,IAAA,MAAA,EAAA;;AA6BnF,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAWxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AASxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAuBxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsD,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAUxD,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AAWxC,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;;AASxC,QAAA,kCAAA,KAAA,EAAA;AACE,QAAA,qBAAA,KAAA,qCAAA,IAAA,IAAA,MAAA,EAAA;;AAsEF,QAAA,qBAAA,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA,EAAqE,KAAA,qCAAA,GAAA,IAAA,MAAA,EAAA,EASqB,KAAA,qCAAA,GAAA,GAAA,MAAA,EAAA;AAE5F,QAAA,uBAAA;AACA,QAAA,yBAAA,KAAA,KAAA;AACE,QAAA,qBAAA,KAAA,wCAAA,GAAA,GAAA,SAAA,EAAA;AAKF,QAAA,uBAAA,EAAM,EAEF,EACF,EACF,EACF,EACF,EACG,EACP,EACe,EACnB;;;AA3X8B,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,gBAAA;AAaE,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,gBAAA;AAa2B,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,WAAA;AAOzC,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAD,OAAA,IAAA,iBAAA,QAAA,IAAA,iBAAA,SAAA,IAAA,iBAAA,UAAA,IAAA,iBAAA,UAAA,IAAA,iBAAA,eAAA,IAAA,iBAAA,UAAA,CAAA;AACwB,QAAA,oBAAA;AAAA,QAAA,2BAAA,SAAA,IAAA,YAAA;AAAyB,QAAA,qBAAA,eAAA,IAAA,MAAA,YAAA;AAElB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,cAAA;AAWN,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,SAAA,IAAA,YAAA;AAAyB,QAAA,qBAAA,eAAA,IAAA,MAAA,aAAA;AAEnB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,eAAA;AAME,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,WAAA,EAAyB,SAAA,IAAA,OAAA;AACZ,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,WAAA,EAAA;AAEF,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,QAAA;AAQb,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,QAAA;AASf,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,aAAA,EAAA;AAIpB,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,8BAAA,GAAA;AA0Fe,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAsLK,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,gBAAA,EAAmC,yBAAA,IAAA;AAClB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,gBAAA;AASJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,0BAAA,IAAAI,KAAA,CAAA;AAGR,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,eAAA,QAAA,IAAA,WAAA,KAAA,WAAA,CAAA;;+q6CD9VjC;MACV,QAAQ,gBAAgB;QACtB,MAAM,aAAa,MAAM,EAAE,QAAQ,OAAO,WAAW,IAAG,CAAE,CAAC;QAC3D,MAAM,YAAY,MAAM,EAAE,QAAQ,IAAG,CAAE,CAAC;QACxC,WAAW,0BAA0B,QAAQ,sCAAsC,CAAC;OACrF;MACF,EAAA,CAAA;EAAA;;;6EAGU,qBAAmB,EAAA,WAAA,uBAAA,UAAA,+DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AG7B5B,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,2BAAA,GAAA;;;;;AAKmD,IAAA,yBAAA,GAAA,MAAA;AAAiF,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;;;;;;AAFzI,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuD,GAAA,QAAA,CAAA;AAElD,IAAA,iBAAA,CAAA;AAAkD,IAAA,qBAAA,GAAA,2CAAA,GAAA,GAAA,QAAA,CAAA;AAAyF,IAAA,uBAAA;AAC9I,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAkC,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,SAAkB,CAAC,CAAC;IAAA,CAAA;AAC7D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AAHN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,iBAAA,cAAA;AAAyD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,OAAA,OAAA,aAAA,iBAAA,cAAA,CAAA;AAE1D,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,eAAA,GAAA;;;;;AAyBI,IAAA,oBAAA,GAAA,MAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,iEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,YAAA,YAAA,OAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,MAAA,QAAA,SAAA,CAA6B;IAAA,CAAA;AACrC,IAAA,iBAAA,CAAA;AAIC,IAAA,uBAAA;;;;;AAJD,IAAA,oBAAA;AAAA,IAAA,4BAAA,UAAA,WAAA,OAAA,aAAA,iBAAA,OAAA,OAAA,aAAA,iBAAA,IAAA;;;;;;AASL,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,MAAA,CAAuB;IAAA,CAAA;AAKtC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAJE,IAAA,qBAAA,UAAA,UAAA,UAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,KAAA,GAAA;;;;;;AAEF,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,MAAA,CAAuB;IAAA,CAAA;AAKtC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAJE,IAAA,qBAAA,UAAA,CAAA,UAAA,UAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,QAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,WAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA;AAIE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,UAAA,GAAA;;;;;;AA1DN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAOE,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,YAAA,YAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,WAAyB,CAAC,CAAC;IAAA,CAAA;AAEpC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoB,GAAA,GAAA;AACf,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;AAC/B,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;AAEN,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoB,GAAA,KAAA,IAAA,CAAA;AAEhB,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,QAAA,CAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAG,IAAA,qBAAA,SAAA,SAAA,6DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAChC,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,KAAA,EAAA;AAUF,IAAA,uBAAA,EAAI;AAEN,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,UAAA,EAAA,EAIC,IAAA,oDAAA,GAAA,GAAA,UAAA,EAAA,EAOA,IAAA,+CAAA,GAAA,GAAA,KAAA,EAAA,EAMA,IAAA,+CAAA,GAAA,GAAA,KAAA,EAAA;AASH,IAAA,uBAAA,EAAM;;;;;;AAzDN,IAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,UAAA,sBAAA,YAAA,UAAA,sBAAA,WAAA,CAAA;AAOK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,UAAA,eAAA;AAED,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,WAAA,KAAA,UAAA,UAAA,MAAA,UAAA,WAAA,GAAA;AAIC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,CAAA,UAAA,QAAA,CAAA;AACM,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,IAAA,KAAA,UAAA,QAAA;AACP,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,kBAAA,GAAA;AAKG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA,IAAA,CAAA;AAYF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,sBAAA,UAAA;AAOA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,sBAAA,UAAA;AAOA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,sBAAA,WAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,UAAA,sBAAA,UAAA;;;;;;AA5DT,IAAA,yBAAA,GAAA,OAAA,CAAA;AAGE,IAAA,qBAAA,UAAA,SAAA,yDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,SAAA,MAAA,CAAgB;IAAA,CAAA;AAE1B,IAAA,qBAAA,GAAA,0CAAA,IAAA,IAAA,OAAA,EAAA;AA8DA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,SAAkB,CAAC,CAAC;IAAA,CAAA;AAC3D,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AA/DY,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;AA8DnB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,iBAAA,eAAA,GAAA;;;AD5DA,IAAO,sBAAP,MAAO,qBAAmB;EAgB9B,YACS,eACA,aACA,gBACA,eACA,mBACA,cACA,UAAyB;AANzB,SAAA,gBAAA;AACA,SAAA,cAAA;AACA,SAAA,iBAAA;AACA,SAAA,gBAAA;AACA,SAAA,oBAAA;AACA,SAAA,eAAA;AACA,SAAA,WAAA;AAtBF,SAAA,cAAqB,CAAA;AAC5B,SAAA,iBAAwB,CAAA;AACxB,SAAA,iBAAsB,CAAA;AACtB,SAAA,oBAAoB;AACZ,SAAA,WAAoB;AACpB,SAAA,gBAAyB;AAEjC,SAAA,aAAoB,CAAA;AAGpB,SAAA,iBAA4B,CAAA;AAc1B,SAAK,QAAQ,KAAK,aAAa;AAE/B,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,uBAAsB;IAC1C;AACA,SAAK,SAAS,IAAI,WAAU;AAC5B,SAAK,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AACvE,SAAK,OAAO,eAAe,KAAK;AAChC,SAAK,OAAO,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAC1E,SAAK,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACtE,QAAI,CAAC,KAAK,YAAY,UAAU,UAAU,eAAe;AACvD,WAAK,YAAY,UAAU,UAAU,gBAAgB,KAAK;IAC5D;EACF;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,cAAQ,IAAI,IAAI;AAChB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,uBAAsB;IAC1C,CAAC;EACL;EAGA,SAAS,OAAK;AACZ,UAAM,UAAU,MAAM;AACtB,UAAM,kBACJ,KAAK,MAAM,QAAQ,YAAY,IAAI,KAAK,MAAM,QAAQ,SAAS,MAC/D,KAAK,MAAM,QAAQ,YAAY;AACjC,YAAQ,IAAI,QAAQ,cAAc,QAAQ,WAAW,QAAQ,YAAY;AACzE,QAAI,KAAK,iBAAiB,OAAO;AAC/B,UAAI,mBAAmB,CAAC,KAAK,UAAU;AACrC,aAAK,WAAW;AAChB,aAAK,YAAW;MAClB,WAAW,CAAC,iBAAiB;AAE3B,aAAK,WAAW;MAClB;IACF;EACF;EAEA,cAAW;AACT,YAAQ,IAAI,qBAAqB;AAEjC,SAAK,oBAAoB,KAAK,oBAAoB;AAClD,SAAK,wBAAuB;EAC9B;EAGA,SAAS,OAAK;AACZ,SAAK,cAAa;EACpB;EAEA,WAAQ;AACN,YAAQ,IACN,qBACA,KAAK,YAAY,UAAU,UAAU,aAAa;AAEpD,SAAK,wBAAuB;EAC9B;;;;EAMA,aAAa,UAAa;AACxB,QAAI,UAAe,IAAI,KAAK,SAAS,QAAQ,KAAK,GAAG,CAAC;AACtD,WAAO;EACT;;;;;;;;;;;;;EAeA,iBAAiB,UAAQ;AACvB,UAAM,UAAU,CAAA;AAChB,aAAS,QAAQ,CAAC,YAAW;AAC3B,YAAM,EAAE,UAAS,IAAK;AACtB,UAAI,CAAC,QAAQ,SAAS,GAAG;AACvB,gBAAQ,SAAS,IAAI,CAAA;MACvB;AACA,cAAQ,SAAS,EAAE,KAAK,OAAO;IACjC,CAAC;AACD,WAAO,OAAO,OAAO,OAAO;EAC9B;EAEA,eAAe,cAAY;AACzB,YAAQ,IAAI,YAAY;AACxB,QAAI,aAAa,SAAS,GAAG;AAC3B,UAAI,gBACF,kBACA;AACF,YAAM,aAAa,aAAa,KAC9B,CAAC,GAAG,MACF,IAAI,KAAK,EAAE,YAAY,EAAE,QAAO,IAChC,IAAI,KAAK,EAAE,YAAY,EAAE,QAAO,CAAE;AAEtC,uBAAiB,IAAI,KAAK,WAAW,CAAC,EAAE,YAAY;AACpD,yBAAmB,IAAI,KAAK,cAAc;AAC1C,wBAAkB,IAAI,KAAK,cAAc;AAEzC,WAAK,iBAAiB;QACpB,eAAe,QAAO;QACtB,iBAAiB,QAAQ,eAAe,QAAO,IAAK,CAAC;QACrD,gBAAgB,QAAQ,eAAe,QAAO,IAAK,CAAC;;AAGtD,YAAM,SAAS;QACb,CAAC,KAAK,eAAe,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC;QAClD,CAAC,KAAK,eAAe,CAAC,GAAG,KAAK,eAAe,CAAC,GAAG,CAAC;QAClD,CAAC,KAAK,eAAe,CAAC,GAAG,GAAG,CAAC;;;AAG/B,aAAO,QAAQ,CAAC,CAAC,OAAO,OAAO,QAAQ,MAAK;AAC1C,cAAM,eAAe,WAAW,OAAO,CAAC,SAAQ;AAC9C,gBAAM,WAAW,IAAI,KAAK,KAAK,YAAY,EAAE,QAAO;AACpD,iBAAO,YAAY,SAAS,WAAW;QACzC,CAAC;AACD,qBAAa,QAAQ,CAAC,SAAQ;AAC5B,eAAK,0BAA0B,MAAM,QAAQ;QAC/C,CAAC;MACH,CAAC;IACH,OAAO;AACL,WAAK,0BAA0B,aAAa,CAAC,GAAG,CAAC;IACnD;EACF;EACA,gBAAgB,OAAY;AAC1B,UAAM,gBAAe;EACvB;EAEA,0BAA0B,KAAK,UAAQ;AACrC,QAAI,OAAO,KAAK,YAAY,KAC1B,CAAC,MAAM,EAAE,cAAc,IAAI,WAAW,KAAK,EAAE,YAAY,QAAQ;AAEnE,QAAI,MAAM;AACR,WAAK,mBACH,KAAK,mBAAmB,MAAM,IAAI,kBAAkB;IACxD,OAAO;AACL,UAAI,WAAW;AACf,WAAK,YAAY,KAAK,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC,CAAC;IACvD;EACF;EAEA,0BAAuB;AAErB,QAAI;AACJ,UAAM,QAAQ,oBAAI,KAAI;AACtB,YAAQ,IAAI,eAAe,KAAK;AAChC,UAAM,gBAAgB,oBAAI,KAAI;AAC9B,kBAAc,QAAQ,MAAM,QAAO,IAAK,CAAC;AACzC,YAAQ,IAAI,iBAAiB,aAAa;AAC1C,YAAQ,IAAI,qBAAqB,KAAK,iBAAiB;AACvD,cAAU,KAAK,MACb,KAAK,UAAU,KAAK,YAAY,UAAU,UAAU,aAAa,CAAC;AAEpE,YAAQ,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc;AAC1E,YAAQ,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AAClE,YAAQ,iBAAiB;AACzB,YAAQ,mBAAmB;AAC3B,YAAQ,SAAS,KAAK;AACtB,YAAQ,WAAW;AACnB,YAAQ,gBAAgB;AAExB,YAAQ,YAAY;AACpB,YAAQ,mBAAmB;AAC3B,YAAQ,SAAS,KAAK,cAAc,WAAW,OAAO,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC3E,YAAQ,WAAW,KAAK,cAAc,WAAW,eAAe,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAGrF,SAAK,cAAc,cAAc,OAAO,EAAE,UAAU,CAAC,SAAQ;AAC3D,UAAI,uBAAuB,CAAA;AAC3B,WAAK,cAAc,CAAA;AACnB,UAAI,MAAW,CAAA;AACf,UAAI,KAAK,aAAa,qBAAqB,SAAS,IAAI;AACtD,aAAK,gBAAgB;MACvB;AAEA,UACE,KAAK,aAAa,wBAAwB,UAC1C,KAAK,aAAa,wBAAwB,MAC1C;AACA,aAAK,aAAa,qBAAqB,QAAQ,CAACC,UAAQ;AACtD,cAAIA,MAAK,WAAWA,MAAK,QAAQ,SAAS,GAAG;AAC3C,YAAAA,MAAK,QAAQ,QAAQ,CAAC,MAAK;AACzB,oBAAM;gBACJ,iBAAiBA,OAAM;gBACvB,WAAWA,OAAM;gBACjB,WAAWA,OAAM;gBACjB,KAAKA,OAAM;gBACX,WAAWA,OAAM;gBACjB,QAAQA,OAAM;gBACd,UAAUA,OAAM;gBAChB,WAAWA,OAAM;gBACjB,aAAaA,OAAM;gBACnB,gBAAgBA,OAAM;gBACtB,eAAeA,OAAM;gBACrB,WAAWA,OAAM;gBACjB,WAAWA,OAAM;gBACjB,aAAaA,OAAM;gBACnB,WAAWA,OAAM;gBACjB,aAAaA,OAAM;gBACnB,QAAQA,OAAM;gBACd,cAAcA,OAAM;gBACpB,UAAU;;gBACV,UAAU;;AAEZ,oBAAM,OAAO,OAAO,KAAK,CAAC;AAC1B,mCAAqB,KAAK,GAAG;AAC7B,oBAAM,CAAA;YACR,CAAC;UACH;QACF,CAAC;AAGD,YAAI,KAAK,eAAe,UAAU,GAAG;AACnC,eAAK,iBAAiB;QACxB,OAAO;AACL,eAAK,iBAAiB,KAAK,eAAe,OACxC,oBAAoB;QAExB;MACF;AACA,YAAM,cAAc,KAAK,eAAe,OAAO,CAAC,KAAK,YAAW;AAC9D,cAAM,wBAAwB,IAAI,KAAK,QAAQ,YAAY,KAAK;AAEhE,cAAM,IAAI,IAAI,KACZ,CAAC,SACC,KAAK,cAAc,QAAQ,aAC3B,KAAK,oBAAoB,QAAQ,mBACjC,KAAK,qBAAqB,QAAQ,gBAAgB;AAEtD,YAAI,CAAC,KAAK,uBAAuB;AAC/B,iBAAO,IAAI,OAAO,CAAC,OAAO,CAAC;QAC7B,OAAO;AACL,iBAAO;QACT;MACF,GAAG,CAAA,CAAE;AAEL,cAAQ,IAAI,uBAAuB,KAAK,cAAc;AACtD,cAAQ,IAAI,eAAe,WAAW;AACtC,UAAI,eAAe,YAAY,SAAS,GAAG;AACzC,cAAM,kBAAkB,KAAK,iBAAiB,WAAW;AACzD,gBAAQ,IAAI,eAAe;AAC3B,iBAAS,OAAO,iBAAiB;AAC/B,eAAK,eAAe,GAAG;QACzB;MACF;AA8CA,WAAK,YAAY,KACf,CAAC,GAAG,MACF,KAAK,aAAa,EAAE,YAAY,IAChC,KAAK,aAAa,EAAE,YAAY,CAAC;AAQrC,cAAQ,IAAI,KAAK,WAAW;AAC5B,iBAAW,MAAK;AACd,aAAK,cAAa;MACpB,GAAG,GAAI;IACT,CAAC;EACH;EAEA,iBAAiB,SAAS,UAAQ;AAChC,SAAK,YAAY,SAAS,eAAe,UAAU;AAEnD,SAAK,YAAY,UAAU,UAAU,cAAc;AACnD,SAAK,YAAY,UAAU,UAAU,cAAc,KAAK;AACxD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,eAAe,iBAClB,SACA,KAAK,cAAc,QACnB,KAAK,kBAAkB,QACvB,QACA,MAAS;EAEb;EAEA,eAAe,OAAY;AACzB,UAAM,gBAAe;EAEvB;EAEA,WAAW,GAAW,OAAc,KAAQ;AAC1C,UAAM,eAAc;AACpB,QAAI,WAAW,CAAC,IAAI;EACtB;EAEA,gBAAa;AACX,SAAK,iBAAiB,KAAK,eAAe,QAAO,EAAG,IAAI,CAAC,cAAa;AACpE,YAAM,UAAU,UAAU;AAC1B,aACE,QAAQ,cAAc,QAAQ,eAC9B,QAAQ,eAAe,QAAQ;IAEnC,CAAC;EACH;;;uCA7XW,sBAAmB,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,eAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,WAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;AAAnB,QAAA,qBAAA,UAAA,SAAA,8CAAA,QAAA;AAAA,iBAAA,IAAA,SAAA,MAAA;QAAgB,CAAA,EAAG,UAAA,SAAA,8CAAA,QAAA;AAAA,iBAAnB,IAAA,SAAA,MAAA;QAAgB,GAAA,OAAA,yBAAA;;;;ACxB7B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,OAAA,CAAA,EACwD,GAAA,GAAA,EACxE,GAAA,GAAA;AACE,QAAA,iBAAA,CAAA;AAA2C,QAAA,uBAAA,EAAI;AAEpD,QAAA,qBAAA,GAAA,kCAAA,GAAA,GAAA,KAAA,CAAA;AAGF,QAAA,uBAAA;AACA,QAAA,qBAAA,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA,EAAuD,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA;AA8EzD,QAAA,uBAAA;;;AApFS,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,iBAAA,OAAA;AAED,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,UAAA,CAAA;AAIA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,UAAA,CAAA;AAQH,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA,UAAA,CAAA;;;;;;6EDOQ,qBAAmB,EAAA,WAAA,uBAAA,UAAA,yEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGnB5B,IAAA,yBAAA,GAAA,GAAA;AAA8B,IAAA,iBAAA,CAAA;AAAoC,IAAA,uBAAA;;;;AAApC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,wBAAA;;;;;AA0B1B,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFyC,IAAA,gCAAA,SAAA,QAAA,OAAA,OAAA,KAAA,EAAA;AACvC,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,OAAA,OAAA,KAAA,gBAAA,GAAA;;;;;AAWA,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,OAAA,OAAA,KAAA,kBAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,eAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,oBAAA,WAAA,GAAA;;;;;AARJ,IAAA,yBAAA,GAAA,UAAA,EAAA;;AACE,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,QAAA,CAAA,EAAmG,GAAA,2DAAA,GAAA,GAAA,QAAA,CAAA,EAGA,GAAA,2DAAA,GAAA,GAAA,QAAA,CAAA;AAMrG,IAAA,uBAAA;;;;;AAV+C,IAAA,gCAAA,SAAA,sBAAA,GAAA,GAAA,IAAA,CAAA;AACtC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,QAAA,OAAA,OAAA,KAAA,qBAAA,+BAAA,OAAA,aAAA,oBAAA,CAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,QAAA,OAAA,OAAA,KAAA,qBAAA,+BAAA,OAAA,aAAA,oBAAA,CAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,QAAA,OAAA,OAAA,KAAA,qBAAA,gBAAA;;;;;;AAdX,IAAA,yBAAA,GAAA,UAAA,EAAA;AAIE,IAAA,qBAAA,UAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,oBAAA,MAAA,CAA2B;IAAA,CAAA;AAErC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;AAC7D,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,UAAA,EAAA;AAWF,IAAA,uBAAA;;;;AAZmC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,gBAAA;AACX,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,oBAAA;;;;;AAYxB,IAAA,yBAAA,GAAA,UAAA,IAAA,CAAA,EAKC,GAAA,UAAA,CAAA;AACkC,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA,EAAS;;;;AAArC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,gBAAA;;;;;AA6FvC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAGC,GAAA,OAAA,EAAA,EACuC,GAAA,GAAA;AAElC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI,EACA;;;;AAFF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,yBAAA,GAAA;;;;;AAKN,IAAA,yBAAA,GAAA,OAAA,EAAA,EAGC,GAAA,OAAA,EAAA,EACuC,GAAA,GAAA;AAElC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI,EACA;;;;AAFF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,2BAAA,GAAA;;;;;AASE,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,qBAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,wBAAA,GAAA;;;;;AAmBF,IAAA,yBAAA,GAAA,MAAA;AAA8B,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA;;;;AAAvB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;;;;;AAC9B,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAsE,IAAA,iBAAA,CAAA;AAEpE,IAAA,uBAAA;;;;;AAFwB,IAAA,gCAAA,QAAA,WAAA,OAAA,OAAA,QAAA,UAAA,uBAAA;AAA4C,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;;;;;AAH1E,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwD,GAAA,UAAA,EAAA;AAEpD,IAAA,qBAAA,GAAA,4DAAA,GAAA,GAAA,QAAA,CAAA,EAA8B,GAAA,yDAAA,GAAA,GAAA,KAAA,EAAA;AAI9B,IAAA,iBAAA,GAAA,QAAA;AACA,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA,EAAS;;;;AANA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,EAAA,WAAA,OAAA,OAAA,QAAA,SAAA;AACH,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,OAAA,OAAA,QAAA,QAAA;;;;;AA3BV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuE,GAAA,OAAA,EAAA,EACjD,GAAA,OAAA,EAAA;AAEhB,IAAA,qBAAA,GAAA,kDAAA,GAAA,GAAA,KAAA,CAAA,EAAuC,GAAA,kDAAA,GAAA,GAAA,KAAA,CAAA;AAMvC,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;;AAAoD,IAAA,uBAAA,EAAI;AAE7D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuB,GAAA,GAAA;AAClB,IAAA,iBAAA,EAAA;AAAkB,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA,EAAI;AAE/B,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,GAAA;AAClB,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA;AAC1B,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA,EAAI;AAEhC,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,GAAA;AAClB,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA;AACzB,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA,EAAI,EACzB;AAER,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,OAAA,EAAA;AAUF,IAAA,uBAAA;;;;;AA/BU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,qBAAA,CAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,qBAAA,CAAA;AAGD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,IAAA,WAAA,OAAA,OAAA,QAAA,6BAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,MAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,OAAA,OAAA,QAAA,UAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,OAAA,OAAA,QAAA,WAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,UAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,OAAA,OAAA,QAAA,UAAA;AAGc,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,qBAAA,CAAA;;;;;;AAzBzB,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAgE,IAAA,qBAAA,UAAA,SAAA,6DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,SAAA,MAAA,CAAgB;IAAA,CAAA;AACxF,IAAA,qBAAA,GAAA,8CAAA,IAAA,IAAA,OAAA,EAAA;AAmCA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,CAAoB;IAAA,CAAA;AACnC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AArCyC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA;AAoChD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,qBAAA,GAAA;;;;;;AAKF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,OAAA,EAAA,EAC/C,GAAA,OAAA,EAAA,EACI,GAAA,GAAA;AAElB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;;AAAkD,IAAA,uBAAA,EAAI;AAE3D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsB,GAAA,GAAA;AACjB,IAAA,iBAAA,EAAA;AAAkB,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAqB,IAAA,uBAAA,EAAI;AAE9B,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,GAAA;AACjB,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA;AAC1B,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA,EAAI;AAE/B,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,GAAA;AACjB,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA;AACzB,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;AAAqB,IAAA,uBAAA,EAAI,EACxB;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,OAAA,EAAA;AAGhB,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,qCAAA,WAAA,OAAA,OAAA,QAAA,EAAA,CAA8C;IAAA,CAAA;AAFzD,IAAA,uBAAA,EAKE,EACE;;;;;AAxBA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,qBAAA,GAAA;AAEC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,QAAA,6BAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,MAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,UAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,WAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,WAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA,UAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,UAAA;;;;;;AAnBX,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,8CAAA,IAAA,IAAA,OAAA,EAAA;AA8BA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,CAAoB;IAAA,CAAA;AACnC,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAS;;;;AAhCwC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,eAAA;AA+B/C,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,qBAAA,GAAA;;;AD9NA,IAAO,yBAAP,MAAO,wBAAsB;EAoBjC,SAAS,OAAK;AAEZ,UAAM,UAAU,MAAM;AACtB,UAAM,kBACN,KAAK,MAAM,QAAQ,SAAS,IAAE,KAAK,MAAM,QAAQ,YAAY,IAAE,KAAK,MAAM,QAAQ,YAAY,IAAE;AAIhG,QAAI,mBAAmB,CAAC,KAAK,UAAU;AACrC,WAAK,WAAW;AAChB,WAAK,YAAW;IAClB,WAAW,CAAC,iBAAiB;AAC3B,WAAK,WAAW;IAClB;EACF;EAEA,cAAW;AACT,SAAK,oBAAoB,KAAK,oBAAoB;AAClD,SAAK,sBAAsB,KAAK,EAAE;EACpC;EAEA,YACS,eACA,cACC,iBACD,aACC,cAAsB;AAJvB,SAAA,gBAAA;AACA,SAAA,eAAA;AACC,SAAA,kBAAA;AACD,SAAA,cAAA;AACC,SAAA,eAAA;AA7CV,SAAA,qBAA8B;AAC9B,SAAA,iBAAsB,CAAA;AACtB,SAAA,uBAA4B,CAAA;AAC5B,SAAA,wBAAgC;AAChC,SAAA,wBAAiC;AAGjC,SAAA,kBAAuB,CAAA;AACvB,SAAA,cAAsC;AAKtC,SAAA,oBAAoB;AACZ,SAAA,WAAoB;AAkC1B,SAAK,QAAQ,KAAK,aAAa;AAC/B,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,uBAAsB;AACxC,WAAK,aAAa,qBAAoB;IACxC;EACF;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,cAAQ,IAAI,IAAI;AAChB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,uBAAsB;AACxC,WAAK,aAAa,qBAAoB;IACxC,CAAC;EACL;EACA,kBAAe;AACb,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,QAAI,KAAK,mBAAmB;AAC1B,WAAK,kBAAkB,cAAc,QAAQ;IAC/C;AACA,SAAK,uBAAuB,CAAA;EAC9B;EACA,WAAQ;AACN,YAAQ,IAAI,KAAK,oBAAoB;AACrC,eAAW,MAAK;AACd,WAAK,QAAQ,KAAK,aAAa;IACjC,GAAG,GAAI;AACP,SAAK,cACF,kBAAkB,KAAK,aAAa,gBAAgB,EACpD,UAAU;MACT,MAAM,CAAC,QAAY;AACjB,gBAAQ,IAAI,IAAI,aAAa,UAAU;AACvC,aAAK,iBAAiB,IAAI,aAAa;MACzC;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,IAAI,KAAK;MACnB;KACD;AACH,SAAK,sBAAsB,KAAK,EAAE;AAElC,eAAW,MAAK;AACd,WAAK,gBAAe;IACtB,GAAG,GAAI;AAEP,SAAK,cAAa;EACpB;EAEA,gBAAa;AACX,SAAK,cAAc,0BAA0B,KAAK,aAAa,gBAAgB,EAAE,UAAU;MACzF,MAAM,CAAC,SAAQ;AACb,aAAK,kBAAkB,KAAK,aAAa,KAAK,OAAK,EAAE,MAAM,YAAY,aAAa;AACpF,gBAAQ,IAAI,UAAU,KAAK,cAAc,KAAK,eAAe;MAC/D;KACD;EACH;EAEA,wBAAwB,IAAE;AACxB,SAAK,cAAc,wBAAwB,EAAE,EAAE,UAAU;MACvD,MAAM,CAAC,QAAY;AACjB,gBAAQ,IAAI,GAAG;AACf,aAAK,uBAAuB,IAAI;MAClC;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,IAAI,KAAK;MACnB;KACD;EACH;EAEA,mBAAmB,OAAK;AACtB,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,SAAK,uBAAuB,CAAA;AAC5B,QAAI,KAAK,mBAAmB;AAC1B,WAAK,kBAAkB,cAAc,QAAQ;IAC/C;AACA,YAAQ,IAAI,MAAM,OAAO,KAAK;AAC9B,SAAK,wBAAwB,MAAM,OAAO;AAC1C,SAAK,wBAAwB,MAAM,OAAO,KAAK;EACjD;EAEA,oBAAoB,OAAK;AACvB,UAAM,MAAM,KAAK,MAAM,MAAM,OAAO,KAAK;AACzC,SAAK,wBAAwB,IAAI;AACjC,SAAK,eAAe,IAAI;EAC1B;EAEA,SAAM;AACJ,QAAI,KAAK,yBAAyB,QAAQ,KAAK,gBAAgB,MAAM;AACnE;IACF;AAEA,QAAI,KAAK,yBAAyB,MAAM;AACtC,YAAM,YAAiB,CAAA;AACvB,YAAM,kBAAkB,aAAa,QAAQ,iBAAiB;AAC9D,UACE,mBAAmB,UACnB,mBAAmB,QACnB,mBAAmB,QACnB;AACA,cAAM,UAAU,KAAK,MAAM,eAAe;AAC1C,kBAAU,cAAc;AACxB,kBAAU,yBAAyB,QAAQ;AAC3C,kBAAU,mBAAmB;AAC7B,kBAAU,oBAAoB,QAAQ;MACxC;AACA,YAAM,cAAc,IAAI,gBAAgB,SAAS,EAAE,SAAQ;AAC3D,cAAQ,IAAI,WAAW;AACvB,WAAK,gBAAgB,sBACnB,KAAK,uBACL,WAAW;IAEf,OAAO;AACL,YAAM,YAAiB;QACrB,iBAAiB,YAAY;QAC7B,sBAAsB,KAAK;QAC3B,cAAc,KAAK;QACnB,kCAAkC;;AAGpC,YAAM,kBAAkB,aAAa,QAAQ,iBAAiB;AAE9D,UACE,mBAAmB,UACnB,mBAAmB,QACnB,mBAAmB,QACnB;AACA,cAAM,UAAU,KAAK,MAAM,eAAe;AAC1C,kBAAU,cAAc;AACxB,kBAAU,yBAAyB,QAAQ;AAC3C,kBAAU,mBAAmB;AAC7B,kBAAU,oBAAoB,QAAQ;MACxC;AAEA,YAAM,cAAc,IAAI,gBAAgB,SAAS,EAAE,SAAQ;AAC3D,cAAQ,IAAI,WAAW;AACvB,WAAK,gBAAgB,4BAA4B,WAAW;IAC9D;EACF;EAEA,sBAAsB,aAAqB,MAAc,IAAE;AACzD,SAAK,qBAAqB,eAAe,MAAM,QAAQ;AACvD,QAAI,OAAO,WAAW;AACpB,WAAK,kBAAkB,CAAA;AACvB,WAAK,oBAAoB;AACzB,WAAK,WAAW;IAClB;AACA,QAAI,gBAAgB,KAAK;AACvB,WAAK,kBAAkB,CAAA;AACvB,WAAK,oBAAoB;AACzB,WAAK,WAAW;IAClB;AACA,QAAI,aAAa,KAAK,YAAY,QAAQ,YAAY,YAAY;AAClE,YAAQ,IAAI,UAAU;AAgBtB,UAAM,UAAU;MACd,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;MACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,YAAY;MACZ,UAAU;MACV,QAAQ,KAAK;MACb,UAAU;;AAGZ,SAAK,cAAc,sBAAsB,OAAO,EAAE,UAAU;MAC1D,MAAM,CAAC,QAAY;AACjB,YAAG,CAAC,KAAK,cAAc,mBAAmB;AACvC,eAAK,aAAY;AACpB,YAAI,KAAK,gBAAgB,UAAU,GAAG;AACpC,eAAK,kBAAkB,KAAK,gBAAgB,OAC1C,KAAK,cAAc,iBAAiB;AAEtC,kBAAQ,IAAI,gBAAgB,KAAK,eAAe;QAClD,OAAO;AACL,eAAK,kBAAkB,KAAK,cAAc;AAC1C,kBAAQ,IAAI,UAAU,KAAK,eAAe;QAC5C;AAmBA,gBAAQ,IAAI,2BAA2B,KAAK,eAAe;AAC3D,aAAK,qBAAqB,eAAe,MAAM,QAAQ;MACzD;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,IAAI,KAAK;MACnB;KACD;EACH;;;;;;;;;;;;EAcA,aAAa,cAA6B;AACxC,UAAM,WAAW,KAAK,aAAa,KAAK,mBAAmB;MACzD,MAAM;MACN,aAAa;KACd;AACD,aAAS,kBAAkB,YAAY;EACzC;EAEA,qCAAqC,gBAAsB;AACzD,QAAI,UAAU;MACZ,cAAc,KAAK,YAAY,QAAQ,YAAY,cAAc;MACjE,UAAU,KAAK,YAAY,QAAQ,YAAY,UAAU;MACzD,eAAe;;AAGjB,SAAK,cAAc,kCAAkC,OAAO,EAAE,UAAU;MACtE,MAAM,CAAC,QAAY;AACjB,gBAAQ,IAAI,GAAG;AAEf,aAAK,aAAa,KAAK,cAAc,WAAW;MAClD;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,IAAI,KAAK;MACnB;KACD;EACH;EAEA,qBAAkB;AAChB,UAAM,YAAiB,CAAA;AACvB,UAAM,kBAAkB,aAAa,QAAQ,iBAAiB;AAE9D,QACE,mBAAmB,UACnB,mBAAmB,QACnB,mBAAmB,QACnB;AACA,YAAM,UAAU,KAAK,MAAM,eAAe;AAC1C,gBAAU,cAAc;AACxB,gBAAU,yBAAyB,QAAQ;AAC3C,gBAAU,mBAAmB;AAC7B,gBAAU,oBAAoB,QAAQ;IACxC;AAEA,UAAM,cAAc,IAAI,gBAAgB,SAAS,EAAE,SAAQ;AAC3D,YAAQ,IAAI,WAAW;AACvB,SAAK,gBAAgB,aAAa,WAAW;EAC/C;EAEA,qBAAkB;AAChB,YAAQ,IAAI,IAAI;AAChB,UAAM,YAAiB,CAAA;AACvB,UAAM,kBAAkB,aAAa,QAAQ,iBAAiB;AAE9D,QACE,mBAAmB,UACnB,mBAAmB,QACnB,mBAAmB,QACnB;AACA,YAAM,UAAU,KAAK,MAAM,eAAe;AAC1C,gBAAU,cAAc;AACxB,gBAAU,yBAAyB,QAAQ;AAC3C,gBAAU,mBAAmB;AAC7B,gBAAU,oBAAoB,QAAQ;IACxC;AAEA,UAAM,cAAc,IAAI,gBAAgB,SAAS,EAAE,SAAQ;AAC3D,YAAQ,IAAI,WAAW;AACvB,SAAK,gBAAgB,qBAAqB,WAAW;EACvD;;;uCA/VW,yBAAsB,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,CAAA;IAAA;EAAA;;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,WAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;;;;;;;;;AAAtB,QAAA,qBAAA,UAAA,SAAA,iDAAA,QAAA;AAAA,iBAAA,IAAA,SAAA,MAAA;QAAgB,CAAA;;;;AC1B7B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAwB,GAAA,OAAA,CAAA,EACuD,GAAA,GAAA,EACxE,GAAA,GAAA;AACE,QAAA,iBAAA,CAAA;AAAyB,QAAA,uBAAA,EAAI;AAElC,QAAA,qBAAA,GAAA,qCAAA,GAAA,GAAA,KAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,OAAA,CAAA,EACH,GAAA,GAAA,EACnB,GAAA,MAAA;AAEE,QAAA,oBAAA,IAAA,OAAA,CAAA;AACD,QAAA,uBAAA;AAED,QAAA,iBAAA,EAAA;AACH,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,GAAA;AACE,QAAA,iBAAA,EAAA;AAEF,QAAA,uBAAA;AAIA,QAAA,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,UAAA,CAAA;AAIlB,QAAA,qBAAA,UAAA,SAAA,0DAAA,QAAA;AAAA,iBAAU,IAAA,mBAAA,MAAA;QAA0B,CAAA;AAEpC,QAAA,yBAAA,IAAA,UAAA,CAAA;AAAiC,QAAA,iBAAA,EAAA;AAAsB,QAAA,uBAAA;AACvD,QAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,UAAA,EAAA;AAGF,QAAA,uBAAA;AACA,QAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,UAAA,EAAA,EAKC,IAAA,2CAAA,GAAA,GAAA,UAAA,EAAA;AAuBD,QAAA,yBAAA,IAAA,OAAA,EAAA;AACE,QAAA,oBAAA,IAAA,OAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,OAAA,EAAA,EACJ,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACa,IAAA,MAAA,EAAA;AAKxB,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAK,EACD;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,OAAA,EAAA,EACmC,IAAA,KAAA,EAAA;AAK7D,QAAA,oBAAA,IAAA,OAAA,EAAA;AAGE,QAAA,yBAAA,IAAA,QAAA,EAAA;AAGC,QAAA,iBAAA,EAAA;AAAiD,QAAA,uBAAA,EACnD;AAEH,QAAA,yBAAA,IAAA,KAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAI;AAEN,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiE,IAAA,KAAA,EAAA;AAK7D,QAAA,oBAAA,IAAA,OAAA,EAAA;AAIE,QAAA,yBAAA,IAAA,QAAA,EAAA;AAGC,QAAA,iBAAA,EAAA;AAA6B,QAAA,uBAAA,EAC/B;AAEH,QAAA,yBAAA,IAAA,KAAA,EAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAI,EACA,EACF,EACF,EACF;AAGR,QAAA,yBAAA,IAAA,UAAA,EAAA;AAAQ,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,OAAA;QAAQ,CAAA;AACvB,QAAA,iBAAA,EAAA;AACA,QAAA,oBAAA,IAAA,OAAA,EAAA;AAKF,QAAA,uBAAA,EAAS,EACL;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwE,IAAA,GAAA;AACnE,QAAA,iBAAA,EAAA;AAAwD,QAAA,uBAAA;AAC3D,QAAA,yBAAA,IAAA,UAAA,EAAA;AAAQ,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,mBAAA;QAAoB,CAAA;AACnC,QAAA,iBAAA,EAAA;AACA,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA,EAAS;AAEX,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiC,IAAA,UAAA,EAAA;AAG7B,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,sBAAsB,KAAI,SAAS;QAAC,CAAA;AAE7C,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,UAAA,EAAA;AAEE,QAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,iBAAS,IAAA,sBAAsB,KAAI,WAAW;QAAC,CAAA;AAE/C,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS;AAGX,QAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EAGC,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EAWA,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA,EAQ2F,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA;AA4E5F,QAAA,uBAAA,EAAM;;;AAxPC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,aAAA;AAED,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA;AASD,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,mBAAA,OAAA,OAAA,IAAA,gBAAA,kBAAA,GAAA;AAID,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,mBAAA,OAAA,OAAA,IAAA,gBAAA,0BAAA,GAAA;AAYmC,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,UAAA;AACX,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,cAAA;AAKrB,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,qBAAA,UAAA,CAAA;AAsBA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,qBAAA,WAAA,CAAA;AAgBS,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,kBAAA,GAAA;AAgBG,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,iBAAA,aAAA;AAIH,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,+BAAA,IAAA;AAeG,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,iBAAA;AAIH,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,0CAAA,IAAA;AASV,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,QAAA,GAAA;AAUD,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,MAAA,4CAAA;AAED,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,UAAA,GAAA;AAMA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,CAAA,IAAA,oBAAA,IAAA,kBAAA,CAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,sBAAA,GAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,IAAA,oBAAA,CAAA,IAAA,kBAAA,CAAA;AAGA,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,MAAA,wBAAA,GAAA;AAKD,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,sBAAA,IAAA,gBAAA,UAAA,CAAA;AAWA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,sBAAA,IAAA,gBAAA,UAAA,CAAA;AAUG,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,CAAA,IAAA,kBAAA;AAyCA,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,kBAAA;;;;;;6ED9LK,wBAAsB,EAAA,WAAA,0BAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AEN7B,IAAO,oBAAP,MAAO,mBAAiB;EAmC5B,YACS,QACA,eACC,cACD,iBACA,2BACA,eACA,gBACA,cACA,mBACA,aACC,UACA,OAAqB,cAAoC,SAAsB;AAXhF,SAAA,SAAA;AACA,SAAA,gBAAA;AACC,SAAA,eAAA;AACD,SAAA,kBAAA;AACA,SAAA,4BAAA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACC,SAAA,WAAA;AACA,SAAA,QAAA;AAAqB,SAAA,eAAA;AAAoC,SAAA,UAAA;AA5CnE,SAAA,kBAAkB;AAElB,SAAA,gBAAgB;AAChB,SAAA,yBAAyB;AACzB,SAAA,cAAc;AAGd,SAAA,mBAAmB,CAAC,cAAc,mBAAmB,aAAa,eAAe,aAAa,eAAe,aAAa,GAAG;AAC7H,SAAA,aAAa,IAAI,yBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,mBAA0B,CAAA;AAEnB,SAAA,OAAc,CAAA;AACrB,SAAA,aAAa;AACN,SAAA,gBAAgB,kBAAkB;AAClC,SAAA,2BAA2B,kBAAkB;AAMpD,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,MAAc,KAAK,QAAQ,KAAK;AAEhC,SAAA,gBAA0B,CAAA;AACnB,SAAA,eAAsB,CAAA;AAE7B,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAEpE,SAAA,mBAAyB;AAerB,QAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,WAAK,gBAAe;IACtB,OAAO;AACL,WAAK,aAAa,uBAAsB;IAC1C;AACA,SAAK,gBAAgB,mBAAmB,UAAU;EACpD;EAEF,WAAQ;AAEN,SAAK,UAAU,KAAK,YAAY,QAAQ,WAAW,KACjD,CAAC,MAAM,EAAE,aAAa,oBAAoB;EAE9C;EAEO,kBAAe;AACpB,SAAK,aACF,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EACxD,UAAU,CAAC,SAAQ;AAClB,cAAQ,IAAI,IAAI;AAChB,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,aAAa,uBAAsB;IAC1C,CAAC;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4GO,iCAAiC,OAAK;AAC3C,SAAK,yBAAyB;AAE9B,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,YAAY,MAAM;AAChD,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,WAAW,KAAK,YAAY,QAAQ,YAAY,UAAU;AACxF,SAAK,kBAAkB,OAAO,gBAAgB;AAC9C,SAAK,kBAAkB,OAAO,mBAAmB,MAAM;AAEvD,SAAK,cAAc,uBAAuB;EAC5C;;;;;;;;;;EAaA,kBAAe;AACb,WAAO,SAAS,OAAM;EACxB;;;uCA7MW,oBAAiB,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,WAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAmBjB,SAAO,CAAA;8BAWP,WAAS,CAAA;;;;;;;;;;AClDtB,QAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,QAAA,oBAAA,GAAA,eAAA;AAGA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,KAAA,EACrC,GAAA,cAAA,CAAA;AAED,QAAA,qBAAA,yBAAA,SAAA,uEAAA,QAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAyB,IAAA,iCAAA,MAAA,CAAwC;QAAA,CAAA;AAClE,QAAA,uBAAA,EAAa;AAGhB,QAAA,yBAAA,GAAA,wBAAA,CAAA;AAIE,QAAA,oBAAA,GAAA,cAAA,GAAA,CAAA;AAcA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAgE,GAAA,OAAA,CAAA,EAChB,IAAA,UAAA,CAAA;AACoC,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,mBAA4B,KAAK;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA;AAC1H,QAAA,yBAAA,IAAA,UAAA,CAAA;AAAgF,QAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAA,IAAA,mBAA4B,IAAI;QAAA,CAAA;AAAE,QAAA,iBAAA,IAAA,eAAA;AAAa,QAAA,uBAAA,EAAS;AAE1I,QAAA,yBAAA,IAAA,WAAA,CAAA,EAAgC,IAAA,OAAA,EAAA,EACiD,IAAA,OAAA,EAAA;AAE7E,QAAA,oBAAA,IAAA,OAAA,EAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAyB,QAAA,iBAAA,EAAA;AAAsC,QAAA,uBAAA,EAAI;AAErE,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,OAAA,EAAA;AAGH,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,cAAA,WAAA,IAAA,QAAA,MAAA,CAAwC;QAAA,CAAA;AAFjD,QAAA,uBAAA,EAEqD,EACjD;AAEN,QAAA,oBAAA,IAAA,mBAAA,EAAA,EAA2E,IAAA,qBAAA,EAAA;AAE7E,QAAA,uBAAA,EAAU,EACN;AAER,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA,EAAA;AACjB,QAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,gBAAA,CAAiB;QAAA,CAAA;AAA/B,QAAA,uBAAA,EAAgG,EAC5F,EACF;;;AAvBU,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,CAAA,IAAA,kBAAA,IAAA,gBAAA,CAAA;AACA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,IAAA,kBAAA,CAAA,IAAA,gBAAA,CAAA;AAMmB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,aAAA,iBAAA,IAAA;AAG6C,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,aAAA,iBAAA,IAAA;AAKvD,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAC,OAAA,IAAA,gBAAA,CAAA;AACE,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,0BAAA,IAAAA,OAAA,CAAA,IAAA,gBAAA,CAAA;;;;;;6ED5BhB,mBAAiB,EAAA,WAAA,qBAAA,UAAA,yDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEyBvB,IAAM,SAAiB;;EAE5B;IACE,MAAM;IACN,WAAW;;;EAGb;IACE,MAAM;IACN,WAAW;;;EAGb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,cAAc,MAAM,OAAO,qCAAgD,EAAE,KAAK,CAAC,MAAM,EAAE,mBAAmB;;EAEhH;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;;EAGzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;;EAGzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,eAAe;;EAE/B;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;;;EAGb;IACE,MAAM;IACN,WAAW;;IAEX,aAAa,CAAC,SAAS;;;;;;;;;;EAUzB;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,kBAAkB;;;;;;;EAOlC;IACE,MAAM;IACN,WAAW;;;EAGb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,kBAAkB;;EAElC;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,kBAAkB;;EAElC;IACE,MAAM;IACN,WAAW;;;EAGb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,kBAAkB;;EAElC;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,SAAS;;EAEzB;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,eAAe;;;;;;EAO/B;IACE,MAAM;IACN,WAAW;;;;;;EAMb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,WAAW;IACX,aAAa,CAAC,cAAc;;EAE9B;IACE,MAAM;IACN,WAAW;;EAEb;IACE,MAAM;IACN,cAAc,MAAM,OAAO,mCAA4C,EAAE,KAAK,CAAC,MAAM,EAAE,iBAAiB;;EAE1G;IACE,MAAM;IACN,cAAc,MAAM,OAAO,oCAA8C,EAAE,KAAK,CAAC,MAAM,EAAE,mBAAmB;;EAE9G;IACE,MAAM;IACN,WAAW;IACX,YAAY;;EAEd;IACE,MAAM;;IAEN,YAAY;;;AAUV,IAAO,mBAAP,MAAO,kBAAgB;;;uCAAhB,mBAAgB;IAAA;EAAA;;wEAAhB,kBAAgB,CAAA;EAAA;;4EAJzB,aAAa,QAAQ,QAAQ,CAAA,CAAE,GAEvB,YAAY,EAAA,CAAA;EAAA;;;;AC5PlB,IAAO,gBAAP,MAAO,eAAa;;;uCAAb,gBAAa;IAAA;EAAA;;wEAAb,eAAa,CAAA;EAAA;;;MATlB;MACA;MACA;MACA;MACA;IAAS,EAAA,CAAA;EAAA;;;;ACKX,IAAO,mBAAP,MAAO,kBAAgB;;;uCAAhB,mBAAgB;IAAA;EAAA;;wEAAhB,kBAAgB,CAAA;EAAA;;;MATzB;MACA;MACA;MACA;MACA;IAAU,EAAA,CAAA;EAAA;;;;ACqBR,IAAO,eAAP,MAAO,cAAY;EAMvB,YACS,eACC,qBACD,QACC,OACD,cACA,aACC,cACD,iBACA,2BACA,eACA,aACA,cACC,eACA,UACA,QACD,oBACA,mBAA6C,cAA0B;AAhBvE,SAAA,gBAAA;AACC,SAAA,sBAAA;AACD,SAAA,SAAA;AACC,SAAA,QAAA;AACD,SAAA,eAAA;AACA,SAAA,cAAA;AACC,SAAA,eAAA;AACD,SAAA,kBAAA;AACA,SAAA,4BAAA;AACA,SAAA,gBAAA;AACA,SAAA,cAAA;AACA,SAAA,eAAA;AACC,SAAA,gBAAA;AACA,SAAA,WAAA;AACA,SAAA,SAAA;AACD,SAAA,qBAAA;AACA,SAAA,oBAAA;AAA6C,SAAA,eAAA;AAtB/C,SAAA,OAAc,CAAA;AAEd,SAAA,aAAa;AACb,SAAA,aAAa;AAiKpB,SAAA,gBAAqB,CAAA;AACrB,SAAA,eAAoB,CAAA;AAxHlB,SAAK,YAAY,KAAK,UAAU,UAAO;AACrC,WAAK,WAAW,KAAK;IACvB,CAAC;AACD,QAAI;AACF,WAAK,cAAc,kBAAkB,YAAY,SAAS,WAAW,cAAc,IAAI,EAAE,UAAU,SAAM;AACvG,aAAK,YAAY,QAAQ,mBAAmB,IAAI;AAChD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;MACrD,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH,SAAS,KAAK;AACZ,WAAK,cAAc,sBAAqB;IAC1C;AAIA,SAAK,OAAO,OAAO,UAAU,WAAQ;AACnC,UAAI,iBAAiB,mBAAmB,eAAe,QAAQ,QAAQ;AACrE,aAAK,gBAAgB,OAAM;MAC7B;AAEA,UAAI,iBAAiB,iBAAiB,MAAM,OAAO,UAAU;AAC3D,aAAK,YAAY,MAAK;MACxB;AAGA,YAAM,yBAAyB,CAAC,iBAAiB,iBAAiB;AAClE,UAAI,iBAAiB,iBAAiB,MAAM,MAAM,KAAK,uBAAuB,SAAS,MAAM,GAAG,GAAG;AACjG,aAAK,YAAY,QAAQ,UAAU;AACnC,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;MACrD;AAKA,UAAI,KAAK,YAAY,QAAQ,YAAY,oBAAoB,KAAK,SAAS,iBAAiB,iBAAiB,EAAE,KAAK,SAAS,kBAAkB,KAAK,KAAK,SAAS,gBAAgB,IAAI;AACpL,aAAK,UAAU,MAAM;AACrB,aAAK,aAAa,YAAY,KAAK,cAAc,eAAe,KAAK,YAAY,QAAQ,YAAY,cAAc,CAAC,EAAE,UAAU,UAAO;AACrI,eAAK,YAAY,QAAQ,yBAAyB,IAAI,KAAK,aAAa,yBAAyB;AACjG,eAAK,YAAY,QAAQ,aAAa,KAAK,aAAa,YAAY;AACpE,cAAI,KAAK,YAAY,QAAQ,4BAA4B,KAAK,aAAa,sBAAsB,GAAG;AAClG,iBAAK,YAAY,QAAQ,2BAA2B,KAAK,aAAa,sBAAsB;AAC5F,iBAAK,cAAc,gBAAgB,KAAK,aAAa,kBAAkB,IAAI;UAC7E,OAAO;AACL,iBAAK,cAAc,qBAAqB,KAAK,YAAY,QAAQ;AACjE,iBAAK,cAAc,wBAAuB;UAC5C;AAEA,gBAAM,mBAAmB,KAAK,aAAa,sBAAsB;AACjE,cAAI,kBAAkB;AACpB,kBAAM,UAAU,KAAK,YAAY,YAAY,gBAAgB;AAC7D,gBAAI,CAAC,KAAK,YAAY,QAAQ,OAAO,QAAQ,UAAU,KAAK,YAAY,QAAQ,OAAO,qBAAqB,SAAS;AACnH,mBAAK,YAAY,QAAQ,OAAO,eAAe;YACjD;AACA,iBAAK,YAAY,QAAQ,OAAO,mBAAmB;UACrD,OAAO;AACL,iBAAK,YAAY,QAAQ,OAAO,eAAe;UACjD;AAEA,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,eAAK,aAAa,WAAU;AAG5B,cAAI,KAAK,aAAa,SAAS,KAAK,KAAK,aAAa,OAAO,OAAK,EAAE,WAAW,KAAK,EAAE,QAAQ;AAC5F,yBAAa,QAAQ,gBAAgB,OAAO;AAC5C,kBAAM,WAAW,KAAK,aAAa,KAAK,uBAAuB;cAC7D,UAAU;cACV,UAAU;cACV,YAAY;aACb;AACD,qBAAS,kBAAkB,UAAU;UACvC;QACF,GAAG,SAAM;AACP,kBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,eAAK,cAAc,sBAAqB;QAC1C,CAAC;MACH;AAEA,UAAI,iBAAiB,iBAAiB,EAAE,MAAM,kBAAkB,SAAS,YAAY,KAAK,MAAM,kBAAkB,SAAS,KAAK,IAAI;AAClI,aAAK,cAAc,SAAS,UAAS,EAAG,SAAS,eAAe,EAAE,OAAO,MAAM,kBAAiB,CAAE;AAClG,aAAK,SAAS,aAAa;UACzB,WAAW,MAAM;UACjB,YAAY,KAAK,aAAa,MAAM,iBAAiB,IAAI;SAC1D;MACH;IASF,CAAC;EAEH;EAEO,aAAa,KAAW;AAC7B,UAAM,WAAW,IAAI,MAAM,GAAG;AAC9B,aAAS,MAAK;AACd,WAAO,SAAS,KAAK,GAAG;EAC1B;;EAGA,cAAW;AACT,UAAM,aAAgC,SAAS,cAAc,QAAQ;AACrE,eAAW,QAAQ;AACnB,eAAW,MAAM,iDAAiD,YAAY;AAC9E,aAAS,KAAK,QAAQ,UAAU;AAEhC,eAAW,MAAK;AACd,UAAI,OAAO,SAAS,aAAa;AAC/B,aAAK,UAAU,YAAY,gBAAgB,EAAE,gBAAgB,MAAK,CAAE;MACtE;IACF,GAAG,GAAI;EACT;EAIA,uBAAoB;AAClB,UAAM,SAAS,KAAK,YAAY,QAAQ,YAAY,YAAY;AAChE,QAAI,QAAQ;AACV,WAAK,cAAc,oBAAoB,MAAM,EAAE,UAAU,SAAM;AAC7D,YAAI,aAAa,eAAe,IAAI,KAAK;AACzC,YAAI,aAAa,cAAc,IAAI,KAAK;AACxC,aAAK,YAAY,QAAQ,qBAAqB,IAAI;AAClD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;MACrD,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH;EACF;EACA,kBAAe;AACb,QAAI;AACF,UAAI,OAAO,SAAS,KAAK,QAAQ,WAAW,MAAM,IAAI;AACpD,aAAK,oBAAmB;MAC1B,OAAO;AACL,mBAAW,MAAM,KAAK,qBAAqB,GAAG;MAChD;IAEF,SAAS,KAAK;AACZ,WAAK,cAAc,sBAAqB;IAC1C;AAEA,SAAK,YAAW;EAClB;EACA,WAAQ;AACN,QAAI,OAAO,aAAa,cAAc,KAAK,MAAM,cAAc,WAAW,IAAI;AAC9E,SAAK,aAAa,gBAAgB,IAAI;AACtC,SAAK,cAAc,eAAe,UAAU;MAC1C,MAAM,CAAC,QAAO;AACZ,cAAM,YAAY,IAAI,KAAK,CAAC,IAAI,IAAI,GAAG,EAAE,MAAM,kBAAiB,CAAE;AAClE,cAAMC,QAAO,OAAO,IAAI,gBAAgB,SAAS;AAEjD,YAAI,CAAC,KAAK,SAAS,WAAW,CAAC,KAAK,SAAS,QAAQ;AACnD,gBAAM,OAAO,SAAS,cAAc,GAAG;AACvC,mBAAS,KAAK,YAAY,IAAI;AAC9B,eAAK,OAAOA;AACZ,eAAK,WAAW,GAAG,IAAI,QAAQ;AAC/B,eAAK,MAAK;AACV,eAAK,OAAM;QACb;AAEA,aAAK,0BAA0B,QAAO;AACtC,YAAI,MAAM,KAAK,aAAa,oBAAoB;AAChD,cAAM,OAAO,IAAI,QAAQ,oBAAK;AAC9B,YAAI,QAAQ,IAAI;AACd,gBAAM,SAAS,CAAC,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,MAAM,IAAI,CAAC;AACnD,gBAAM,OAAO,CAAC,IAAI,SAAS,OAAO,CAAC;QACrC;AACA,cAAM,MAAM,KAAK,0BAA0B,QAAQ,SAAS,KAAK,KAAK,aAAa,oBAAoB,cAAc,IAAI,MAAM,MAAM,KAAK;AAC1I,YAAI,KAAK,MAAK;AACZ,gBAAM,QAAQ,SAAS,cAAc,GAAG;AACxC,mBAAS,KAAK,YAAY,KAAK;AAC/B,gBAAM,OAAOA;AACb,gBAAM,SAAS;AACf,cAAI,KAAK,SAAS,WAAW,KAAK,SAAS;AAAQ,kBAAM,WAAW,GAAG,IAAI,QAAQ;AACnF,gBAAM,MAAK;AACX,gBAAM,OAAM;AACZ,iBAAO,IAAI,gBAAgBA,KAAI;QACjC,CAAC;MACH;MACA,OAAO,MAAK;AACV,aAAK,cAAc,sBAAqB;MAC1C;KACD;AAED,SAAK,cAAc,oBAAmB,EAAG,UAAU,CAACA,UAAQ;AAC1D,UAAIA,MAAK,cAAc,OAAO;AAC5B,aAAK,YAAY,QAAQ,aAAaA,MAAK;AAC3C,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;MACrD;IACF,CAAC;AAED,SAAK,cAAc,gBAAgB,UAAU,WAAQ;AACnD,cAAQ,IAAI,KAAK;AACjB,WAAK,cAAc,sBAAqB;IAE1C,CAAC;EAEH;EAEA,sBAAmB;AACjB,SAAK,cAAc,oBAAoB,CAAC,EAAE,UAAU,SAAM;AACxD,WAAK,gBAAgB,IAAI,aAAa;AACtC,WAAK,eAAe,IAAI,aAAa;AAErC,WAAK,qBAAoB;IAC3B,GAAG,SAAM;AACP,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,WAAK,qBAAoB;AACzB,WAAK,cAAc,sBAAqB;IAC1C,CAAC;EACH;;;uCAtQW,eAAY,4BAAA,aAAA,GAAA,4BAAA,mBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,YAAA,CAAA;IAAA;EAAA;;yEAAZ,eAAY,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,UAAA,CAAA,6BAFZ,CAAC,cAAc,CAAC,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACvB7B,QAAA,oBAAA,GAAA,eAAA,EAA+B,GAAA,gBAAA;;;;;;6EDyBlB,cAAY,EAAA,WAAA,gBAAA,UAAA,8BAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEpBnB,IAAO,kBAAP,MAAO,iBAAe;;;;;;;;EA2B1B,YAAoB,aAAwC,QAAuB,eAAqC,2BAC/G,eAAqC,cAAmC,iBAAyC,aAAwB;AAD9H,SAAA,cAAA;AAAwC,SAAA,SAAA;AAAuB,SAAA,gBAAA;AAAqC,SAAA,4BAAA;AAC/G,SAAA,gBAAA;AAAqC,SAAA,eAAA;AAAmC,SAAA,kBAAA;AAAyC,SAAA,cAAA;AA1BnH,SAAA,gBAAgB,IAAI,YAAW;AAEtC,SAAA,OAAO;AACA,SAAA,aAAoB,CAAA;AACpB,SAAA,MAAM;AAGN,SAAA,eAAe;AACf,SAAA,WAAW;AACX,SAAA,YAAY;AACZ,SAAA,OAAO;AAKd,SAAA,mBAAmB;AAYjB,SAAK,cAAc,mBAAkB,EAAG,UAAU,UAAO;AACvD,WAAK,aAAa,KAAK;AACvB,UAAI,SAAS,UAAU,UAAa,SAAS,UAAU,QAAQ,SAAS,UAAU,IAAI;AAEpF,cAAM,WAAY,UAAU,SAAU,MAAM,GAAG,EAAE,CAAC,KAAK,SAAa,UAAU,SAAU,MAAM,GAAG,EAAE,CAAC,IAAK,UAAU,SAAU,MAAM,GAAG,EAAE,CAAC,EAAE,YAAW;AACtJ,aAAK,aAAa,mBAAmB,KAAK,kBAAkB,QAAQ;AACpE,aAAK,gBAAe;AACpB,cAAM,IAAI,oBAAI,KAAI;AAClB,UAAE,QAAQ,EAAE,QAAO,IAAM,KAAK,KAAK,KAAK,GAAK;AAC7C,cAAM,UAAU,aAAa,EAAE,YAAW;AAE1C,iBAAS,SAAS,kBAAkB,UAAU;AAC9C,iBAAS,SAAS,uBAAuB;AACzC,iBAAS,SAAS;AAClB,iBAAS,SAAS,UAAU,OAAO,SAAS;MAC9C,OACK;AACH,YAAI,KAAK,aAAa,YAAY,UAAU,GAAG;AAC7C,eAAK,gBAAe;QACtB,OACK;AACH,eAAK,UAAS;QAChB;MACF;IACF,CAAC;EACH;EAEO,kBAAkB,KAAG;AAC1B,WAAO,KAAK,WAAW,KAAK,OAAK,EAAE,KAAK,YAAW,KAAM,GAAG,KAAK,SAAY,KAAK,WAAW,KAAK,OAAK,EAAE,KAAK,YAAW,KAAM,GAAG,EAAE,KAAK,YAAY;EACvJ;EAEO,aAAU;AACf,UAAM,SAAS,OAAM;EAEvB;EAEA,WAAQ;AACN,SAAK,eAAe,KAAK,gBAAgB,IAAI,SAAQ,CAAE;AACvD,QAAI,aAAa,gBAAgB,GAAG;AAClC,WAAK,aAAa,SAAS,KAAK,SAAS,aAAa,gBAAgB,CAAC;AACvE,WAAK,eAAe;IACtB;EAeF;EAEO,QAAQ,KAAG;AAChB,SAAK,0BAA0B,QAAQ,IAAI,KAAK,KAAK,aAAa,wBAAwB,SAAS,KAAK,aAAa,uBAAuB,QAAQ,MAAM,MAAM,KAAK;EAMvK;EAEO,kBAAe;AAEpB,iBAAa,QAAQ,cAAc,KAAK,aAAa,iBAAiB,SAAQ,CAAE;AAChF,SAAK,YAAY,QAAQ,WAAW,aAAa,KAAK,aAAa,iBAAiB,SAAQ;AAC5F,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,SAAK,aAAa,gBAAgB,MAAM,KAAK,aAAa,gBAAgB,EAAE,UAAU,UAAO;AAC3F,WAAK,aAAa,cAAc,KAAK;AACrC,WAAK,UAAS;AACd,WAAK,MAAM;IACb,CAAC;EACH;EAEO,YAAS;AACd,QAAI,aAAa,cAAc;AAC7B,mBAAa,QAAQ,cAAc,KAAK,aAAa,iBAAiB,SAAQ,CAAE;AAClF,SAAK,YAAY,QAAQ,WAAW,aAAa,KAAK,aAAa,iBAAiB,SAAQ;AAC5F,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,SAAK,gBAAgB,IAAI,YAAW;AACpC,QAAI,KAAK,aAAa,YAAY,aAAa,KAAK,QAAW;AAC7D,WAAK,cAAc,iCAAiC,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,gCAAgC,EAAE;AAC3J,WAAK,cAAc,QAAQ,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,OAAO,EAAE;AACzG,WAAK,cAAc,WAAW,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,UAAU,EAAE;AAC/G,WAAK,cAAc,iBAAiB,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,gBAAgB,EAAE;AAC3H,WAAK,cAAc,QAAQ,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,OAAO,EAAE;AACzG,WAAK,cAAc,oBAAoB,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,mBAAmB,EAAE;AACjI,WAAK,cAAc,aAAa,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,YAAY,EAAE;AACnH,WAAK,cAAc,oBAAoB,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,mBAAmB,EAAE;AACjI,WAAK,cAAc,+BAA+B,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,8BAA8B,EAAE;AACvJ,WAAK,cAAc,iCAAiC,KAAK,aAAa,YAAY,aAAa,EAAE,KAAK,OAAK,EAAE,YAAY,gCAAgC,EAAE;AAE3J,WAAK,cAAc,wBAAwB,KAAK,aAAa,SAAS,eAAe,yBAAyB,KAAK,cAAc,qBAAqB;AACtJ,WAAK,cAAc,gBAAgB,KAAK,aAAa,SAAS,eAAe,iBAAiB,KAAK,cAAc,aAAa;AAC9H,WAAK,cAAc,cAAc,KAAK,aAAa,SAAS,eAAe,eAAe,KAAK,cAAc,WAAW;AACxH,WAAK,cAAc,uBAAuB,KAAK,aAAa,SAAS,eAAe,wBAAwB,KAAK,cAAc,oBAAoB;AACnJ,WAAK,cAAc,sBAAsB,KAAK,aAAa,SAAS,eAAe,uBAAuB,KAAK,cAAc,mBAAmB;AAChJ,WAAK,cAAc,aAAa,KAAK,aAAa,SAAS,eAAe,cAAc,KAAK,cAAc,UAAU;IAEvH;EAEF;EAEO,SAAS,KAAG;AACjB,QAAI,IAAI,MAAM,KAAK,GAAG;AACpB,WAAK,aAAa,SAAS,MAAM,EAAE,SAAS,IAAI,QAAQ,OAAO,EAAE,CAAC;IACpE;EACF;EAEO,QAAK;AACV,iBAAa,MAAK;AAElB,QAAI,KAAK,aAAa,UAAU,SAAS;AACvC,UAAI,KAAK,cAAc;AACrB,aAAK,YAAW;MAClB;AACA,WAAK,aAAa,SAAS,YAAY,EAAE,SAAS,KAAK,aAAa,gBAAgB;AACpF,WAAK,cAAc,UAAU,KAAK,aAAa,KAAK,EAAE,UAAU,UAAO;AAErE,YAAI,KAAK,gBAAgB;AACvB,eAAK,aAAa,YAAY,QAAQ,SAAQ;AAC9C,eAAK,aAAa,mBAAmB,SAAS,KAAK,UAAU;AAC7D,eAAK,gBAAe;AACpB,uBAAa,QAAQ,oBAAoB,KAAK,cAAc;QAC9D;AAGE,eAAK,aAAa,mBAAoB,KAAK,cAAc,UAAa,KAAK,cAAc,QAAQ,KAAK,cAAc,MAAM,KAAK,cAAc,MAAM,SAAS,KAAK,UAAU,IAAI,YAAY;AAC7L,aAAK,gBAAgB,YAAY,KAAK,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa,eAAe,IAAI;AAC3H,qBAAa,QAAQ,eAAe,KAAK,UAAU,IAAI,CAAC;AAExD,aAAK,YAAY,QAAQ,cAAc;AACvC,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,qBAAa,QAAQ,cAAc,KAAK,UAAU;AAClD,qBAAa,QAAQ,cAAc,KAAK,UAAU;AAClD,qBAAa,QAAQ,gBAAgB,KAAK,YAAY;AACtD,qBAAa,QAAQ,YAAY,KAAK,SAAS;AAC/C,qBAAa,QAAQ,cAAe,KAAK,cAAc,YAAY,WAAW,SAAS,OAAQ;AAC/F,cAAM,SAAS,KAAK,cAAc,UAAa,KAAK,cAAc,QAAQ,KAAK,cAAc,MAAM,KAAK,cAAc,MAAM,KAAK,aAAa,YAAY,QAAQ,SAAQ;AAC1K,qBAAa,QAAQ,cAAc,MAAM;AACzC,aAAK,YAAY,QAAQ,WAAW,aAAa;AACjD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,cAAM,gBAAgB,KAAK,aAAa,UAAa,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,KAAK,YAAY;AACvH,qBAAa,QAAQ,iBAAiB,aAAa;AACnD,aAAK,YAAY,QAAQ,WAAW,gBAAgB;AACpD,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AAEnD,qBAAa,QAAQ,yBAA0B,KAAK,iBAAiB,UAAa,KAAK,iBAAiB,QAAQ,KAAK,iBAAiB,MAAM,KAAK,iBAAiB,MAAM,KAAK,gBAAgB,uBAAuB,iBAAiB,SAAQ,CAAG;AAEhP,aAAK,aAAa,gBAAgB,KAAK,aAAa,UAAa,KAAK,aAAa,QAAQ,KAAK,aAAa,KAAK,KAAK,YAAY;AACnI,aAAK,cAAc,cAAc,KAAK;AACtC,aAAK,cAAc,qBAAqB,KAAK;AAC7C,aAAK,cAAc,uBAAuB,KAAK;AAC/C,aAAK,cAAc,aAAa,KAAK,cAAc,YAAY;AAC/D,aAAK,cAAc,WAAW,KAAK;AACnC,aAAK,cAAc,aAAa,KAAK;AACrC,aAAK,cAAc,wBAAwB,KAAK;MAKlD,GAAG,WAAQ;AACT,YAAI,MAAM,MAAM,SAAS,gBAAgB;AACvC,eAAK,MAAM,KAAK,cAAc;QAChC,WACS,MAAM,MAAM,SAAS,cAAc;AAC1C,eAAK,MAAM,KAAK,cAAc;QAChC,WACS,MAAM,MAAM,SAAS,4BAA4B;AAExD,eAAK,gBAAgB,KAAK,WAAW;AACrC,eAAK,QAAQ,KAAK,aAAa;AAC/B,eAAK,cAAc,4BAA4B,QAAQ;QACzD,OACK;AACH,eAAK,MAAM,KAAK,cAAc;QAChC;MACF,CAAC;IACH,OACK;AACH,UAAI,CAAC,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS;AAC/I,aAAK,MAAM,KAAK,cAAc;gBACtB,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,QAAQ,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,QAAQ,EAAE,SAAS;AACpN,aAAK,MAAM,KAAK,cAAc;gBACtB,KAAK,aAAa,SAAS,QAAQ,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,QAAQ,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS,QAAQ,KAAK,aAAa,SAAS,MAAM,EAAE,SAAS;AACpN,aAAK,MAAM,KAAK,cAAc;;AAE9B,aAAK,MAAM,KAAK,cAAc;IAElC;EAEF;EAEO,mBAAmB,GAAC;AACzB,SAAK,eAAe,EAAE;EACxB;EAEO,cAAW;AAChB,QAAI,KAAK,cAAc;AACrB,YAAM,WAAW,KAAK,aAAa,MAAM;AACzC,mBAAa,QAAQ,kBAAkB,QAAQ;IACjD,OAAO;AACL,mBAAa,WAAW,gBAAgB;IAC1C;EACF;EAEO,gBAAgB,UAAa;AAClC,WAAO,KAAK,YAAY,MAAM;;;MAG5B,QAAQ,CAAC,SAAS,MAAM,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,GAAG,WAAW,QAAQ,oDAAoD,CAAC,CAAC,CAAC;MACtK,UAAU,CAAC,SAAS,QAAQ,WAAW,QAAQ,CAAC,WAAW,UAAU,WAAW,UAAU,EAAE,CAAC,CAAC,CAAC;MAC/F,aAAa;MACb,cAAc,KAAK,aAAa;KACjC;EACH;;;uCA7PW,kBAAe,4BAAA,kBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,YAAA,GAAA,CAAA,GAAA,eAAA,QAAA,MAAA,GAAA,CAAA,GAAA,eAAA,QAAA,YAAA,GAAA,SAAA,KAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,eAAA,GAAA,eAAA,WAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,cAAA,WAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,QAAA,GAAA,SAAA,aAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,OAAA,gCAAA,OAAA,QAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,UAAA,gBAAA,OAAA,GAAA,QAAA,aAAA,GAAA,CAAA,QAAA,UAAA,mBAAA,IAAA,aAAA,IAAA,GAAA,OAAA,GAAA,CAAA,OAAA,gCAAA,OAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,UAAA,yBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,UAAA,SAAA,GAAA,CAAA,cAAA,SAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,aAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,OAAA,UAAA,eAAA,aAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACd5B,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACD,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EACnD,GAAA,OAAA,CAAA,EAC6B,GAAA,OAAA,CAAA,EAEpB,GAAA,OAAA,CAAA;AAGnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA;AACE,QAAA,iBAAA,CAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,OAAA,CAAA;AACE,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,QAAA,EAAA;AAAwE,QAAA,qBAAA,eAAA,SAAA,wDAAA;AAAA,iBAAe,IAAA,MAAA;QAAO,CAAA;AAC5F,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,kBAAA,EAAA,EACuB,IAAA,SAAA,EAAA;AAG/C,QAAA,qBAAA,SAAA,SAAA,iDAAA,QAAA;AAAA,iBAAS,IAAA,SAAA,OAAA,OAAA,KAAA;QAA6B,CAAA;AADxC,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,QAAA,EAAA;AAAgB,QAAA,oBAAA,IAAA,OAAA,EAAA;AAAiE,QAAA,uBAAA,EAAO,EACzE;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,kBAAA,EAAA;AAG1B,QAAA,oBAAA,IAAA,SAAA,EAAA;AAEA,QAAA,yBAAA,IAAA,UAAA,EAAA;AAAgD,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,iBAAA,IAAA,OAAA,CAAA,IAAA;QAAA,CAAA;AAE9C,QAAA,yBAAA,IAAA,UAAA;AAAU,QAAA,iBAAA,EAAA;AAA0C,QAAA,uBAAA,EAAW;AAEjE,QAAA,yBAAA,IAAA,QAAA,EAAA;AAAgB,QAAA,oBAAA,IAAA,OAAA,EAAA;AAChB,QAAA,uBAAA,EAAO,EACQ;AAGnB,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAiD,IAAA,KAAA,EAC1C,IAAA,gBAAA,EAAA;AACyD,QAAA,qBAAA,UAAA,SAAA,yDAAA,QAAA;AAAA,iBAAU,IAAA,mBAAA,MAAA;QAA0B,CAAA;AAC9F,QAAA,iBAAA,EAAA;AAA4B,QAAA,uBAAA,EAAe;AAE/C,QAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,KAAA,EAAA;AACqB,QAAA,iBAAA,EAAA;AAAgC,QAAA,uBAAA,EAAI,EACxD;AAGR,QAAA,yBAAA,IAAA,OAAA,EAAA,EAA0E,IAAA,UAAA,EAAA;AAEtE,QAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,iBAAS,IAAA,MAAA;QAAO,CAAA;AAAE,QAAA,iBAAA,EAAA;AAAuB,QAAA,uBAAA,EAAS,EAChD,EACD,EACH,EACF,EACF,EACF,EACF;;;AAjDM,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,gCAAA,GAAA;AAGA,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,KAAA,GAAA;AAGwB,QAAA,oBAAA;AAAA,QAAA,qBAAA,aAAA,IAAA,YAAA;AAIJ,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,eAAA,IAAA,cAAA,KAAA;AASA,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,OAAA,aAAA,MAAA,EAAmC,eAAA,IAAA,cAAA,QAAA;AAGjD,QAAA,oBAAA;;AACU,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,OAAA,mBAAA,YAAA;AASuB,QAAA,oBAAA,CAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,YAAA;AACjC,QAAA,oBAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,cAAA,YAAA,EAAA;AAGsB,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,cAAA,cAAA;AAMN,QAAA,oBAAA,CAAA;AAAA,QAAA,4BAAA,IAAA,cAAA,KAAA;;;;;;6EDxCvB,iBAAe,EAAA,WAAA,mBAAA,UAAA,qDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AETtB,IAAO,yBAAP,MAAO,wBAAsB;EAHnC,cAAA;AAMS,SAAA,QAAa,CAAA;;;;uCAHT,yBAAsB;IAAA;EAAA;;4EAAtB,yBAAsB,SAAtB,wBAAsB,WAAA,YAFrB,OAAM,CAAA;EAAA;;;;;;;AECZ,IAAA,yBAAA,GAAA,cAAA,CAAA;AAAqE,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,oBAAA,CAAqB;IAAA,CAAA;AACjG,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFiD,IAAA,qBAAA,SAAA,UAAA,EAAA;AAC/C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,MAAA,GAAA;;;ADKJ,IAAO,uBAAP,MAAO,sBAAoB;EAM/B,YAAmB,eAAqC,aAAiC,QAAc;AAApF,SAAA,gBAAA;AAAqC,SAAA,cAAA;AAAiC,SAAA,SAAA;AAJlF,SAAA,gBAAuB,CAAA;AAEvB,SAAA,SAAS;AAGd,UAAM,YAAY,SAAS,eAAe,QAAQ;AAClD,QAAI,aAAa;AACf,eAAS,KAAK,YAAY,SAAS;EACvC;EAEA,WAAQ;AACN,SAAK,iBAAiB,aAAa,yBAAyB,SAAY,SAAS,aAAa,qBAAqB,IAAI,WAAW;AAClI,SAAK,cAAc,sBAAqB,EAAG,UAAU,UAAO;AAC1D,WAAK,gBAAgB,KAAK;IAC5B,CAAC;EACH;EAEO,sBAAmB;AACxB,iBAAa,QAAQ,yBAAyB,KAAK,eAAe,SAAQ,CAAE;AAC5E,UAAM,YAAY,SAAS,eAAe,QAAQ;AAClD,QAAI,aAAa;AACf,eAAS,KAAK,YAAY,SAAS;AAErC,SAAK,SAAS,KAAK,cAAc,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,KAAK,SAAY,KAAK,cAAc,KAAK,OAAK,EAAE,MAAM,KAAK,cAAc,EAAE,MAAM;AACvJ,iBAAa,QAAQ,UAAU,KAAK,MAAM;AAC1C,SAAK,YAAY,QAAQ,WAAW,SAAS,KAAK;AAClD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,SAAK,OAAO,cAAc,SAAS;EACrC;;;uCA9BW,uBAAoB,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,cAAA,WAAA,cAAA,QAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACVjC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACN,GAAA,kBAAA,CAAA,EACyC,GAAA,cAAA,CAAA;AACxB,QAAA,2BAAA,iBAAA,SAAA,kEAAA,QAAA;AAAA,UAAA,6BAAA,IAAA,gBAAA,MAAA,MAAA,IAAA,iBAAA;AAAA,iBAAA;QAAA,CAAA;AAC7B,QAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,cAAA,CAAA;AAGF,QAAA,uBAAA,EAAa,EACE,EACb;;;AAN6B,QAAA,oBAAA,CAAA;AAAA,QAAA,2BAAA,WAAA,IAAA,cAAA;AACE,QAAA,oBAAA;AAAA,QAAA,qBAAA,WAAA,IAAA,aAAA;;;;;;6EDM1B,sBAAoB,EAAA,WAAA,wBAAA,UAAA,iEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEF3B,IAAO,sBAAP,MAAO,qBAAmB;EAG9B,YAAmB,eAA4B;AAA5B,SAAA,gBAAA;AAFZ,SAAA,SAAS;AAGd,QAAI,OAAO,SAAS,KAAK,QAAQ,kBAAkB,KAAK,IAAI;AAC1D,WAAK,cAAc,WAAU,EAAG,UAAU,UAAO;AAC/C,YAAI,KAAK,aAAa,UAAU;AAC9B,eAAK,SAAS;;AAEd,eAAK,SAAS,KAAK,aAAa;MACpC,GAAG,SAAM;AACP,gBAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC/B,aAAK,cAAc,sBAAqB;MAC1C,CAAC;IACH,OACK;AACH,WAAK,SAAS;IAChB;EACF;;;uCAlBW,sBAAmB,4BAAA,aAAA,CAAA;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACRhC,QAAA,yBAAA,GAAA,GAAA;AAAG,QAAA,iBAAA,CAAA;AAAU,QAAA,uBAAA;;;AAAV,QAAA,oBAAA;AAAA,QAAA,4BAAA,IAAA,MAAA;;;;;;6EDQU,qBAAmB,EAAA,WAAA,uBAAA,UAAA,+DAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;AEA1B,IAAO,0BAAP,MAAO,yBAAuB;EAGlC,cAAA;AADA,SAAA,kBAAkB,YAAY;AAE5B,eAAW,MAAK;AACd,aAAO,SAAS,OAAO,YAAY;IACrC,GAAG,GAAK;EACV;EAGA,cAAW;AACT,WAAO,SAAS,OAAO,YAAY;EACrC;;;uCAZW,0BAAuB;IAAA;EAAA;;yEAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,eAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,OAAA,yCAAA,OAAA,KAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,eAAA,QAAA,GAAA,CAAA,OAAA,+CAAA,OAAA,KAAA,GAAA,CAAA,GAAA,gBAAA,SAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,UAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACRpC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA,EACE,GAAA,OAAA,CAAA,EACD,GAAA,OAAA,CAAA,EACkD,GAAA,OAAA,CAAA,EAC/C,GAAA,OAAA,CAAA,EACyB,GAAA,OAAA,CAAA,EAEpB,GAAA,OAAA,CAAA;AAGnB,QAAA,oBAAA,GAAA,OAAA,CAAA;AACF,QAAA,uBAAA;AAEA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAAyB,IAAA,OAAA,CAAA;AAErB,QAAA,oBAAA,IAAA,OAAA,EAAA;AACF,QAAA,uBAAA;AACA,QAAA,yBAAA,IAAA,KAAA,EAAA;AACE,QAAA,iBAAA,IAAA,8CAAA;AAA2C,QAAA,yBAAA,IAAA,KAAA,EAAA;AACd,QAAA,iBAAA,EAAA;AAAyC,QAAA,uBAAA;AAAK,QAAA,iBAAA,IAAA,6OAAA;AAI7E,QAAA,uBAAA;AAEA,QAAA,yBAAA,IAAA,UAAA,EAAA;AAAqC,QAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,iBAAS,IAAA,YAAA;QAAa,CAAA;AACzD,QAAA,iBAAA,EAAA;AACF,QAAA,uBAAA,EAAS,EAEL,EAEF,EACF,EACF,EACF,EACF,EACF;;;AAjBY,QAAA,oBAAA,EAAA;AAAA,QAAA,gCAAA,QAAA,IAAA,iBAAA,uBAAA;AAA2B,QAAA,oBAAA;AAAA,QAAA,4BAAA,IAAA,gBAAA,QAAA,QAAA,KAAA,CAAA;AAO7B,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,gBAAA,QAAA,QAAA,KAAA,GAAA,GAAA;;;;;;6EDlBL,yBAAuB,EAAA,WAAA,2BAAA,UAAA,uEAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;AED9B,IAAO,wBAAP,MAAO,uBAAqB;;;uCAArB,wBAAqB;IAAA;EAAA;;yEAArB,wBAAqB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,eAAA,UAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACPlC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA4B,GAAA,OAAA,CAAA,EACC,GAAA,IAAA;AACjB,QAAA,iBAAA,GAAA,KAAA;AAAG,QAAA,uBAAA;AACP,QAAA,yBAAA,GAAA,MAAA,CAAA;AAA2B,QAAA,iBAAA,GAAA,iBAAA;AAAe,QAAA,uBAAA,EAAK,EAC7C;;;;;;6EDGG,uBAAqB,EAAA,WAAA,yBAAA,UAAA,iEAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;AED5B,IAAO,sBAAP,MAAO,6BAA4B,aAAY;EAEnD,YAAoB,qBAAwC;AAC1D,UAAK;AADa,SAAA,sBAAA;EAEpB;EAEA,YAAY,OAAY;AACtB,YAAQ,IAAI,UAAU,KAAK;AAC3B,QAAI,YAAY;AAAY,WAAK,oBAAoB,aAAa,KAAK;EACzE;;;uCATW,sBAAmB,mBAAA,mBAAA,CAAA;IAAA;EAAA;;4EAAnB,sBAAmB,SAAnB,qBAAmB,WAAA,YAFlB,OAAM,CAAA;EAAA;;;;ACId,IAAO,8BAAP,MAAO,6BAA2B;EAEtC,YAAoB,UAAgD;AAAhD,SAAA,WAAA;EAEpB;EACA,aAAU;AACR,SAAK,SAAS,MAAK;EACrB;;;uCAPW,8BAA2B,4BAAA,SAAA,CAAA;IAAA;EAAA;;yEAA3B,8BAA2B,WAAA,CAAA,CAAA,yBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,QAAA,WAAA,GAAA,aAAA,GAAA,CAAA,eAAA,YAAA,GAAA,WAAA,GAAA,CAAA,QAAA,UAAA,cAAA,SAAA,GAAA,SAAA,cAAA,GAAA,OAAA,GAAA,CAAA,eAAA,MAAA,GAAA,CAAA,sBAAA,EAAA,GAAA,CAAA,OAAA,4CAAA,OAAA,IAAA,GAAA,SAAA,QAAA,UAAA,MAAA,CAAA,GAAA,UAAA,SAAA,qCAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACRxC,QAAA,yBAAA,GAAA,MAAA,CAAA,EAAqB,GAAA,eAAA,CAAA,EAC+B,GAAA,QAAA,CAAA;AACI,QAAA,iBAAA,GAAA,SAAA;AAAM,QAAA,uBAAA;AACtD,QAAA,yBAAA,GAAA,UAAA,CAAA;AAAkE,QAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,iBAAS,IAAA,WAAA;QAAY,CAAA;AACnF,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,QAAA,iBAAA,GAAA,MAAA;AAAO,QAAA,uBAAA,EAAO,EAClC,EACC;AAElB,QAAA,yBAAA,GAAA,OAAA,CAAA;AAGQ,QAAA,oBAAA,GAAA,OAAA,CAAA;AAER,QAAA,uBAAA;;;;;;6EDLa,6BAA2B,EAAA,WAAA,+BAAA,UAAA,uHAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;AEmNlC,IAAO,YAAP,MAAO,WAAS;EACpB,YAAoB,QAAqB;AAArB,SAAA,SAAA;AAClB,SAAK,OAAO,iBAAgB;EAC9B;;;uCAHW,YAAS,mBAAA,aAAA,CAAA;IAAA;EAAA;;wEAAT,YAAS,WAAA,CArCR,YAAY,EAAA,CAAA;EAAA;;6EA6BV;MAAC;MAAe;MAAe;MAAgB;MAAa;MACtE;MAA0B;MAAgB;MAAa;MAAc;MACrE;MAAmB;MAAwB;MAAiB;MAAmB;MAC/E,EAAE,SAAS,kBAAkB,UAAU,YAAW;MAClD,EAAE,SAAS,aAAa,UAAU,mBAAmB,MAAM,CAAC,eAAe,EAAC;MAC5E;MACA,EAAE,SAAS,cAAc,UAAU,oBAAmB;MAAI,kBAAkB,uBAAsB,GAAI,iBAAgB,CAAE;IAAC,GAAE,SAAA;MAhC7H;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,mBAAmB,QAAO;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,aAAa,QAAQ;QACnB,SAAS;QACT,eAAe;QACf,mBAAmB;OACpB;MACD,YAAY,QAAO;IAAE,EAAA,CAAA;EAAA;;;;ACjMnB,IAAO,QAAP,MAAY;;;;ACblB,IAAM,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM;AAC7C,QAAM,QAAQ,OAAO,0BAA0B,GAAG;AAClD,WAAS,QAAQ,QAAS,QAAO,MAAM,IAAI;AAC3C,SAAO,iBAAiB,MAAM,KAAK;AACrC;AAKA,IAAM,aAAa,CAAC,KAAK,eAAe,CAAC,GAAG,MAAM;AAChD,QAAM,QAAQ,OAAO,eAAe,GAAG;AACvC,MAAI,UAAU,KAAM,QAAO;AAC3B,SAAO,WAAW,OAAO,CAAC,GAAG,cAAc,KAAK,CAAC;AACnD;AAKA,IAAM,qBAAqB,IAAI,SAAS;AACtC,MAAI,KAAK,WAAW,EAAG,QAAO;AAC9B,MAAI,cAAc;AAClB,QAAM,cAAc,KAAK,IAAI,SAAO,WAAW,GAAG,CAAC;AACnD,SAAO,YAAY,MAAM,CAAAC,gBAAcA,YAAW,SAAS,CAAC,GAAG;AAC7D,UAAM,SAAS,YAAY,IAAI,CAAAA,gBAAcA,YAAW,IAAI,CAAC;AAC7D,UAAM,uBAAuB,OAAO,CAAC;AACrC,QAAI,OAAO,MAAM,WAAS,UAAU,oBAAoB,EAAG,eAAc;AAAA,QAA0B;AAAA,EACrG;AACA,SAAO;AACT;AAUA,IAAM,gBAAgB,CAAC,aAAa,aAAa,UAAU,CAAC,MAAM;AAChE,MAAI;AACJ,QAAM,QAAQ,KAAK,mBAAmB,GAAG,WAAW,OAAO,QAAQ,OAAO,SAAS,KAAK,OAAO;AAC/F,QAAM,aAAa,OAAO,OAAO,IAAI;AAIrC,QAAM,gBAAgB,WAAW,IAAI;AACrC,WAAS,aAAa,aAAa;AACjC,QAAI,SAAS,WAAW,SAAS;AAEjC,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,UAAI,WAAW,OAAO,CAAC;AACvB,UAAI,cAAc,QAAQ,QAAQ,MAAM,IAAI;AAC1C,kBAAU,YAAY,UAAU,CAAC,eAAe,GAAG,OAAO,CAAC;AAC3D,sBAAc,KAAK,QAAQ;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AACA,aAAW,cAAc;AACzB,SAAO;AACT;AACA,IAAM,SAAS,SAAO,IAAI,OAAO,CAAC,GAAG,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC;AAM9D,IAAM,wBAAwB,CAAC,MAAM,gBAAgB;AACnD,QAAM,cAAc,YAAY,IAAI,gBAAc,WAAW,UAAU,CAAC;AAExE,MAAI,aAAa;AAGjB,MAAI,wBAAwB;AAC5B,SAAO,uBAAuB;AAE5B,4BAAwB;AAExB,aAAS,IAAI,YAAY,SAAS,GAAG,KAAK,GAAG,KAAK;AAChD,YAAM,eAAe,YAAY,CAAC,EAAE,UAAU;AAC9C,UAAI,iBAAiB,UAAa,iBAAiB,MAAM;AAEvD,gCAAwB;AAExB,YAAI,OAAO,yBAAyB,cAAc,IAAI,KAAK,QAAW;AACpE,iBAAO,YAAY,CAAC,EAAE,CAAC;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AACA;AAAA,EACF;AACA,SAAO;AACT;AAKA,IAAM,WAAW,CAAC,aAAa,YAAY,OAAO,cAAc,IAAI,MAAM,CAAC,GAAG;AAAA,EAC5E,iBAAiB;AACf,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB;AACf,UAAM,MAAM,qDAAqD;AAAA,EACnE;AAAA,EACA,yBAAyB,GAAG,MAAM;AAChC,WAAO,OAAO,yBAAyB,sBAAsB,MAAM,WAAW,KAAK,CAAC,GAAG,IAAI;AAAA,EAC7F;AAAA,EACA,iBAAiB;AACf,UAAM,IAAI,MAAM,6DAA6D;AAAA,EAC/E;AAAA,EACA,IAAI,GAAG,MAAM;AACX,WAAO,sBAAsB,MAAM,WAAW,MAAM,UAAa,UAAU,IAAI,MAAM;AAAA,EACvF;AAAA,EACA,IAAI,GAAG,MAAM;AACX,YAAQ,sBAAsB,MAAM,WAAW,KAAK,WAAW,IAAI;AAAA,EACrE;AAAA,EACA,IAAI,GAAG,MAAM,KAAK;AAChB,UAAM,qBAAqB,sBAAsB,MAAM,WAAW;AAClE,QAAI,uBAAuB,OAAW,OAAM,IAAI,MAAM,0DAA0D;AAChH,uBAAmB,IAAI,IAAI;AAC3B,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB;AACf,UAAM,IAAI,MAAM,yDAAyD;AAAA,EAC3E;AAAA,EACA,UAAU;AACR,WAAO,YAAY,IAAI,OAAO,mBAAmB,EAAE,OAAO,CAAC,MAAM,SAAS,KAAK,OAAO,KAAK,OAAO,SAAO,KAAK,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;AAAA,EAClI;AACF,CAAC;AAMD,IAAM,gBAAgB,CAAC,aAAa,gBAAgB,SAAS,CAAC,GAAG,aAAa;AAAA,EAC5E;AACF,CAAC,CAAC;AACF,IAAM,WAAW;AAAA,EACf,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,sBAAsB;AACxB;AAGA,IAAM,SAAS,oBAAI,QAAQ;AAC3B,IAAM,oBAAoB,WAAS,OAAO,IAAI,KAAK;AACnD,IAAM,iBAAiB,CAAC,YAAY,iBAAiB,OAAO,IAAI,YAAY,YAAY;AA0BxF,IAAM,2BAA2B,CAAC,IAAI,OAAO;AAC3C,MAAI,IAAI;AACR,QAAM,UAAU,OAAO,CAAC,GAAG,OAAO,oBAAoB,EAAE,GAAG,GAAG,OAAO,oBAAoB,EAAE,CAAC,CAAC;AAC7F,QAAM,eAAe,CAAC;AACtB,WAAS,OAAO,QAAS,cAAa,GAAG,IAAI,OAAO,CAAC,IAAK,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK,CAAC,GAAI,IAAK,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAE,CAAC;AACtP,SAAO;AACT;AACA,IAAM,mCAAmC,CAAC,IAAI,OAAO;AACnD,MAAI,IAAI,IAAI,IAAI;AAChB,SAAO;AAAA,IACL,UAAU,0BAA0B,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC;AAAA,IACjO,QAAQ,0BAA0B,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,QAAQ,OAAO,SAAS,KAAK,CAAC,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC;AAAA,EAC7N;AACF;AACA,IAAM,kBAAkB,CAAC,IAAI,OAAO;AAClC,MAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,SAAO;AAAA,IACL,OAAO,OAAO,CAAC,IAAK,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,WAAW,QAAQ,OAAO,SAAS,KAAK,CAAC,GAAI,IAAK,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,WAAW,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAE,CAAC;AAAA,IAClN,QAAQ,kCAAkC,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,QAAQ,OAAO,SAAS,KAAK,CAAC,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC;AAAA,IACnO,UAAU,kCAAkC,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC;AAAA,EAC3O;AACF;AACA,IAAM,aAAa,oBAAI,IAAI;AAC3B,IAAM,4BAA4B,IAAI,YAAY;AAChD,MAAI;AACJ,QAAM,aAAa,oBAAI,IAAI;AAC3B,QAAM,WAAW,oBAAI,IAAI,CAAC,GAAG,OAAO,CAAC;AACrC,SAAO,SAAS,OAAO,GAAG;AACxB,aAAS,SAAS,UAAU;AAC1B,YAAM,oBAAoB,WAAW,MAAM,SAAS,EAAE,IAAI,WAAS,MAAM,WAAW;AACpF,YAAM,gBAAgB,KAAK,kBAAkB,KAAK,OAAO,QAAQ,OAAO,SAAS,KAAK,CAAC;AACvF,YAAM,wBAAwB,CAAC,GAAG,mBAAmB,GAAG,YAAY;AACpE,YAAM,aAAa,sBAAsB,OAAO,OAAK,CAAC,WAAW,IAAI,CAAC,CAAC;AACvE,eAAS,YAAY,WAAY,UAAS,IAAI,QAAQ;AACtD,iBAAW,IAAI,KAAK;AACpB,eAAS,OAAO,KAAK;AAAA,IACvB;AAAA,EACF;AACA,SAAO,CAAC,GAAG,UAAU;AACvB;AACA,IAAM,sBAAsB,IAAI,YAAY;AAC1C,QAAM,0BAA0B,0BAA0B,GAAG,OAAO,EAAE,IAAI,WAAS,WAAW,IAAI,KAAK,CAAC,EAAE,OAAO,CAAAC,gBAAc,CAAC,CAACA,WAAU;AAC3I,MAAI,wBAAwB,UAAU,EAAG,QAAO,CAAC;AACjD,MAAI,wBAAwB,UAAU,EAAG,QAAO,wBAAwB,CAAC;AACzE,SAAO,wBAAwB,OAAO,CAAC,IAAI,OAAO,gBAAgB,IAAI,EAAE,CAAC;AAC3E;AACA,IAAM,wBAAwB,IAAI,YAAY;AAC5C,QAAM,kBAAkB,QAAQ,IAAI,WAAS,sBAAsB,KAAK,CAAC;AACzE,MAAI,gBAAgB,WAAW,EAAG,QAAO,CAAC;AAC1C,MAAI,gBAAgB,WAAW,EAAG,QAAO,gBAAgB,CAAC;AAC1D,SAAO,gBAAgB,OAAO,CAAC,IAAI,OAAO,gBAAgB,IAAI,EAAE,CAAC;AACnE;AACA,IAAM,wBAAwB,WAAS;AACrC,MAAI,qBAAqB,WAAW,IAAI,KAAK;AAC7C,MAAI,CAAC,oBAAoB;AACvB,yBAAqB,CAAC;AACtB,eAAW,IAAI,OAAO,kBAAkB;AAAA,EAC1C;AACA,SAAO;AACT;AAgCA,SAAS,SAAS,cAAc;AAC9B,MAAI,IAAI,IAAI;AACZ,QAAM,aAAa,aAAa,IAAI,iBAAe,YAAY,SAAS;AAIxE,QAAM,mBAAmB,SAAS;AAClC,MAAI,qBAAqB,MAAM;AAC7B,UAAM,gBAAgB,WAAW,IAAI,WAAS,MAAM,gBAAgB,CAAC,EAAE,OAAO,UAAQ,OAAO,SAAS,UAAU;AAChH,UAAM,uBAAuB,YAAa,MAAM;AAC9C,eAAS,gBAAgB,cAAe,cAAa,MAAM,MAAM,IAAI;AAAA,IACvE;AACA,UAAM,aAAa;AAAA,MACjB,CAAC,gBAAgB,GAAG;AAAA,IACtB;AACA,eAAW,KAAK,UAAU;AAAA,EAC5B;AACA,WAAS,cAAc,MAAM;AAC3B,eAAW,eAAe;AAE1B,gBAAU,MAAM,IAAI,YAAY,GAAG,IAAI,CAAC;AACxC,QAAI,qBAAqB,QAAQ,OAAO,KAAK,gBAAgB,MAAM,WAAY,MAAK,gBAAgB,EAAE,MAAM,MAAM,IAAI;AAAA,EACxH;AACA,aAAW,YAAY,SAAS,sBAAsB,SAAS,cAAc,YAAY,UAAU,IAAI,cAAc,YAAY,UAAU;AAC3I,SAAO,eAAe,YAAY,SAAS,oBAAoB,SAAS,cAAc,cAAc,MAAM,CAAC,WAAW,CAAC,IAAI,SAAS,cAAc,SAAS,SAAS,CAAC;AACrK,MAAI,sBAAsB;AAC1B,MAAI,SAAS,yBAAyB,QAAQ;AAC5C,UAAM,kBAAkB,SAAS,yBAAyB,SAAS,oBAAoB,GAAG,YAAY,IAAI,sBAAsB,GAAG,YAAY;AAC/I,aAAS,cAAc,KAAK,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,WAAW,QAAQ,OAAO,SAAS,KAAK,CAAC,GAAG;AACxJ,YAAM,SAAS,UAAU,mBAAmB;AAC5C,UAAI,QAAQ;AACV,8BAAsB;AAAA,MACxB;AAAA,IACF;AACA,kCAA8B,KAAK,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,YAAY,QAAQ,OAAO,SAAS,KAAK,CAAC,GAAG,mBAAmB;AACrL,kCAA8B,KAAK,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC,GAAG,oBAAoB,SAAS;AAAA,EACnM;AACA,iBAAe,qBAAqB,YAAY;AAChD,SAAO;AACT;AACA,IAAM,+BAA+B,CAAC,yBAAyB,WAAW;AACxE,QAAM,iBAAiB,wBAAwB;AAC/C,QAAM,mBAAmB,wBAAwB;AACjD,MAAI,eAAgB,UAAS,OAAO,eAAgB,UAAS,aAAa,eAAe,GAAG,EAAG,WAAU,QAAQ,GAAG;AACpH,MAAI,iBAAkB,UAAS,OAAO,iBAAkB,UAAS,aAAa,iBAAiB,GAAG,EAAG,WAAU,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAC1K;;;AChTM,IAAO,cAAP,cAA2B,MAAM,aAAa,gBAAgB,eAAe,eAAe,aAAa,EAAC;EAEvG,KAAK,MAAS;AACnB,UAAM,SAAS,KAAK,aAAY;AAQhC,SAAK,QAAQ,WAAW;AACxB,UAAM,QAAQ,IAAI,MAAK;AACvB,UAAM,WAAW;AACjB,UAAM,aAAa;AACnB,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa;AAEnB,UAAM,WAAW;AACjB,iBAAa,QAAQ,UAAU,MAAM;AACrC,SAAK,KAAK,KAAK,KAAK,OAAO;AAE3B,UAAM,aAAa;MACjB,UAAU;MACV,UAAU;MACV,YAAY;MACZ,YAAY;MACZ,UAAU;;AAGZ,WAAO,KAAK,KAAK,KAAU,WAAW,WAAW,KAAK;EACxD;;;;ACvCI,IAAO,WAAP,MAAe;;AACZ,SAAA,iBAAiB;EAAoB;;AACrC,SAAA,cAAc;EAAiB;;AAC/B,SAAA,WAAW;EAAY;;AACvB,SAAA,aAAa;EAA0C;;AACvD,SAAA,oBAAoB;EAAuC;;AAC3D,SAAA,YAAY;EAAqC;;AACjD,SAAA,iBAAiB;EAA+C;;;;;;;AEI7D,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAoF,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AACnG,IAAA,iBAAA,GAAA,aAAA;AACJ,IAAA,uBAAA;;;ADIN,IAAO,uBAAP,MAAO,sBAAoB;EAO/B,YACU,QACA,aACA,QACA,aACA,SACA,aAAwB;AALxB,SAAA,SAAA;AACA,SAAA,cAAA;AACA,SAAA,SAAA;AACA,SAAA,cAAA;AACA,SAAA,UAAA;AACA,SAAA,cAAA;AAXV,SAAA,cAAsB,SAAS;AAE/B,SAAA,eAAe;AAWb,SAAK,QAAQ,SAAQ;AACrB,SAAK,QAAQ,KAAI;EACnB;EAEA,WAAQ;AACN,SAAK,YAAY,OAAO,UAAU,CAAO,WAAU;AACjD,YAAM,SACJ,OAAO,KAAK,QAAQ,IAAI,MAAM,KAAK,aAAa;AAClD,YAAM,cAAc,iDACf,SACA,EAAE,QAAQ,OAAM,IAChB,EAAE,MAAM,OAAO,KAAK,QAAQ,MAAM,EAAE,EAAE,QAAQ,MAAM,EAAE,EAAC;AAE5D,WAAK,SAAS;AACd,WAAK,QAAQ,IAAI,UAAU,WAAW;AACtC,UAAI;AACF,cAAM,KAAK,YAAY,MAAM;MAC/B,SAAS,OAAO;AACd,aAAK,cAAc,SAAS;MAC9B;IACF,EAAC;EACH;;;;;;;EASM,YAAY,QAAM;;AACtB,WAAK,cAAc,SAAS;AAC5B,aAAO,KAAK,YAAY,KAAK,MAAM,EAAE,UACnC,CAAO,SAAQ;AACb,aAAK,cAAc,SAAS;AAC5B,aAAK,YAAY,QAAQ,cAAc;AACvC,aAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;AACnD,YAAI;AACF,gBAAM,KAAK,YAAY,eAAe,IAAI;QAC5C,SAAS,OAAO;AACd,eAAK,cAAc,SAAS;AAC5B,iBAAO;QACT;AAOA,YAAI;AACF,eAAK,wBAAuB;QAC9B,SAAS,OAAO;AACd,eAAK,cAAc,SAAS;QAC9B;MACF,IACA,MAAK;AACH,aAAK,cAAc,SAAS;MAC9B,CAAC;IAEL;;EAEA,0BAAuB;AACrB,SAAK,OAAO,cAAc,GAAG,YAAY,QAAQ,iBAAiB;EACpE;;;uCA9EW,uBAAoB,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAApB,uBAAoB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,UAAA,GAAA,WAAA,QAAA,mBAAA,UAAA,eAAA,UAAA,UAAA,MAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,MAAA,sBAAA,OAAA,mCAAA,OAAA,EAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,SAAA,mBAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,QAAA,SAAA,QAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACjBjC,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA2G,GAAA,OAAA,CAAA,EACzE,GAAA,OAAA,CAAA;AAEtB,QAAA,oBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,OAAA,CAAA;AAE9B,QAAA,uBAAA;AACA,QAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,MAAA;AAElB,QAAA,iBAAA,CAAA;AACJ,QAAA,uBAAA;AAEA,QAAA,qBAAA,GAAA,wCAAA,GAAA,GAAA,UAAA,CAAA;AAGJ,QAAA,uBAAA,EAAM,EACJ;;;AAPM,QAAA,oBAAA,CAAA;AAAA,QAAA,6BAAA,KAAA,IAAA,aAAA,GAAA;AAGK,QAAA,oBAAA;AAAA,QAAA,qBAAA,QAAA,IAAA,YAAA;;;;;;6EDMR,sBAAoB,EAAA,WAAA,wBAAA,UAAA,sEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AGFjB,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;;;;;AAEjD,IAAA,yBAAA,GAAA,MAAA,EAAA,EAGiE,GAAA,QAAA,EAAA;AAChC,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AAAO,IAAA,yBAAA,GAAA,QAAA,EAAA;AACuB,IAAA,iBAAA,CAAA;AACxC,IAAA,uBAAA,EAAO;;;;AANc,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,GAAA,WAAA,qBAAA,CAAA,CAAA;AAK/C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAAC,OAAA,WAAA,aAAA,WAAA,MAAA,CAAA;AAAkE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,iBAAA,EAAA;;;;;AAM1E,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;;;;;AAC5C,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,eAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;;;;;AACrD,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,oBAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAA8E,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA;;;;;AAC3F,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,kBAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAsC,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;;;;;AAClD,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,iBAAA,GAAA;;;;;AAYJ,IAAA,yBAAA,GAAA,MAAA,EAAA;AAA+D,IAAA,iBAAA,GAAA,MAAA;AAAM,IAAA,uBAAA;;;;;AAK7D,IAAA,yBAAA,GAAA,UAAA;AAAU,IAAA,iBAAA,GAAA,mBAAA;AAAiB,IAAA,uBAAA;;;;;AAE3B,IAAA,yBAAA,GAAA,UAAA;AAAU,IAAA,iBAAA,GAAA,qBAAA;AAAmB,IAAA,uBAAA;;;;;;AANrC,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuC,GAAA,UAAA,EAAA;AAE/B,IAAA,qBAAA,SAAA,SAAA,wDAAA,QAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,WAAA,OAAA,GAAA,UAAA;AAAsB,aAAA,sBAAE,OAAA,gBAAA,CAAwB;IAAA,CAAA;AACzD,IAAA,qBAAA,GAAA,+CAAA,GAAA,GAAA,UAAA,EAAmC,GAAA,+CAAA,GAAA,GAAA,UAAA;AAKvC,IAAA,uBAAA,EAAS;;;;;AALL,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,oBAAA,aAAA,IAAA,CAAA;;;;;AAaJ,IAAA,yBAAA,GAAA,OAAA,EAAA;AAGI,IAAA,oBAAA,GAAA,sBAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;AAJI,IAAA,qBAAA,iBAAA,eAAA,OAAA,kBAAA,aAAA,WAAA;AAEoB,IAAA,oBAAA;AAAA,IAAA,qBAAA,UAAA,IAAA,EAAe,YAAA,OAAA,QAAA,EAAsB,cAAA,OAAA,UAAA;;;;;AALjE,IAAA,yBAAA,GAAA,MAAA,EAAA;AAEI,IAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,EAAA;AAMJ,IAAA,uBAAA;;;;;;AAJS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,gBAAA,OAAA,eAAA;;;;;AAOb,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAC+D,IAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,GAAA,WAAA,CAAsB;IAAA,CAAA;AAC9F,IAAA,uBAAA;;;;;AADI,IAAA,sBAAA,wBAAA,OAAA,oBAAA,WAAA;;;;;AAEJ,IAAA,oBAAA,GAAA,MAAA,EAAA;;;ADlBN,IAAO,mBAAP,MAAO,kBAAgB;EA2C3B,YACS,eACA,gBACA,QACC,OACD,cACA,eACA,mBACA,2BACA,aACC,OACA,UACD,QACA,eACA,aACC,SACA,aAAwB;AAfzB,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,SAAA;AACC,SAAA,QAAA;AACD,SAAA,eAAA;AACA,SAAA,gBAAA;AACA,SAAA,oBAAA;AACA,SAAA,4BAAA;AACA,SAAA,cAAA;AACC,SAAA,QAAA;AACA,SAAA,WAAA;AACD,SAAA,SAAA;AACA,SAAA,gBAAA;AACA,SAAA,cAAA;AACC,SAAA,UAAA;AACA,SAAA,cAAA;AAxDV,SAAA,aAAa,CAAA;AAEb,SAAA,QAAQ;AACR,SAAA,QAAQ;AACR,SAAA,UAAU;AACV,SAAA,MAAc,KAAK,QAAQ,KAAK;AAIhC,SAAA,aAAa,IAAI,mBAAkB;AACnC,SAAA,aAAoB,CAAA;AACpB,SAAA,gBAAgB;AAChB,SAAA,gBAAgB;AAET,SAAA,2BAA2B,kBAAkB;AAM7C,SAAA,UAAe,CAAA;AACtB,SAAA,kBAAkB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC;AAGpE,SAAA,aAAa;AACb,SAAA,gBAAgB,CAAA;AAIhB,SAAA,mBAAmB;MACjB;MACA;MACA;MACA;MACA;;AAEF,SAAA,6BAA6B,CAAC,GAAG,KAAK,kBAAkB,QAAQ;AAGhE,SAAA,YAAoB;AAmBlB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,cAAc,IAAI,YAAW;EACpC;EAEA,WAAQ;AACN,SAAK,cACF,kBACC,YAAY,SACZ,WAAW,cACX,MACA,IAAI,EAEL,UACC,CAAC,QAAO;AACN,WAAK,YAAY,QAAQ,mBAAmB,IAAI;AAChD,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,OAAO;IACrD,GACA,CAAC,QAAO;AACN,cAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;IACjC,CAAC;AAUL,UAAM,UAAU,KAAK,QAAQ,KAAK,MAAM,SAAS,WAAW;AAC5D,UAAM,kBAAkB,QAAQ,iBAAiB;AAEjD,UAAM,WAAW,SAAS,WACtB,IAAI,IAAI,SAAS,QAAQ,EAAE,WAC3B;AACJ,UAAM,MAAM;MACV,SAAS,KAAK,MAAM,SAAS,OAAO;;MAEpC,QAAQ;MACR,iBAAiB;;AAEnB;AACA,SAAK,eAAe,mBAAmB,GAAG,EAAE,UAAU;MACpD,MAAM,CAAC,SAAQ;AACb,aAAK,WAAW;AAChB,cAAM,YAAY,MAAM,MAAM,SAAS;AACvC,cAAM,eAAe,MAAM,MAAM,SAAS;AAC1C,cAAM,WAAW,KAAK;AACtB,cAAM,eAAe,KAAK;AAC1B,aAAK,eAAe,WAAW,cAAc,UAAU,YAAY;AACnE,oBAAY,MAAK;AACf,eAAK,aAAY;QACnB,GAAG,KAAK,KAAK,GAAI;MACnB;MACA,OAAO,CAAC,QAAO;AACb,aAAK,QAAQ,IAAI,OAAO,IAAI;MAC9B;KACD;EACH;EAEA,QAAQ,QAAc;AACpB,UAAM,cAAsB,CAAA;AAC5B,eAAW,OAAO,QAAQ;AACxB,kBAAY,IAAI,YAAW,CAAE,IAAI,OAAO,GAAG;IAC7C;AAEA,WAAO;EACT;EAEA,eAAY;AACV,UAAM,OAAO,IAAI,SAAQ;AACzB,SAAK,gBAAgB,KAAK,SAAS;AACnC,SAAK,eAAe,KAAK,SAAS;AAClC,SAAK,aAAa,aAAa;AAC/B,SAAK,mBAAmB,KAAK,SAAS;AACtC,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,cAAc,aAAa,IAAI,EAAE,UAAU;MAC9C,MAAM,CAAC,SAAQ;AACb,aAAK,SAAS,cAAc,KAAK;AACjC,aAAK,SAAS,eAAe,KAAK;MACpC;KACD;EACH;EAEA,cAAW;AACT,SAAK,MAAM,SAAS,UAAU;EAChC;EAEO,YAAY,QAAM;EAGzB;EAEO,cAAc,GAAC;AACpB,UAAM,kBAAkB,EAAE,OAAO;AACjC,UAAM,oBAAoB,EAAE,OAAO;AACnC,UAAM,iBAAiB,EAAE,OAAO;AAEhC,UAAM,SAAS;AACf,UAAM,QAAQ,oBAAoB,kBAAkB;AACpD,QAAI,CAAC,KAAK,cAAc,iBAAiB,OAAO;AAC9C,WAAK,aAAa;AAClB,WAAK,kBAAkB,OAAO;AAC9B,WAAK,kBAAkB,OAAO,WAAW;AACzC,WAAK,eAAc;IACrB;EACF;EAEA,iBAAc;AACZ,QAAI,CAAC,KAAK,YAAY,sBAAsB;AAC1C,YAAM,MACJ,KAAK,aAAa,iBAAiB;AACrC,WAAK,0BAA0B,QAC7B,SACA,KACA,MACA,UACA,MACA,MACA,KAAK;AAEP,aAAO;IACT;AACA,SAAK,OAAO,SAAS,CAAC,qBAAqB,GAAG;MAC5C,aAAa,EAAE,IAAI,KAAK,YAAY,UAAS;KAC9C;EACH;EAEO,eAAe,IAAK,KAAM,UAAW,cAAa;AACvD,UAAM,SAAS;MACb,YAAY,KAAK,aAAa;MAC9B,cAAc;MACd,UAAU;MACV,kBAAkB;;AAEpB,SAAK,eACF,gBAAgB,QAAQ,KAAK,SAAS,aAAa,GAAG,EAAE,EACxD,UAAU;MACT,MAAM,CAAC,SAAQ;AACb,YAAI,KAAK,kBAAkB,OAAO,UAAU,GAAG;AAC7C,cACE,KAAK,aAAa,wBAAwB,QAC1C,KAAK,aAAa,qBAAqB,SAAS,GAChD;AACA,iBAAK,aACH,KAAK,aAAa,qBAAqB,CAAC,EAAE;AAC5C,iBAAK,eAAe,iBAAiB,KAAK,cACxC,KAAK,aAAa,qBAAqB,CAAC;UAC5C,OAAO;AACL,iBAAK,aAAa,CAAA;AAClB,iBAAK,aAAa,IAAI,mBAAwB,KAAK,UAAU;UAC/D;QACF,OAAO;AACL,cACE,KAAK,aAAa,wBAAwB,QAC1C,KAAK,aAAa,qBAAqB,SAAS,GAChD;AACA,iBAAK,aAAa,KAAK,WAAW,OAChC,KAAK,aAAa,qBAAqB,CAAC,EAAE,OAAO;UAErD;QACF;AAEA,YACE,KAAK,aAAa,wBAClB,KAAK,aAAa,qBAAqB,SAAS,GAChD;AACA,eAAK,cAAc,KAAK,aAAa,qBAAqB,CAAC;AAC3D,eAAK,UAAU,KAAK,aAAa,qBAAqB,CAAC;AAEvD,eAAK,aAAa,KAAK,WAAW,IAAI,CAAC,MAAM,UAAS;AACpD,gBAAI,KAAK,iBAAiB,KAAK,cAAc,KAAI,KAAM,QAAQ;AAC7D,mBAAK,gBACH,KAAK,aAAa,uBAAuB;YAC7C;AACA,gBAAI,KAAK,mBAAmB,eAAe;AACzC,mBAAK,sBAAsB,KAAK,sBAAsB;YACxD;AACA,mBAAO;UACT,CAAC;AAED,cAAI,KAAK,WAAW,SAAS,KAAK,KAAK,YAAY;AACjD,iBAAK,aAAa;UACpB,OAAO;AACL,iBAAK,YAAY,IAAI;UACvB;AAEA,eAAK,qBAAqB,KAAK,UAAU;AAEzC,eAAK,YAAY,UAAU,YAAY,cACrC,KAAK;AACP,eAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,eAAK,aAAa,IAAI,mBAAwB,KAAK,UAAU;AAC7D,eAAK,WAAW,sBACd,KAAK,cAAc;AACrB,eAAK,WAAW,OAAO,KAAK;AAC5B,eAAK,WAAU;QACjB;MACF;MACA,OAAO,MAAK;AACV,aAAK,aAAa,CAAA;AAClB,aAAK,WAAW,OAAO,CAAA;AACvB,aAAK,kBAAkB,OAAO,UAAU;AACxC,aAAK,kBAAkB,QAAQ,CAAA;MACjC;KACD;EACL;EAEO,qBAAqB,SAAO;AACjC,QAAI,WAAW,CAAA;AACf,YAAQ,QAAQ,CAAC,QAAO;AACtB,UACE,CAAC,SAAS,KAAK,CAAC,SAAS,KAAK,oBAAoB,KAAK,gBAAgB,GACvE;AACA,cAAM,MAAM;UACV,YAAY,KAAK;UACjB,qBAAqB,KAAK;UAC1B,kBAAkB,KAAK;;AAEzB,iBAAS,KAAK,GAAG;MACnB;IACF,CAAC;AAED,SAAK,YAAY,SAAS,mBAAmB;AAE7C,SAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;EACvD;EAEO,aAAU;AACf,SAAK,kBAAkB,QAAQ,CAAA;AAC/B,QAAI,KAAK,cAAc,MAAM;AAC3B,YAAM,SAAS,CAAA;AACf,UAAI,YAAY;AAChB,WAAK,WAAW,QAAQ,CAAC,WAAU;AACjC,YAAI,OAAO,iBAAiB,CAAC,OAAO,SAAS,OAAO,aAAa,GAAG;AAClE,cAAI,OAAO,iBAAiB,QAAQ;AAClC,wBAAY,OAAO;UACrB,OAAO;AACL,mBAAO,KAAK,OAAO,cAAc,KAAI,CAAE;AACvC,iBAAK,kBAAkB,MAAM,KAAK,OAAO,cAAc,KAAI,CAAE;UAC/D;QACF;MACF,CAAC;AACD,WAAK,kBAAkB,QACrB,KAAK,cAAc,2BAA2B,MAAM;AACtD,UAAI,WAAW;AACb,aAAK,kBAAkB,MAAM,OAAO,GAAG,GAAG,SAAS;MACrD;IACF;EACF;EAEO,UAAU,GAAC;AAChB,SAAK,gBAAgB,EAAE;AACvB,SAAK,gBAAgB,EAAE;AACvB,SAAK,WAAW,KAAK,QAAQ,CAAC,YAAW;AACvC,UAAI,QAAQ,sBAAsB;AAChC,gBAAQ,kBAAkB,EAAE;IAChC,CAAC;EACH;EAEO,WAAW,GAAC;AACjB,SAAK,YAAY,UAAU,YAAY,YAAY;AACnD,SAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AACrD,SAAK,YAAY,IAAI;EACvB;EAEO,qBAAqB,GAAG,aAAW;AACxC,gBAAY,kBAAkB,EAAE;AAChC,QAAI,EAAE,SAAS;AACb,WAAK,gBAAgB;AACrB,YAAM,cAAc,KAAK,WAAW,KAAK,KACvC,CAAC,MAAM,CAAC,EAAE,mBAAmB,EAAE,sBAAsB,WAAW;AAElE,UAAI,eAAe;AAAW,aAAK,gBAAgB;;AAC9C,aAAK,gBAAgB;IAC5B,OAAO;AACL,WAAK,gBAAgB;AACrB,YAAM,mBAAmB,KAAK,WAAW,KAAK,KAC5C,CAAC,MAAM,EAAE,mBAAmB,EAAE,sBAAsB,WAAW;AAEjE,UAAI,oBAAoB;AAAW,aAAK,gBAAgB;IAC1D;AACA,SAAK,cAAc,GAAG,WAAW;EACnC;EAEO,cAAc,OAAO,cAAY;AACtC,QAAI,MAAM,YAAY,MAAM;AAC1B,WAAK;AACL,UAAI,KAAK,UAAU,GAAG;AACpB,aAAK,0BACF,QACC,IACA,KAAK,aAAa,oBAAoB,gBACtC,KAAK,aAAa,oBAAoB,IACtC,IACA,MACA,MACA,KAAK,EAEN,KAAK,CAAC,cAAa;AAClB,cAAI,WAAW;AACb,iBAAK;AACL,yBAAa,kBAAkB;UACjC;QACF,CAAC;MACL;IACF;AACA,QAAI,MAAM,YAAY,OAAO;AAC3B,WAAK;IACP;EACF;EAEO,mBAAgB;AACrB,SAAK,kBAAkB,SAAS,IAAI,WAAU;AAC9C,SAAK,kBAAkB,OAAO,eAAe,KAAK;AAClD,SAAK,kBAAkB,OAAO,WAAW;AACzC,SAAK,kBAAkB,OAAO,SAAS;AACvC,SAAK,kBAAkB,OAAO,mBAAmB;AACjD,SAAK,kBAAkB,OAAO,iBAAiB;AAC/C,SAAK,kBAAkB,WAAW;AAClC,SAAK,kBAAkB,SAAS;AAChC,SAAK,kBAAkB,OAAO,mBAAmB,KAAK,YAAY,QAC/D,YAAY,sBAAsB,IACjC,IACA;EACN;EAEO,QAAQ,eAAe,QAAQ,OAAK;AAOzC,QAAI,CAAC,OAAO;AACV,UAAI,iBAAiB,iBAAiB,KAAK,aAAa,GAAG;AACzD,wBACE,KAAK,aAAa,oBAAoB;MAC1C,WAAW,iBAAiB,OAAO,KAAK,aAAa,GAAG;AACtD,wBACE,KAAK,aAAa,oBAAoB;MAC1C,WAAW,iBAAiB,MAAM,KAAK,aAAa,GAAG;AACrD,wBACE,KAAK,aAAa,oBAAoB;MAC1C,OAAO;AACL,wBAAgB,KAAK,aAAa,oBAAoB;MAExD;IACF;AACA,SAAK,0BAA0B,QAC7B,IACA,eACA,KAAK,aAAa,oBAAoB,IACtC,IACA,MACA,MACA,KAAK;EAIT;EAEA,WAAW,UAAU,KAAG;AACtB,QAAI,IAAI,oBAAoB,KAAK,0BAA0B;AACzD,WAAK,QAAQ,IAAI,aAAa;IAChC,WAAW,IAAI,oBAAoB,kBAAkB,SAAS;AAC5D,WAAK,QACH,KAAK,aAAa,oBAAoB,qBACtC,IAAI;IAER,OAAO;AACL,WAAK,YAAY,SAAS,eAAe,UACvC,KAAK,eAAe;AACtB,WAAK,YAAY,SAAS,eAAe,aAAa;AACtD,WAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;AAErD,WAAK,YAAY,UAAU,YAAY,cAAc;AACrD,WAAK,YAAY,UAAU,YAAY,gBACrC,KAAK,kBAAkB;AACzB,WAAK,YAAY,UAAU,YAAY,cAAc,KAAK;AAC1D,WAAK,YAAY,SAAS,eAAe,QAAQ,UAC/C,KAAK;AACP,WAAK,YAAY,KAAK,KAAK,KAAK,YAAY,SAAS;AAErD,WAAK,eAAe,eAAe,4BAA4B,IAAI;AACnE,mBAAa,QACX,kBACA,KAAK,UAAU,KAAK,eAAe,cAAc,CAAC;AAGpD,UAAI,KAAK,eAAe,KAAK,YAAY,UAAU;AACjD,aAAK,YAAY,SAAS,eAAe,UACvC,KAAK,eAAe;AACtB,aAAK,YAAY,SAAS,eAAe,aAAa;AACtD,aAAK,YAAY,MAAM,KAAK,KAAK,YAAY,QAAQ;MACvD;AACA,WAAK,kBAAkB,KAAK,oBAAoB,MAAM,OAAO;IAC/D;EAEF;EAEA,SAAM;AACJ,QAAI,KAAK,YAAY,GAAG;AAEtB,WAAK,aAAa;IACpB;EACF;EAEA,UAAO;AACL,QAAI,KAAK,YAAY,KAAK;AAExB,WAAK,aAAa;IACpB;EACF;EAEA,YAAS;AACP,SAAK,YAAY;EACnB;;;uCAheW,mBAAgB,4BAAA,aAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,KAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,aAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,wBAAA,GAAA,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,WAAA,SAAA,uBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;8BAgBhB,SAAO,CAAA;8BASP,WAAS,CAAA;;;;;;;;;;ACjGtB,QAAA,yBAAA,GAAA,OAAA,GAAA,CAAA,EAAkG,GAAA,OAAA,CAAA,EAElD,GAAA,WAAA,CAAA,EACsB,GAAA,QAAA,CAAA;AACV,QAAA,iBAAA,GAAA,kBAAA;AAAgB,QAAA,uBAAA,EAAO;AAI3E,QAAA,yBAAA,GAAA,MAAA,CAAA,EAAmB,GAAA,IAAA;AACX,QAAA,oBAAA,GAAA,QAAA,CAAA;AAA+B,QAAA,yBAAA,GAAA,QAAA,CAAA;AAAmB,QAAA,iBAAA,IAAA,WAAA;AAAS,QAAA,uBAAA,EAAO;AACtE,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,oBAAA,IAAA,QAAA,CAAA;AAA8B,QAAA,yBAAA,IAAA,QAAA,CAAA;AAAmB,QAAA,iBAAA,IAAA,SAAA;AAAO,QAAA,uBAAA,EAAO;AACnE,QAAA,yBAAA,IAAA,IAAA;AAAI,QAAA,oBAAA,IAAA,QAAA,CAAA;AAA6B,QAAA,yBAAA,IAAA,QAAA,CAAA;AAAmB,QAAA,iBAAA,IAAA,UAAA;AAAQ,QAAA,uBAAA,EAAO,EAAK;AAE5E,QAAA,yBAAA,IAAA,SAAA,EAAA;AACI,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAY1C,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAK1C,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAK1C,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAA8E,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAKlF,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAAsC,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAa1C,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAA+D,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAcnE,QAAA,kCAAA,IAAA,EAAA;AACI,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;;AAWJ,QAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAAiE,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA,EAEgC,IAAA,iCAAA,GAAA,GAAA,MAAA,EAAA;AAOrG,QAAA,uBAAA,EAAQ,EAIN;AAGV,QAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,KAAA,EAAA;AAC4B,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,OAAA,CAAQ;QAAA,CAAA;AAAE,QAAA,oBAAA,IAAA,KAAA,EAAA;AAAoD,QAAA,uBAAA;AACrH,QAAA,yBAAA,IAAA,KAAA,EAAA;AAA+C,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,QAAA,CAAS;QAAA,CAAA;AAAE,QAAA,oBAAA,IAAA,KAAA,EAAA;AAAqD,QAAA,uBAAA;AACxH,QAAA,yBAAA,IAAA,KAAA,EAAA;AAAiD,QAAA,qBAAA,SAAA,SAAA,gDAAA;AAAA,UAAA,wBAAA,GAAA;AAAA,iBAAA,sBAAS,IAAA,UAAA,CAAW;QAAA,CAAA;AAAE,QAAA,oBAAA,IAAA,KAAA,EAAA;AAAuD,QAAA,uBAAA,EAAI;;;AAzGhG,QAAA,sBAAA,aAAA,WAAA,IAAA,YAAA,GAAA;AAab,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,cAAA,IAAA,UAAA;AAyEO,QAAA,oBAAA,EAAA;AAAA,QAAA,qBAAA,mBAAA,IAAA,0BAAA;AACiB,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,IAAA,0BAAA;AAGJ,QAAA,oBAAA;AAAA,QAAA,qBAAA,oBAAA,0BAAA,GAAAC,KAAA,CAAA;;8wMDrC/B;MACV,QAAQ,gBAAgB;QACtB,MACE,MACA,MAAM;UACJ,WAAW;SACZ,CAAC;QAEJ,MACE,OACA,MAAM;UACJ,WAAW;SACZ,CAAC;QAEJ,WAAW,aAAa,QAAQ,mBAAmB,CAAC;QACpD,WAAW,aAAa,QAAQ,mBAAmB,CAAC;OACrD;MACF,EAAA,CAAA;EAAA;;;6EAEU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,0DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE/D7B,IAAM,WAAW,YAAY,SAAS,QAAQ,KAAK,EAAE,EAAE,KAAI;AAE3D,IAAMC,UAAS;EACb;IACE,MAAM,GAAG,QAAQ;IACjB,WAAW;;EAEb;IACE,MAAM,GAAG,QAAQ;IACjB,WAAW;;EAEb;IACE,MAAM,GAAG,QAAQ;IACjB,WAAW;;EAEb;;IAEE,MAAM;IACN,WAAW;;EAEb,EAAE,MAAM,MAAM,WAAW,sBAAqB;;AAO1C,IAAO,oBAAP,MAAO,mBAAiB;;;uCAAjB,oBAAiB;IAAA;EAAA;;wEAAjB,mBAAiB,CAAA;EAAA;;4EAHlB,aAAa,QAAQA,SAAQ,CAAA,CAAE,GAC/B,YAAY,EAAA,CAAA;EAAA;;;;AC1BlB,IAAO,gBAAP,MAAO,eAAa;EACxB,YAAoB,aAAwB;AAAxB,SAAA,cAAA;AAClB,iBAAa,WAAW,SAAS;EACnC;;;uCAHW,gBAAa,4BAAA,WAAA,CAAA;IAAA;EAAA;;yEAAb,gBAAa,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,uBAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;ACR1B,QAAA,oBAAA,GAAA,eAAA,EAA+B,GAAA,gBAAA;;;;;;6EDQlB,eAAa,EAAA,WAAA,iBAAA,UAAA,8CAAA,YAAA,EAAA,CAAA;AAAA,GAAA;;;AEuEpB,IAAO,aAAP,MAAO,YAAU;;;uCAAV,aAAU;IAAA;EAAA;;wEAAV,aAAU,WAAA,CA7CP,aAAa,EAAA,CAAA;EAAA;;6EAqBL;MACZ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,kBAAkB,uBAAsB,GAAI,iBAAgB,CAAE;MAC9D,EAAE,SAAS,cAAc,UAAU,oBAAmB;OACzD,SAAA;MAtCD;MACA;MACA;MACA;MACA;MACA;MACA;MACA,mBAAmB,QAAO;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,aAAa,QAAQ;QACjB,SAAS;QACT,eAAe;QACf,mBAAmB;OACtB;IAAC,EAAA,CAAA;EAAA;;;;AChDV,IAAI,YAAY,YAAY;AAC1B,iBAAc;AAChB;AAEA,IAAI,YAAY,cAAc;AAE5B,UAAQ,MAAM,WAAA;EAEd;AACA,UAAQ,OAAO,WAAA;EAEf;AACF;AACA,IAAM,MAAM,SAAS,eAAe,QAAQ;AAC5C,IAAM,SAAS,OAAO,SAAS,KAAK,QAAQ,YAAY,QAAQ,MAAM;AAEtE,IAAM,SAAS,SAAS,aAAa;AACrC,IAAI,mBAAmB,aAAa,SAAS,0BAA0B,uBAAuB;AAC9F,gBAAA,EACG,gBAAgB,MAAM,EACtB,MAAM,CAAC,QAAQ,QAAQ,MAAM,GAAG,CAAC;","names":["module","undefined","i","intlTelInputGlobals","id","forEachProp","forEachInstance","Iti","c","injectScript","module","module","a","b","c","d","g","f","e","moment","_c1","environment","_c3","_c1","_c2","data","environment","_c0","_c2","_c0","_c0","_c1","location","import_moment","document","modal","_c7","moment","state","intlTelInput","_c0","_c1","_c2","_c2","_c3","_c0","_c1","_c0","_c1","_c0","_c0","import_intl_tel_input","_c1","_c1","intlTelInput","data","document","dateFormatList","thisObj","location","import_moment","_c1","_c2","_c0","_c0","_c0","_c1","_c0","_c1","moment","_c0","_c2","_c3","_c4","_c1","_c1","_c2","data","_c1","_c0","_c1","data","protoChain","decorators","_c1","_c2","_c0","routes"],"x_google_ignoreList":[0,1,2,31,137]}